!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=90)}([
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=n(/*! ./cjs/react.production.min.js */44)},
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){e.exports=n(/*! ./factoryWithThrowingShims */51)()},
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){var r;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var a=typeof r;if("string"===a||"number"===a)e.push(r);else if(Array.isArray(r)&&r.length){var i=o.apply(null,r);i&&e.push(i)}else if("object"===a)for(var l in r)n.call(r,l)&&r[l]&&e.push(l)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(r=function(){return o}.apply(t,[]))||(e.exports=r)}()},
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./helpers/bind */25),o=n(/*! is-buffer */70),a=Object.prototype.toString;function i(e){return"[object Array]"===a.call(e)}function l(e){return null!==e&&"object"==typeof e}function s(e){return"[object Function]"===a.call(e)}function c(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isBuffer:o,isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:l,isUndefined:function(e){return void 0===e},isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:s,isStream:function(e){return l(e)&&s(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:c,merge:function e(){var t={};function n(n,r){"object"==typeof t[r]&&"object"==typeof n?t[r]=e(t[r],n):t[r]=n}for(var r=0,o=arguments.length;r<o;r++)c(arguments[r],n);return t},deepMerge:function e(){var t={};function n(n,r){"object"==typeof t[r]&&"object"==typeof n?t[r]=e(t[r],n):t[r]="object"==typeof n?e({},n):n}for(var r=0,o=arguments.length;r<o;r++)c(arguments[r],n);return t},extend:function(e,t,n){return c(t,function(t,o){e[o]=n&&"function"==typeof t?r(t,n):t}),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},
/*!******************************************************************************!*\
  !*** ./node_modules/styled-components/dist/styled-components.browser.esm.js ***!
  \******************************************************************************/
/*! exports provided: default, createGlobalStyle, css, isStyledComponent, keyframes, ServerStyleSheet, StyleSheetConsumer, StyleSheetContext, StyleSheetManager, ThemeConsumer, ThemeContext, ThemeProvider, withTheme, __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module uses injected variables (process) */function(e,t,n){"use strict";(function(e){var r=n(/*! stylis/stylis.min */18),o=n.n(r),a=n(/*! stylis-rule-sheet */36),i=n.n(a),l=n(/*! react */0),s=n.n(l),c=n(/*! @emotion/unitless */9),u=n(/*! react-is */8),d=n(/*! memoize-one */6),p=(n(/*! prop-types */1),n(/*! @emotion/is-prop-valid */37)),f=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},b=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},v=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},x=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},y=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},w=function(e){return"object"===(void 0===e?"undefined":m(e))&&e.constructor===Object},k=Object.freeze([]),E=Object.freeze({});function C(e){return"function"==typeof e}function S(e){return e.displayName||e.name||"Component"}function O(e){return e&&"string"==typeof e.styledComponentId}var T=void 0!==e&&e.env.SC_ATTR||"data-styled",A="undefined"!=typeof window&&"HTMLElement"in window,P="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||!1;var _=function(e){function t(n){g(this,t);for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];var i=y(this,e.call(this,"An error occurred. See https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/errors.md#"+n+" for more information."+(o.length>0?" Additional arguments: "+o.join(", "):"")));return y(i)}return v(t,e),t}(Error),j=/^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm,N=function(e){var t=""+(e||""),n=[];return t.replace(j,function(e,t,r){return n.push({componentId:t,matchIndex:r}),e}),n.map(function(e,r){var o=e.componentId,a=e.matchIndex,i=n[r+1];return{componentId:o,cssFromDOM:i?t.slice(a,i.matchIndex):t.slice(a)}})},I=/^\s*\/\/.*$/gm,R=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!1,compress:!1,semicolon:!0}),F=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!0,compress:!1,semicolon:!1}),M=[],D=function(e){if(-2===e){var t=M;return M=[],t}},z=i()(function(e){M.push(e)}),L=void 0,U=void 0,B=void 0,V=function(e,t,n){return t>0&&-1!==n.slice(0,t).indexOf(U)&&n.slice(t-U.length,t)!==U?"."+L:e};F.use([function(e,t,n){2===e&&n.length&&n[0].lastIndexOf(U)>0&&(n[0]=n[0].replace(B,V))},z,D]),R.use([z,D]);var H=function(e){return R("",e)};function W(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"&",o=e.join("").replace(I,""),a=t&&n?n+" "+t+" { "+o+" }":o;return L=r,U=t,B=new RegExp("\\"+U+"\\b","g"),F(n||!t?"":t,a)}var $=function(){return n.nc},q=function(e,t,n){n&&((e[t]||(e[t]=Object.create(null)))[n]=!0)},K=function(e,t){e[t]=Object.create(null)},Y=function(e){return function(t,n){return void 0!==e[t]&&e[t][n]}},X=function(e){var t="";for(var n in e)t+=Object.keys(e[n]).join(" ")+" ";return t.trim()},G=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets.length,n=0;n<t;n+=1){var r=document.styleSheets[n];if(r.ownerNode===e)return r}throw new _(10)},Q=function(e,t,n){if(!t)return!1;var r=e.cssRules.length;try{e.insertRule(t,n<=r?n:r)}catch(e){return!1}return!0},J=function(e){return"\n/* sc-component-id: "+e+" */\n"},Z=function(e,t){for(var n=0,r=0;r<=t;r+=1)n+=e[r];return n},ee=function(e,t){return function(n){var r=$();return"<style "+[r&&'nonce="'+r+'"',T+'="'+X(t)+'"','data-styled-version="4.2.1"',n].filter(Boolean).join(" ")+">"+e()+"</style>"}},te=function(e,t){return function(){var n,r=((n={})[T]=X(t),n["data-styled-version"]="4.2.1",n),o=$();return o&&(r.nonce=o),s.a.createElement("style",h({},r,{dangerouslySetInnerHTML:{__html:e()}}))}},ne=function(e){return function(){return Object.keys(e)}},re=function(e){return document.createTextNode(J(e))},oe=function e(t,n){var r=void 0===t?Object.create(null):t,o=void 0===n?Object.create(null):n,a=function(e){var t=o[e];return void 0!==t?t:o[e]=[""]},i=function(){var e="";for(var t in o){var n=o[t][0];n&&(e+=J(t)+n)}return e};return{clone:function(){var t=function(e){var t=Object.create(null);for(var n in e)t[n]=h({},e[n]);return t}(r),n=Object.create(null);for(var a in o)n[a]=[o[a][0]];return e(t,n)},css:i,getIds:ne(o),hasNameForId:Y(r),insertMarker:a,insertRules:function(e,t,n){a(e)[0]+=t.join(" "),q(r,e,n)},removeRules:function(e){var t=o[e];void 0!==t&&(t[0]="",K(r,e))},sealed:!1,styleTag:null,toElement:te(i,r),toHTML:ee(i,r)}},ae=function(e,t,n,r,o){if(A&&!n){var a=function(e,t,n){var r=document.createElement("style");r.setAttribute(T,""),r.setAttribute("data-styled-version","4.2.1");var o=$();if(o&&r.setAttribute("nonce",o),r.appendChild(document.createTextNode("")),e&&!t)e.appendChild(r);else{if(!t||!e||!t.parentNode)throw new _(6);t.parentNode.insertBefore(r,n?t:t.nextSibling)}return r}(e,t,r);return P?function(e,t){var n=Object.create(null),r=Object.create(null),o=void 0!==t,a=!1,i=function(t){var o=r[t];return void 0!==o?o:(r[t]=re(t),e.appendChild(r[t]),n[t]=Object.create(null),r[t])},l=function(){var e="";for(var t in r)e+=r[t].data;return e};return{clone:function(){throw new _(5)},css:l,getIds:ne(r),hasNameForId:Y(n),insertMarker:i,insertRules:function(e,r,l){for(var s=i(e),c=[],u=r.length,d=0;d<u;d+=1){var p=r[d],f=o;if(f&&-1!==p.indexOf("@import"))c.push(p);else{f=!1;var m=d===u-1?"":" ";s.appendData(""+p+m)}}q(n,e,l),o&&c.length>0&&(a=!0,t().insertRules(e+"-import",c))},removeRules:function(i){var l=r[i];if(void 0!==l){var s=re(i);e.replaceChild(s,l),r[i]=s,K(n,i),o&&a&&t().removeRules(i+"-import")}},sealed:!1,styleTag:e,toElement:te(l,n),toHTML:ee(l,n)}}(a,o):function(e,t){var n=Object.create(null),r=Object.create(null),o=[],a=void 0!==t,i=!1,l=function(e){var t=r[e];return void 0!==t?t:(r[e]=o.length,o.push(0),K(n,e),r[e])},s=function(){var t=G(e).cssRules,n="";for(var a in r){n+=J(a);for(var i=r[a],l=Z(o,i),s=l-o[i];s<l;s+=1){var c=t[s];void 0!==c&&(n+=c.cssText)}}return n};return{clone:function(){throw new _(5)},css:s,getIds:ne(r),hasNameForId:Y(n),insertMarker:l,insertRules:function(r,s,c){for(var u=l(r),d=G(e),p=Z(o,u),f=0,m=[],g=s.length,b=0;b<g;b+=1){var h=s[b],v=a;v&&-1!==h.indexOf("@import")?m.push(h):Q(d,h,p+f)&&(v=!1,f+=1)}a&&m.length>0&&(i=!0,t().insertRules(r+"-import",m)),o[u]+=f,q(n,r,c)},removeRules:function(l){var s=r[l];if(void 0!==s){var c=o[s];!function(e,t,n){for(var r=t-n,o=t;o>r;o-=1)e.deleteRule(o)}(G(e),Z(o,s)-1,c),o[s]=0,K(n,l),a&&i&&t().removeRules(l+"-import")}},sealed:!1,styleTag:e,toElement:te(s,n),toHTML:ee(s,n)}}(a,o)}return oe()},ie=/\s+/,le=void 0;le=A?P?40:1e3:-1;var se=0,ce=void 0,ue=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:A?document.head:null,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];g(this,e),this.getImportRuleTag=function(){var e=t.importRuleTag;if(void 0!==e)return e;var n=t.tags[0];return t.importRuleTag=ae(t.target,n?n.styleTag:null,t.forceServer,!0)},se+=1,this.id=se,this.forceServer=r,this.target=r?null:n,this.tagMap={},this.deferred={},this.rehydratedNames={},this.ignoreRehydratedNames={},this.tags=[],this.capacity=1,this.clones=[]}return e.prototype.rehydrate=function(){if(!A||this.forceServer)return this;var e=[],t=[],n=!1,r=document.querySelectorAll("style["+T+'][data-styled-version="4.2.1"]'),o=r.length;if(!o)return this;for(var a=0;a<o;a+=1){var i=r[a];n||(n=!!i.getAttribute("data-styled-streamed"));for(var l,s=(i.getAttribute(T)||"").trim().split(ie),c=s.length,u=0;u<c;u+=1)l=s[u],this.rehydratedNames[l]=!0;t.push.apply(t,N(i.textContent)),e.push(i)}var d=t.length;if(!d)return this;var p=this.makeTag(null);!function(e,t,n){for(var r=0,o=n.length;r<o;r+=1){var a=n[r],i=a.componentId,l=a.cssFromDOM,s=H(l);e.insertRules(i,s)}for(var c=0,u=t.length;c<u;c+=1){var d=t[c];d.parentNode&&d.parentNode.removeChild(d)}}(p,e,t),this.capacity=Math.max(1,le-d),this.tags.push(p);for(var f=0;f<d;f+=1)this.tagMap[t[f].componentId]=p;return this},e.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];ce=new e(void 0,t).rehydrate()},e.prototype.clone=function(){var t=new e(this.target,this.forceServer);return this.clones.push(t),t.tags=this.tags.map(function(e){for(var n=e.getIds(),r=e.clone(),o=0;o<n.length;o+=1)t.tagMap[n[o]]=r;return r}),t.rehydratedNames=h({},this.rehydratedNames),t.deferred=h({},this.deferred),t},e.prototype.sealAllTags=function(){this.capacity=1,this.tags.forEach(function(e){e.sealed=!0})},e.prototype.makeTag=function(e){var t=e?e.styleTag:null;return ae(this.target,t,this.forceServer,!1,this.getImportRuleTag)},e.prototype.getTagForId=function(e){var t=this.tagMap[e];if(void 0!==t&&!t.sealed)return t;var n=this.tags[this.tags.length-1];return this.capacity-=1,0===this.capacity&&(this.capacity=le,n=this.makeTag(n),this.tags.push(n)),this.tagMap[e]=n},e.prototype.hasId=function(e){return void 0!==this.tagMap[e]},e.prototype.hasNameForId=function(e,t){if(void 0===this.ignoreRehydratedNames[e]&&this.rehydratedNames[t])return!0;var n=this.tagMap[e];return void 0!==n&&n.hasNameForId(e,t)},e.prototype.deferredInject=function(e,t){if(void 0===this.tagMap[e]){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].deferredInject(e,t);this.getTagForId(e).insertMarker(e),this.deferred[e]=t}},e.prototype.inject=function(e,t,n){for(var r=this.clones,o=0;o<r.length;o+=1)r[o].inject(e,t,n);var a=this.getTagForId(e);if(void 0!==this.deferred[e]){var i=this.deferred[e].concat(t);a.insertRules(e,i,n),this.deferred[e]=void 0}else a.insertRules(e,t,n)},e.prototype.remove=function(e){var t=this.tagMap[e];if(void 0!==t){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].remove(e);t.removeRules(e),this.ignoreRehydratedNames[e]=!0,this.deferred[e]=void 0}},e.prototype.toHTML=function(){return this.tags.map(function(e){return e.toHTML()}).join("")},e.prototype.toReactElements=function(){var e=this.id;return this.tags.map(function(t,n){var r="sc-"+e+"-"+n;return Object(l.cloneElement)(t.toElement(),{key:r})})},b(e,null,[{key:"master",get:function(){return ce||(ce=(new e).rehydrate())}},{key:"instance",get:function(){return e.master}}]),e}(),de=function(){function e(t,n){var r=this;g(this,e),this.inject=function(e){e.hasNameForId(r.id,r.name)||e.inject(r.id,r.rules,r.name)},this.toString=function(){throw new _(12,String(r.name))},this.name=t,this.rules=n,this.id="sc-keyframes-"+t}return e.prototype.getName=function(){return this.name},e}(),pe=/([A-Z])/g,fe=/^ms-/;function me(e){return e.replace(pe,"-$1").toLowerCase().replace(fe,"-ms-")}var ge=function(e){return null==e||!1===e||""===e},be=function e(t,n){var r=[];return Object.keys(t).forEach(function(n){if(!ge(t[n])){if(w(t[n]))return r.push.apply(r,e(t[n],n)),r;if(C(t[n]))return r.push(me(n)+":",t[n],";"),r;r.push(me(n)+": "+(o=n,null==(a=t[n])||"boolean"==typeof a||""===a?"":"number"!=typeof a||0===a||o in c.a?String(a).trim():a+"px")+";")}var o,a;return r}),n?[n+" {"].concat(r,["}"]):r};function he(e,t,n){if(Array.isArray(e)){for(var r,o=[],a=0,i=e.length;a<i;a+=1)null!==(r=he(e[a],t,n))&&(Array.isArray(r)?o.push.apply(o,r):o.push(r));return o}return ge(e)?null:O(e)?"."+e.styledComponentId:C(e)?"function"!=typeof(l=e)||l.prototype&&l.prototype.isReactComponent||!t?e:he(e(t),t,n):e instanceof de?n?(e.inject(n),e.getName()):e:w(e)?be(e):e.toString();var l}function ve(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return C(e)||w(e)?he(f(k,[e].concat(n))):he(f(e,n))}function xe(e){for(var t,n=0|e.length,r=0|n,o=0;n>=4;)t=1540483477*(65535&(t=255&e.charCodeAt(o)|(255&e.charCodeAt(++o))<<8|(255&e.charCodeAt(++o))<<16|(255&e.charCodeAt(++o))<<24))+((1540483477*(t>>>16)&65535)<<16),r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16)^(t=1540483477*(65535&(t^=t>>>24))+((1540483477*(t>>>16)&65535)<<16)),n-=4,++o;switch(n){case 3:r^=(255&e.charCodeAt(o+2))<<16;case 2:r^=(255&e.charCodeAt(o+1))<<8;case 1:r=1540483477*(65535&(r^=255&e.charCodeAt(o)))+((1540483477*(r>>>16)&65535)<<16)}return((r=1540483477*(65535&(r^=r>>>13))+((1540483477*(r>>>16)&65535)<<16))^r>>>15)>>>0}var ye=52,we=function(e){return String.fromCharCode(e+(e>25?39:97))};function ke(e){var t="",n=void 0;for(n=e;n>ye;n=Math.floor(n/ye))t=we(n%ye)+t;return we(n%ye)+t}function Ee(e,t){for(var n=0;n<e.length;n+=1){var r=e[n];if(Array.isArray(r)&&!Ee(r,t))return!1;if(C(r)&&!O(r))return!1}return!t.some(function(e){return C(e)||function(e){for(var t in e)if(C(e[t]))return!0;return!1}(e)})}var Ce,Se=!1,Oe=function(e){return ke(xe(e))},Te=function(){function e(t,n,r){g(this,e),this.rules=t,this.isStatic=!Se&&Ee(t,n),this.componentId=r,ue.master.hasId(r)||ue.master.deferredInject(r,[])}return e.prototype.generateAndInjectStyles=function(e,t){var n=this.isStatic,r=this.componentId,o=this.lastClassName;if(A&&n&&"string"==typeof o&&t.hasNameForId(r,o))return o;var a=he(this.rules,e,t),i=Oe(this.componentId+a.join(""));return t.hasNameForId(r,i)||t.inject(this.componentId,W(a,"."+i,void 0,r),i),this.lastClassName=i,i},e.generateName=function(e){return Oe(e)},e}(),Ae=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E,r=!!n&&e.theme===n.theme;return e.theme&&!r?e.theme:t||n.theme},Pe=/[[\].#*$><+~=|^:(),"'`-]+/g,_e=/(^-|-$)/g;function je(e){return e.replace(Pe,"-").replace(_e,"")}function Ne(e){return"string"==typeof e&&!0}var Ie={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDerivedStateFromProps:!0,propTypes:!0,type:!0},Re={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Fe=((Ce={})[u.ForwardRef]={$$typeof:!0,render:!0},Ce),Me=Object.defineProperty,De=Object.getOwnPropertyNames,ze=Object.getOwnPropertySymbols,Le=void 0===ze?function(){return[]}:ze,Ue=Object.getOwnPropertyDescriptor,Be=Object.getPrototypeOf,Ve=Object.prototype,He=Array.prototype;function We(e,t,n){if("string"!=typeof t){var r=Be(t);r&&r!==Ve&&We(e,r,n);for(var o=He.concat(De(t),Le(t)),a=Fe[e.$$typeof]||Ie,i=Fe[t.$$typeof]||Ie,l=o.length,s=void 0,c=void 0;l--;)if(c=o[l],!(Re[c]||n&&n[c]||i&&i[c]||a&&a[c])&&(s=Ue(t,c)))try{Me(e,c,s)}catch(e){}return e}return e}var $e=Object(l.createContext)(),qe=$e.Consumer,Ke=(function(e){function t(n){g(this,t);var r=y(this,e.call(this,n));return r.getContext=Object(d.a)(r.getContext.bind(r)),r.renderInner=r.renderInner.bind(r),r}v(t,e),t.prototype.render=function(){return this.props.children?s.a.createElement($e.Consumer,null,this.renderInner):null},t.prototype.renderInner=function(e){var t=this.getContext(this.props.theme,e);return s.a.createElement($e.Provider,{value:t},s.a.Children.only(this.props.children))},t.prototype.getTheme=function(e,t){if(C(e))return e(t);if(null===e||Array.isArray(e)||"object"!==(void 0===e?"undefined":m(e)))throw new _(8);return h({},t,e)},t.prototype.getContext=function(e,t){return this.getTheme(e,t)}}(l.Component),function(){function e(){g(this,e),this.masterSheet=ue.master,this.instance=this.masterSheet.clone(),this.sealed=!1}e.prototype.seal=function(){if(!this.sealed){var e=this.masterSheet.clones.indexOf(this.instance);this.masterSheet.clones.splice(e,1),this.sealed=!0}},e.prototype.collectStyles=function(e){if(this.sealed)throw new _(2);return s.a.createElement(Xe,{sheet:this.instance},e)},e.prototype.getStyleTags=function(){return this.seal(),this.instance.toHTML()},e.prototype.getStyleElement=function(){return this.seal(),this.instance.toReactElements()},e.prototype.interleaveWithNodeStream=function(e){throw new _(3)}}(),Object(l.createContext)()),Ye=Ke.Consumer,Xe=function(e){function t(n){g(this,t);var r=y(this,e.call(this,n));return r.getContext=Object(d.a)(r.getContext),r}return v(t,e),t.prototype.getContext=function(e,t){if(e)return e;if(t)return new ue(t);throw new _(4)},t.prototype.render=function(){var e=this.props,t=e.children,n=e.sheet,r=e.target;return s.a.createElement(Ke.Provider,{value:this.getContext(n,r)},t)},t}(l.Component),Ge={};var Qe=function(e){function t(){g(this,t);var n=y(this,e.call(this));return n.attrs={},n.renderOuter=n.renderOuter.bind(n),n.renderInner=n.renderInner.bind(n),n}return v(t,e),t.prototype.render=function(){return s.a.createElement(Ye,null,this.renderOuter)},t.prototype.renderOuter=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ue.master;return this.styleSheet=e,this.props.forwardedComponent.componentStyle.isStatic?this.renderInner():s.a.createElement(qe,null,this.renderInner)},t.prototype.renderInner=function(e){var t=this.props.forwardedComponent,n=t.componentStyle,r=t.defaultProps,o=(t.displayName,t.foldedComponentIds),a=t.styledComponentId,i=t.target,s=void 0;s=n.isStatic?this.generateAndInjectStyles(E,this.props):void 0!==e?this.generateAndInjectStyles(Ae(this.props,e,r),this.props):this.generateAndInjectStyles(this.props.theme||E,this.props);var c=this.props.as||this.attrs.as||i,u=Ne(c),d={},f=h({},this.attrs,this.props),m=void 0;for(m in f)"forwardedComponent"!==m&&"as"!==m&&("forwardedRef"===m?d.ref=f[m]:u&&!Object(p.a)(m)||(d[m]=f[m]));return this.props.style&&this.attrs.style&&(d.style=h({},this.attrs.style,this.props.style)),d.className=Array.prototype.concat(o,this.props.className,a,this.attrs.className,s).filter(Boolean).join(" "),Object(l.createElement)(c,d)},t.prototype.buildExecutionContext=function(e,t,n){var r=this,o=h({},t,{theme:e});return n.length?(this.attrs={},n.forEach(function(e){var t,n=e,a=!1,i=void 0,l=void 0;for(l in C(n)&&(n=n(o),a=!0),n)i=n[l],a||!C(i)||(t=i)&&t.prototype&&t.prototype.isReactComponent||O(i)||(i=i(o)),r.attrs[l]=i,o[l]=i}),o):o},t.prototype.generateAndInjectStyles=function(e,t){var n=t.forwardedComponent,r=n.attrs,o=n.componentStyle;n.warnTooManyClasses;return o.isStatic&&!r.length?o.generateAndInjectStyles(E,this.styleSheet):o.generateAndInjectStyles(this.buildExecutionContext(e,t,r),this.styleSheet)},t}(l.Component);function Je(e,t,n){var r=O(e),o=!Ne(e),a=t.displayName,i=void 0===a?function(e){return Ne(e)?"styled."+e:"Styled("+S(e)+")"}(e):a,l=t.componentId,c=void 0===l?function(e,t,n){var r="string"!=typeof t?"sc":je(t),o=(Ge[r]||0)+1;Ge[r]=o;var a=r+"-"+e.generateName(r+o);return n?n+"-"+a:a}(Te,t.displayName,t.parentComponentId):l,u=t.ParentComponent,d=void 0===u?Qe:u,p=t.attrs,f=void 0===p?k:p,m=t.displayName&&t.componentId?je(t.displayName)+"-"+t.componentId:t.componentId||c,g=r&&e.attrs?Array.prototype.concat(e.attrs,f).filter(Boolean):f,b=new Te(r?e.componentStyle.rules.concat(n):n,g,m),v=void 0,y=function(e,t){return s.a.createElement(d,h({},e,{forwardedComponent:v,forwardedRef:t}))};return y.displayName=i,(v=s.a.forwardRef(y)).displayName=i,v.attrs=g,v.componentStyle=b,v.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):k,v.styledComponentId=m,v.target=r?e.target:e,v.withComponent=function(e){var r=t.componentId,o=x(t,["componentId"]),a=r&&r+"-"+(Ne(e)?e:je(S(e)));return Je(e,h({},o,{attrs:g,componentId:a,ParentComponent:d}),n)},v.toString=function(){return"."+v.styledComponentId},o&&We(v,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,styledComponentId:!0,target:!0,withComponent:!0}),v}var Ze=function(e){return function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E;if(!Object(u.isValidElementType)(n))throw new _(1,String(n));var o=function(){return t(n,r,ve.apply(void 0,arguments))};return o.withConfig=function(o){return e(t,n,h({},r,o))},o.attrs=function(o){return e(t,n,h({},r,{attrs:Array.prototype.concat(r.attrs,o).filter(Boolean)}))},o}(Je,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach(function(e){Ze[e]=Ze(e)});!function(){function e(t,n){g(this,e),this.rules=t,this.componentId=n,this.isStatic=Ee(t,k),ue.master.hasId(n)||ue.master.deferredInject(n,[])}e.prototype.createStyles=function(e,t){var n=W(he(this.rules,e,t),"");t.inject(this.componentId,n)},e.prototype.removeStyles=function(e){var t=this.componentId;e.hasId(t)&&e.remove(t)},e.prototype.renderStyles=function(e,t){this.removeStyles(t),this.createStyles(e,t)}}();A&&(window.scCGSHMRCache={});t.a=Ze}).call(this,n(/*! ./../../process/browser.js */14))},
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/*! no static exports found */
/*! exports used: createPortal, default, findDOMNode */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(/*! ./cjs/react-dom.production.min.js */45)},
/*!**********************************************************!*\
  !*** ./node_modules/memoize-one/dist/memoize-one.esm.js ***!
  \**********************************************************/
/*! exports provided: default */
/*! exports used: default */function(e,t,n){"use strict";function r(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}t.a=function(e,t){var n;void 0===t&&(t=r);var o,a=[],i=!1;return function(){for(var r=arguments.length,l=new Array(r),s=0;s<r;s++)l[s]=arguments[s];return i&&n===this&&t(l,a)?o:(o=e.apply(this,l),i=!0,n=this,a=l,o)}}},
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=n(/*! ./cjs/react-is.production.min.js */54)},
/*!*********************************************************************!*\
  !*** ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js ***!
  \*********************************************************************/
/*! exports provided: default */
/*! exports used: default */function(e,t,n){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
/*! exports provided: default */
/*! exports used: default */function(e,t,n){"use strict";t.a=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}},
/*!*************************************************!*\
  !*** ./node_modules/dom-helpers/style/index.js ***!
  \*************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! @babel/runtime/helpers/interopRequireDefault */7);t.__esModule=!0,t.default=function(e,t,n){var r="",u="",d=t;if("string"==typeof t){if(void 0===n)return e.style[(0,o.default)(t)]||(0,i.default)(e).getPropertyValue((0,a.default)(t));(d={})[t]=n}Object.keys(d).forEach(function(t){var n=d[t];n||0===n?(0,c.default)(t)?u+=t+"("+n+") ":r+=(0,a.default)(t)+": "+n+";":(0,l.default)(e,(0,a.default)(t))}),u&&(r+=s.transform+": "+u+";");e.style.cssText+=";"+r};var o=r(n(/*! ../util/camelizeStyle */23)),a=r(n(/*! ../util/hyphenateStyle */57)),i=r(n(/*! ./getComputedStyle */59)),l=r(n(/*! ./removeStyle */60)),s=n(/*! ../transition/properties */24),c=r(n(/*! ../transition/isTransform */62));e.exports=t.default},
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */,
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t){var n,r,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(e){n=a}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var s,c=[],u=!1,d=-1;function p(){u&&s&&(u=!1,s.length?c=s.concat(c):d=-1,c.length&&f())}function f(){if(!u){var e=l(p);u=!0;for(var t=c.length;t;){for(s=c,c=[];++d<t;)s&&s[d].run();d=-1,t=c.length}s=null,u=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function g(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new m(e,t)),1!==c.length||u||l(f)},m.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=g,o.addListener=g,o.once=g,o.off=g,o.removeListener=g,o.removeAllListeners=g,o.emit=g,o.prependListener=g,o.prependOnceListener=g,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},
/*!***************************************************!*\
  !*** ./node_modules/dom-helpers/util/camelize.js ***!
  \***************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e){return e.replace(r,function(e,t){return t.toUpperCase()})};var r=/-(.)/g;e.exports=t.default},
/*!***********************************!*\
  !*** ./node_modules/raf/index.js ***!
  \***********************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){(function(t){for(var r=n(/*! performance-now */68),o="undefined"==typeof window?t:window,a=["moz","webkit"],i="AnimationFrame",l=o["request"+i],s=o["cancel"+i]||o["cancelRequest"+i],c=0;!l&&c<a.length;c++)l=o[a[c]+"Request"+i],s=o[a[c]+"Cancel"+i]||o[a[c]+"CancelRequest"+i];if(!l||!s){var u=0,d=0,p=[];l=function(e){if(0===p.length){var t=r(),n=Math.max(0,1e3/60-(t-u));u=n+t,setTimeout(function(){var e=p.slice(0);p.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(u)}catch(e){setTimeout(function(){throw e},0)}},Math.round(n))}return p.push({handle:++d,callback:e,cancelled:!1}),d},s=function(e){for(var t=0;t<p.length;t++)p[t].handle===e&&(p[t].cancelled=!0)}}e.exports=function(e){return l.call(o,e)},e.exports.cancel=function(){s.apply(o,arguments)},e.exports.polyfill=function(e){e||(e=o),e.requestAnimationFrame=l,e.cancelAnimationFrame=s}}).call(this,n(/*! ./../webpack/buildin/global.js */13))},
/*!****************************************************************!*\
  !*** ./node_modules/react-input-autosize/lib/AutosizeInput.js ***!
  \****************************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(/*! react */0),i=s(a),l=s(n(/*! prop-types */1));function s(e){return e&&e.__esModule?e:{default:e}}var c={position:"absolute",top:0,left:0,visibility:"hidden",height:0,overflow:"scroll",whiteSpace:"pre"},u=["extraWidth","injectStyles","inputClassName","inputRef","inputStyle","minWidth","onAutosize","placeholderIsMinWidth"],d=function(e,t){t.style.fontSize=e.fontSize,t.style.fontFamily=e.fontFamily,t.style.fontWeight=e.fontWeight,t.style.fontStyle=e.fontStyle,t.style.letterSpacing=e.letterSpacing,t.style.textTransform=e.textTransform},p=!("undefined"==typeof window||!window.navigator)&&/MSIE |Trident\/|Edge\//.test(window.navigator.userAgent),f=function(){return p?"_"+Math.random().toString(36).substr(2,12):void 0},m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.inputRef=function(e){n.input=e,"function"==typeof n.props.inputRef&&n.props.inputRef(e)},n.placeHolderSizerRef=function(e){n.placeHolderSizer=e},n.sizerRef=function(e){n.sizer=e},n.state={inputWidth:e.minWidth,inputId:e.id||f()},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"componentDidMount",value:function(){this.mounted=!0,this.copyInputStyles(),this.updateInputWidth()}},{key:"componentWillReceiveProps",value:function(e){var t=e.id;t!==this.props.id&&this.setState({inputId:t||f()})}},{key:"componentDidUpdate",value:function(e,t){t.inputWidth!==this.state.inputWidth&&"function"==typeof this.props.onAutosize&&this.props.onAutosize(this.state.inputWidth),this.updateInputWidth()}},{key:"componentWillUnmount",value:function(){this.mounted=!1}},{key:"copyInputStyles",value:function(){if(this.mounted&&window.getComputedStyle){var e=this.input&&window.getComputedStyle(this.input);e&&(d(e,this.sizer),this.placeHolderSizer&&d(e,this.placeHolderSizer))}}},{key:"updateInputWidth",value:function(){if(this.mounted&&this.sizer&&void 0!==this.sizer.scrollWidth){var e=void 0;e=this.props.placeholder&&(!this.props.value||this.props.value&&this.props.placeholderIsMinWidth)?Math.max(this.sizer.scrollWidth,this.placeHolderSizer.scrollWidth)+2:this.sizer.scrollWidth+2,(e+="number"===this.props.type&&void 0===this.props.extraWidth?16:parseInt(this.props.extraWidth)||0)<this.props.minWidth&&(e=this.props.minWidth),e!==this.state.inputWidth&&this.setState({inputWidth:e})}}},{key:"getInput",value:function(){return this.input}},{key:"focus",value:function(){this.input.focus()}},{key:"blur",value:function(){this.input.blur()}},{key:"select",value:function(){this.input.select()}},{key:"renderStyles",value:function(){var e=this.props.injectStyles;return p&&e?i.default.createElement("style",{dangerouslySetInnerHTML:{__html:"input#"+this.state.inputId+"::-ms-clear {display: none;}"}}):null}},{key:"render",value:function(){var e=[this.props.defaultValue,this.props.value,""].reduce(function(e,t){return null!=e?e:t}),t=r({},this.props.style);t.display||(t.display="inline-block");var n=r({boxSizing:"content-box",width:this.state.inputWidth+"px"},this.props.inputStyle),o=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(this.props,[]);return function(e){u.forEach(function(t){return delete e[t]})}(o),o.className=this.props.inputClassName,o.id=this.state.inputId,o.style=n,i.default.createElement("div",{className:this.props.className,style:t},this.renderStyles(),i.default.createElement("input",r({},o,{ref:this.inputRef})),i.default.createElement("div",{ref:this.sizerRef,style:c},e),this.props.placeholder?i.default.createElement("div",{ref:this.placeHolderSizerRef,style:c},this.props.placeholder):null)}}]),t}();m.propTypes={className:l.default.string,defaultValue:l.default.any,extraWidth:l.default.oneOfType([l.default.number,l.default.string]),id:l.default.string,injectStyles:l.default.bool,inputClassName:l.default.string,inputRef:l.default.func,inputStyle:l.default.object,minWidth:l.default.oneOfType([l.default.number,l.default.string]),onAutosize:l.default.func,onChange:l.default.func,placeholder:l.default.string,placeholderIsMinWidth:l.default.bool,style:l.default.object,value:l.default.any},m.defaultProps={minWidth:1,injectStyles:!0},t.default=m},
/*!*******************************************!*\
  !*** ./node_modules/stylis/stylis.min.js ***!
  \*******************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){e.exports=function e(t){"use strict";var n=/^\0+/g,r=/[\0\r\f]/g,o=/: */g,a=/zoo|gra/,i=/([,: ])(transform)/g,l=/,+\s*(?![^(]*[)])/g,s=/ +\s*(?![^(]*[)])/g,c=/ *[\0] */g,u=/,\r+?/g,d=/([\t\r\n ])*\f?&/g,p=/:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,f=/\W+/g,m=/@(k\w+)\s*(\S*)\s*/,g=/::(place)/g,b=/:(read-only)/g,h=/\s+(?=[{\];=:>])/g,v=/([[}=:>])\s+/g,x=/(\{[^{]+?);(?=\})/g,y=/\s{2,}/g,w=/([^\(])(:+) */g,k=/[svh]\w+-[tblr]{2}/,E=/\(\s*(.*)\s*\)/g,C=/([\s\S]*?);/g,S=/-self|flex-/g,O=/[^]*?(:[rp][el]a[\w-]+)[^]*/,T=/stretch|:\s*\w+\-(?:conte|avail)/,A=/([^-])(image-set\()/,P="-webkit-",_="-moz-",j="-ms-",N=59,I=125,R=123,F=40,M=41,D=91,z=93,L=10,U=13,B=9,V=64,H=32,W=38,$=45,q=95,K=42,Y=44,X=58,G=39,Q=34,J=47,Z=62,ee=43,te=126,ne=0,re=12,oe=11,ae=107,ie=109,le=115,se=112,ce=111,ue=105,de=99,pe=100,fe=112,me=1,ge=1,be=0,he=1,ve=1,xe=1,ye=0,we=0,ke=0,Ee=[],Ce=[],Se=0,Oe=null,Te=-2,Ae=-1,Pe=0,_e=1,je=2,Ne=3,Ie=0,Re=1,Fe="",Me="",De="";function ze(e,t,o,a,i){for(var l,s,u=0,d=0,p=0,f=0,h=0,v=0,x=0,y=0,k=0,C=0,S=0,O=0,T=0,A=0,q=0,ye=0,Ce=0,Oe=0,Te=0,Ae=o.length,Ue=Ae-1,qe="",Ke="",Ye="",Xe="",Ge="",Qe="";q<Ae;){if(x=o.charCodeAt(q),q===Ue&&d+f+p+u!==0&&(0!==d&&(x=d===J?L:J),f=p=u=0,Ae++,Ue++),d+f+p+u===0){if(q===Ue&&(ye>0&&(Ke=Ke.replace(r,"")),Ke.trim().length>0)){switch(x){case H:case B:case N:case U:case L:break;default:Ke+=o.charAt(q)}x=N}if(1===Ce)switch(x){case R:case I:case N:case Q:case G:case F:case M:case Y:Ce=0;case B:case U:case L:case H:break;default:for(Ce=0,Te=q,h=x,q--,x=N;Te<Ae;)switch(o.charCodeAt(Te++)){case L:case U:case N:++q,x=h,Te=Ae;break;case X:ye>0&&(++q,x=h);case R:Te=Ae}}switch(x){case R:for(h=(Ke=Ke.trim()).charCodeAt(0),S=1,Te=++q;q<Ae;){switch(x=o.charCodeAt(q)){case R:S++;break;case I:S--;break;case J:switch(v=o.charCodeAt(q+1)){case K:case J:q=$e(v,q,Ue,o)}break;case D:x++;case F:x++;case Q:case G:for(;q++<Ue&&o.charCodeAt(q)!==x;);}if(0===S)break;q++}switch(Ye=o.substring(Te,q),h===ne&&(h=(Ke=Ke.replace(n,"").trim()).charCodeAt(0)),h){case V:switch(ye>0&&(Ke=Ke.replace(r,"")),v=Ke.charCodeAt(1)){case pe:case ie:case le:case $:l=t;break;default:l=Ee}if(Te=(Ye=ze(t,l,Ye,v,i+1)).length,ke>0&&0===Te&&(Te=Ke.length),Se>0&&(l=Le(Ee,Ke,Oe),s=We(Ne,Ye,l,t,ge,me,Te,v,i,a),Ke=l.join(""),void 0!==s&&0===(Te=(Ye=s.trim()).length)&&(v=0,Ye="")),Te>0)switch(v){case le:Ke=Ke.replace(E,He);case pe:case ie:case $:Ye=Ke+"{"+Ye+"}";break;case ae:Ye=(Ke=Ke.replace(m,"$1 $2"+(Re>0?Fe:"")))+"{"+Ye+"}",Ye=1===ve||2===ve&&Ve("@"+Ye,3)?"@"+P+Ye+"@"+Ye:"@"+Ye;break;default:Ye=Ke+Ye,a===fe&&(Xe+=Ye,Ye="")}else Ye="";break;default:Ye=ze(t,Le(t,Ke,Oe),Ye,a,i+1)}Ge+=Ye,O=0,Ce=0,A=0,ye=0,Oe=0,T=0,Ke="",Ye="",x=o.charCodeAt(++q);break;case I:case N:if((Te=(Ke=(ye>0?Ke.replace(r,""):Ke).trim()).length)>1)switch(0===A&&((h=Ke.charCodeAt(0))===$||h>96&&h<123)&&(Te=(Ke=Ke.replace(" ",":")).length),Se>0&&void 0!==(s=We(_e,Ke,t,e,ge,me,Xe.length,a,i,a))&&0===(Te=(Ke=s.trim()).length)&&(Ke="\0\0"),h=Ke.charCodeAt(0),v=Ke.charCodeAt(1),h){case ne:break;case V:if(v===ue||v===de){Qe+=Ke+o.charAt(q);break}default:if(Ke.charCodeAt(Te-1)===X)break;Xe+=Be(Ke,h,v,Ke.charCodeAt(2))}O=0,Ce=0,A=0,ye=0,Oe=0,Ke="",x=o.charCodeAt(++q)}}switch(x){case U:case L:if(d+f+p+u+we===0)switch(C){case M:case G:case Q:case V:case te:case Z:case K:case ee:case J:case $:case X:case Y:case N:case R:case I:break;default:A>0&&(Ce=1)}d===J?d=0:he+O===0&&a!==ae&&Ke.length>0&&(ye=1,Ke+="\0"),Se*Ie>0&&We(Pe,Ke,t,e,ge,me,Xe.length,a,i,a),me=1,ge++;break;case N:case I:if(d+f+p+u===0){me++;break}default:switch(me++,qe=o.charAt(q),x){case B:case H:if(f+u+d===0)switch(y){case Y:case X:case B:case H:qe="";break;default:x!==H&&(qe=" ")}break;case ne:qe="\\0";break;case re:qe="\\f";break;case oe:qe="\\v";break;case W:f+d+u===0&&he>0&&(Oe=1,ye=1,qe="\f"+qe);break;case 108:if(f+d+u+be===0&&A>0)switch(q-A){case 2:y===se&&o.charCodeAt(q-3)===X&&(be=y);case 8:k===ce&&(be=k)}break;case X:f+d+u===0&&(A=q);break;case Y:d+p+f+u===0&&(ye=1,qe+="\r");break;case Q:case G:0===d&&(f=f===x?0:0===f?x:f);break;case D:f+d+p===0&&u++;break;case z:f+d+p===0&&u--;break;case M:f+d+u===0&&p--;break;case F:if(f+d+u===0){if(0===O)switch(2*y+3*k){case 533:break;default:S=0,O=1}p++}break;case V:d+p+f+u+A+T===0&&(T=1);break;case K:case J:if(f+u+p>0)break;switch(d){case 0:switch(2*x+3*o.charCodeAt(q+1)){case 235:d=J;break;case 220:Te=q,d=K}break;case K:x===J&&y===K&&Te+2!==q&&(33===o.charCodeAt(Te+2)&&(Xe+=o.substring(Te,q+1)),qe="",d=0)}}if(0===d){if(he+f+u+T===0&&a!==ae&&x!==N)switch(x){case Y:case te:case Z:case ee:case M:case F:if(0===O){switch(y){case B:case H:case L:case U:qe+="\0";break;default:qe="\0"+qe+(x===Y?"":"\0")}ye=1}else switch(x){case F:A+7===q&&108===y&&(A=0),O=++S;break;case M:0==(O=--S)&&(ye=1,qe+="\0")}break;case B:case H:switch(y){case ne:case R:case I:case N:case Y:case re:case B:case H:case L:case U:break;default:0===O&&(ye=1,qe+="\0")}}Ke+=qe,x!==H&&x!==B&&(C=x)}}k=y,y=x,q++}if(Te=Xe.length,ke>0&&0===Te&&0===Ge.length&&0===t[0].length==0&&(a!==ie||1===t.length&&(he>0?Me:De)===t[0])&&(Te=t.join(",").length+2),Te>0){if(l=0===he&&a!==ae?function(e){for(var t,n,o=0,a=e.length,i=Array(a);o<a;++o){for(var l=e[o].split(c),s="",u=0,d=0,p=0,f=0,m=l.length;u<m;++u)if(!(0===(d=(n=l[u]).length)&&m>1)){if(p=s.charCodeAt(s.length-1),f=n.charCodeAt(0),t="",0!==u)switch(p){case K:case te:case Z:case ee:case H:case F:break;default:t=" "}switch(f){case W:n=t+Me;case te:case Z:case ee:case H:case M:case F:break;case D:n=t+n+Me;break;case X:switch(2*n.charCodeAt(1)+3*n.charCodeAt(2)){case 530:if(xe>0){n=t+n.substring(8,d-1);break}default:(u<1||l[u-1].length<1)&&(n=t+Me+n)}break;case Y:t="";default:n=d>1&&n.indexOf(":")>0?t+n.replace(w,"$1"+Me+"$2"):t+n+Me}s+=n}i[o]=s.replace(r,"").trim()}return i}(t):t,Se>0&&void 0!==(s=We(je,Xe,l,e,ge,me,Te,a,i,a))&&0===(Xe=s).length)return Qe+Xe+Ge;if(Xe=l.join(",")+"{"+Xe+"}",ve*be!=0){switch(2!==ve||Ve(Xe,2)||(be=0),be){case ce:Xe=Xe.replace(b,":"+_+"$1")+Xe;break;case se:Xe=Xe.replace(g,"::"+P+"input-$1")+Xe.replace(g,"::"+_+"$1")+Xe.replace(g,":"+j+"input-$1")+Xe}be=0}}return Qe+Xe+Ge}function Le(e,t,n){var r=t.trim().split(u),o=r,a=r.length,i=e.length;switch(i){case 0:case 1:for(var l=0,s=0===i?"":e[0]+" ";l<a;++l)o[l]=Ue(s,o[l],n,i).trim();break;default:l=0;var c=0;for(o=[];l<a;++l)for(var d=0;d<i;++d)o[c++]=Ue(e[d]+" ",r[l],n,i).trim()}return o}function Ue(e,t,n,r){var o=t,a=o.charCodeAt(0);switch(a<33&&(a=(o=o.trim()).charCodeAt(0)),a){case W:switch(he+r){case 0:case 1:if(0===e.trim().length)break;default:return o.replace(d,"$1"+e.trim())}break;case X:switch(o.charCodeAt(1)){case 103:if(xe>0&&he>0)return o.replace(p,"$1").replace(d,"$1"+De);break;default:return e.trim()+o.replace(d,"$1"+e.trim())}default:if(n*he>0&&o.indexOf("\f")>0)return o.replace(d,(e.charCodeAt(0)===X?"":"$1")+e.trim())}return e+o}function Be(e,t,n,r){var c,u=0,d=e+";",p=2*t+3*n+4*r;if(944===p)return function(e){var t=e.length,n=e.indexOf(":",9)+1,r=e.substring(0,n).trim(),o=e.substring(n,t-1).trim();switch(e.charCodeAt(9)*Re){case 0:break;case $:if(110!==e.charCodeAt(10))break;default:for(var a=o.split((o="",l)),i=0,n=0,t=a.length;i<t;n=0,++i){for(var c=a[i],u=c.split(s);c=u[n];){var d=c.charCodeAt(0);if(1===Re&&(d>V&&d<90||d>96&&d<123||d===q||d===$&&c.charCodeAt(1)!==$))switch(isNaN(parseFloat(c))+(-1!==c.indexOf("("))){case 1:switch(c){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:c+=Fe}}u[n++]=c}o+=(0===i?"":",")+u.join(" ")}}return o=r+o+";",1===ve||2===ve&&Ve(o,1)?P+o+o:o}(d);if(0===ve||2===ve&&!Ve(d,1))return d;switch(p){case 1015:return 97===d.charCodeAt(10)?P+d+d:d;case 951:return 116===d.charCodeAt(3)?P+d+d:d;case 963:return 110===d.charCodeAt(5)?P+d+d:d;case 1009:if(100!==d.charCodeAt(4))break;case 969:case 942:return P+d+d;case 978:return P+d+_+d+d;case 1019:case 983:return P+d+_+d+j+d+d;case 883:return d.charCodeAt(8)===$?P+d+d:d.indexOf("image-set(",11)>0?d.replace(A,"$1"+P+"$2")+d:d;case 932:if(d.charCodeAt(4)===$)switch(d.charCodeAt(5)){case 103:return P+"box-"+d.replace("-grow","")+P+d+j+d.replace("grow","positive")+d;case 115:return P+d+j+d.replace("shrink","negative")+d;case 98:return P+d+j+d.replace("basis","preferred-size")+d}return P+d+j+d+d;case 964:return P+d+j+"flex-"+d+d;case 1023:if(99!==d.charCodeAt(8))break;return c=d.substring(d.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),P+"box-pack"+c+P+d+j+"flex-pack"+c+d;case 1005:return a.test(d)?d.replace(o,":"+P)+d.replace(o,":"+_)+d:d;case 1e3:switch(u=(c=d.substring(13).trim()).indexOf("-")+1,c.charCodeAt(0)+c.charCodeAt(u)){case 226:c=d.replace(k,"tb");break;case 232:c=d.replace(k,"tb-rl");break;case 220:c=d.replace(k,"lr");break;default:return d}return P+d+j+c+d;case 1017:if(-1===d.indexOf("sticky",9))return d;case 975:switch(u=(d=e).length-10,p=(c=(33===d.charCodeAt(u)?d.substring(0,u):d).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|c.charCodeAt(7))){case 203:if(c.charCodeAt(8)<111)break;case 115:d=d.replace(c,P+c)+";"+d;break;case 207:case 102:d=d.replace(c,P+(p>102?"inline-":"")+"box")+";"+d.replace(c,P+c)+";"+d.replace(c,j+c+"box")+";"+d}return d+";";case 938:if(d.charCodeAt(5)===$)switch(d.charCodeAt(6)){case 105:return c=d.replace("-items",""),P+d+P+"box-"+c+j+"flex-"+c+d;case 115:return P+d+j+"flex-item-"+d.replace(S,"")+d;default:return P+d+j+"flex-line-pack"+d.replace("align-content","").replace(S,"")+d}break;case 973:case 989:if(d.charCodeAt(3)!==$||122===d.charCodeAt(4))break;case 931:case 953:if(!0===T.test(e))return 115===(c=e.substring(e.indexOf(":")+1)).charCodeAt(0)?Be(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):d.replace(c,P+c)+d.replace(c,_+c.replace("fill-",""))+d;break;case 962:if(d=P+d+(102===d.charCodeAt(5)?j+d:"")+d,n+r===211&&105===d.charCodeAt(13)&&d.indexOf("transform",10)>0)return d.substring(0,d.indexOf(";",27)+1).replace(i,"$1"+P+"$2")+d}return d}function Ve(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10),o=e.substring(n+1,e.length-1);return Oe(2!==t?r:r.replace(O,"$1"),o,t)}function He(e,t){var n=Be(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(C," or ($1)").substring(4):"("+t+")"}function We(e,t,n,r,o,a,i,l,s,c){for(var u,d=0,p=t;d<Se;++d)switch(u=Ce[d].call(Ke,e,p,n,r,o,a,i,l,s,c)){case void 0:case!1:case!0:case null:break;default:p=u}if(p!==t)return p}function $e(e,t,n,r){for(var o=t+1;o<n;++o)switch(r.charCodeAt(o)){case J:if(e===K&&r.charCodeAt(o-1)===K&&t+2!==o)return o+1;break;case L:if(e===J)return o+1}return o}function qe(e){for(var t in e){var n=e[t];switch(t){case"keyframe":Re=0|n;break;case"global":xe=0|n;break;case"cascade":he=0|n;break;case"compress":ye=0|n;break;case"semicolon":we=0|n;break;case"preserve":ke=0|n;break;case"prefix":Oe=null,n?"function"!=typeof n?ve=1:(ve=2,Oe=n):ve=0}}return qe}function Ke(t,n){if(void 0!==this&&this.constructor===Ke)return e(t);var o=t,a=o.charCodeAt(0);a<33&&(a=(o=o.trim()).charCodeAt(0)),Re>0&&(Fe=o.replace(f,a===D?"":"-")),a=1,1===he?De=o:Me=o;var i,l=[De];Se>0&&void 0!==(i=We(Ae,n,l,l,ge,me,0,0,0,0))&&"string"==typeof i&&(n=i);var s=ze(Ee,l,n,0,0);return Se>0&&void 0!==(i=We(Te,s,l,l,ge,me,s.length,0,0,0))&&"string"!=typeof(s=i)&&(a=0),Fe="",De="",Me="",be=0,ge=1,me=1,ye*a==0?s:s.replace(r,"").replace(h,"").replace(v,"$1").replace(x,"$1").replace(y," ")}return Ke.use=function e(t){switch(t){case void 0:case null:Se=Ce.length=0;break;default:if("function"==typeof t)Ce[Se++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else Ie=0|!!t}return e},Ke.set=qe,void 0!==t&&qe(t),Ke}(null)},
/*!************************************************************************!*\
  !*** ./node_modules/react-router/node_modules/path-to-regexp/index.js ***!
  \************************************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){var r=n(/*! isarray */67);e.exports=f,e.exports.parse=a,e.exports.compile=function(e,t){return l(a(e,t))},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=p;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],a=0,i=0,l="",u=t&&t.delimiter||"/";null!=(n=o.exec(e));){var d=n[0],p=n[1],f=n.index;if(l+=e.slice(i,f),i=f+d.length,p)l+=p[1];else{var m=e[i],g=n[2],b=n[3],h=n[4],v=n[5],x=n[6],y=n[7];l&&(r.push(l),l="");var w=null!=g&&null!=m&&m!==g,k="+"===x||"*"===x,E="?"===x||"*"===x,C=n[2]||u,S=h||v;r.push({name:b||a++,prefix:g||"",delimiter:C,optional:E,repeat:k,partial:w,asterisk:!!y,pattern:S?c(S):y?".*":"[^"+s(C)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var a="",l=n||{},s=(o||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var u=e[c];if("string"!=typeof u){var d,p=l[u.name];if(null==p){if(u.optional){u.partial&&(a+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(r(p)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var f=0;f<p.length;f++){if(d=s(p[f]),!t[c].test(d))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(d)+"`");a+=(0===f?u.prefix:u.delimiter)+d}}else{if(d=u.asterisk?encodeURI(p).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):s(p),!t[c].test(d))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+d+'"');a+=u.prefix+d}}else a+=u}return a}}function s(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function u(e,t){return e.keys=t,e}function d(e){return e.sensitive?"":"i"}function p(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,a=!1!==n.end,i="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)i+=s(c);else{var p=s(c.prefix),f="(?:"+c.pattern+")";t.push(c),c.repeat&&(f+="(?:"+p+f+")*"),i+=f=c.optional?c.partial?p+"("+f+")?":"(?:"+p+"("+f+"))?":p+"("+f+")"}}var m=s(n.delimiter||"/"),g=i.slice(-m.length)===m;return o||(i=(g?i.slice(0,-m.length):i)+"(?:"+m+"(?=$))?"),i+=a?"$":o&&g?"":"(?="+m+"|$)",u(new RegExp("^"+i,d(n)),t)}function f(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return u(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(f(e[o],t,n).source);return u(new RegExp("(?:"+r.join("|")+")",d(n)),t)}(e,t,n):function(e,t,n){return p(a(e,n),t,n)}(e,t,n)}},
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */,
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))o.call(n,c)&&(l[c]=n[c]);if(r){i=r(n);for(var u=0;u<i.length;u++)a.call(n,i[u])&&(l[i[u]]=n[i[u]])}}return l}},
/*!*******************************************!*\
  !*** ./node_modules/invariant/browser.js ***!
  \*******************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,a,i,l){if(!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,a,i,l],u=0;(s=new Error(t.replace(/%s/g,function(){return c[u++]}))).name="Invariant Violation"}throw s.framesToPop=1,s}}},
/*!********************************************************!*\
  !*** ./node_modules/dom-helpers/util/camelizeStyle.js ***!
  \********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! @babel/runtime/helpers/interopRequireDefault */7);t.__esModule=!0,t.default=function(e){return(0,o.default)(e.replace(a,"ms-"))};var o=r(n(/*! ./camelize */15)),a=/^-ms-/;e.exports=t.default},
/*!***********************************************************!*\
  !*** ./node_modules/dom-helpers/transition/properties.js ***!
  \***********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! @babel/runtime/helpers/interopRequireDefault */7);t.__esModule=!0,t.default=t.animationEnd=t.animationDelay=t.animationTiming=t.animationDuration=t.animationName=t.transitionEnd=t.transitionDuration=t.transitionDelay=t.transitionTiming=t.transitionProperty=t.transform=void 0;var o,a,i,l,s,c,u,d,p,f,m,g=r(n(/*! ../util/inDOM */61)),b="transform";if(t.transform=b,t.animationEnd=i,t.transitionEnd=a,t.transitionDelay=u,t.transitionTiming=c,t.transitionDuration=s,t.transitionProperty=l,t.animationDelay=m,t.animationTiming=f,t.animationDuration=p,t.animationName=d,g.default){var h=function(){for(var e,t,n=document.createElement("div").style,r={O:function(e){return"o"+e.toLowerCase()},Moz:function(e){return e.toLowerCase()},Webkit:function(e){return"webkit"+e},ms:function(e){return"MS"+e}},o=Object.keys(r),a="",i=0;i<o.length;i++){var l=o[i];if(l+"TransitionProperty"in n){a="-"+l.toLowerCase(),e=r[l]("TransitionEnd"),t=r[l]("AnimationEnd");break}}!e&&"transitionProperty"in n&&(e="transitionend");!t&&"animationName"in n&&(t="animationend");return n=null,{animationEnd:t,transitionEnd:e,prefix:a}}();o=h.prefix,t.transitionEnd=a=h.transitionEnd,t.animationEnd=i=h.animationEnd,t.transform=b=o+"-"+b,t.transitionProperty=l=o+"-transition-property",t.transitionDuration=s=o+"-transition-duration",t.transitionDelay=u=o+"-transition-delay",t.transitionTiming=c=o+"-transition-timing-function",t.animationName=d=o+"-animation-name",t.animationDuration=p=o+"-animation-duration",t.animationTiming=f=o+"-animation-delay",t.animationDelay=m=o+"-animation-timing-function"}var v={transform:b,end:a,property:l,timing:c,delay:u,duration:s};t.default=v},
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./../utils */3);function o(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var a;if(n)a=n(t);else if(r.isURLSearchParams(t))a=t.toString();else{var i=[];r.forEach(t,function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),i.push(o(t)+"="+o(e))}))}),a=i.join("&")}if(a){var l=e.indexOf("#");-1!==l&&(e=e.slice(0,l)),e+=(-1===e.indexOf("?")?"?":"&")+a}return e}},
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";(function(t){var r=n(/*! ./utils */3),o=n(/*! ./helpers/normalizeHeaderName */75),a={"Content-Type":"application/x-www-form-urlencoded"};function i(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var l,s={adapter:(void 0!==t&&"[object process]"===Object.prototype.toString.call(t)?l=n(/*! ./adapters/http */29):"undefined"!=typeof XMLHttpRequest&&(l=n(/*! ./adapters/xhr */29)),l),transformRequest:[function(e,t){return o(t,"Accept"),o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(i(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(i(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};s.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],function(e){s.headers[e]={}}),r.forEach(["post","put","patch"],function(e){s.headers[e]=r.merge(a)}),e.exports=s}).call(this,n(/*! ./../../process/browser.js */14))},
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./../utils */3),o=n(/*! ./../core/settle */76),a=n(/*! ./../helpers/buildURL */26),i=n(/*! ./../helpers/parseHeaders */78),l=n(/*! ./../helpers/isURLSameOrigin */79),s=n(/*! ../core/createError */30);e.exports=function(e){return new Promise(function(t,c){var u=e.data,d=e.headers;r.isFormData(u)&&delete d["Content-Type"];var p=new XMLHttpRequest;if(e.auth){var f=e.auth.username||"",m=e.auth.password||"";d.Authorization="Basic "+btoa(f+":"+m)}if(p.open(e.method.toUpperCase(),a(e.url,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p.onreadystatechange=function(){if(p&&4===p.readyState&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in p?i(p.getAllResponseHeaders()):null,r={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:p.status,statusText:p.statusText,headers:n,config:e,request:p};o(t,c,r),p=null}},p.onabort=function(){p&&(c(s("Request aborted",e,"ECONNABORTED",p)),p=null)},p.onerror=function(){c(s("Network Error",e,null,p)),p=null},p.ontimeout=function(){c(s("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",p)),p=null},r.isStandardBrowserEnv()){var g=n(/*! ./../helpers/cookies */80),b=(e.withCredentials||l(e.url))&&e.xsrfCookieName?g.read(e.xsrfCookieName):void 0;b&&(d[e.xsrfHeaderName]=b)}if("setRequestHeader"in p&&r.forEach(d,function(e,t){void 0===u&&"content-type"===t.toLowerCase()?delete d[t]:p.setRequestHeader(t,e)}),e.withCredentials&&(p.withCredentials=!0),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){p&&(p.abort(),c(e),p=null)}),void 0===u&&(u=null),p.send(u)})}},
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./enhanceError */77);e.exports=function(e,t,n,o,a){var i=new Error(e);return r(i,t,n,o,a)}},
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ../utils */3);e.exports=function(e,t){t=t||{};var n={};return r.forEach(["url","method","params","data"],function(e){void 0!==t[e]&&(n[e]=t[e])}),r.forEach(["headers","auth","proxy"],function(o){r.isObject(t[o])?n[o]=r.deepMerge(e[o],t[o]):void 0!==t[o]?n[o]=t[o]:r.isObject(e[o])?n[o]=r.deepMerge(e[o]):void 0!==e[o]&&(n[o]=e[o])}),r.forEach(["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"],function(r){void 0!==t[r]?n[r]=t[r]:void 0!==e[r]&&(n[r]=e[r])}),n}},
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(i=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}var i;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];null!=a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];null!=i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},
/*!********************************************!*\
  !*** ./node_modules/query-string/index.js ***!
  \********************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";const r=n(/*! strict-uri-encode */48),o=n(/*! decode-uri-component */49),a=n(/*! split-on-first */50);function i(e,t){return t.encode?t.strict?r(e):encodeURIComponent(e):e}function l(e,t){return t.decode?o(e):e}function s(e){const t=e.indexOf("#");return-1!==t&&(e=e.slice(0,t)),e}function c(e){const t=(e=s(e)).indexOf("?");return-1===t?"":e.slice(t+1)}function u(e,t){const n=function(e){let t;switch(e.arrayFormat){case"index":return(e,n,r)=>{t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),t?(void 0===r[e]&&(r[e]={}),r[e][t[1]]=n):r[e]=n};case"bracket":return(e,n,r)=>{t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),t?void 0!==r[e]?r[e]=[].concat(r[e],n):r[e]=[n]:r[e]=n};case"comma":return(e,t,n)=>{const r="string"==typeof t&&t.split("").indexOf(",")>-1?t.split(","):t;n[e]=r};default:return(e,t,n)=>{void 0!==n[e]?n[e]=[].concat(n[e],t):n[e]=t}}}(t=Object.assign({decode:!0,sort:!0,arrayFormat:"none"},t)),r=Object.create(null);if("string"!=typeof e)return r;if(!(e=e.trim().replace(/^[?#&]/,"")))return r;for(const o of e.split("&")){let[e,i]=a(o.replace(/\+/g," "),"=");i=void 0===i?null:l(i,t),n(l(e,t),i,r)}return!1===t.sort?r:(!0===t.sort?Object.keys(r).sort():Object.keys(r).sort(t.sort)).reduce((e,t)=>{const n=r[t];return Boolean(n)&&"object"==typeof n&&!Array.isArray(n)?e[t]=function e(t){return Array.isArray(t)?t.sort():"object"==typeof t?e(Object.keys(t)).sort((e,t)=>Number(e)-Number(t)).map(e=>t[e]):t}(n):e[t]=n,e},Object.create(null))}t.extract=c,t.parse=u,t.stringify=(e,t)=>{if(!e)return"";const n=function(e){switch(e.arrayFormat){case"index":return t=>(n,r)=>{const o=n.length;return void 0===r?n:null===r?[...n,[i(t,e),"[",o,"]"].join("")]:[...n,[i(t,e),"[",i(o,e),"]=",i(r,e)].join("")]};case"bracket":return t=>(n,r)=>void 0===r?n:null===r?[...n,[i(t,e),"[]"].join("")]:[...n,[i(t,e),"[]=",i(r,e)].join("")];case"comma":return t=>(n,r,o)=>null==r||0===r.length?n:0===o?[[i(t,e),"=",i(r,e)].join("")]:[[n,i(r,e)].join(",")];default:return t=>(n,r)=>void 0===r?n:null===r?[...n,i(t,e)]:[...n,[i(t,e),"=",i(r,e)].join("")]}}(t=Object.assign({encode:!0,strict:!0,arrayFormat:"none"},t)),r=Object.keys(e);return!1!==t.sort&&r.sort(t.sort),r.map(r=>{const o=e[r];return void 0===o?"":null===o?i(r,t):Array.isArray(o)?o.reduce(n(r),[]).join("&"):i(r,t)+"="+i(o,t)}).filter(e=>e.length>0).join("&")},t.parseUrl=(e,t)=>({url:s(e).split("?")[0]||"",query:u(c(e),t)})},
/*!*****************************************************!*\
  !*** ./node_modules/@restart/context/forwardRef.js ***!
  \*****************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){var n=void 0===t?{}:t,r=n.propTypes,a=n.defaultProps,i=n.allowFallback,l=void 0!==i&&i,s=n.displayName,c=void 0===s?e.name||e.displayName:s,u=function(t,n){return e(t,n)};return Object.assign(o.default.forwardRef||!l?o.default.forwardRef(u):function(e){return u(e,null)},{displayName:c,propTypes:r,defaultProps:a})};var r,o=(r=n(/*! react */0))&&r.__esModule?r:{default:r}},
/*!*************************************************!*\
  !*** ./node_modules/stylis-rule-sheet/index.js ***!
  \*************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){e.exports=function(){"use strict";return function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,a,i,l,s,c,u,d){switch(n){case 1:if(0===u&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===c)return r+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(o[0]+r),"";default:return r+(0===d?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}}()},
/*!*******************************************************************************!*\
  !*** ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */function(e,t,n){"use strict";var r=n(/*! @emotion/memoize */10),o=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,a=Object(r.a)(function(e){return o.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91});t.a=a},
/*!**********************************************!*\
  !*** ./node_modules/uncontrollable/index.js ***!
  \**********************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.default=function e(t,n,a){void 0===a&&(a=[]);var l=t.displayName||t.name||"Component";var s=o.canAcceptRef(t);var c=Object.keys(n);var u=c.map(o.defaultKey);!s&&a.length&&invariant(!1);var d=function(e){var l,s;function d(){for(var t,r=arguments.length,o=new Array(r),i=0;i<r;i++)o[i]=arguments[i];return(t=e.call.apply(e,[this].concat(o))||this).handlers=Object.create(null),c.forEach(function(e){var r=n[e];t.handlers[r]=function(n){if(t.props[r]){var o;t._notifying=!0;for(var a=arguments.length,i=new Array(a>1?a-1:0),l=1;l<a;l++)i[l-1]=arguments[l];(o=t.props)[r].apply(o,[n].concat(i)),t._notifying=!1}t._values[e]=n,t.unmounted||t.forceUpdate()}}),a.length&&(t.attachRef=function(e){t.inner=e}),t}s=e,(l=d).prototype=Object.create(s.prototype),l.prototype.constructor=l,l.__proto__=s;var p=d.prototype;return p.shouldComponentUpdate=function(){return!this._notifying},p.componentWillMount=function(){var e=this,t=this.props;this._values=Object.create(null),c.forEach(function(n){e._values[n]=t[o.defaultKey(n)]})},p.componentWillReceiveProps=function(e){var t=this,n=this.props;c.forEach(function(r){!o.isProp(e,r)&&o.isProp(n,r)&&(t._values[r]=e[o.defaultKey(r)])})},p.componentWillUnmount=function(){this.unmounted=!0},p.render=function(){var e=this,n=this.props,o=n.innerRef,a=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(n,["innerRef"]);u.forEach(function(e){delete a[e]});var l={};return c.forEach(function(t){var n=e.props[t];l[t]=void 0!==n?n:e._values[t]}),r.default.createElement(t,i({},a,l,this.handlers,{ref:o||this.attachRef}))},d}(r.default.Component);d.displayName="Uncontrolled("+l+")";d.propTypes=i({innerRef:function(){}},o.uncontrolledPropTypes(n,l));a.forEach(function(e){d.prototype[e]=function(){var t;return(t=this.inner)[e].apply(t,arguments)}});var p=d;r.default.forwardRef&&((p=r.default.forwardRef(function(e,t){return r.default.createElement(d,i({},e,{innerRef:t}))})).propTypes=d.propTypes);p.ControlledComponent=t;p.deferControlTo=function(t,r,o){return void 0===r&&(r={}),e(t,i({},n,r),o)};return p};var r=a(n(/*! react */0)),o=(a(n(/*! invariant */22)),function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n(/*! ./utils */55)));function a(e){return e&&e.__esModule?e:{default:e}}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}e.exports=t.default},
/*!*********************************************************!*\
  !*** ./node_modules/@restart/hooks/useEventCallback.js ***!
  \*********************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e){var t=(0,a.default)(e);return(0,o.useCallback)(function(){return t.current&&t.current.apply(t,arguments)},[t])};var r,o=n(/*! react */0),a=(r=n(/*! ./useCommittedRef */56))&&r.__esModule?r:{default:r}},
/*!****************************************************!*\
  !*** ./node_modules/dom-helpers/transition/end.js ***!
  \****************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! @babel/runtime/helpers/interopRequireDefault */7);t.__esModule=!0,t.default=void 0;var o=r(n(/*! ./properties */24)),a=r(n(/*! ../style */11));function i(e,t,n){var r,a={target:e,currentTarget:e};function i(e){e.target===e.currentTarget&&(clearTimeout(r),e.target.removeEventListener(o.default.end,i),t.call(this))}o.default.end?null==n&&(n=s(e)||0):n=0,o.default.end?(e.addEventListener(o.default.end,i,!1),r=setTimeout(function(){return i(a)},1.5*(n||100))):setTimeout(i.bind(null,a),0)}i._parseDuration=s;var l=i;function s(e){var t=(0,a.default)(e,o.default.duration),n=-1===t.indexOf("ms")?1e3:1;return parseFloat(t)*n}t.default=l,e.exports=t.default},
/*!********************************************************!*\
  !*** ./node_modules/create-react-context/lib/index.js ***!
  \********************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0;var r=a(n(/*! react */0)),o=a(n(/*! ./implementation */63));function a(e){return e&&e.__esModule?e:{default:e}}t.default=r.default.createContext||o.default,e.exports=t.default},
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! react-is */8),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function s(e){return r.isMemo(e)?i:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0};var c=Object.defineProperty,u=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var o=f(n);o&&o!==m&&e(t,o,r)}var i=u(n);d&&(i=i.concat(d(n)));for(var l=s(t),g=s(n),b=0;b<i.length;++b){var h=i[b];if(!(a[h]||r&&r[h]||g&&g[h]||l&&l[h])){var v=p(n,h);try{c(t,h,v)}catch(e){}}}return t}return t}},
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){e.exports=n(/*! ./lib/axios */69)},
/*!********************************************************!*\
  !*** ./node_modules/react/cjs/react.production.min.js ***!
  \********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(/*! object-assign */21),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,s=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,u=o?Symbol.for("react.provider"):60109,d=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,f=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,g=o?Symbol.for("react.memo"):60115,b=o?Symbol.for("react.lazy"):60116,h="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,o,a,i,l],c=0;(e=Error(t.replace(/%s/g,function(){return s[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var x={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function w(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||x}function k(){}function E(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||x}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&v("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var C=E.prototype=new k;C.constructor=E,r(C,w.prototype),C.isPureReactComponent=!0;var S={current:null},O={current:null},T=Object.prototype.hasOwnProperty,A={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)T.call(t,r)&&!A.hasOwnProperty(r)&&(o[r]=t[r]);var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){for(var c=Array(s),u=0;u<s;u++)c[u]=arguments[u+2];o.children=c}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===o[r]&&(o[r]=s[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:O.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var j=/\/+/g,N=[];function I(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function F(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var s=!1;if(null===t)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case a:case i:s=!0}}if(s)return r(o,t,""===n?"."+M(t,0):n),1;if(s=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var u=n+M(l=t[c],c);s+=e(l,u,r,o)}else if(u=null===t||"object"!=typeof t?null:"function"==typeof(u=h&&t[h]||t["@@iterator"])?u:null,"function"==typeof u)for(t=u.call(t),c=0;!(l=t.next()).done;)s+=e(l=l.value,u=n+M(l,c++),r,o);else"object"===l&&v("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return s}(e,"",t,n)}function M(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function D(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,function(e){return e}):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(j,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(j,"$&/")+"/"),F(e,z,t=I(t,a,r,o)),R(t)}function U(){var e=S.current;return null===e&&v("321"),e}var B={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;F(e,D,t=I(null,null,t,n)),R(t)},count:function(e){return F(e,function(){return null},null)},toArray:function(e){var t=[];return L(e,t,null,function(e){return e}),t},only:function(e){return _(e)||v("143"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:u,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:f,render:e}},lazy:function(e){return{$$typeof:b,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:g,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return U().useCallback(e,t)},useContext:function(e,t){return U().useContext(e,t)},useEffect:function(e,t){return U().useEffect(e,t)},useImperativeHandle:function(e,t,n){return U().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return U().useLayoutEffect(e,t)},useMemo:function(e,t){return U().useMemo(e,t)},useReducer:function(e,t,n){return U().useReducer(e,t,n)},useRef:function(e){return U().useRef(e)},useState:function(e){return U().useState(e)},Fragment:l,StrictMode:s,Suspense:m,createElement:P,cloneElement:function(e,t,n){null==e&&v("267",e);var o=void 0,i=r({},e.props),l=e.key,s=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(s=t.ref,c=O.current),void 0!==t.key&&(l=""+t.key);var u=void 0;for(o in e.type&&e.type.defaultProps&&(u=e.type.defaultProps),t)T.call(t,o)&&!A.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==u?u[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){u=Array(o);for(var d=0;d<o;d++)u[d]=arguments[d+2];i.children=u}return{$$typeof:a,type:e.type,key:l,ref:s,props:i,_owner:c}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:_,version:"16.8.6",unstable_ConcurrentMode:p,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:O,assign:r}},V={default:B},H=V&&B||V;e.exports=H.default||H},
/*!****************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.production.min.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(/*! react */0),o=n(/*! object-assign */21),a=n(/*! scheduler */46);function i(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,o,a,i,l],c=0;(e=Error(t.replace(/%s/g,function(){return s[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||i("227");var l=!1,s=null,c=!1,u=null,d={onError:function(e){l=!0,s=e}};function p(e,t,n,r,o,a,i,c,u){l=!1,s=null,function(e,t,n,r,o,a,i,l,s){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(d,arguments)}var f=null,m={};function g(){if(f)for(var e in m){var t=m[e],n=f.indexOf(e);if(-1<n||i("96",e),!h[n])for(var r in t.extractEvents||i("97",e),h[n]=t,n=t.eventTypes){var o=void 0,a=n[r],l=t,s=r;v.hasOwnProperty(s)&&i("99",s),v[s]=a;var c=a.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&b(c[o],l,s);o=!0}else a.registrationName?(b(a.registrationName,l,s),o=!0):o=!1;o||i("98",r,e)}}}function b(e,t,n){x[e]&&i("100",e),x[e]=t,y[e]=t.eventTypes[n].dependencies}var h=[],v={},x={},y={},w=null,k=null,E=null;function C(e,t,n){var r=e.type||"unknown-event";e.currentTarget=E(n),function(e,t,n,r,o,a,d,f,m){if(p.apply(this,arguments),l){if(l){var g=s;l=!1,s=null}else i("198"),g=void 0;c||(c=!0,u=g)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function O(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var T=null;function A(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)C(e,t[r],n[r]);else t&&C(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var P={injectEventPluginOrder:function(e){f&&i("101"),f=Array.prototype.slice.call(e),g()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&i("102",t),m[t]=r,n=!0)}n&&g()}};function _(e,t){var n=e.stateNode;if(!n)return null;var r=w(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&i("231",t,typeof n),n)}function j(e){if(null!==e&&(T=S(T,e)),e=T,T=null,e&&(O(e,A),T&&i("95"),c))throw e=u,c=!1,u=null,e}var N=Math.random().toString(36).slice(2),I="__reactInternalInstance$"+N,R="__reactEventHandlers$"+N;function F(e){if(e[I])return e[I];for(;!e[I];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[I]).tag||6===e.tag?e:null}function M(e){return!(e=e[I])||5!==e.tag&&6!==e.tag?null:e}function D(e){if(5===e.tag||6===e.tag)return e.stateNode;i("33")}function z(e){return e[R]||null}function L(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function U(e,t,n){(t=_(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function B(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=L(t);for(t=n.length;0<t--;)U(n[t],"captured",e);for(t=0;t<n.length;t++)U(n[t],"bubbled",e)}}function V(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=_(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function H(e){e&&e.dispatchConfig.registrationName&&V(e._targetInst,null,e)}function W(e){O(e,B)}var $=!("undefined"==typeof window||!window.document||!window.document.createElement);function q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var K={animationend:q("Animation","AnimationEnd"),animationiteration:q("Animation","AnimationIteration"),animationstart:q("Animation","AnimationStart"),transitionend:q("Transition","TransitionEnd")},Y={},X={};function G(e){if(Y[e])return Y[e];if(!K[e])return e;var t,n=K[e];for(t in n)if(n.hasOwnProperty(t)&&t in X)return Y[e]=n[t];return e}$&&(X=document.createElement("div").style,"AnimationEvent"in window||(delete K.animationend.animation,delete K.animationiteration.animation,delete K.animationstart.animation),"TransitionEvent"in window||delete K.transitionend.transition);var Q=G("animationend"),J=G("animationiteration"),Z=G("animationstart"),ee=G("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ae(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ie(){return!0}function le(){return!1}function se(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:le,this.isPropagationStopped=le,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ue(e){e instanceof this||i("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function de(e){e.eventPool=[],e.getPooled=ce,e.release=ue}o(se.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),se.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},se.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return o(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,de(n),n},de(se);var pe=se.extend({data:null}),fe=se.extend({data:null}),me=[9,13,27,32],ge=$&&"CompositionEvent"in window,be=null;$&&"documentMode"in document&&(be=document.documentMode);var he=$&&"TextEvent"in window&&!be,ve=$&&(!ge||be&&8<be&&11>=be),xe=String.fromCharCode(32),ye={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},we=!1;function ke(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ee(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ce=!1;var Se={eventTypes:ye,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(ge)e:{switch(e){case"compositionstart":o=ye.compositionStart;break e;case"compositionend":o=ye.compositionEnd;break e;case"compositionupdate":o=ye.compositionUpdate;break e}o=void 0}else Ce?ke(e,n)&&(o=ye.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=ye.compositionStart);return o?(ve&&"ko"!==n.locale&&(Ce||o!==ye.compositionStart?o===ye.compositionEnd&&Ce&&(a=ae()):(re="value"in(ne=r)?ne.value:ne.textContent,Ce=!0)),o=pe.getPooled(o,t,n,r),a?o.data=a:null!==(a=Ee(n))&&(o.data=a),W(o),a=o):a=null,(e=he?function(e,t){switch(e){case"compositionend":return Ee(t);case"keypress":return 32!==t.which?null:(we=!0,xe);case"textInput":return(e=t.data)===xe&&we?null:e;default:return null}}(e,n):function(e,t){if(Ce)return"compositionend"===e||!ge&&ke(e,t)?(e=ae(),oe=re=ne=null,Ce=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ve&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=fe.getPooled(ye.beforeInput,t,n,r)).data=e,W(t)):t=null,null===a?t:null===t?a:[a,t]}},Oe=null,Te=null,Ae=null;function Pe(e){if(e=k(e)){"function"!=typeof Oe&&i("280");var t=w(e.stateNode);Oe(e.stateNode,e.type,t)}}function _e(e){Te?Ae?Ae.push(e):Ae=[e]:Te=e}function je(){if(Te){var e=Te,t=Ae;if(Ae=Te=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function Ne(e,t){return e(t)}function Ie(e,t,n){return e(t,n)}function Re(){}var Fe=!1;function Me(e,t){if(Fe)return e(t);Fe=!0;try{return Ne(e,t)}finally{Fe=!1,(null!==Te||null!==Ae)&&(Re(),je())}}var De={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!De[e.type]:"textarea"===t}function Le(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Ue(e){if(!$)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function Be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ve(e){e._valueTracker||(e._valueTracker=function(e){var t=Be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function He(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var We=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;We.hasOwnProperty("ReactCurrentDispatcher")||(We.ReactCurrentDispatcher={current:null});var $e=/^(.*)[\\\/]/,qe="function"==typeof Symbol&&Symbol.for,Ke=qe?Symbol.for("react.element"):60103,Ye=qe?Symbol.for("react.portal"):60106,Xe=qe?Symbol.for("react.fragment"):60107,Ge=qe?Symbol.for("react.strict_mode"):60108,Qe=qe?Symbol.for("react.profiler"):60114,Je=qe?Symbol.for("react.provider"):60109,Ze=qe?Symbol.for("react.context"):60110,et=qe?Symbol.for("react.concurrent_mode"):60111,tt=qe?Symbol.for("react.forward_ref"):60112,nt=qe?Symbol.for("react.suspense"):60113,rt=qe?Symbol.for("react.memo"):60115,ot=qe?Symbol.for("react.lazy"):60116,at="function"==typeof Symbol&&Symbol.iterator;function it(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=at&&e[at]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Xe:return"Fragment";case Ye:return"Portal";case Qe:return"Profiler";case Ge:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function st(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,a=lt(e.type);n=null,r&&(n=lt(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace($e,"")+":"+o.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ut=Object.prototype.hasOwnProperty,dt={},pt={};function ft(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var mt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){mt[e]=new ft(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];mt[t]=new ft(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){mt[e]=new ft(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){mt[e]=new ft(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){mt[e]=new ft(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){mt[e]=new ft(e,3,!0,e,null)}),["capture","download"].forEach(function(e){mt[e]=new ft(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){mt[e]=new ft(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){mt[e]=new ft(e,5,!1,e.toLowerCase(),null)});var gt=/[\-:]([a-z])/g;function bt(e){return e[1].toUpperCase()}function ht(e,t,n,r){var o=mt.hasOwnProperty(t)?mt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!ut.call(pt,e)||!ut.call(dt,e)&&(ct.test(e)?pt[e]=!0:(dt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function vt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function xt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function yt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=vt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function wt(e,t){null!=(t=t.checked)&&ht(e,"checked",t,!1)}function kt(e,t){wt(e,t);var n=vt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ct(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ct(e,t.type,vt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Et(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ct(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(gt,bt);mt[t]=new ft(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(gt,bt);mt[t]=new ft(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(gt,bt);mt[t]=new ft(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){mt[e]=new ft(e,1,!1,e.toLowerCase(),null)});var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ot(e,t,n){return(e=se.getPooled(St.change,e,t,n)).type="change",_e(n),W(e),e}var Tt=null,At=null;function Pt(e){j(e)}function _t(e){if(He(D(e)))return e}function jt(e,t){if("change"===e)return t}var Nt=!1;function It(){Tt&&(Tt.detachEvent("onpropertychange",Rt),At=Tt=null)}function Rt(e){"value"===e.propertyName&&_t(At)&&Me(Pt,e=Ot(At,e,Le(e)))}function Ft(e,t,n){"focus"===e?(It(),At=n,(Tt=t).attachEvent("onpropertychange",Rt)):"blur"===e&&It()}function Mt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return _t(At)}function Dt(e,t){if("click"===e)return _t(t)}function zt(e,t){if("input"===e||"change"===e)return _t(t)}$&&(Nt=Ue("input")&&(!document.documentMode||9<document.documentMode));var Lt={eventTypes:St,_isInputEventSupported:Nt,extractEvents:function(e,t,n,r){var o=t?D(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=jt:ze(o)?Nt?a=zt:(a=Mt,i=Ft):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Dt),a&&(a=a(e,t)))return Ot(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Ct(o,"number",o.value)}},Ut=se.extend({view:null,detail:null}),Bt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Vt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Bt[e])&&!!t[e]}function Ht(){return Vt}var Wt=0,$t=0,qt=!1,Kt=!1,Yt=Ut.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Ht,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Wt;return Wt=e.screenX,qt?"mousemove"===e.type?e.screenX-t:0:(qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=$t;return $t=e.screenY,Kt?"mousemove"===e.type?e.screenY-t:0:(Kt=!0,0)}}),Xt=Yt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Gt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Qt={eventTypes:Gt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?F(t):null):a=null,a===t)return null;var i=void 0,l=void 0,s=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(i=Yt,l=Gt.mouseLeave,s=Gt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=Xt,l=Gt.pointerLeave,s=Gt.pointerEnter,c="pointer");var u=null==a?o:D(a);if(o=null==t?o:D(t),(e=i.getPooled(l,a,n,r)).type=c+"leave",e.target=u,e.relatedTarget=o,(n=i.getPooled(s,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=u,r=t,a&&r)e:{for(o=r,c=0,i=t=a;i;i=L(i))c++;for(i=0,s=o;s;s=L(s))i++;for(;0<c-i;)t=L(t),c--;for(;0<i-c;)o=L(o),i--;for(;c--;){if(t===o||t===o.alternate)break e;t=L(t),o=L(o)}t=null}else t=null;for(o=t,t=[];a&&a!==o&&(null===(c=a.alternate)||c!==o);)t.push(a),a=L(a);for(a=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)a.push(r),r=L(r);for(r=0;r<t.length;r++)V(t[r],"bubbled",e);for(r=a.length;0<r--;)V(a[r],"captured",n);return[e,n]}};function Jt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Jt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Jt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&i("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&i("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}i("188")}if(n.return!==r.return)n=o,r=a;else{l=!1;for(var s=o.child;s;){if(s===n){l=!0,n=o,r=a;break}if(s===r){l=!0,r=o,n=a;break}s=s.sibling}if(!l){for(s=a.child;s;){if(s===n){l=!0,n=a,r=o;break}if(s===r){l=!0,r=a,n=o;break}s=s.sibling}l||i("189")}}n.alternate!==r&&i("190")}return 3!==n.tag&&i("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=se.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=se.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=Ut.extend({relatedTarget:null});function sn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},un={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},dn=Ut.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=sn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?un[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Ht,charCode:function(e){return"keypress"===e.type?sn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?sn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Yt.extend({dataTransfer:null}),fn=Ut.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Ht}),mn=se.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),gn=Yt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),bn=[["abort","abort"],[Q,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],hn={},vn={};function xn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},hn[e]=t,vn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){xn(e,!0)}),bn.forEach(function(e){xn(e,!1)});var yn={eventTypes:hn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=vn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=vn[e];if(!o)return null;switch(e){case"keypress":if(0===sn(n))return null;case"keydown":case"keyup":e=dn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Yt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=fn;break;case Q:case J:case Z:e=on;break;case ee:e=mn;break;case"scroll":e=Ut;break;case"wheel":e=gn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Xt;break;default:e=se}return W(t=e.getPooled(o,t,n,r)),t}},wn=yn.isInteractiveTopLevelEventType,kn=[];function En(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=F(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Le(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=null,l=0;l<h.length;l++){var s=h[l];s&&(s=s.extractEvents(r,t,a,o))&&(i=S(i,s))}j(i)}}var Cn=!0;function Sn(e,t){if(!t)return null;var n=(wn(e)?Tn:An).bind(null,e);t.addEventListener(e,n,!1)}function On(e,t){if(!t)return null;var n=(wn(e)?Tn:An).bind(null,e);t.addEventListener(e,n,!0)}function Tn(e,t){Ie(An,e,t)}function An(e,t){if(Cn){var n=Le(t);if(null===(n=F(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),kn.length){var r=kn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Me(En,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>kn.length&&kn.push(e)}}}var Pn={},_n=0,jn="_reactListenersID"+(""+Math.random()).slice(2);function Nn(e){return Object.prototype.hasOwnProperty.call(e,jn)||(e[jn]=_n++,Pn[e[jn]]={}),Pn[e[jn]]}function In(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Rn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Fn(e,t){var n,r=Rn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Rn(r)}}function Mn(){for(var e=window,t=In();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=In((e=t.contentWindow).document)}return t}function Dn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function zn(e){var t=Mn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&Dn(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=Fn(n,a);var i=Fn(n,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Ln=$&&"documentMode"in document&&11>=document.documentMode,Un={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Bn=null,Vn=null,Hn=null,Wn=!1;function $n(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Wn||null==Bn||Bn!==In(n)?null:("selectionStart"in(n=Bn)&&Dn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Hn&&en(Hn,n)?null:(Hn=n,(e=se.getPooled(Un.select,Vn,e,t)).type="select",e.target=Bn,W(e),e))}var qn={eventTypes:Un,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=Nn(a),o=y.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?D(t):window,e){case"focus":(ze(a)||"true"===a.contentEditable)&&(Bn=a,Vn=t,Hn=null);break;case"blur":Hn=Vn=Bn=null;break;case"mousedown":Wn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Wn=!1,$n(n,r);case"selectionchange":if(Ln)break;case"keydown":case"keyup":return $n(n,r)}return null}};function Kn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Yn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+vt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Xn(e,t){return null!=t.dangerouslySetInnerHTML&&i("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Gn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&i("92"),Array.isArray(t)&&(1>=t.length||i("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:vt(n)}}function Qn(e,t){var n=vt(t.value),r=vt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Jn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}P.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w=z,k=M,E=D,P.injectEventPluginsByName({SimpleEventPlugin:yn,EnterLeaveEventPlugin:Qt,ChangeEventPlugin:Lt,SelectEventPlugin:qn,BeforeInputEventPlugin:Se});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr,rr=void 0,or=(nr=function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return nr(e,t)})}:nr);function ar(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ir={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},lr=["Webkit","ms","Moz","O"];function sr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ir.hasOwnProperty(e)&&ir[e]?(""+t).trim():t+"px"}function cr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=sr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ir).forEach(function(e){lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ir[t]=ir[e]})});var ur=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function dr(e,t){t&&(ur[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&i("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&i("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||i("61")),null!=t.style&&"object"!=typeof t.style&&i("62",""))}function pr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function fr(e,t){var n=Nn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=y[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":On("scroll",e);break;case"focus":case"blur":On("focus",e),On("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Ue(o)&&On(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function mr(){}var gr=null,br=null;function hr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function vr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var xr="function"==typeof setTimeout?setTimeout:void 0,yr="function"==typeof clearTimeout?clearTimeout:void 0,wr=a.unstable_scheduleCallback,kr=a.unstable_cancelCallback;function Er(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Cr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Sr=[],Or=-1;function Tr(e){0>Or||(e.current=Sr[Or],Sr[Or]=null,Or--)}function Ar(e,t){Sr[++Or]=e.current,e.current=t}var Pr={},_r={current:Pr},jr={current:!1},Nr=Pr;function Ir(e,t){var n=e.type.contextTypes;if(!n)return Pr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Rr(e){return null!=(e=e.childContextTypes)}function Fr(e){Tr(jr),Tr(_r)}function Mr(e){Tr(jr),Tr(_r)}function Dr(e,t,n){_r.current!==Pr&&i("168"),Ar(_r,t),Ar(jr,n)}function zr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())a in e||i("108",lt(t)||"Unknown",a);return o({},n,r)}function Lr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Pr,Nr=_r.current,Ar(_r,t),Ar(jr,jr.current),!0}function Ur(e,t,n){var r=e.stateNode;r||i("169"),n?(t=zr(e,t,Nr),r.__reactInternalMemoizedMergedChildContext=t,Tr(jr),Tr(_r),Ar(_r,t)):Tr(jr),Ar(jr,n)}var Br=null,Vr=null;function Hr(e){return function(t){try{return e(t)}catch(e){}}}function Wr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function $r(e,t,n,r){return new Wr(e,t,n,r)}function qr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Kr(e,t){var n=e.alternate;return null===n?((n=$r(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Yr(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)qr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Xe:return Xr(n.children,o,a,t);case et:return Gr(n,3|o,a,t);case Ge:return Gr(n,2|o,a,t);case Qe:return(e=$r(12,n,t,4|o)).elementType=Qe,e.type=Qe,e.expirationTime=a,e;case nt:return(e=$r(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}i("130",null==e?e:typeof e,"")}return(t=$r(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=a,t}function Xr(e,t,n,r){return(e=$r(7,e,r,t)).expirationTime=n,e}function Gr(e,t,n,r){return e=$r(8,e,r,t),t=0==(1&t)?Ge:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Qr(e,t,n){return(e=$r(6,e,null,t)).expirationTime=n,e}function Jr(e,t,n){return(t=$r(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Zr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),no(t,e)}function eo(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),no(t,e)}function to(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function no(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,a=t.latestPingedTime;0===(o=0!==o?o:a)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function ro(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var oo=(new r.Component).refs;function ao(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var io={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=kl(),o=Ga(r=Xi(r,e));o.payload=t,null!=n&&(o.callback=n),Hi(),Ja(e,o),Ji(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=kl(),o=Ga(r=Xi(r,e));o.tag=Wa,o.payload=t,null!=n&&(o.callback=n),Hi(),Ja(e,o),Ji(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=kl(),r=Ga(n=Xi(n,e));r.tag=$a,null!=t&&(r.callback=t),Hi(),Ja(e,r),Ji(e,n)}};function lo(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,a))}function so(e,t,n){var r=!1,o=Pr,a=t.contextType;return"object"==typeof a&&null!==a?a=Va(a):(o=Rr(t)?Nr:_r.current,a=(r=null!=(r=t.contextTypes))?Ir(e,o):Pr),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=io,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function co(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&io.enqueueReplaceState(t,t.state,null)}function uo(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=oo;var a=t.contextType;"object"==typeof a&&null!==a?o.context=Va(a):(a=Rr(t)?Nr:_r.current,o.context=Ir(e,a)),null!==(a=e.updateQueue)&&(ni(e,a,n,o,r),o.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(ao(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&io.enqueueReplaceState(o,o.state,null),null!==(a=e.updateQueue)&&(ni(e,a,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var po=Array.isArray;function fo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&i("309"),r=n.stateNode),r||i("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===oo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&i("284"),n._owner||i("290",e)}return e}function mo(e,t){"textarea"!==e.type&&i("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function go(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Kr(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Qr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=fo(e,t,n),r.return=e,r):((r=Yr(n.type,n.key,n.props,null,e.mode,r)).ref=fo(e,t,n),r.return=e,r)}function u(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function d(e,t,n,r,a){return null===t||7!==t.tag?((t=Xr(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Qr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ke:return(n=Yr(t.type,t.key,t.props,null,e.mode,n)).ref=fo(e,null,t),n.return=e,n;case Ye:return(t=Jr(t,e.mode,n)).return=e,t}if(po(t)||it(t))return(t=Xr(t,e.mode,n,null)).return=e,t;mo(e,t)}return null}function f(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ke:return n.key===o?n.type===Xe?d(e,t,n.props.children,r,o):c(e,t,n,r):null;case Ye:return n.key===o?u(e,t,n,r):null}if(po(n)||it(n))return null!==o?null:d(e,t,n,r,null);mo(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ke:return e=e.get(null===r.key?n:r.key)||null,r.type===Xe?d(t,e,r.props.children,o,r.key):c(t,e,r,o);case Ye:return u(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(po(r)||it(r))return d(t,e=e.get(n)||null,r,o,null);mo(t,r)}return null}function g(o,i,l,s){for(var c=null,u=null,d=i,g=i=0,b=null;null!==d&&g<l.length;g++){d.index>g?(b=d,d=null):b=d.sibling;var h=f(o,d,l[g],s);if(null===h){null===d&&(d=b);break}e&&d&&null===h.alternate&&t(o,d),i=a(h,i,g),null===u?c=h:u.sibling=h,u=h,d=b}if(g===l.length)return n(o,d),c;if(null===d){for(;g<l.length;g++)(d=p(o,l[g],s))&&(i=a(d,i,g),null===u?c=d:u.sibling=d,u=d);return c}for(d=r(o,d);g<l.length;g++)(b=m(d,o,g,l[g],s))&&(e&&null!==b.alternate&&d.delete(null===b.key?g:b.key),i=a(b,i,g),null===u?c=b:u.sibling=b,u=b);return e&&d.forEach(function(e){return t(o,e)}),c}function b(o,l,s,c){var u=it(s);"function"!=typeof u&&i("150"),null==(s=u.call(s))&&i("151");for(var d=u=null,g=l,b=l=0,h=null,v=s.next();null!==g&&!v.done;b++,v=s.next()){g.index>b?(h=g,g=null):h=g.sibling;var x=f(o,g,v.value,c);if(null===x){g||(g=h);break}e&&g&&null===x.alternate&&t(o,g),l=a(x,l,b),null===d?u=x:d.sibling=x,d=x,g=h}if(v.done)return n(o,g),u;if(null===g){for(;!v.done;b++,v=s.next())null!==(v=p(o,v.value,c))&&(l=a(v,l,b),null===d?u=v:d.sibling=v,d=v);return u}for(g=r(o,g);!v.done;b++,v=s.next())null!==(v=m(g,o,b,v.value,c))&&(e&&null!==v.alternate&&g.delete(null===v.key?b:v.key),l=a(v,l,b),null===d?u=v:d.sibling=v,d=v);return e&&g.forEach(function(e){return t(o,e)}),u}return function(e,r,a,s){var c="object"==typeof a&&null!==a&&a.type===Xe&&null===a.key;c&&(a=a.props.children);var u="object"==typeof a&&null!==a;if(u)switch(a.$$typeof){case Ke:e:{for(u=a.key,c=r;null!==c;){if(c.key===u){if(7===c.tag?a.type===Xe:c.elementType===a.type){n(e,c.sibling),(r=o(c,a.type===Xe?a.props.children:a.props)).ref=fo(e,c,a),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}a.type===Xe?((r=Xr(a.props.children,e.mode,s,a.key)).return=e,e=r):((s=Yr(a.type,a.key,a.props,null,e.mode,s)).ref=fo(e,r,a),s.return=e,e=s)}return l(e);case Ye:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Jr(a,e.mode,s)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Qr(a,e.mode,s)).return=e,e=r),l(e);if(po(a))return g(e,r,a,s);if(it(a))return b(e,r,a,s);if(u&&mo(e,a),void 0===a&&!c)switch(e.tag){case 1:case 0:i("152",(s=e.type).displayName||s.name||"Component")}return n(e,r)}}var bo=go(!0),ho=go(!1),vo={},xo={current:vo},yo={current:vo},wo={current:vo};function ko(e){return e===vo&&i("174"),e}function Eo(e,t){Ar(wo,t),Ar(yo,e),Ar(xo,vo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Tr(xo),Ar(xo,t)}function Co(e){Tr(xo),Tr(yo),Tr(wo)}function So(e){ko(wo.current);var t=ko(xo.current),n=tr(t,e.type);t!==n&&(Ar(yo,e),Ar(xo,n))}function Oo(e){yo.current===e&&(Tr(xo),Tr(yo))}var To=0,Ao=2,Po=4,_o=8,jo=16,No=32,Io=64,Ro=128,Fo=We.ReactCurrentDispatcher,Mo=0,Do=null,zo=null,Lo=null,Uo=null,Bo=null,Vo=null,Ho=0,Wo=null,$o=0,qo=!1,Ko=null,Yo=0;function Xo(){i("321")}function Go(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Jt(e[n],t[n]))return!1;return!0}function Qo(e,t,n,r,o,a){if(Mo=a,Do=t,Lo=null!==e?e.memoizedState:null,Fo.current=null===Lo?ua:da,t=n(r,o),qo){do{qo=!1,Yo+=1,Lo=null!==e?e.memoizedState:null,Vo=Uo,Wo=Bo=zo=null,Fo.current=da,t=n(r,o)}while(qo);Ko=null,Yo=0}return Fo.current=ca,(e=Do).memoizedState=Uo,e.expirationTime=Ho,e.updateQueue=Wo,e.effectTag|=$o,e=null!==zo&&null!==zo.next,Mo=0,Vo=Bo=Uo=Lo=zo=Do=null,Ho=0,Wo=null,$o=0,e&&i("300"),t}function Jo(){Fo.current=ca,Mo=0,Vo=Bo=Uo=Lo=zo=Do=null,Ho=0,Wo=null,$o=0,qo=!1,Ko=null,Yo=0}function Zo(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Bo?Uo=Bo=e:Bo=Bo.next=e,Bo}function ea(){if(null!==Vo)Vo=(Bo=Vo).next,Lo=null!==(zo=Lo)?zo.next:null;else{null===Lo&&i("310");var e={memoizedState:(zo=Lo).memoizedState,baseState:zo.baseState,queue:zo.queue,baseUpdate:zo.baseUpdate,next:null};Bo=null===Bo?Uo=e:Bo.next=e,Lo=zo.next}return Bo}function ta(e,t){return"function"==typeof t?t(e):t}function na(e){var t=ea(),n=t.queue;if(null===n&&i("311"),n.lastRenderedReducer=e,0<Yo){var r=n.dispatch;if(null!==Ko){var o=Ko.get(n);if(void 0!==o){Ko.delete(n);var a=t.memoizedState;do{a=e(a,o.action),o=o.next}while(null!==o);return Jt(a,t.memoizedState)||(ka=!0),t.memoizedState=a,t.baseUpdate===n.last&&(t.baseState=a),n.lastRenderedState=a,[a,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(a=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var s=o=null,c=r,u=!1;do{var d=c.expirationTime;d<Mo?(u||(u=!0,s=l,o=a),d>Ho&&(Ho=d)):a=c.eagerReducer===e?c.eagerState:e(a,c.action),l=c,c=c.next}while(null!==c&&c!==r);u||(s=l,o=a),Jt(a,t.memoizedState)||(ka=!0),t.memoizedState=a,t.baseUpdate=s,t.baseState=o,n.lastRenderedState=a}return[t.memoizedState,n.dispatch]}function ra(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Wo?(Wo={lastEffect:null}).lastEffect=e.next=e:null===(t=Wo.lastEffect)?Wo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Wo.lastEffect=e),e}function oa(e,t,n,r){var o=Zo();$o|=e,o.memoizedState=ra(t,n,void 0,void 0===r?null:r)}function aa(e,t,n,r){var o=ea();r=void 0===r?null:r;var a=void 0;if(null!==zo){var i=zo.memoizedState;if(a=i.destroy,null!==r&&Go(r,i.deps))return void ra(To,n,a,r)}$o|=e,o.memoizedState=ra(t,n,a,r)}function ia(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function la(){}function sa(e,t,n){25>Yo||i("301");var r=e.alternate;if(e===Do||null!==r&&r===Do)if(qo=!0,e={expirationTime:Mo,action:n,eagerReducer:null,eagerState:null,next:null},null===Ko&&(Ko=new Map),void 0===(n=Ko.get(t)))Ko.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Hi();var o=kl(),a={expirationTime:o=Xi(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)a.next=a;else{var s=l.next;null!==s&&(a.next=s),l.next=a}if(t.last=a,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,u=r(c,n);if(a.eagerReducer=r,a.eagerState=u,Jt(u,c))return}catch(e){}Ji(e,o)}}var ca={readContext:Va,useCallback:Xo,useContext:Xo,useEffect:Xo,useImperativeHandle:Xo,useLayoutEffect:Xo,useMemo:Xo,useReducer:Xo,useRef:Xo,useState:Xo,useDebugValue:Xo},ua={readContext:Va,useCallback:function(e,t){return Zo().memoizedState=[e,void 0===t?null:t],e},useContext:Va,useEffect:function(e,t){return oa(516,Ro|Io,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,Po|No,ia.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oa(4,Po|No,e,t)},useMemo:function(e,t){var n=Zo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Zo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=sa.bind(null,Do,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Zo().memoizedState=e},useState:function(e){var t=Zo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ta,lastRenderedState:e}).dispatch=sa.bind(null,Do,e),[t.memoizedState,e]},useDebugValue:la},da={readContext:Va,useCallback:function(e,t){var n=ea();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Go(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Va,useEffect:function(e,t){return aa(516,Ro|Io,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,aa(4,Po|No,ia.bind(null,t,e),n)},useLayoutEffect:function(e,t){return aa(4,Po|No,e,t)},useMemo:function(e,t){var n=ea();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Go(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:na,useRef:function(){return ea().memoizedState},useState:function(e){return na(ta)},useDebugValue:la},pa=null,fa=null,ma=!1;function ga(e,t){var n=$r(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ba(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function ha(e){if(ma){var t=fa;if(t){var n=t;if(!ba(e,t)){if(!(t=Er(n))||!ba(e,t))return e.effectTag|=2,ma=!1,void(pa=e);ga(pa,n)}pa=e,fa=Cr(t)}else e.effectTag|=2,ma=!1,pa=e}}function va(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;pa=e}function xa(e){if(e!==pa)return!1;if(!ma)return va(e),ma=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!vr(t,e.memoizedProps))for(t=fa;t;)ga(e,t),t=Er(t);return va(e),fa=pa?Er(e.stateNode):null,!0}function ya(){fa=pa=null,ma=!1}var wa=We.ReactCurrentOwner,ka=!1;function Ea(e,t,n,r){t.child=null===e?ho(t,null,n,r):bo(t,e.child,n,r)}function Ca(e,t,n,r,o){n=n.render;var a=t.ref;return Ba(t,o),r=Qo(e,t,n,r,a,o),null===e||ka?(t.effectTag|=1,Ea(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ia(e,t,o))}function Sa(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||qr(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Yr(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Oa(e,t,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Ia(e,t,a):(t.effectTag|=1,(e=Kr(i,r)).ref=t.ref,e.return=t,t.child=e)}function Oa(e,t,n,r,o,a){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(ka=!1,o<a)?Ia(e,t,a):Aa(e,t,n,r,a)}function Ta(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Aa(e,t,n,r,o){var a=Rr(n)?Nr:_r.current;return a=Ir(t,a),Ba(t,o),n=Qo(e,t,n,r,a,o),null===e||ka?(t.effectTag|=1,Ea(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ia(e,t,o))}function Pa(e,t,n,r,o){if(Rr(n)){var a=!0;Lr(t)}else a=!1;if(Ba(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),so(t,n,r),uo(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var s=i.context,c=n.contextType;"object"==typeof c&&null!==c?c=Va(c):c=Ir(t,c=Rr(n)?Nr:_r.current);var u=n.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||s!==c)&&co(t,i,r,c),Ka=!1;var p=t.memoizedState;s=i.state=p;var f=t.updateQueue;null!==f&&(ni(t,f,r,i,o),s=t.memoizedState),l!==r||p!==s||jr.current||Ka?("function"==typeof u&&(ao(t,n,u,r),s=t.memoizedState),(l=Ka||lo(t,n,l,r,p,s,c))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=s),i.props=r,i.state=s,i.context=c,r=l):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,l=t.memoizedProps,i.props=t.type===t.elementType?l:ro(t.type,l),s=i.context,"object"==typeof(c=n.contextType)&&null!==c?c=Va(c):c=Ir(t,c=Rr(n)?Nr:_r.current),(d="function"==typeof(u=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||s!==c)&&co(t,i,r,c),Ka=!1,s=t.memoizedState,p=i.state=s,null!==(f=t.updateQueue)&&(ni(t,f,r,i,o),p=t.memoizedState),l!==r||s!==p||jr.current||Ka?("function"==typeof u&&(ao(t,n,u,r),p=t.memoizedState),(u=Ka||lo(t,n,l,r,s,p,c))?(d||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,p,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),i.props=r,i.state=p,i.context=c,r=u):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),r=!1);return _a(e,t,n,r,a,o)}function _a(e,t,n,r,o,a){Ta(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&Ur(t,n,!1),Ia(e,t,a);r=t.stateNode,wa.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=bo(t,e.child,null,a),t.child=bo(t,null,l,a)):Ea(e,t,l,a),t.memoizedState=r.state,o&&Ur(t,n,!0),t.child}function ja(e){var t=e.stateNode;t.pendingContext?Dr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Dr(0,t.context,!1),Eo(e,t.containerInfo)}function Na(e,t,n){var r=t.mode,o=t.pendingProps,a=t.memoizedState;if(0==(64&t.effectTag)){a=null;var i=!1}else a={timedOutAt:null!==a?a.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var l=o.fallback;e=Xr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Xr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=ho(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,i?(n=o.fallback,o=Kr(r,r.pendingProps),0==(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=i)),r=o.sibling=Kr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=bo(t,r.child,o.children,n)):(l=e.child,i?(i=o.fallback,(o=Xr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Xr(i,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=bo(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=a,t.child=n,r}function Ia(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&i("153"),null!==t.child){for(n=Kr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Kr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ra(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||jr.current)ka=!0;else if(r<n){switch(ka=!1,t.tag){case 3:ja(t),ya();break;case 5:So(t);break;case 1:Rr(t.type)&&Lr(t);break;case 4:Eo(t,t.stateNode.containerInfo);break;case 10:La(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Na(e,t,n):null!==(t=Ia(e,t,n))?t.sibling:null}return Ia(e,t,n)}}else ka=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Ir(t,_r.current);if(Ba(t,n),o=Qo(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Jo(),Rr(r)){var a=!0;Lr(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&ao(t,r,l,e),o.updater=io,t.stateNode=o,o._reactInternalFiber=t,uo(t,r,e,n),t=_a(null,t,r,!0,a,n)}else t.tag=0,Ea(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),a=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return qr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),a=ro(e,a),l=void 0,o){case 0:l=Aa(null,t,e,a,n);break;case 1:l=Pa(null,t,e,a,n);break;case 11:l=Ca(null,t,e,a,n);break;case 14:l=Sa(null,t,e,ro(e.type,a),r,n);break;default:i("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,Aa(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 1:return r=t.type,o=t.pendingProps,Pa(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 3:return ja(t),null===(r=t.updateQueue)&&i("282"),o=null!==(o=t.memoizedState)?o.element:null,ni(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(ya(),t=Ia(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(fa=Cr(t.stateNode.containerInfo),pa=t,o=ma=!0),o?(t.effectTag|=2,t.child=ho(t,null,r,n)):(Ea(e,t,r,n),ya()),t=t.child),t;case 5:return So(t),null===e&&ha(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,vr(r,o)?l=null:null!==a&&vr(r,a)&&(t.effectTag|=16),Ta(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ea(e,t,l,n),t=t.child),t;case 6:return null===e&&ha(t),null;case 13:return Na(e,t,n);case 4:return Eo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=bo(t,null,r,n):Ea(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ca(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 7:return Ea(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ea(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,La(t,a=o.value),null!==l){var s=l.value;if(0===(a=Jt(s,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,a):1073741823))){if(l.children===o.children&&!jr.current){t=Ia(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var c=s.contextDependencies;if(null!==c){l=s.child;for(var u=c.first;null!==u;){if(u.context===r&&0!=(u.observedBits&a)){1===s.tag&&((u=Ga(n)).tag=$a,Ja(s,u)),s.expirationTime<n&&(s.expirationTime=n),null!==(u=s.alternate)&&u.expirationTime<n&&(u.expirationTime=n),u=n;for(var d=s.return;null!==d;){var p=d.alternate;if(d.childExpirationTime<u)d.childExpirationTime=u,null!==p&&p.childExpirationTime<u&&(p.childExpirationTime=u);else{if(!(null!==p&&p.childExpirationTime<u))break;p.childExpirationTime=u}d=d.return}c.expirationTime<n&&(c.expirationTime=n);break}u=u.next}}else l=10===s.tag&&s.type===t.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===t){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}}Ea(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,Ba(t,n),r=r(o=Va(o,a.unstable_observedBits)),t.effectTag|=1,Ea(e,t,r,n),t.child;case 14:return a=ro(o=t.type,t.pendingProps),Sa(e,t,o,a=ro(o.type,a),r,n);case 15:return Oa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ro(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Rr(r)?(e=!0,Lr(t)):e=!1,Ba(t,n),so(t,r,o),uo(t,r,o,n),_a(null,t,r,!0,e,n)}i("156")}var Fa={current:null},Ma=null,Da=null,za=null;function La(e,t){var n=e.type._context;Ar(Fa,n._currentValue),n._currentValue=t}function Ua(e){var t=Fa.current;Tr(Fa),e.type._context._currentValue=t}function Ba(e,t){Ma=e,za=Da=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(ka=!0),e.contextDependencies=null}function Va(e,t){return za!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(za=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Da?(null===Ma&&i("308"),Da=t,Ma.contextDependencies={first:t,expirationTime:0}):Da=Da.next=t),e._currentValue}var Ha=0,Wa=1,$a=2,qa=3,Ka=!1;function Ya(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Xa(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ga(e){return{expirationTime:e,tag:Ha,payload:null,callback:null,next:null,nextEffect:null}}function Qa(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Ja(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Ya(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Ya(e.memoizedState),o=n.updateQueue=Ya(n.memoizedState)):r=e.updateQueue=Xa(o):null===o&&(o=n.updateQueue=Xa(r));null===o||r===o?Qa(r,t):null===r.lastUpdate||null===o.lastUpdate?(Qa(r,t),Qa(o,t)):(Qa(r,t),o.lastUpdate=t)}function Za(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Ya(e.memoizedState):ei(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ei(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Xa(t)),t}function ti(e,t,n,r,a,i){switch(n.tag){case Wa:return"function"==typeof(e=n.payload)?e.call(i,r,a):e;case qa:e.effectTag=-2049&e.effectTag|64;case Ha:if(null==(a="function"==typeof(e=n.payload)?e.call(i,r,a):e))break;return o({},r,a);case $a:Ka=!0}return r}function ni(e,t,n,r,o){Ka=!1;for(var a=(t=ei(e,t)).baseState,i=null,l=0,s=t.firstUpdate,c=a;null!==s;){var u=s.expirationTime;u<o?(null===i&&(i=s,a=c),l<u&&(l=u)):(c=ti(e,0,s,c,n,r),null!==s.callback&&(e.effectTag|=32,s.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=s:(t.lastEffect.nextEffect=s,t.lastEffect=s))),s=s.next}for(u=null,s=t.firstCapturedUpdate;null!==s;){var d=s.expirationTime;d<o?(null===u&&(u=s,null===i&&(a=c)),l<d&&(l=d)):(c=ti(e,0,s,c,n,r),null!==s.callback&&(e.effectTag|=32,s.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=s:(t.lastCapturedEffect.nextEffect=s,t.lastCapturedEffect=s))),s=s.next}null===i&&(t.lastUpdate=null),null===u?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===u&&(a=c),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=u,e.expirationTime=l,e.memoizedState=c}function ri(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),oi(t.firstEffect,n),t.firstEffect=t.lastEffect=null,oi(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function oi(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&i("191",n),n.call(r)}e=e.nextEffect}}function ai(e,t){return{value:e,source:t,stack:st(t)}}function ii(e){e.effectTag|=4}var li=void 0,si=void 0,ci=void 0,ui=void 0;li=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},si=function(){},ci=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var l=t.stateNode;switch(ko(xo.current),e=null,n){case"input":i=xt(l,i),r=xt(l,r),e=[];break;case"option":i=Kn(l,i),r=Kn(l,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Xn(l,i),r=Xn(l,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(l.onclick=mr)}dr(n,r),l=n=void 0;var s=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if("style"===n){var c=i[n];for(l in c)c.hasOwnProperty(l)&&(s||(s={}),s[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(x.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var u=r[n];if(c=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&u!==c&&(null!=u||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||u&&u.hasOwnProperty(l)||(s||(s={}),s[l]="");for(l in u)u.hasOwnProperty(l)&&c[l]!==u[l]&&(s||(s={}),s[l]=u[l])}else s||(e||(e=[]),e.push(n,s)),s=u;else"dangerouslySetInnerHTML"===n?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(e=e||[]).push(n,""+u)):"children"===n?c===u||"string"!=typeof u&&"number"!=typeof u||(e=e||[]).push(n,""+u):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(x.hasOwnProperty(n)?(null!=u&&fr(a,n),e||c===u||(e=[])):(e=e||[]).push(n,u))}s&&(e=e||[]).push("style",s),a=e,(t.updateQueue=a)&&ii(t)}},ui=function(e,t,n,r){n!==r&&ii(t)};var di="function"==typeof WeakSet?WeakSet:Set;function pi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=st(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function fi(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Yi(e,t)}else t.current=null}function mi(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==To){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==To&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function gi(e){switch("function"==typeof Vr&&Vr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){Yi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(fi(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Yi(e,t)}break;case 5:fi(e);break;case 4:vi(e)}}function bi(e){return 5===e.tag||3===e.tag||4===e.tag}function hi(e){e:{for(var t=e.return;null!==t;){if(bi(t)){var n=t;break e}t=t.return}i("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:i("161")}16&n.effectTag&&(ar(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||bi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,l=o.stateNode,s=n;8===a.nodeType?a.parentNode.insertBefore(l,s):a.insertBefore(l,s)}else t.insertBefore(o.stateNode,n);else r?(l=t,s=o.stateNode,8===l.nodeType?(a=l.parentNode).insertBefore(s,l):(a=l).appendChild(s),null!=(l=l._reactRootContainer)||null!==a.onclick||(a.onclick=mr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function vi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&i("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,l=a;;)if(gi(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===a)break;for(;null===l.sibling;){if(null===l.return||l.return===a)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(a=r,l=t.stateNode,8===a.nodeType?a.parentNode.removeChild(l):a.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(gi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function xi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:mi(Po,_o,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&function(e,t,n,r,o){e[R]=o,"input"===n&&"radio"===o.type&&null!=o.name&&wt(e,o),pr(n,r),r=pr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?cr(e,l):"dangerouslySetInnerHTML"===i?or(e,l):"children"===i?ar(e,l):ht(e,i,l,r)}switch(n){case"input":kt(e,o);break;case"textarea":Qn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Yn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Yn(e,!!o.multiple,o.defaultValue,!0):Yn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,a,o,e,r)}break;case 6:null===t.stateNode&&i("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=kl())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=sr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new di),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Xi(t=kl(),e),null!==(e=Qi(e,t))&&(Zr(e,t),0!==(t=e.expirationTime)&&El(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:i("163")}}var yi="function"==typeof WeakMap?WeakMap:Map;function wi(e,t,n){(n=Ga(n)).tag=qa,n.payload={element:null};var r=t.value;return n.callback=function(){Nl(r),pi(e,t)},n}function ki(e,t,n){(n=Ga(n)).tag=qa;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===zi?zi=new Set([this]):zi.add(this));var n=t.value,o=t.stack;pi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Ei(e){switch(e.tag){case 1:Rr(e.type)&&Fr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Co(),Mr(),0!=(64&(t=e.effectTag))&&i("285"),e.effectTag=-2049&t|64,e;case 5:return Oo(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return Co(),null;case 10:return Ua(e),null;default:return null}}var Ci=We.ReactCurrentDispatcher,Si=We.ReactCurrentOwner,Oi=1073741822,Ti=!1,Ai=null,Pi=null,_i=0,ji=-1,Ni=!1,Ii=null,Ri=!1,Fi=null,Mi=null,Di=null,zi=null;function Li(){if(null!==Ai)for(var e=Ai.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Fr();break;case 3:Co(),Mr();break;case 5:Oo(t);break;case 4:Co();break;case 10:Ua(t)}e=e.return}Pi=null,_i=0,ji=-1,Ni=!1,Ai=null}function Ui(){for(;null!==Ii;){var e=Ii.effectTag;if(16&e&&ar(Ii.stateNode,""),128&e){var t=Ii.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:hi(Ii),Ii.effectTag&=-3;break;case 6:hi(Ii),Ii.effectTag&=-3,xi(Ii.alternate,Ii);break;case 4:xi(Ii.alternate,Ii);break;case 8:vi(e=Ii),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Ii=Ii.nextEffect}}function Bi(){for(;null!==Ii;){if(256&Ii.effectTag)e:{var e=Ii.alternate,t=Ii;switch(t.tag){case 0:case 11:case 15:mi(Ao,To,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ro(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:i("163")}}Ii=Ii.nextEffect}}function Vi(e,t){for(;null!==Ii;){var n=Ii.effectTag;if(36&n){var r=Ii.alternate,o=Ii,a=t;switch(o.tag){case 0:case 11:case 15:mi(jo,No,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var s=o.elementType===o.type?r.memoizedProps:ro(o.type,r.memoizedProps);l.componentDidUpdate(s,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ri(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ri(0,r,l)}break;case 5:a=o.stateNode,null===r&&4&o.effectTag&&hr(o.type,o.memoizedProps)&&a.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:i("163")}}128&n&&(null!==(o=Ii.ref)&&(a=Ii.stateNode,"function"==typeof o?o(a):o.current=a)),512&n&&(Fi=e),Ii=Ii.nextEffect}}function Hi(){null!==Mi&&kr(Mi),null!==Di&&Di()}function Wi(e,t){Ri=Ti=!0,e.current===t&&i("177");var n=e.pendingCommitExpirationTime;0===n&&i("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Zr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Zr(e,t)):t>n&&Zr(e,t)}no(0,e)}(e,o>r?o:r),Si.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,gr=Cn,br=function(){var e=Mn();if(Dn(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var a=0,i=-1,l=-1,s=0,c=0,u=e,d=null;t:for(;;){for(var p;u!==t||0!==r&&3!==u.nodeType||(i=a+r),u!==o||0!==n&&3!==u.nodeType||(l=a+n),3===u.nodeType&&(a+=u.nodeValue.length),null!==(p=u.firstChild);)d=u,u=p;for(;;){if(u===e)break t;if(d===t&&++s===r&&(i=a),d===o&&++c===n&&(l=a),null!==(p=u.nextSibling))break;d=(u=d).parentNode}u=p}t=-1===i||-1===l?null:{start:i,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),Cn=!1,Ii=r;null!==Ii;){o=!1;var l=void 0;try{Bi()}catch(e){o=!0,l=e}o&&(null===Ii&&i("178"),Yi(Ii,l),null!==Ii&&(Ii=Ii.nextEffect))}for(Ii=r;null!==Ii;){o=!1,l=void 0;try{Ui()}catch(e){o=!0,l=e}o&&(null===Ii&&i("178"),Yi(Ii,l),null!==Ii&&(Ii=Ii.nextEffect))}for(zn(br),br=null,Cn=!!gr,gr=null,e.current=t,Ii=r;null!==Ii;){o=!1,l=void 0;try{Vi(e,n)}catch(e){o=!0,l=e}o&&(null===Ii&&i("178"),Yi(Ii,l),null!==Ii&&(Ii=Ii.nextEffect))}if(null!==r&&null!==Fi){var s=function(e,t){Di=Mi=Fi=null;var n=ol;ol=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var a=t;mi(Ro,To,a),mi(To,Io,a)}catch(e){r=!0,o=e}r&&Yi(t,o)}t=t.nextEffect}while(null!==t);ol=n,0!==(n=e.expirationTime)&&El(e,n),ul||ol||Al(1073741823,!1)}.bind(null,e,r);Mi=a.unstable_runWithPriority(a.unstable_NormalPriority,function(){return wr(s)}),Di=s}Ti=Ri=!1,"function"==typeof Br&&Br(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(zi=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function $i(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Ai=e;e:{var a=t,l=_i,s=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Rr(t.type)&&Fr();break;case 3:Co(),Mr(),(s=t.stateNode).pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),null!==a&&null!==a.child||(xa(t),t.effectTag&=-3),si(t);break;case 5:Oo(t);var c=ko(wo.current);if(l=t.type,null!==a&&null!=t.stateNode)ci(a,t,l,s,c),a.ref!==t.ref&&(t.effectTag|=128);else if(s){var u=ko(xo.current);if(xa(t)){a=(s=t).stateNode;var d=s.type,p=s.memoizedProps,f=c;switch(a[I]=s,a[R]=p,l=void 0,c=d){case"iframe":case"object":Sn("load",a);break;case"video":case"audio":for(d=0;d<te.length;d++)Sn(te[d],a);break;case"source":Sn("error",a);break;case"img":case"image":case"link":Sn("error",a),Sn("load",a);break;case"form":Sn("reset",a),Sn("submit",a);break;case"details":Sn("toggle",a);break;case"input":yt(a,p),Sn("invalid",a),fr(f,"onChange");break;case"select":a._wrapperState={wasMultiple:!!p.multiple},Sn("invalid",a),fr(f,"onChange");break;case"textarea":Gn(a,p),Sn("invalid",a),fr(f,"onChange")}for(l in dr(c,p),d=null,p)p.hasOwnProperty(l)&&(u=p[l],"children"===l?"string"==typeof u?a.textContent!==u&&(d=["children",u]):"number"==typeof u&&a.textContent!==""+u&&(d=["children",""+u]):x.hasOwnProperty(l)&&null!=u&&fr(f,l));switch(c){case"input":Ve(a),Et(a,p,!0);break;case"textarea":Ve(a),Jn(a);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(a.onclick=mr)}l=d,s.updateQueue=l,(s=null!==l)&&ii(t)}else{p=t,f=l,a=s,d=9===c.nodeType?c:c.ownerDocument,u===Zn.html&&(u=er(f)),u===Zn.html?"script"===f?((a=d.createElement("div")).innerHTML="<script><\/script>",d=a.removeChild(a.firstChild)):"string"==typeof a.is?d=d.createElement(f,{is:a.is}):(d=d.createElement(f),"select"===f&&(f=d,a.multiple?f.multiple=!0:a.size&&(f.size=a.size))):d=d.createElementNS(u,f),(a=d)[I]=p,a[R]=s,li(a,t,!1,!1),f=a;var m=c,g=pr(d=l,p=s);switch(d){case"iframe":case"object":Sn("load",f),c=p;break;case"video":case"audio":for(c=0;c<te.length;c++)Sn(te[c],f);c=p;break;case"source":Sn("error",f),c=p;break;case"img":case"image":case"link":Sn("error",f),Sn("load",f),c=p;break;case"form":Sn("reset",f),Sn("submit",f),c=p;break;case"details":Sn("toggle",f),c=p;break;case"input":yt(f,p),c=xt(f,p),Sn("invalid",f),fr(m,"onChange");break;case"option":c=Kn(f,p);break;case"select":f._wrapperState={wasMultiple:!!p.multiple},c=o({},p,{value:void 0}),Sn("invalid",f),fr(m,"onChange");break;case"textarea":Gn(f,p),c=Xn(f,p),Sn("invalid",f),fr(m,"onChange");break;default:c=p}dr(d,c),u=void 0;var b=d,h=f,v=c;for(u in v)if(v.hasOwnProperty(u)){var y=v[u];"style"===u?cr(h,y):"dangerouslySetInnerHTML"===u?null!=(y=y?y.__html:void 0)&&or(h,y):"children"===u?"string"==typeof y?("textarea"!==b||""!==y)&&ar(h,y):"number"==typeof y&&ar(h,""+y):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(x.hasOwnProperty(u)?null!=y&&fr(m,u):null!=y&&ht(h,u,y,g))}switch(d){case"input":Ve(f),Et(f,p,!1);break;case"textarea":Ve(f),Jn(f);break;case"option":null!=p.value&&f.setAttribute("value",""+vt(p.value));break;case"select":(c=f).multiple=!!p.multiple,null!=(f=p.value)?Yn(c,!!p.multiple,f,!1):null!=p.defaultValue&&Yn(c,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof c.onClick&&(f.onclick=mr)}(s=hr(l,s))&&ii(t),t.stateNode=a}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&i("166");break;case 6:a&&null!=t.stateNode?ui(a,t,a.memoizedProps,s):("string"!=typeof s&&(null===t.stateNode&&i("166")),a=ko(wo.current),ko(xo.current),xa(t)?(l=(s=t).stateNode,a=s.memoizedProps,l[I]=s,(s=l.nodeValue!==a)&&ii(t)):(l=t,(s=(9===a.nodeType?a:a.ownerDocument).createTextNode(s))[I]=t,l.stateNode=s));break;case 11:break;case 13:if(s=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Ai=t;break e}s=null!==s,l=null!==a&&null!==a.memoizedState,null!==a&&!s&&l&&(null!==(a=a.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=a,a.nextEffect=c):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),(s||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Co(),si(t);break;case 10:Ua(t);break;case 9:case 14:break;case 17:Rr(t.type)&&Fr();break;case 18:break;default:i("156")}Ai=null}if(t=e,1===_i||1!==t.childExpirationTime){for(s=0,l=t.child;null!==l;)(a=l.expirationTime)>s&&(s=a),(c=l.childExpirationTime)>s&&(s=c),l=l.sibling;t.childExpirationTime=s}if(null!==Ai)return Ai;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Ei(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function qi(e){var t=Ra(e.alternate,e,_i);return e.memoizedProps=e.pendingProps,null===t&&(t=$i(e)),Si.current=null,t}function Ki(e,t){Ti&&i("243"),Hi(),Ti=!0;var n=Ci.current;Ci.current=ca;var r=e.nextExpirationTimeToWorkOn;r===_i&&e===Pi&&null!==Ai||(Li(),_i=r,Ai=Kr((Pi=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Ai&&!Ol();)Ai=qi(Ai);else for(;null!==Ai;)Ai=qi(Ai)}catch(t){if(za=Da=Ma=null,Jo(),null===Ai)o=!0,Nl(t);else{null===Ai&&i("271");var a=Ai,l=a.return;if(null!==l){e:{var s=e,c=l,u=a,d=t;if(l=_i,u.effectTag|=1024,u.firstEffect=u.lastEffect=null,null!==d&&"object"==typeof d&&"function"==typeof d.then){var p=d;d=c;var f=-1,m=-1;do{if(13===d.tag){var g=d.alternate;if(null!==g&&null!==(g=g.memoizedState)){m=10*(1073741822-g.timedOutAt);break}"number"==typeof(g=d.pendingProps.maxDuration)&&(0>=g?f=0:(-1===f||g<f)&&(f=g))}d=d.return}while(null!==d);d=c;do{if((g=13===d.tag)&&(g=void 0!==d.memoizedProps.fallback&&null===d.memoizedState),g){if(null===(c=d.updateQueue)?((c=new Set).add(p),d.updateQueue=c):c.add(p),0==(1&d.mode)){d.effectTag|=64,u.effectTag&=-1957,1===u.tag&&(null===u.alternate?u.tag=17:((l=Ga(1073741823)).tag=$a,Ja(u,l))),u.expirationTime=1073741823;break e}c=l;var b=(u=s).pingCache;null===b?(b=u.pingCache=new yi,g=new Set,b.set(p,g)):void 0===(g=b.get(p))&&(g=new Set,b.set(p,g)),g.has(c)||(g.add(c),u=Gi.bind(null,u,p,c),p.then(u,u)),-1===f?s=1073741823:(-1===m&&(m=10*(1073741822-to(s,l))-5e3),s=m+f),0<=s&&ji<s&&(ji=s),d.effectTag|=2048,d.expirationTime=l;break e}d=d.return}while(null!==d);d=Error((lt(u.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+st(u))}Ni=!0,d=ai(d,u),s=c;do{switch(s.tag){case 3:s.effectTag|=2048,s.expirationTime=l,Za(s,l=wi(s,d,l));break e;case 1:if(f=d,m=s.type,u=s.stateNode,0==(64&s.effectTag)&&("function"==typeof m.getDerivedStateFromError||null!==u&&"function"==typeof u.componentDidCatch&&(null===zi||!zi.has(u)))){s.effectTag|=2048,s.expirationTime=l,Za(s,l=ki(s,f,l));break e}}s=s.return}while(null!==s)}Ai=$i(a);continue}o=!0,Nl(t)}}break}if(Ti=!1,Ci.current=n,za=Da=Ma=null,Jo(),o)Pi=null,e.finishedWork=null;else if(null!==Ai)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&i("281"),Pi=null,Ni){if(o=e.latestPendingTime,a=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==a&&a<r||0!==l&&l<r)return eo(e,r),void wl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void wl(e,n,r,t,-1)}t&&-1!==ji?(eo(e,r),(t=10*(1073741822-to(e,r)))<ji&&(ji=t),t=10*(1073741822-kl()),t=ji-t,wl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Yi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===zi||!zi.has(r)))return Ja(n,e=ki(n,e=ai(t,e),1073741823)),void Ji(n,1073741823);break;case 3:return Ja(n,e=wi(n,e=ai(t,e),1073741823)),void Ji(n,1073741823)}n=n.return}3===e.tag&&(Ja(e,n=wi(e,n=ai(t,e),1073741823)),Ji(e,1073741823))}function Xi(e,t){var n=a.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Ti&&!Ri)r=_i;else{switch(n){case a.unstable_ImmediatePriority:r=1073741823;break;case a.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case a.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case a.unstable_LowPriority:case a.unstable_IdlePriority:r=1;break;default:i("313")}null!==Pi&&r===_i&&--r}return n===a.unstable_UserBlockingPriority&&(0===ll||r<ll)&&(ll=r),r}function Gi(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Pi&&_i===n?Pi=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),no(n,e),0!==(n=e.expirationTime)&&El(e,n)))}function Qi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Ji(e,t){null!==(e=Qi(e,t))&&(!Ti&&0!==_i&&t>_i&&Li(),Zr(e,t),Ti&&!Ri&&Pi===e||El(e,e.expirationTime),hl>bl&&(hl=0,i("185")))}function Zi(e,t,n,r,o){return a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var el=null,tl=null,nl=0,rl=void 0,ol=!1,al=null,il=0,ll=0,sl=!1,cl=null,ul=!1,dl=!1,pl=null,fl=a.unstable_now(),ml=1073741822-(fl/10|0),gl=ml,bl=50,hl=0,vl=null;function xl(){ml=1073741822-((a.unstable_now()-fl)/10|0)}function yl(e,t){if(0!==nl){if(t<nl)return;null!==rl&&a.unstable_cancelCallback(rl)}nl=t,e=a.unstable_now()-fl,rl=a.unstable_scheduleCallback(Tl,{timeout:10*(1073741822-t)-e})}function wl(e,t,n,r,o){e.expirationTime=r,0!==o||Ol()?0<o&&(e.timeoutHandle=xr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,xl(),gl=ml,Pl(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function kl(){return ol?gl:(Cl(),0!==il&&1!==il||(xl(),gl=ml),gl)}function El(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===tl?(el=tl=e,e.nextScheduledRoot=e):(tl=tl.nextScheduledRoot=e).nextScheduledRoot=el):t>e.expirationTime&&(e.expirationTime=t),ol||(ul?dl&&(al=e,il=1073741823,_l(e,1073741823,!1)):1073741823===t?Al(1073741823,!1):yl(e,t))}function Cl(){var e=0,t=null;if(null!==tl)for(var n=tl,r=el;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===tl)&&i("244"),r===r.nextScheduledRoot){el=tl=r.nextScheduledRoot=null;break}if(r===el)el=o=r.nextScheduledRoot,tl.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===tl){(tl=n).nextScheduledRoot=el,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===tl)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}al=t,il=e}var Sl=!1;function Ol(){return!!Sl||!!a.unstable_shouldYield()&&(Sl=!0)}function Tl(){try{if(!Ol()&&null!==el){xl();var e=el;do{var t=e.expirationTime;0!==t&&ml<=t&&(e.nextExpirationTimeToWorkOn=ml),e=e.nextScheduledRoot}while(e!==el)}Al(0,!0)}finally{Sl=!1}}function Al(e,t){if(Cl(),t)for(xl(),gl=ml;null!==al&&0!==il&&e<=il&&!(Sl&&ml>il);)_l(al,il,ml>il),Cl(),xl(),gl=ml;else for(;null!==al&&0!==il&&e<=il;)_l(al,il,!1),Cl();if(t&&(nl=0,rl=null),0!==il&&yl(al,il),hl=0,vl=null,null!==pl)for(e=pl,pl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){sl||(sl=!0,cl=e)}}if(sl)throw e=cl,cl=null,sl=!1,e}function Pl(e,t){ol&&i("253"),al=e,il=t,_l(e,t,!1),Al(1073741823,!1)}function _l(e,t,n){if(ol&&i("245"),ol=!0,n){var r=e.finishedWork;null!==r?jl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,yr(r)),Ki(e,n),null!==(r=e.finishedWork)&&(Ol()?e.finishedWork=r:jl(e,r,t)))}else null!==(r=e.finishedWork)?jl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,yr(r)),Ki(e,n),null!==(r=e.finishedWork)&&jl(e,r,t));ol=!1}function jl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===pl?pl=[r]:pl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===vl?hl++:(vl=e,hl=0),a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){Wi(e,t)})}function Nl(e){null===al&&i("246"),al.expirationTime=0,sl||(sl=!0,cl=e)}function Il(e,t){var n=ul;ul=!0;try{return e(t)}finally{(ul=n)||ol||Al(1073741823,!1)}}function Rl(e,t){if(ul&&!dl){dl=!0;try{return e(t)}finally{dl=!1}}return e(t)}function Fl(e,t,n){ul||ol||0===ll||(Al(ll,!1),ll=0);var r=ul;ul=!0;try{return a.unstable_runWithPriority(a.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(ul=r)||ol||Al(1073741823,!1)}}function Ml(e,t,n,r,o){var a=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||i("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Rr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);i("171"),l=void 0}if(1===n.tag){var s=n.type;if(Rr(s)){n=zr(n,s,l);break e}}n=l}else n=Pr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Ga(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Hi(),Ja(a,o),Ji(a,r),r}function Dl(e,t,n,r){var o=t.current;return Ml(e,t,n,o=Xi(kl(),o),r)}function zl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ll(e){var t=1073741822-25*(1+((1073741822-kl()+500)/25|0));t>=Oi&&(t=Oi-1),this._expirationTime=Oi=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Ul(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Bl(e,t,n){e={current:t=$r(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Vl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Hl(e,t,n,r,o){var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=zl(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Bl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=zl(a._internalRoot);l.call(e)}}Rl(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return zl(a._internalRoot)}function Wl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Vl(t)||i("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ye,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Oe=function(e,t,n){switch(t){case"input":if(kt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=z(r);o||i("90"),He(r),kt(r,o)}}}break;case"textarea":Qn(e,n);break;case"select":null!=(t=n.value)&&Yn(e,!!n.multiple,t,!1)}},Ll.prototype.render=function(e){this._defer||i("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Ul;return Ml(e,t,null,n,r._onCommit),r},Ll.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ll.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||i("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&i("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Pl(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Ll.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Ul.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ul.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&i("191",n),n()}}},Bl.prototype.render=function(e,t){var n=this._internalRoot,r=new Ul;return null!==(t=void 0===t?null:t)&&r.then(t),Dl(e,n,null,r._onCommit),r},Bl.prototype.unmount=function(e){var t=this._internalRoot,n=new Ul;return null!==(e=void 0===e?null:e)&&n.then(e),Dl(null,t,null,n._onCommit),n},Bl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Ul;return null!==(n=void 0===n?null:n)&&o.then(n),Dl(t,r,e,o._onCommit),o},Bl.prototype.createBatch=function(){var e=new Ll(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ne=Il,Ie=Fl,Re=function(){ol||0===ll||(Al(ll,!1),ll=0)};var $l={createPortal:Wl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?i("188"):i("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Vl(t)||i("200"),Hl(null,e,t,!0,n)},render:function(e,t,n){return Vl(t)||i("200"),Hl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Vl(n)||i("200"),(null==e||void 0===e._reactInternalFiber)&&i("38"),Hl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Vl(e)||i("40"),!!e._reactRootContainer&&(Rl(function(){Hl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Wl.apply(void 0,arguments)},unstable_batchedUpdates:Il,unstable_interactiveUpdates:Fl,flushSync:function(e,t){ol&&i("187");var n=ul;ul=!0;try{return Zi(e,t)}finally{ul=n,Al(1073741823,!1)}},unstable_createRoot:function(e,t){return Vl(e)||i("299","unstable_createRoot"),new Bl(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=ul;ul=!0;try{Zi(e)}finally{(ul=t)||ol||Al(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[M,D,z,P.injectEventPluginsByName,v,W,function(e){O(e,H)},_e,je,An,j]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Br=Hr(function(e){return t.onCommitFiberRoot(n,e)}),Vr=Hr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:We.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:F,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var ql={default:$l},Kl=ql&&$l||ql;e.exports=Kl.default||Kl},
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=n(/*! ./cjs/scheduler.production.min.js */47)},
/*!****************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.production.min.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";(function(e){
/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,a=-1,i=-1,l=!1,s=!1;function c(){if(!l){var e=n.expirationTime;s?E():s=!0,k(p,e)}}function u(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var a=o,l=i;o=e,i=t;try{var s=r()}finally{o=a,i=l}if("function"==typeof s)if(s={callback:s,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=s.next=s.previous=s;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=s,c()),(t=r.previous).next=r.previous=s,s.next=r,s.previous=t}}function d(){if(-1===a&&null!==n&&1===n.priorityLevel){l=!0;try{do{u()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?c():s=!1}}}function p(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var a=t.unstable_now();if(!(n.expirationTime<=a))break;do{u()}while(null!==n&&n.expirationTime<=a)}else if(null!==n)do{u()}while(null!==n&&!C())}finally{l=!1,r=o,null!==n?c():s=!1,d()}}var f,m,g=Date,b="function"==typeof setTimeout?setTimeout:void 0,h="function"==typeof clearTimeout?clearTimeout:void 0,v="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,x="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function y(e){f=v(function(t){h(m),e(t)}),m=b(function(){x(f),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var w=performance;t.unstable_now=function(){return w.now()}}else t.unstable_now=function(){return g.now()};var k,E,C,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var O=S._schedMock;k=O[0],E=O[1],C=O[2],t.unstable_now=O[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var T=null,A=function(e){if(null!==T)try{T(e)}finally{T=null}};k=function(e){null!==T?setTimeout(k,0,e):(T=e,setTimeout(A,0,!1))},E=function(){T=null},C=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof v&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof x&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var P=null,_=!1,j=-1,N=!1,I=!1,R=0,F=33,M=33;C=function(){return R<=t.unstable_now()};var D=new MessageChannel,z=D.port2;D.port1.onmessage=function(){_=!1;var e=P,n=j;P=null,j=-1;var r=t.unstable_now(),o=!1;if(0>=R-r){if(!(-1!==n&&n<=r))return N||(N=!0,y(L)),P=e,void(j=n);o=!0}if(null!==e){I=!0;try{e(o)}finally{I=!1}}};var L=function(e){if(null!==P){y(L);var t=e-R+M;t<M&&F<M?(8>t&&(t=8),M=t<F?F:t):F=t,R=e+M,_||(_=!0,z.postMessage(void 0))}else N=!1};k=function(e,t){P=e,j=t,I||0>t?z.postMessage(void 0):N||(N=!0,y(L))},E=function(){P=null,_=!1,j=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,i=a;o=e,a=t.unstable_now();try{return n()}finally{o=r,a=i,d()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,i=a;o=n,a=t.unstable_now();try{return e()}finally{o=r,a=i,d()}},t.unstable_scheduleCallback=function(e,r){var i=-1!==a?a:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=i+r.timeout;else switch(o){case 1:r=i+-1;break;case 2:r=i+250;break;case 5:r=i+1073741823;break;case 4:r=i+1e4;break;default:r=i+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{i=null;var l=n;do{if(l.expirationTime>r){i=l;break}l=l.next}while(l!==n);null===i?i=n:i===n&&(n=e,c()),(r=i.previous).next=i.previous=e,e.next=i,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,i=a;o=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,a=i,d()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<i||C())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(/*! ./../../webpack/buildin/global.js */13))},
/*!*************************************************!*\
  !*** ./node_modules/strict-uri-encode/index.js ***!
  \*************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=e=>encodeURIComponent(e).replace(/[!'()*]/g,e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`)},
/*!****************************************************!*\
  !*** ./node_modules/decode-uri-component/index.js ***!
  \****************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=new RegExp("%[a-f0-9]{2}","gi"),o=new RegExp("(%[a-f0-9]{2})+","gi");function a(e,t){try{return decodeURIComponent(e.join(""))}catch(e){}if(1===e.length)return e;t=t||1;var n=e.slice(0,t),r=e.slice(t);return Array.prototype.concat.call([],a(n),a(r))}function i(e){try{return decodeURIComponent(e)}catch(o){for(var t=e.match(r),n=1;n<t.length;n++)t=(e=a(t,n).join("")).match(r);return e}}e.exports=function(e){if("string"!=typeof e)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return e=e.replace(/\+/g," "),decodeURIComponent(e)}catch(t){return function(e){for(var t={"%FE%FF":"��","%FF%FE":"��"},n=o.exec(e);n;){try{t[n[0]]=decodeURIComponent(n[0])}catch(e){var r=i(n[0]);r!==n[0]&&(t[n[0]]=r)}n=o.exec(e)}t["%C2"]="�";for(var a=Object.keys(t),l=0;l<a.length;l++){var s=a[l];e=e.replace(new RegExp(s,"g"),t[s])}return e}(e)}}},
/*!**********************************************!*\
  !*** ./node_modules/split-on-first/index.js ***!
  \**********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=(e,t)=>{if("string"!=typeof e||"string"!=typeof t)throw new TypeError("Expected the arguments to be of type `string`");if(""===t)return[e];const n=e.indexOf(t);return-1===n?[e]:[e.slice(0,n),e.slice(n+t.length)]}},
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithThrowingShims.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./lib/ReactPropTypesSecret */52);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},
/*!*****************************************!*\
  !*** ./node_modules/warning/warning.js ***!
  \*****************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=function(){};e.exports=r},
/*!**************************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.production.min.js ***!
  \**************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,a=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,s=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,u=r?Symbol.for("react.context"):60110,d=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,f=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,g=r?Symbol.for("react.memo"):60115,b=r?Symbol.for("react.lazy"):60116;function h(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case d:case p:case i:case s:case l:case m:return e;default:switch(e=e&&e.$$typeof){case u:case f:case c:return e;default:return t}}case b:case g:case a:return t}}}function v(e){return h(e)===p}t.typeOf=h,t.AsyncMode=d,t.ConcurrentMode=p,t.ContextConsumer=u,t.ContextProvider=c,t.Element=o,t.ForwardRef=f,t.Fragment=i,t.Lazy=b,t.Memo=g,t.Portal=a,t.Profiler=s,t.StrictMode=l,t.Suspense=m,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===p||e===s||e===l||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===b||e.$$typeof===g||e.$$typeof===c||e.$$typeof===u||e.$$typeof===f)},t.isAsyncMode=function(e){return v(e)||h(e)===d},t.isConcurrentMode=v,t.isContextConsumer=function(e){return h(e)===u},t.isContextProvider=function(e){return h(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return h(e)===f},t.isFragment=function(e){return h(e)===i},t.isLazy=function(e){return h(e)===b},t.isMemo=function(e){return h(e)===g},t.isPortal=function(e){return h(e)===a},t.isProfiler=function(e){return h(e)===s},t.isStrictMode=function(e){return h(e)===l},t.isSuspense=function(e){return h(e)===m}},
/*!**********************************************!*\
  !*** ./node_modules/uncontrollable/utils.js ***!
  \**********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.uncontrolledPropTypes=function(e,t){var n={};return Object.keys(e).forEach(function(e){n[a(e)]=o}),n},t.isProp=function(e,t){return void 0!==e[t]},t.defaultKey=a,t.canAcceptRef=function(e){return!!e&&("function"!=typeof e||e.prototype&&e.prototype.isReactComponent)};var r;(r=n(/*! invariant */22))&&r.__esModule;var o=function(){};function a(e){return"default"+e.charAt(0).toUpperCase()+e.substr(1)}},
/*!********************************************************!*\
  !*** ./node_modules/@restart/hooks/useCommittedRef.js ***!
  \********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var r=n(/*! react */0);var o=function(e){var t=(0,r.useRef)(e);return(0,r.useEffect)(function(){t.current=e},[e]),t};t.default=o},
/*!*********************************************************!*\
  !*** ./node_modules/dom-helpers/util/hyphenateStyle.js ***!
  \*********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! @babel/runtime/helpers/interopRequireDefault */7);t.__esModule=!0,t.default=function(e){return(0,o.default)(e).replace(a,"-ms-")};var o=r(n(/*! ./hyphenate */58)),a=/^ms-/;e.exports=t.default},
/*!****************************************************!*\
  !*** ./node_modules/dom-helpers/util/hyphenate.js ***!
  \****************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e){return e.replace(r,"-$1").toLowerCase()};var r=/([A-Z])/g;e.exports=t.default},
/*!************************************************************!*\
  !*** ./node_modules/dom-helpers/style/getComputedStyle.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! @babel/runtime/helpers/interopRequireDefault */7);t.__esModule=!0,t.default=function(e){if(!e)throw new TypeError("No Element passed to `getComputedStyle()`");var t=e.ownerDocument;return"defaultView"in t?t.defaultView.opener?e.ownerDocument.defaultView.getComputedStyle(e,null):window.getComputedStyle(e,null):{getPropertyValue:function(t){var n=e.style;"float"==(t=(0,o.default)(t))&&(t="styleFloat");var r=e.currentStyle[t]||null;if(null==r&&n&&n[t]&&(r=n[t]),i.test(r)&&!a.test(t)){var l=n.left,s=e.runtimeStyle,c=s&&s.left;c&&(s.left=e.currentStyle.left),n.left="fontSize"===t?"1em":r,r=n.pixelLeft+"px",n.left=l,c&&(s.left=c)}return r}}};var o=r(n(/*! ../util/camelizeStyle */23)),a=/^(top|right|bottom|left)$/,i=/^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;e.exports=t.default},
/*!*******************************************************!*\
  !*** ./node_modules/dom-helpers/style/removeStyle.js ***!
  \*******************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){return"removeProperty"in e.style?e.style.removeProperty(t):e.style.removeAttribute(t)},e.exports=t.default},
/*!************************************************!*\
  !*** ./node_modules/dom-helpers/util/inDOM.js ***!
  \************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var r=!("undefined"==typeof window||!window.document||!window.document.createElement);t.default=r,e.exports=t.default},
/*!************************************************************!*\
  !*** ./node_modules/dom-helpers/transition/isTransform.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e){return!(!e||!r.test(e))};var r=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;e.exports=t.default},
/*!*****************************************************************!*\
  !*** ./node_modules/create-react-context/lib/implementation.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";t.__esModule=!0;var r=n(/*! react */0),o=(i(r),i(n(/*! prop-types */1))),a=i(n(/*! gud */64));i(n(/*! fbjs/lib/warning */65));function i(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var u=1073741823;t.default=function(e,t){var n,i,d="__create-react-context-"+(0,a.default)()+"__",p=function(e){function n(){var t,r,o,a;l(this,n);for(var i=arguments.length,c=Array(i),u=0;u<i;u++)c[u]=arguments[u];return t=r=s(this,e.call.apply(e,[this].concat(c))),r.emitter=(o=r.props.value,a=[],{on:function(e){a.push(e)},off:function(e){a=a.filter(function(t){return t!==e})},get:function(){return o},set:function(e,t){o=e,a.forEach(function(e){return e(o,t)})}}),s(r,t)}return c(n,e),n.prototype.getChildContext=function(){var e;return(e={})[d]=this.emitter,e},n.prototype.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n=this.props.value,r=e.value,o=void 0;((a=n)===(i=r)?0!==a||1/a==1/i:a!=a&&i!=i)?o=0:(o="function"==typeof t?t(n,r):u,0!=(o|=0)&&this.emitter.set(e.value,o))}var a,i},n.prototype.render=function(){return this.props.children},n}(r.Component);p.childContextTypes=((n={})[d]=o.default.object.isRequired,n);var f=function(t){function n(){var e,r;l(this,n);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return e=r=s(this,t.call.apply(t,[this].concat(a))),r.state={value:r.getValue()},r.onUpdate=function(e,t){0!=((0|r.observedBits)&t)&&r.setState({value:r.getValue()})},s(r,e)}return c(n,t),n.prototype.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?u:t},n.prototype.componentDidMount=function(){this.context[d]&&this.context[d].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?u:e},n.prototype.componentWillUnmount=function(){this.context[d]&&this.context[d].off(this.onUpdate)},n.prototype.getValue=function(){return this.context[d]?this.context[d].get():e},n.prototype.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return f.contextTypes=((i={})[d]=o.default.object,i),{Provider:p,Consumer:f}},e.exports=t.default},
/*!***********************************!*\
  !*** ./node_modules/gud/index.js ***!
  \***********************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(/*! ./../webpack/buildin/global.js */13))},
/*!******************************************!*\
  !*** ./node_modules/fbjs/lib/warning.js ***!
  \******************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./emptyFunction */66);e.exports=r},
/*!************************************************!*\
  !*** ./node_modules/fbjs/lib/emptyFunction.js ***!
  \************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},
/*!*****************************************************************!*\
  !*** ./node_modules/react-router/node_modules/isarray/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},
/*!*************************************************************!*\
  !*** ./node_modules/performance-now/lib/performance-now.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){(function(t){(function(){var n,r,o,a,i,l;"undefined"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:null!=t&&t.hrtime?(e.exports=function(){return(n()-i)/1e6},r=t.hrtime,a=(n=function(){var e;return 1e9*(e=r())[0]+e[1]})(),l=1e9*t.uptime(),i=a-l):Date.now?(e.exports=function(){return Date.now()-o},o=Date.now()):(e.exports=function(){return(new Date).getTime()-o},o=(new Date).getTime())}).call(this)}).call(this,n(/*! ./../../process/browser.js */14))},
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./utils */3),o=n(/*! ./helpers/bind */25),a=n(/*! ./core/Axios */71),i=n(/*! ./core/mergeConfig */31);function l(e){var t=new a(e),n=o(a.prototype.request,t);return r.extend(n,a.prototype,t),r.extend(n,t),n}var s=l(n(/*! ./defaults */28));s.Axios=a,s.create=function(e){return l(i(s.defaults,e))},s.Cancel=n(/*! ./cancel/Cancel */32),s.CancelToken=n(/*! ./cancel/CancelToken */83),s.isCancel=n(/*! ./cancel/isCancel */27),s.all=function(e){return Promise.all(e)},s.spread=n(/*! ./helpers/spread */84),e.exports=s,e.exports.default=s},
/*!************************************************************!*\
  !*** ./node_modules/axios/node_modules/is-buffer/index.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&null!=e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}},
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./../utils */3),o=n(/*! ../helpers/buildURL */26),a=n(/*! ./InterceptorManager */72),i=n(/*! ./dispatchRequest */73),l=n(/*! ./mergeConfig */31);function s(e){this.defaults=e,this.interceptors={request:new a,response:new a}}s.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=l(this.defaults,e)).method=e.method?e.method.toLowerCase():"get";var t=[i,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)n=n.then(t.shift(),t.shift());return n},s.prototype.getUri=function(e){return e=l(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],function(e){s.prototype[e]=function(t,n){return this.request(r.merge(n||{},{method:e,url:t}))}}),r.forEach(["post","put","patch"],function(e){s.prototype[e]=function(t,n,o){return this.request(r.merge(o||{},{method:e,url:t,data:n}))}}),e.exports=s},
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./../utils */3);function o(){this.handlers=[]}o.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=o},
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./../utils */3),o=n(/*! ./transformData */74),a=n(/*! ../cancel/isCancel */27),i=n(/*! ../defaults */28),l=n(/*! ./../helpers/isAbsoluteURL */81),s=n(/*! ./../helpers/combineURLs */82);function c(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return c(e),e.baseURL&&!l(e.url)&&(e.url=s(e.baseURL,e.url)),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),r.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]}),(e.adapter||i.adapter)(e).then(function(t){return c(e),t.data=o(t.data,t.headers,e.transformResponse),t},function(t){return a(t)||(c(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./../utils */3);e.exports=function(e,t,n){return r.forEach(n,function(n){e=n(e,t)}),e}},
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ../utils */3);e.exports=function(e,t){r.forEach(e,function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])})}},
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./createError */30);e.exports=function(e,t,n){var o=n.config.validateStatus;!o||o(n.status)?e(n):t(r("Request failed with status code "+n.status,n.config,null,n.request,n))}},
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./../utils */3),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,a,i={};return e?(r.forEach(e.split("\n"),function(e){if(a=e.indexOf(":"),t=r.trim(e.substr(0,a)).toLowerCase(),n=r.trim(e.substr(a+1)),t){if(i[t]&&o.indexOf(t)>=0)return;i[t]="set-cookie"===t?(i[t]?i[t]:[]).concat([n]):i[t]?i[t]+", "+n:n}}),i):i}},
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./../utils */3);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./../utils */3);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,a,i){var l=[];l.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&l.push("expires="+new Date(n).toGMTString()),r.isString(o)&&l.push("path="+o),r.isString(a)&&l.push("domain="+a),!0===i&&l.push("secure"),document.cookie=l.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";var r=n(/*! ./Cancel */32);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var n=this;e(function(e){n.reason||(n.reason=new r(e),t(n.reason))})}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o(function(t){e=t}),cancel:e}},e.exports=o},
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},
/*!*****************************!*\
  !*** ./src/style/main.less ***!
  \*****************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){var r=n(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./main.less */86);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(/*! ../../node_modules/style-loader/lib/addStyles.js */88)(r,o);r.locals&&(e.exports=r.locals)},
/*!**********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/style/main.less ***!
  \**********************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){(t=e.exports=n(/*! ../../node_modules/css-loader/dist/runtime/api.js */33)(!1)).i(n(/*! -!../../node_modules/css-loader/dist/cjs.js!bootstrap/dist/css/bootstrap.min.css */87),""),t.push([e.i,".header {\n  background-color: #3d3d;\n}\nbody {\n  background-color: #fff;\n}\nh1,\nh2,\nh3,\nh4 {\n  margin: 0;\n  padding: 0;\n}\nsvg {\n  width: 100%;\n  height: 100%;\n  text-indent: 0;\n}\n.main_container {\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n  flex-flow: column;\n  height: 100vh;\n}\n.noRecords {\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n}\n.footer {\n  display: flex;\n  padding: 15px 30px;\n  border-top: 1px solid #b9b9b9;\n  justify-content: flex-end;\n}\n.footer .btn {\n  margin-left: 10px;\n}\n",""])},
/*!*************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/bootstrap/dist/css/bootstrap.min.css ***!
  \*************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){(e.exports=n(/*! ../../../css-loader/dist/runtime/api.js */33)(!1)).push([e.i,"/*!\n * Bootstrap v4.3.1 (https://getbootstrap.com/)\n * Copyright 2011-2019 The Bootstrap Authors\n * Copyright 2011-2019 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */:root{--blue:#007bff;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--red:#dc3545;--orange:#fd7e14;--yellow:#ffc107;--green:#28a745;--teal:#20c997;--cyan:#17a2b8;--white:#fff;--gray:#6c757d;--gray-dark:#343a40;--primary:#007bff;--secondary:#6c757d;--success:#28a745;--info:#17a2b8;--warning:#ffc107;--danger:#dc3545;--light:#f8f9fa;--dark:#343a40;--breakpoint-xs:0;--breakpoint-sm:576px;--breakpoint-md:768px;--breakpoint-lg:992px;--breakpoint-xl:1200px;--font-family-sans-serif:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--font-family-monospace:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}*,::after,::before{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex=\"-1\"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent}a:hover{color:#0056b3;text-decoration:underline}a:not([href]):not([tabindex]){color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:.75rem;padding-bottom:.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}select{word-wrap:normal}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled),button:not(:disabled){cursor:pointer}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-weight:500;line-height:1.2}.h1,h1{font-size:2.5rem}.h2,h2{font-size:2rem}.h3,h3{font-size:1.75rem}.h4,h4{font-size:1.5rem}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#fcf8e3}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#6c757d}.blockquote-footer::before{content:\"\\2014\\00A0\"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:90%;color:#6c757d}code{font-size:87.5%;color:#e83e8c;word-break:break-word}a>code{color:inherit}kbd{padding:.2rem .4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width:576px){.container{max-width:540px}}@media (min-width:768px){.container{max-width:720px}}@media (min-width:992px){.container{max-width:960px}}@media (min-width:1200px){.container{max-width:1140px}}.container-fluid{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*=col-]{padding-right:0;padding-left:0}.col,.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-auto,.col-lg,.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-auto,.col-md,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-auto,.col-sm,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-auto{position:relative;width:100%;padding-right:15px;padding-left:15px}.col{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-first{-ms-flex-order:-1;order:-1}.order-last{-ms-flex-order:13;order:13}.order-0{-ms-flex-order:0;order:0}.order-1{-ms-flex-order:1;order:1}.order-2{-ms-flex-order:2;order:2}.order-3{-ms-flex-order:3;order:3}.order-4{-ms-flex-order:4;order:4}.order-5{-ms-flex-order:5;order:5}.order-6{-ms-flex-order:6;order:6}.order-7{-ms-flex-order:7;order:7}.order-8{-ms-flex-order:8;order:8}.order-9{-ms-flex-order:9;order:9}.order-10{-ms-flex-order:10;order:10}.order-11{-ms-flex-order:11;order:11}.order-12{-ms-flex-order:12;order:12}.offset-1{margin-left:8.333333%}.offset-2{margin-left:16.666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.333333%}.offset-5{margin-left:41.666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.333333%}.offset-8{margin-left:66.666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.333333%}.offset-11{margin-left:91.666667%}@media (min-width:576px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-sm-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-sm-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-first{-ms-flex-order:-1;order:-1}.order-sm-last{-ms-flex-order:13;order:13}.order-sm-0{-ms-flex-order:0;order:0}.order-sm-1{-ms-flex-order:1;order:1}.order-sm-2{-ms-flex-order:2;order:2}.order-sm-3{-ms-flex-order:3;order:3}.order-sm-4{-ms-flex-order:4;order:4}.order-sm-5{-ms-flex-order:5;order:5}.order-sm-6{-ms-flex-order:6;order:6}.order-sm-7{-ms-flex-order:7;order:7}.order-sm-8{-ms-flex-order:8;order:8}.order-sm-9{-ms-flex-order:9;order:9}.order-sm-10{-ms-flex-order:10;order:10}.order-sm-11{-ms-flex-order:11;order:11}.order-sm-12{-ms-flex-order:12;order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.333333%}.offset-sm-2{margin-left:16.666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.333333%}.offset-sm-5{margin-left:41.666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.333333%}.offset-sm-8{margin-left:66.666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.333333%}.offset-sm-11{margin-left:91.666667%}}@media (min-width:768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-md-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-md-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-first{-ms-flex-order:-1;order:-1}.order-md-last{-ms-flex-order:13;order:13}.order-md-0{-ms-flex-order:0;order:0}.order-md-1{-ms-flex-order:1;order:1}.order-md-2{-ms-flex-order:2;order:2}.order-md-3{-ms-flex-order:3;order:3}.order-md-4{-ms-flex-order:4;order:4}.order-md-5{-ms-flex-order:5;order:5}.order-md-6{-ms-flex-order:6;order:6}.order-md-7{-ms-flex-order:7;order:7}.order-md-8{-ms-flex-order:8;order:8}.order-md-9{-ms-flex-order:9;order:9}.order-md-10{-ms-flex-order:10;order:10}.order-md-11{-ms-flex-order:11;order:11}.order-md-12{-ms-flex-order:12;order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.333333%}.offset-md-2{margin-left:16.666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.333333%}.offset-md-5{margin-left:41.666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.333333%}.offset-md-8{margin-left:66.666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.333333%}.offset-md-11{margin-left:91.666667%}}@media (min-width:992px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-lg-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-lg-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-first{-ms-flex-order:-1;order:-1}.order-lg-last{-ms-flex-order:13;order:13}.order-lg-0{-ms-flex-order:0;order:0}.order-lg-1{-ms-flex-order:1;order:1}.order-lg-2{-ms-flex-order:2;order:2}.order-lg-3{-ms-flex-order:3;order:3}.order-lg-4{-ms-flex-order:4;order:4}.order-lg-5{-ms-flex-order:5;order:5}.order-lg-6{-ms-flex-order:6;order:6}.order-lg-7{-ms-flex-order:7;order:7}.order-lg-8{-ms-flex-order:8;order:8}.order-lg-9{-ms-flex-order:9;order:9}.order-lg-10{-ms-flex-order:10;order:10}.order-lg-11{-ms-flex-order:11;order:11}.order-lg-12{-ms-flex-order:12;order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.333333%}.offset-lg-2{margin-left:16.666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.333333%}.offset-lg-5{margin-left:41.666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.333333%}.offset-lg-8{margin-left:66.666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.333333%}.offset-lg-11{margin-left:91.666667%}}@media (min-width:1200px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-xl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-xl-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-first{-ms-flex-order:-1;order:-1}.order-xl-last{-ms-flex-order:13;order:13}.order-xl-0{-ms-flex-order:0;order:0}.order-xl-1{-ms-flex-order:1;order:1}.order-xl-2{-ms-flex-order:2;order:2}.order-xl-3{-ms-flex-order:3;order:3}.order-xl-4{-ms-flex-order:4;order:4}.order-xl-5{-ms-flex-order:5;order:5}.order-xl-6{-ms-flex-order:6;order:6}.order-xl-7{-ms-flex-order:7;order:7}.order-xl-8{-ms-flex-order:8;order:8}.order-xl-9{-ms-flex-order:9;order:9}.order-xl-10{-ms-flex-order:10;order:10}.order-xl-11{-ms-flex-order:11;order:11}.order-xl-12{-ms-flex-order:12;order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.333333%}.offset-xl-2{margin-left:16.666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.333333%}.offset-xl-5{margin-left:41.666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.333333%}.offset-xl-8{margin-left:66.666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.333333%}.offset-xl-11{margin-left:91.666667%}}.table{width:100%;margin-bottom:1rem;color:#212529}.table td,.table th{padding:.75rem;vertical-align:top;border-top:1px solid #dee2e6}.table thead th{vertical-align:bottom;border-bottom:2px solid #dee2e6}.table tbody+tbody{border-top:2px solid #dee2e6}.table-sm td,.table-sm th{padding:.3rem}.table-bordered{border:1px solid #dee2e6}.table-bordered td,.table-bordered th{border:1px solid #dee2e6}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-borderless tbody+tbody,.table-borderless td,.table-borderless th,.table-borderless thead th{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.table-hover tbody tr:hover{color:#212529;background-color:rgba(0,0,0,.075)}.table-primary,.table-primary>td,.table-primary>th{background-color:#b8daff}.table-primary tbody+tbody,.table-primary td,.table-primary th,.table-primary thead th{border-color:#7abaff}.table-hover .table-primary:hover{background-color:#9fcdff}.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#9fcdff}.table-secondary,.table-secondary>td,.table-secondary>th{background-color:#d6d8db}.table-secondary tbody+tbody,.table-secondary td,.table-secondary th,.table-secondary thead th{border-color:#b3b7bb}.table-hover .table-secondary:hover{background-color:#c8cbcf}.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#c8cbcf}.table-success,.table-success>td,.table-success>th{background-color:#c3e6cb}.table-success tbody+tbody,.table-success td,.table-success th,.table-success thead th{border-color:#8fd19e}.table-hover .table-success:hover{background-color:#b1dfbb}.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#b1dfbb}.table-info,.table-info>td,.table-info>th{background-color:#bee5eb}.table-info tbody+tbody,.table-info td,.table-info th,.table-info thead th{border-color:#86cfda}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#abdde5}.table-warning,.table-warning>td,.table-warning>th{background-color:#ffeeba}.table-warning tbody+tbody,.table-warning td,.table-warning th,.table-warning thead th{border-color:#ffdf7e}.table-hover .table-warning:hover{background-color:#ffe8a1}.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#ffe8a1}.table-danger,.table-danger>td,.table-danger>th{background-color:#f5c6cb}.table-danger tbody+tbody,.table-danger td,.table-danger th,.table-danger thead th{border-color:#ed969e}.table-hover .table-danger:hover{background-color:#f1b0b7}.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#f1b0b7}.table-light,.table-light>td,.table-light>th{background-color:#fdfdfe}.table-light tbody+tbody,.table-light td,.table-light th,.table-light thead th{border-color:#fbfcfc}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#ececf6}.table-dark,.table-dark>td,.table-dark>th{background-color:#c6c8ca}.table-dark tbody+tbody,.table-dark td,.table-dark th,.table-dark thead th{border-color:#95999c}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#b9bbbe}.table-active,.table-active>td,.table-active>th{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:rgba(0,0,0,.075)}.table .thead-dark th{color:#fff;background-color:#343a40;border-color:#454d55}.table .thead-light th{color:#495057;background-color:#e9ecef;border-color:#dee2e6}.table-dark{color:#fff;background-color:#343a40}.table-dark td,.table-dark th,.table-dark thead th{border-color:#454d55}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,.05)}.table-dark.table-hover tbody tr:hover{color:#fff;background-color:rgba(255,255,255,.075)}@media (max-width:575.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-sm>.table-bordered{border:0}}@media (max-width:767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-md>.table-bordered{border:0}}@media (max-width:991.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-lg>.table-bordered{border:0}}@media (max-width:1199.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-xl>.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive>.table-bordered{border:0}.form-control{display:block;width:100%;height:calc(1.5em + .75rem + 2px);padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.form-control::-webkit-input-placeholder{color:#6c757d;opacity:1}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control:-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding-top:.375rem;padding-bottom:.375rem;margin-bottom:0;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm{padding-right:0;padding-left:0}.form-control-sm{height:calc(1.5em + .5rem + 2px);padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.form-control-lg{height:calc(1.5em + 1rem + 2px);padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}select.form-control[multiple],select.form-control[size]{height:auto}textarea.form-control{height:auto}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:.25rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:.3rem;margin-left:-1.25rem}.form-check-input:disabled~.form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(40,167,69,.9);border-radius:.25rem}.form-control.is-valid,.was-validated .form-control:valid{border-color:#28a745;padding-right:calc(1.5em + .75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\");background-repeat:no-repeat;background-position:center right calc(.375em + .1875rem);background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-valid:focus,.was-validated .form-control:valid:focus{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.form-control.is-valid~.valid-feedback,.form-control.is-valid~.valid-tooltip,.was-validated .form-control:valid~.valid-feedback,.was-validated .form-control:valid~.valid-tooltip{display:block}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.custom-select.is-valid,.was-validated .custom-select:valid{border-color:#28a745;padding-right:calc((1em + .75rem) * 3 / 4 + 1.75rem);background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right .75rem center/8px 10px,url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\") #fff no-repeat center right 1.75rem/calc(.75em + .375rem) calc(.75em + .375rem)}.custom-select.is-valid:focus,.was-validated .custom-select:valid:focus{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.custom-select.is-valid~.valid-feedback,.custom-select.is-valid~.valid-tooltip,.was-validated .custom-select:valid~.valid-feedback,.was-validated .custom-select:valid~.valid-tooltip{display:block}.form-control-file.is-valid~.valid-feedback,.form-control-file.is-valid~.valid-tooltip,.was-validated .form-control-file:valid~.valid-feedback,.was-validated .form-control-file:valid~.valid-tooltip{display:block}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:#28a745}.form-check-input.is-valid~.valid-feedback,.form-check-input.is-valid~.valid-tooltip,.was-validated .form-check-input:valid~.valid-feedback,.was-validated .form-check-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid~.custom-control-label,.was-validated .custom-control-input:valid~.custom-control-label{color:#28a745}.custom-control-input.is-valid~.custom-control-label::before,.was-validated .custom-control-input:valid~.custom-control-label::before{border-color:#28a745}.custom-control-input.is-valid~.valid-feedback,.custom-control-input.is-valid~.valid-tooltip,.was-validated .custom-control-input:valid~.valid-feedback,.was-validated .custom-control-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid:checked~.custom-control-label::before,.was-validated .custom-control-input:valid:checked~.custom-control-label::before{border-color:#34ce57;background-color:#34ce57}.custom-control-input.is-valid:focus~.custom-control-label::before,.was-validated .custom-control-input:valid:focus~.custom-control-label::before{box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.custom-control-input.is-valid:focus:not(:checked)~.custom-control-label::before,.was-validated .custom-control-input:valid:focus:not(:checked)~.custom-control-label::before{border-color:#28a745}.custom-file-input.is-valid~.custom-file-label,.was-validated .custom-file-input:valid~.custom-file-label{border-color:#28a745}.custom-file-input.is-valid~.valid-feedback,.custom-file-input.is-valid~.valid-tooltip,.was-validated .custom-file-input:valid~.valid-feedback,.was-validated .custom-file-input:valid~.valid-tooltip{display:block}.custom-file-input.is-valid:focus~.custom-file-label,.was-validated .custom-file-input:valid:focus~.custom-file-label{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(220,53,69,.9);border-radius:.25rem}.form-control.is-invalid,.was-validated .form-control:invalid{border-color:#dc3545;padding-right:calc(1.5em + .75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23dc3545' viewBox='-2 -2 7 7'%3e%3cpath stroke='%23dc3545' d='M0 0l3 3m0-3L0 3'/%3e%3ccircle r='.5'/%3e%3ccircle cx='3' r='.5'/%3e%3ccircle cy='3' r='.5'/%3e%3ccircle cx='3' cy='3' r='.5'/%3e%3c/svg%3E\");background-repeat:no-repeat;background-position:center right calc(.375em + .1875rem);background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-invalid:focus,.was-validated .form-control:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.form-control.is-invalid~.invalid-feedback,.form-control.is-invalid~.invalid-tooltip,.was-validated .form-control:invalid~.invalid-feedback,.was-validated .form-control:invalid~.invalid-tooltip{display:block}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.custom-select.is-invalid,.was-validated .custom-select:invalid{border-color:#dc3545;padding-right:calc((1em + .75rem) * 3 / 4 + 1.75rem);background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right .75rem center/8px 10px,url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23dc3545' viewBox='-2 -2 7 7'%3e%3cpath stroke='%23dc3545' d='M0 0l3 3m0-3L0 3'/%3e%3ccircle r='.5'/%3e%3ccircle cx='3' r='.5'/%3e%3ccircle cy='3' r='.5'/%3e%3ccircle cx='3' cy='3' r='.5'/%3e%3c/svg%3E\") #fff no-repeat center right 1.75rem/calc(.75em + .375rem) calc(.75em + .375rem)}.custom-select.is-invalid:focus,.was-validated .custom-select:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.custom-select.is-invalid~.invalid-feedback,.custom-select.is-invalid~.invalid-tooltip,.was-validated .custom-select:invalid~.invalid-feedback,.was-validated .custom-select:invalid~.invalid-tooltip{display:block}.form-control-file.is-invalid~.invalid-feedback,.form-control-file.is-invalid~.invalid-tooltip,.was-validated .form-control-file:invalid~.invalid-feedback,.was-validated .form-control-file:invalid~.invalid-tooltip{display:block}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:#dc3545}.form-check-input.is-invalid~.invalid-feedback,.form-check-input.is-invalid~.invalid-tooltip,.was-validated .form-check-input:invalid~.invalid-feedback,.was-validated .form-check-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid~.custom-control-label,.was-validated .custom-control-input:invalid~.custom-control-label{color:#dc3545}.custom-control-input.is-invalid~.custom-control-label::before,.was-validated .custom-control-input:invalid~.custom-control-label::before{border-color:#dc3545}.custom-control-input.is-invalid~.invalid-feedback,.custom-control-input.is-invalid~.invalid-tooltip,.was-validated .custom-control-input:invalid~.invalid-feedback,.was-validated .custom-control-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid:checked~.custom-control-label::before,.was-validated .custom-control-input:invalid:checked~.custom-control-label::before{border-color:#e4606d;background-color:#e4606d}.custom-control-input.is-invalid:focus~.custom-control-label::before,.was-validated .custom-control-input:invalid:focus~.custom-control-label::before{box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.custom-control-input.is-invalid:focus:not(:checked)~.custom-control-label::before,.was-validated .custom-control-input:invalid:focus:not(:checked)~.custom-control-label::before{border-color:#dc3545}.custom-file-input.is-invalid~.custom-file-label,.was-validated .custom-file-input:invalid~.custom-file-label{border-color:#dc3545}.custom-file-input.is-invalid~.invalid-feedback,.custom-file-input.is-invalid~.invalid-tooltip,.was-validated .custom-file-input:invalid~.invalid-feedback,.was-validated .custom-file-input:invalid~.invalid-tooltip{display:block}.custom-file-input.is-invalid:focus~.custom-file-label,.was-validated .custom-file-input:invalid:focus~.custom-file-label{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width:576px){.form-inline label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .custom-select,.form-inline .input-group{width:auto}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;-ms-flex-negative:0;flex-shrink:0;margin-top:0;margin-right:.25rem;margin-left:0}.form-inline .custom-control{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;color:#212529;text-align:center;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:hover{color:#212529;text-decoration:none}.btn.focus,.btn:focus{outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.btn.disabled,.btn:disabled{opacity:.65}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary.focus,.btn-primary:focus{box-shadow:0 0 0 .2rem rgba(38,143,255,.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled).active,.btn-primary:not(:disabled):not(.disabled):active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled).active:focus,.btn-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(38,143,255,.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary.focus,.btn-secondary:focus{box-shadow:0 0 0 .2rem rgba(130,138,145,.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled).active,.btn-secondary:not(:disabled):not(.disabled):active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled).active:focus,.btn-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(130,138,145,.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success.focus,.btn-success:focus{box-shadow:0 0 0 .2rem rgba(72,180,97,.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled).active,.btn-success:not(:disabled):not(.disabled):active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled).active:focus,.btn-success:not(:disabled):not(.disabled):active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(72,180,97,.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info.focus,.btn-info:focus{box-shadow:0 0 0 .2rem rgba(58,176,195,.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled).active,.btn-info:not(:disabled):not(.disabled):active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled).active:focus,.btn-info:not(:disabled):not(.disabled):active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(58,176,195,.5)}.btn-warning{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#212529;background-color:#e0a800;border-color:#d39e00}.btn-warning.focus,.btn-warning:focus{box-shadow:0 0 0 .2rem rgba(222,170,12,.5)}.btn-warning.disabled,.btn-warning:disabled{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled).active,.btn-warning:not(:disabled):not(.disabled):active,.show>.btn-warning.dropdown-toggle{color:#212529;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled).active:focus,.btn-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(222,170,12,.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger.focus,.btn-danger:focus{box-shadow:0 0 0 .2rem rgba(225,83,97,.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled).active,.btn-danger:not(:disabled):not(.disabled):active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled).active:focus,.btn-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(225,83,97,.5)}.btn-light{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.btn-light.focus,.btn-light:focus{box-shadow:0 0 0 .2rem rgba(216,217,219,.5)}.btn-light.disabled,.btn-light:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled).active,.btn-light:not(:disabled):not(.disabled):active,.show>.btn-light.dropdown-toggle{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled).active:focus,.btn-light:not(:disabled):not(.disabled):active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(216,217,219,.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark.focus,.btn-dark:focus{box-shadow:0 0 0 .2rem rgba(82,88,93,.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled).active,.btn-dark:not(:disabled):not(.disabled):active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled).active:focus,.btn-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(82,88,93,.5)}.btn-outline-primary{color:#007bff;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary.focus,.btn-outline-primary:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled).active,.btn-outline-primary:not(:disabled):not(.disabled):active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary.focus,.btn-outline-secondary:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled).active,.btn-outline-secondary:not(:disabled):not(.disabled):active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-success{color:#28a745;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success.focus,.btn-outline-success:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled).active,.btn-outline-success:not(:disabled):not(.disabled):active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled).active:focus,.btn-outline-success:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-success.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-info{color:#17a2b8;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info.focus,.btn-outline-info:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled).active,.btn-outline-info:not(:disabled):not(.disabled):active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled).active:focus,.btn-outline-info:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-info.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-warning{color:#ffc107;border-color:#ffc107}.btn-outline-warning:hover{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning.focus,.btn-outline-warning:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled).active,.btn-outline-warning:not(:disabled):not(.disabled):active,.show>.btn-outline-warning.dropdown-toggle{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-danger{color:#dc3545;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger.focus,.btn-outline-danger:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled).active,.btn-outline-danger:not(:disabled):not(.disabled):active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light.focus,.btn-outline-light:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled).active,.btn-outline-light:not(:disabled):not(.disabled):active,.show>.btn-outline-light.dropdown-toggle{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled).active:focus,.btn-outline-light:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-light.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-dark{color:#343a40;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark.focus,.btn-outline-dark:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled).active,.btn-outline-dark:not(:disabled):not(.disabled):active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-link{font-weight:400;color:#007bff;text-decoration:none}.btn-link:hover{color:#0056b3;text-decoration:underline}.btn-link.focus,.btn-link:focus{text-decoration:underline;box-shadow:none}.btn-link.disabled,.btn-link:disabled{color:#6c757d;pointer-events:none}.btn-group-lg>.btn,.btn-lg{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{transition:opacity .15s linear}@media (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;transition:height .35s ease}@media (prefers-reduced-motion:reduce){.collapsing{transition:none}}.dropdown,.dropleft,.dropright,.dropup{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-menu-left{right:auto;left:0}.dropdown-menu-right{right:0;left:auto}@media (min-width:576px){.dropdown-menu-sm-left{right:auto;left:0}.dropdown-menu-sm-right{right:0;left:auto}}@media (min-width:768px){.dropdown-menu-md-left{right:auto;left:0}.dropdown-menu-md-right{right:0;left:auto}}@media (min-width:992px){.dropdown-menu-lg-left{right:auto;left:0}.dropdown-menu-lg-right{right:0;left:auto}}@media (min-width:1200px){.dropdown-menu-xl-left{right:auto;left:0}.dropdown-menu-xl-right{right:0;left:auto}}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropright .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropleft .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\"\"}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=top]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1.5rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:.25rem 1.5rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;-ms-flex:1 1 auto;flex:1 1 auto}.btn-group-vertical>.btn:hover,.btn-group>.btn:hover{z-index:1}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus{z-index:1}.btn-toolbar{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn-group:not(:first-child),.btn-group>.btn:not(:first-child){margin-left:-1px}.btn-group>.btn-group:not(:last-child)>.btn,.btn-group>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:not(:first-child)>.btn,.btn-group>.btn:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group-vertical{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group{width:100%}.btn-group-vertical>.btn-group:not(:first-child),.btn-group-vertical>.btn:not(:first-child){margin-top:-1px}.btn-group-vertical>.btn-group:not(:last-child)>.btn,.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child)>.btn,.btn-group-vertical>.btn:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn input[type=checkbox],.btn-group-toggle>.btn input[type=radio],.btn-group-toggle>.btn-group>.btn input[type=checkbox],.btn-group-toggle>.btn-group>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group>.custom-file,.input-group>.custom-select,.input-group>.form-control,.input-group>.form-control-plaintext{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;margin-bottom:0}.input-group>.custom-file+.custom-file,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.form-control,.input-group>.custom-select+.custom-file,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.form-control,.input-group>.form-control+.custom-file,.input-group>.form-control+.custom-select,.input-group>.form-control+.form-control,.input-group>.form-control-plaintext+.custom-file,.input-group>.form-control-plaintext+.custom-select,.input-group>.form-control-plaintext+.form-control{margin-left:-1px}.input-group>.custom-file .custom-file-input:focus~.custom-file-label,.input-group>.custom-select:focus,.input-group>.form-control:focus{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.custom-select:not(:last-child),.input-group>.form-control:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-select:not(:first-child),.input-group>.form-control:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-append,.input-group-prepend{display:-ms-flexbox;display:flex}.input-group-append .btn,.input-group-prepend .btn{position:relative;z-index:2}.input-group-append .btn:focus,.input-group-prepend .btn:focus{z-index:3}.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.btn,.input-group-append .input-group-text+.input-group-text,.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-prepend .input-group-text+.input-group-text{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:.375rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.input-group-text input[type=checkbox],.input-group-text input[type=radio]{margin-top:0}.input-group-lg>.custom-select,.input-group-lg>.form-control:not(textarea){height:calc(1.5em + 1rem + 2px)}.input-group-lg>.custom-select,.input-group-lg>.form-control,.input-group-lg>.input-group-append>.btn,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-prepend>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.input-group-sm>.custom-select,.input-group-sm>.form-control:not(textarea){height:calc(1.5em + .5rem + 2px)}.input-group-sm>.custom-select,.input-group-sm>.form-control,.input-group-sm>.input-group-append>.btn,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-prepend>.input-group-text{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.input-group-lg>.custom-select,.input-group-sm>.custom-select{padding-right:1.75rem}.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child),.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child),.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text{border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;display:block;min-height:1.5rem;padding-left:1.5rem}.custom-control-inline{display:-ms-inline-flexbox;display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked~.custom-control-label::before{color:#fff;border-color:#007bff;background-color:#007bff}.custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.custom-control-input:focus:not(:checked)~.custom-control-label::before{border-color:#80bdff}.custom-control-input:not(:disabled):active~.custom-control-label::before{color:#fff;background-color:#b3d7ff;border-color:#b3d7ff}.custom-control-input:disabled~.custom-control-label{color:#6c757d}.custom-control-input:disabled~.custom-control-label::before{background-color:#e9ecef}.custom-control-label{position:relative;margin-bottom:0;vertical-align:top}.custom-control-label::before{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:\"\";background-color:#fff;border:#adb5bd solid 1px}.custom-control-label::after{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:\"\";background:no-repeat 50%/50% 50%}.custom-checkbox .custom-control-label::before{border-radius:.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::before{border-color:#007bff;background-color:#007bff}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3e%3cpath stroke='%23fff' d='M0 2h4'/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-checkbox .custom-control-input:disabled:indeterminate~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e\")}.custom-radio .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-switch{padding-left:2.25rem}.custom-switch .custom-control-label::before{left:-2.25rem;width:1.75rem;pointer-events:all;border-radius:.5rem}.custom-switch .custom-control-label::after{top:calc(.25rem + 2px);left:calc(-2.25rem + 2px);width:calc(1rem - 4px);height:calc(1rem - 4px);background-color:#adb5bd;border-radius:.5rem;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out,-webkit-transform .15s ease-in-out;transition:transform .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:transform .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out,-webkit-transform .15s ease-in-out}@media (prefers-reduced-motion:reduce){.custom-switch .custom-control-label::after{transition:none}}.custom-switch .custom-control-input:checked~.custom-control-label::after{background-color:#fff;-webkit-transform:translateX(.75rem);transform:translateX(.75rem)}.custom-switch .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-select{display:inline-block;width:100%;height:calc(1.5em + .75rem + 2px);padding:.375rem 1.75rem .375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right .75rem center/8px 10px;background-color:#fff;border:1px solid #ced4da;border-radius:.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size=\"1\"]){height:auto;padding-right:.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{display:none}.custom-select-sm{height:calc(1.5em + .5rem + 2px);padding-top:.25rem;padding-bottom:.25rem;padding-left:.5rem;font-size:.875rem}.custom-select-lg{height:calc(1.5em + 1rem + 2px);padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:1.25rem}.custom-file{position:relative;display:inline-block;width:100%;height:calc(1.5em + .75rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(1.5em + .75rem + 2px);margin:0;opacity:0}.custom-file-input:focus~.custom-file-label{border-color:#80bdff;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.custom-file-input:disabled~.custom-file-label{background-color:#e9ecef}.custom-file-input:lang(en)~.custom-file-label::after{content:\"Browse\"}.custom-file-input~.custom-file-label[data-browse]::after{content:attr(data-browse)}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(1.5em + .75rem + 2px);padding:.375rem .75rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:.25rem}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(1.5em + .75rem);padding:.375rem .75rem;line-height:1.5;color:#495057;content:\"Browse\";background-color:#e9ecef;border-left:inherit;border-radius:0 .25rem .25rem 0}.custom-range{width:100%;height:calc(1rem + .4rem);padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:0}.custom-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#007bff;border:0;border-radius:1rem;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.custom-range::-webkit-slider-thumb{transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.custom-range::-moz-range-thumb{transition:none}}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:.2rem;margin-left:.2rem;background-color:#007bff;border:0;border-radius:1rem;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;appearance:none}@media (prefers-reduced-motion:reduce){.custom-range::-ms-thumb{transition:none}}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:.5rem}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.custom-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.custom-range:disabled::-webkit-slider-runnable-track{cursor:default}.custom-range:disabled::-moz-range-thumb{background-color:#adb5bd}.custom-range:disabled::-moz-range-track{cursor:default}.custom-range:disabled::-ms-thumb{background-color:#adb5bd}.custom-control-label::before,.custom-file-label,.custom-select{transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.custom-control-label::before,.custom-file-label,.custom-select{transition:none}}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:.5rem 1rem}.navbar>.container,.navbar>.container-fluid{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:.3125rem;padding-bottom:.3125rem;margin-right:1rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:.5rem;padding-bottom:.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\"\";background:no-repeat center center;background-size:100% 100%}@media (max-width:575.98px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:576px){.navbar-expand-sm{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width:767.98px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:768px){.navbar-expand-md{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width:991.98px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:992px){.navbar-expand-lg{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width:1199.98px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:1200px){.navbar-expand-xl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand>.container,.navbar-expand>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0,0,0,.9)}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.5)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .show>.nav-link{color:rgba(0,0,0,.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,.5);border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='rgba(0, 0, 0, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\")}.navbar-light .navbar-text{color:rgba(0,0,0,.5)}.navbar-light .navbar-text a{color:rgba(0,0,0,.9)}.navbar-light .navbar-text a:focus,.navbar-light .navbar-text a:hover{color:rgba(0,0,0,.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,.5)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:rgba(255,255,255,.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,.25)}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .show>.nav-link{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,.5);border-color:rgba(255,255,255,.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='rgba(255, 255, 255, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\")}.navbar-dark .navbar-text{color:rgba(255,255,255,.5)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:focus,.navbar-dark .navbar-text a:hover{color:#fff}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,.125);border-radius:.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group:first-child .list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;padding:1.25rem}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,.03);border-bottom:1px solid rgba(0,0,0,.125)}.card-header:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:.75rem 1.25rem;background-color:rgba(0,0,0,.03);border-top:1px solid rgba(0,0,0,.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.card-header-tabs{margin-right:-.625rem;margin-bottom:-.75rem;margin-left:-.625rem;border-bottom:0}.card-header-pills{margin-right:-.625rem;margin-left:-.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img{width:100%;border-radius:calc(.25rem - 1px)}.card-img-top{width:100%;border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.card-img-bottom{width:100%;border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.card-deck{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.card-deck .card{margin-bottom:15px}@media (min-width:576px){.card-deck{-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-15px;margin-left:-15px}.card-deck .card{display:-ms-flexbox;display:flex;-ms-flex:1 0 0%;flex:1 0 0%;-ms-flex-direction:column;flex-direction:column;margin-right:15px;margin-bottom:0;margin-left:15px}}.card-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.card-group>.card{margin-bottom:15px}@media (min-width:576px){.card-group{-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group>.card{-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-header,.card-group>.card:not(:last-child) .card-img-top{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-footer,.card-group>.card:not(:last-child) .card-img-bottom{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-header,.card-group>.card:not(:first-child) .card-img-top{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-footer,.card-group>.card:not(:first-child) .card-img-bottom{border-bottom-left-radius:0}}.card-columns .card{margin-bottom:.75rem}@media (min-width:576px){.card-columns{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion>.card{overflow:hidden}.accordion>.card:not(:first-of-type) .card-header:first-child{border-radius:0}.accordion>.card:not(:first-of-type):not(:last-of-type){border-bottom:0;border-radius:0}.accordion>.card:first-of-type{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion>.card:last-of-type{border-top-left-radius:0;border-top-right-radius:0}.accordion>.card .card-header{margin-bottom:-1px}.breadcrumb{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:.25rem}.breadcrumb-item+.breadcrumb-item{padding-left:.5rem}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:.5rem;color:#6c757d;content:\"/\"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#6c757d}.pagination{display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:.25rem}.page-link{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#007bff;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#0056b3;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:2;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.page-item.active .page-link{z-index:1;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.badge{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.badge{transition:none}}a.badge:focus,a.badge:hover{text-decoration:none}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:.6em;padding-left:.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}a.badge-primary:focus,a.badge-primary:hover{color:#fff;background-color:#0062cc}a.badge-primary.focus,a.badge-primary:focus{outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.badge-secondary{color:#fff;background-color:#6c757d}a.badge-secondary:focus,a.badge-secondary:hover{color:#fff;background-color:#545b62}a.badge-secondary.focus,a.badge-secondary:focus{outline:0;box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.badge-success{color:#fff;background-color:#28a745}a.badge-success:focus,a.badge-success:hover{color:#fff;background-color:#1e7e34}a.badge-success.focus,a.badge-success:focus{outline:0;box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.badge-info{color:#fff;background-color:#17a2b8}a.badge-info:focus,a.badge-info:hover{color:#fff;background-color:#117a8b}a.badge-info.focus,a.badge-info:focus{outline:0;box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.badge-warning{color:#212529;background-color:#ffc107}a.badge-warning:focus,a.badge-warning:hover{color:#212529;background-color:#d39e00}a.badge-warning.focus,a.badge-warning:focus{outline:0;box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.badge-danger{color:#fff;background-color:#dc3545}a.badge-danger:focus,a.badge-danger:hover{color:#fff;background-color:#bd2130}a.badge-danger.focus,a.badge-danger:focus{outline:0;box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.badge-light{color:#212529;background-color:#f8f9fa}a.badge-light:focus,a.badge-light:hover{color:#212529;background-color:#dae0e5}a.badge-light.focus,a.badge-light:focus{outline:0;box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.badge-dark{color:#fff;background-color:#343a40}a.badge-dark:focus,a.badge-dark:hover{color:#fff;background-color:#1d2124}a.badge-dark.focus,a.badge-dark:focus{outline:0;box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:.3rem}@media (min-width:576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close{position:absolute;top:0;right:0;padding:.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-ms-flexbox;display:flex;height:1rem;overflow:hidden;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem}.progress-bar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;transition:width .6s ease}@media (prefers-reduced-motion:reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}@media (prefers-reduced-motion:reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.media{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.media-body{-ms-flex:1;flex:1}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;margin-bottom:-1px;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-horizontal{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal .list-group-item:first-child{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal .list-group-item:last-child{margin-right:0;border-top-right-radius:.25rem;border-bottom-right-radius:.25rem;border-bottom-left-radius:0}@media (min-width:576px){.list-group-horizontal-sm{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-sm .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-sm .list-group-item:first-child{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-sm .list-group-item:last-child{margin-right:0;border-top-right-radius:.25rem;border-bottom-right-radius:.25rem;border-bottom-left-radius:0}}@media (min-width:768px){.list-group-horizontal-md{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-md .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-md .list-group-item:first-child{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-md .list-group-item:last-child{margin-right:0;border-top-right-radius:.25rem;border-bottom-right-radius:.25rem;border-bottom-left-radius:0}}@media (min-width:992px){.list-group-horizontal-lg{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-lg .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-lg .list-group-item:first-child{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-lg .list-group-item:last-child{margin-right:0;border-top-right-radius:.25rem;border-bottom-right-radius:.25rem;border-bottom-left-radius:0}}@media (min-width:1200px){.list-group-horizontal-xl{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-xl .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-xl .list-group-item:first-child{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-xl .list-group-item:last-child{margin-right:0;border-top-right-radius:.25rem;border-bottom-right-radius:.25rem;border-bottom-left-radius:0}}.list-group-flush .list-group-item{border-right:0;border-left:0;border-radius:0}.list-group-flush .list-group-item:last-child{margin-bottom:-1px}.list-group-flush:first-child .list-group-item:first-child{border-top:0}.list-group-flush:last-child .list-group-item:last-child{margin-bottom:0;border-bottom:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:focus,.list-group-item-primary.list-group-item-action:hover{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:focus,.list-group-item-secondary.list-group-item-action:hover{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:focus,.list-group-item-success.list-group-item-action:hover{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:focus,.list-group-item-info.list-group-item-action:hover{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:focus,.list-group-item-warning.list-group-item-action:hover{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:focus,.list-group-item-danger.list-group-item-action:hover{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:focus,.list-group-item-light.list-group-item-action:hover{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:focus,.list-group-item-dark.list-group-item-action:hover{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:hover{color:#000;text-decoration:none}.close:not(:disabled):not(.disabled):focus,.close:not(:disabled):not(.disabled):hover{opacity:.75}button.close{padding:0;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}a.close.disabled{pointer-events:none}.toast{max-width:350px;overflow:hidden;font-size:.875rem;background-color:rgba(255,255,255,.85);background-clip:padding-box;border:1px solid rgba(0,0,0,.1);box-shadow:0 .25rem .75rem rgba(0,0,0,.1);-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);opacity:0;border-radius:.25rem}.toast:not(:last-child){margin-bottom:.75rem}.toast.showing{opacity:1}.toast.show{display:block;opacity:1}.toast.hide{display:none}.toast-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:.25rem .75rem;color:#6c757d;background-color:rgba(255,255,255,.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,.05)}.toast-body{padding:.75rem}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out;transition:transform .3s ease-out,-webkit-transform .3s ease-out;-webkit-transform:translate(0,-50px);transform:translate(0,-50px)}@media (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{-webkit-transform:none;transform:none}.modal-dialog-scrollable{display:-ms-flexbox;display:flex;max-height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 1rem);overflow:hidden}.modal-dialog-scrollable .modal-footer,.modal-dialog-scrollable .modal-header{-ms-flex-negative:0;flex-shrink:0}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:calc(100% - 1rem)}.modal-dialog-centered::before{display:block;height:calc(100vh - 1rem);content:\"\"}.modal-dialog-centered.modal-dialog-scrollable{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.modal-dialog-centered.modal-dialog-scrollable .modal-content{max-height:none}.modal-dialog-centered.modal-dialog-scrollable::before{content:none}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:.3rem;border-top-right-radius:.3rem}.modal-header .close{padding:1rem 1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:1rem}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:1rem;border-top:1px solid #dee2e6;border-bottom-right-radius:.3rem;border-bottom-left-radius:.3rem}.modal-footer>:not(:first-child){margin-left:.25rem}.modal-footer>:not(:last-child){margin-right:.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{max-height:calc(100% - 3.5rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-dialog-centered::before{height:calc(100vh - 3.5rem)}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width:1200px){.modal-xl{max-width:1140px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .arrow{position:absolute;display:block;width:.8rem;height:.4rem}.tooltip .arrow::before{position:absolute;content:\"\";border-color:transparent;border-style:solid}.bs-tooltip-auto[x-placement^=top],.bs-tooltip-top{padding:.4rem 0}.bs-tooltip-auto[x-placement^=top] .arrow,.bs-tooltip-top .arrow{bottom:0}.bs-tooltip-auto[x-placement^=top] .arrow::before,.bs-tooltip-top .arrow::before{top:0;border-width:.4rem .4rem 0;border-top-color:#000}.bs-tooltip-auto[x-placement^=right],.bs-tooltip-right{padding:0 .4rem}.bs-tooltip-auto[x-placement^=right] .arrow,.bs-tooltip-right .arrow{left:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=right] .arrow::before,.bs-tooltip-right .arrow::before{right:0;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.bs-tooltip-auto[x-placement^=bottom],.bs-tooltip-bottom{padding:.4rem 0}.bs-tooltip-auto[x-placement^=bottom] .arrow,.bs-tooltip-bottom .arrow{top:0}.bs-tooltip-auto[x-placement^=bottom] .arrow::before,.bs-tooltip-bottom .arrow::before{bottom:0;border-width:0 .4rem .4rem;border-bottom-color:#000}.bs-tooltip-auto[x-placement^=left],.bs-tooltip-left{padding:0 .4rem}.bs-tooltip-auto[x-placement^=left] .arrow,.bs-tooltip-left .arrow{right:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=left] .arrow::before,.bs-tooltip-left .arrow::before{left:0;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem}.popover .arrow{position:absolute;display:block;width:1rem;height:.5rem;margin:0 .3rem}.popover .arrow::after,.popover .arrow::before{position:absolute;display:block;content:\"\";border-color:transparent;border-style:solid}.bs-popover-auto[x-placement^=top],.bs-popover-top{margin-bottom:.5rem}.bs-popover-auto[x-placement^=top]>.arrow,.bs-popover-top>.arrow{bottom:calc((.5rem + 1px) * -1)}.bs-popover-auto[x-placement^=top]>.arrow::before,.bs-popover-top>.arrow::before{bottom:0;border-width:.5rem .5rem 0;border-top-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=top]>.arrow::after,.bs-popover-top>.arrow::after{bottom:1px;border-width:.5rem .5rem 0;border-top-color:#fff}.bs-popover-auto[x-placement^=right],.bs-popover-right{margin-left:.5rem}.bs-popover-auto[x-placement^=right]>.arrow,.bs-popover-right>.arrow{left:calc((.5rem + 1px) * -1);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=right]>.arrow::before,.bs-popover-right>.arrow::before{left:0;border-width:.5rem .5rem .5rem 0;border-right-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=right]>.arrow::after,.bs-popover-right>.arrow::after{left:1px;border-width:.5rem .5rem .5rem 0;border-right-color:#fff}.bs-popover-auto[x-placement^=bottom],.bs-popover-bottom{margin-top:.5rem}.bs-popover-auto[x-placement^=bottom]>.arrow,.bs-popover-bottom>.arrow{top:calc((.5rem + 1px) * -1)}.bs-popover-auto[x-placement^=bottom]>.arrow::before,.bs-popover-bottom>.arrow::before{top:0;border-width:0 .5rem .5rem .5rem;border-bottom-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=bottom]>.arrow::after,.bs-popover-bottom>.arrow::after{top:1px;border-width:0 .5rem .5rem .5rem;border-bottom-color:#fff}.bs-popover-auto[x-placement^=bottom] .popover-header::before,.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:\"\";border-bottom:1px solid #f7f7f7}.bs-popover-auto[x-placement^=left],.bs-popover-left{margin-right:.5rem}.bs-popover-auto[x-placement^=left]>.arrow,.bs-popover-left>.arrow{right:calc((.5rem + 1px) * -1);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=left]>.arrow::before,.bs-popover-left>.arrow::before{right:0;border-width:.5rem 0 .5rem .5rem;border-left-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=left]>.arrow::after,.bs-popover-left>.arrow::after{right:1px;border-width:.5rem 0 .5rem .5rem;border-left-color:#fff}.popover-header{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:.5rem .75rem;color:#212529}.carousel{position:relative}.carousel.pointer-event{-ms-touch-action:pan-y;touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:\"\"}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;transition:-webkit-transform .6s ease-in-out;transition:transform .6s ease-in-out;transition:transform .6s ease-in-out,-webkit-transform .6s ease-in-out}@media (prefers-reduced-motion:reduce){.carousel-item{transition:none}}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block}.active.carousel-item-right,.carousel-item-next:not(.carousel-item-left){-webkit-transform:translateX(100%);transform:translateX(100%)}.active.carousel-item-left,.carousel-item-prev:not(.carousel-item-right){-webkit-transform:translateX(-100%);transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;transition-property:opacity;-webkit-transform:none;transform:none}.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right,.carousel-fade .carousel-item.active{z-index:1;opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{z-index:0;opacity:0;transition:0s .6s opacity}@media (prefers-reduced-motion:reduce){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{transition:none}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;z-index:1;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5;transition:opacity .15s ease}@media (prefers-reduced-motion:reduce){.carousel-control-next,.carousel-control-prev{transition:none}}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:20px;height:20px;background:no-repeat 50%/100% 100%}.carousel-control-prev-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/svg%3e\")}.carousel-control-next-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/svg%3e\")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:15;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{box-sizing:content-box;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity .6s ease}@media (prefers-reduced-motion:reduce){.carousel-indicators li{transition:none}}.carousel-indicators .active{opacity:1}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}@-webkit-keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.spinner-border{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;border:.25em solid currentColor;border-right-color:transparent;border-radius:50%;-webkit-animation:spinner-border .75s linear infinite;animation:spinner-border .75s linear infinite}.spinner-border-sm{width:1rem;height:1rem;border-width:.2em}@-webkit-keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1}}@keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1}}.spinner-grow{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;background-color:currentColor;border-radius:50%;opacity:0;-webkit-animation:spinner-grow .75s linear infinite;animation:spinner-grow .75s linear infinite}.spinner-grow-sm{width:1rem;height:1rem}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.bg-primary{background-color:#007bff!important}a.bg-primary:focus,a.bg-primary:hover,button.bg-primary:focus,button.bg-primary:hover{background-color:#0062cc!important}.bg-secondary{background-color:#6c757d!important}a.bg-secondary:focus,a.bg-secondary:hover,button.bg-secondary:focus,button.bg-secondary:hover{background-color:#545b62!important}.bg-success{background-color:#28a745!important}a.bg-success:focus,a.bg-success:hover,button.bg-success:focus,button.bg-success:hover{background-color:#1e7e34!important}.bg-info{background-color:#17a2b8!important}a.bg-info:focus,a.bg-info:hover,button.bg-info:focus,button.bg-info:hover{background-color:#117a8b!important}.bg-warning{background-color:#ffc107!important}a.bg-warning:focus,a.bg-warning:hover,button.bg-warning:focus,button.bg-warning:hover{background-color:#d39e00!important}.bg-danger{background-color:#dc3545!important}a.bg-danger:focus,a.bg-danger:hover,button.bg-danger:focus,button.bg-danger:hover{background-color:#bd2130!important}.bg-light{background-color:#f8f9fa!important}a.bg-light:focus,a.bg-light:hover,button.bg-light:focus,button.bg-light:hover{background-color:#dae0e5!important}.bg-dark{background-color:#343a40!important}a.bg-dark:focus,a.bg-dark:hover,button.bg-dark:focus,button.bg-dark:hover{background-color:#1d2124!important}.bg-white{background-color:#fff!important}.bg-transparent{background-color:transparent!important}.border{border:1px solid #dee2e6!important}.border-top{border-top:1px solid #dee2e6!important}.border-right{border-right:1px solid #dee2e6!important}.border-bottom{border-bottom:1px solid #dee2e6!important}.border-left{border-left:1px solid #dee2e6!important}.border-0{border:0!important}.border-top-0{border-top:0!important}.border-right-0{border-right:0!important}.border-bottom-0{border-bottom:0!important}.border-left-0{border-left:0!important}.border-primary{border-color:#007bff!important}.border-secondary{border-color:#6c757d!important}.border-success{border-color:#28a745!important}.border-info{border-color:#17a2b8!important}.border-warning{border-color:#ffc107!important}.border-danger{border-color:#dc3545!important}.border-light{border-color:#f8f9fa!important}.border-dark{border-color:#343a40!important}.border-white{border-color:#fff!important}.rounded-sm{border-radius:.2rem!important}.rounded{border-radius:.25rem!important}.rounded-top{border-top-left-radius:.25rem!important;border-top-right-radius:.25rem!important}.rounded-right{border-top-right-radius:.25rem!important;border-bottom-right-radius:.25rem!important}.rounded-bottom{border-bottom-right-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-left{border-top-left-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-lg{border-radius:.3rem!important}.rounded-circle{border-radius:50%!important}.rounded-pill{border-radius:50rem!important}.rounded-0{border-radius:0!important}.clearfix::after{display:block;clear:both;content:\"\"}.d-none{display:none!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex{display:-ms-flexbox!important;display:flex!important}.d-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}@media (min-width:576px){.d-sm-none{display:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:-ms-flexbox!important;display:flex!important}.d-sm-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:768px){.d-md-none{display:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:-ms-flexbox!important;display:flex!important}.d-md-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:992px){.d-lg-none{display:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:-ms-flexbox!important;display:flex!important}.d-lg-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:1200px){.d-xl-none{display:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:-ms-flexbox!important;display:flex!important}.d-xl-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media print{.d-print-none{display:none!important}.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:-ms-flexbox!important;display:flex!important}.d-print-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:\"\"}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.857143%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-center{-ms-flex-align:center!important;align-items:center!important}.align-items-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.flex-sm-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-sm-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-sm-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-sm-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-sm-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-sm-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-sm-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-sm-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-sm-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-sm-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-sm-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-sm-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-sm-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-sm-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-sm-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-sm-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-sm-center{-ms-flex-align:center!important;align-items:center!important}.align-items-sm-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-sm-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-sm-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-sm-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-sm-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-sm-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-sm-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-sm-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-sm-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-sm-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-sm-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-sm-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-sm-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-sm-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.flex-md-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-md-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-md-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-md-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-md-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-md-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-md-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-md-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-md-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-md-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-md-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-md-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-md-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-md-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-md-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-md-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-md-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-md-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-md-center{-ms-flex-align:center!important;align-items:center!important}.align-items-md-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-md-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-md-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-md-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-md-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-md-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-md-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-md-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-md-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-md-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-md-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-md-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-md-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-md-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:992px){.flex-lg-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-lg-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-lg-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-lg-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-lg-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-lg-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-lg-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-lg-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-lg-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-lg-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-lg-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-lg-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-lg-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-lg-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-lg-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-lg-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-lg-center{-ms-flex-align:center!important;align-items:center!important}.align-items-lg-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-lg-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-lg-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-lg-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-lg-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-lg-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-lg-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-lg-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-lg-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-lg-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-lg-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-lg-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-lg-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-lg-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:1200px){.flex-xl-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-xl-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-xl-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-xl-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-xl-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-xl-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-xl-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-xl-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-xl-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-xl-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-xl-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-xl-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-xl-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-xl-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-xl-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-xl-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-xl-center{-ms-flex-align:center!important;align-items:center!important}.align-items-xl-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-xl-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-xl-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-xl-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-xl-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-xl-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-xl-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-xl-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-xl-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-xl-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-xl-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-xl-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-xl-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-xl-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}.float-left{float:left!important}.float-right{float:right!important}.float-none{float:none!important}@media (min-width:576px){.float-sm-left{float:left!important}.float-sm-right{float:right!important}.float-sm-none{float:none!important}}@media (min-width:768px){.float-md-left{float:left!important}.float-md-right{float:right!important}.float-md-none{float:none!important}}@media (min-width:992px){.float-lg-left{float:left!important}.float-lg-right{float:right!important}.float-lg-none{float:none!important}}@media (min-width:1200px){.float-xl-left{float:left!important}.float-xl-right{float:right!important}.float-xl-none{float:none!important}}.overflow-auto{overflow:auto!important}.overflow-hidden{overflow:hidden!important}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:-webkit-sticky!important;position:sticky!important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports ((position:-webkit-sticky) or (position:sticky)){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{box-shadow:0 .125rem .25rem rgba(0,0,0,.075)!important}.shadow{box-shadow:0 .5rem 1rem rgba(0,0,0,.15)!important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,.175)!important}.shadow-none{box-shadow:none!important}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mw-100{max-width:100%!important}.mh-100{max-height:100%!important}.min-vw-100{min-width:100vw!important}.min-vh-100{min-height:100vh!important}.vw-100{width:100vw!important}.vh-100{height:100vh!important}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:\"\";background-color:rgba(0,0,0,0)}.m-0{margin:0!important}.mt-0,.my-0{margin-top:0!important}.mr-0,.mx-0{margin-right:0!important}.mb-0,.my-0{margin-bottom:0!important}.ml-0,.mx-0{margin-left:0!important}.m-1{margin:.25rem!important}.mt-1,.my-1{margin-top:.25rem!important}.mr-1,.mx-1{margin-right:.25rem!important}.mb-1,.my-1{margin-bottom:.25rem!important}.ml-1,.mx-1{margin-left:.25rem!important}.m-2{margin:.5rem!important}.mt-2,.my-2{margin-top:.5rem!important}.mr-2,.mx-2{margin-right:.5rem!important}.mb-2,.my-2{margin-bottom:.5rem!important}.ml-2,.mx-2{margin-left:.5rem!important}.m-3{margin:1rem!important}.mt-3,.my-3{margin-top:1rem!important}.mr-3,.mx-3{margin-right:1rem!important}.mb-3,.my-3{margin-bottom:1rem!important}.ml-3,.mx-3{margin-left:1rem!important}.m-4{margin:1.5rem!important}.mt-4,.my-4{margin-top:1.5rem!important}.mr-4,.mx-4{margin-right:1.5rem!important}.mb-4,.my-4{margin-bottom:1.5rem!important}.ml-4,.mx-4{margin-left:1.5rem!important}.m-5{margin:3rem!important}.mt-5,.my-5{margin-top:3rem!important}.mr-5,.mx-5{margin-right:3rem!important}.mb-5,.my-5{margin-bottom:3rem!important}.ml-5,.mx-5{margin-left:3rem!important}.p-0{padding:0!important}.pt-0,.py-0{padding-top:0!important}.pr-0,.px-0{padding-right:0!important}.pb-0,.py-0{padding-bottom:0!important}.pl-0,.px-0{padding-left:0!important}.p-1{padding:.25rem!important}.pt-1,.py-1{padding-top:.25rem!important}.pr-1,.px-1{padding-right:.25rem!important}.pb-1,.py-1{padding-bottom:.25rem!important}.pl-1,.px-1{padding-left:.25rem!important}.p-2{padding:.5rem!important}.pt-2,.py-2{padding-top:.5rem!important}.pr-2,.px-2{padding-right:.5rem!important}.pb-2,.py-2{padding-bottom:.5rem!important}.pl-2,.px-2{padding-left:.5rem!important}.p-3{padding:1rem!important}.pt-3,.py-3{padding-top:1rem!important}.pr-3,.px-3{padding-right:1rem!important}.pb-3,.py-3{padding-bottom:1rem!important}.pl-3,.px-3{padding-left:1rem!important}.p-4{padding:1.5rem!important}.pt-4,.py-4{padding-top:1.5rem!important}.pr-4,.px-4{padding-right:1.5rem!important}.pb-4,.py-4{padding-bottom:1.5rem!important}.pl-4,.px-4{padding-left:1.5rem!important}.p-5{padding:3rem!important}.pt-5,.py-5{padding-top:3rem!important}.pr-5,.px-5{padding-right:3rem!important}.pb-5,.py-5{padding-bottom:3rem!important}.pl-5,.px-5{padding-left:3rem!important}.m-n1{margin:-.25rem!important}.mt-n1,.my-n1{margin-top:-.25rem!important}.mr-n1,.mx-n1{margin-right:-.25rem!important}.mb-n1,.my-n1{margin-bottom:-.25rem!important}.ml-n1,.mx-n1{margin-left:-.25rem!important}.m-n2{margin:-.5rem!important}.mt-n2,.my-n2{margin-top:-.5rem!important}.mr-n2,.mx-n2{margin-right:-.5rem!important}.mb-n2,.my-n2{margin-bottom:-.5rem!important}.ml-n2,.mx-n2{margin-left:-.5rem!important}.m-n3{margin:-1rem!important}.mt-n3,.my-n3{margin-top:-1rem!important}.mr-n3,.mx-n3{margin-right:-1rem!important}.mb-n3,.my-n3{margin-bottom:-1rem!important}.ml-n3,.mx-n3{margin-left:-1rem!important}.m-n4{margin:-1.5rem!important}.mt-n4,.my-n4{margin-top:-1.5rem!important}.mr-n4,.mx-n4{margin-right:-1.5rem!important}.mb-n4,.my-n4{margin-bottom:-1.5rem!important}.ml-n4,.mx-n4{margin-left:-1.5rem!important}.m-n5{margin:-3rem!important}.mt-n5,.my-n5{margin-top:-3rem!important}.mr-n5,.mx-n5{margin-right:-3rem!important}.mb-n5,.my-n5{margin-bottom:-3rem!important}.ml-n5,.mx-n5{margin-left:-3rem!important}.m-auto{margin:auto!important}.mt-auto,.my-auto{margin-top:auto!important}.mr-auto,.mx-auto{margin-right:auto!important}.mb-auto,.my-auto{margin-bottom:auto!important}.ml-auto,.mx-auto{margin-left:auto!important}@media (min-width:576px){.m-sm-0{margin:0!important}.mt-sm-0,.my-sm-0{margin-top:0!important}.mr-sm-0,.mx-sm-0{margin-right:0!important}.mb-sm-0,.my-sm-0{margin-bottom:0!important}.ml-sm-0,.mx-sm-0{margin-left:0!important}.m-sm-1{margin:.25rem!important}.mt-sm-1,.my-sm-1{margin-top:.25rem!important}.mr-sm-1,.mx-sm-1{margin-right:.25rem!important}.mb-sm-1,.my-sm-1{margin-bottom:.25rem!important}.ml-sm-1,.mx-sm-1{margin-left:.25rem!important}.m-sm-2{margin:.5rem!important}.mt-sm-2,.my-sm-2{margin-top:.5rem!important}.mr-sm-2,.mx-sm-2{margin-right:.5rem!important}.mb-sm-2,.my-sm-2{margin-bottom:.5rem!important}.ml-sm-2,.mx-sm-2{margin-left:.5rem!important}.m-sm-3{margin:1rem!important}.mt-sm-3,.my-sm-3{margin-top:1rem!important}.mr-sm-3,.mx-sm-3{margin-right:1rem!important}.mb-sm-3,.my-sm-3{margin-bottom:1rem!important}.ml-sm-3,.mx-sm-3{margin-left:1rem!important}.m-sm-4{margin:1.5rem!important}.mt-sm-4,.my-sm-4{margin-top:1.5rem!important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem!important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem!important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem!important}.m-sm-5{margin:3rem!important}.mt-sm-5,.my-sm-5{margin-top:3rem!important}.mr-sm-5,.mx-sm-5{margin-right:3rem!important}.mb-sm-5,.my-sm-5{margin-bottom:3rem!important}.ml-sm-5,.mx-sm-5{margin-left:3rem!important}.p-sm-0{padding:0!important}.pt-sm-0,.py-sm-0{padding-top:0!important}.pr-sm-0,.px-sm-0{padding-right:0!important}.pb-sm-0,.py-sm-0{padding-bottom:0!important}.pl-sm-0,.px-sm-0{padding-left:0!important}.p-sm-1{padding:.25rem!important}.pt-sm-1,.py-sm-1{padding-top:.25rem!important}.pr-sm-1,.px-sm-1{padding-right:.25rem!important}.pb-sm-1,.py-sm-1{padding-bottom:.25rem!important}.pl-sm-1,.px-sm-1{padding-left:.25rem!important}.p-sm-2{padding:.5rem!important}.pt-sm-2,.py-sm-2{padding-top:.5rem!important}.pr-sm-2,.px-sm-2{padding-right:.5rem!important}.pb-sm-2,.py-sm-2{padding-bottom:.5rem!important}.pl-sm-2,.px-sm-2{padding-left:.5rem!important}.p-sm-3{padding:1rem!important}.pt-sm-3,.py-sm-3{padding-top:1rem!important}.pr-sm-3,.px-sm-3{padding-right:1rem!important}.pb-sm-3,.py-sm-3{padding-bottom:1rem!important}.pl-sm-3,.px-sm-3{padding-left:1rem!important}.p-sm-4{padding:1.5rem!important}.pt-sm-4,.py-sm-4{padding-top:1.5rem!important}.pr-sm-4,.px-sm-4{padding-right:1.5rem!important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem!important}.pl-sm-4,.px-sm-4{padding-left:1.5rem!important}.p-sm-5{padding:3rem!important}.pt-sm-5,.py-sm-5{padding-top:3rem!important}.pr-sm-5,.px-sm-5{padding-right:3rem!important}.pb-sm-5,.py-sm-5{padding-bottom:3rem!important}.pl-sm-5,.px-sm-5{padding-left:3rem!important}.m-sm-n1{margin:-.25rem!important}.mt-sm-n1,.my-sm-n1{margin-top:-.25rem!important}.mr-sm-n1,.mx-sm-n1{margin-right:-.25rem!important}.mb-sm-n1,.my-sm-n1{margin-bottom:-.25rem!important}.ml-sm-n1,.mx-sm-n1{margin-left:-.25rem!important}.m-sm-n2{margin:-.5rem!important}.mt-sm-n2,.my-sm-n2{margin-top:-.5rem!important}.mr-sm-n2,.mx-sm-n2{margin-right:-.5rem!important}.mb-sm-n2,.my-sm-n2{margin-bottom:-.5rem!important}.ml-sm-n2,.mx-sm-n2{margin-left:-.5rem!important}.m-sm-n3{margin:-1rem!important}.mt-sm-n3,.my-sm-n3{margin-top:-1rem!important}.mr-sm-n3,.mx-sm-n3{margin-right:-1rem!important}.mb-sm-n3,.my-sm-n3{margin-bottom:-1rem!important}.ml-sm-n3,.mx-sm-n3{margin-left:-1rem!important}.m-sm-n4{margin:-1.5rem!important}.mt-sm-n4,.my-sm-n4{margin-top:-1.5rem!important}.mr-sm-n4,.mx-sm-n4{margin-right:-1.5rem!important}.mb-sm-n4,.my-sm-n4{margin-bottom:-1.5rem!important}.ml-sm-n4,.mx-sm-n4{margin-left:-1.5rem!important}.m-sm-n5{margin:-3rem!important}.mt-sm-n5,.my-sm-n5{margin-top:-3rem!important}.mr-sm-n5,.mx-sm-n5{margin-right:-3rem!important}.mb-sm-n5,.my-sm-n5{margin-bottom:-3rem!important}.ml-sm-n5,.mx-sm-n5{margin-left:-3rem!important}.m-sm-auto{margin:auto!important}.mt-sm-auto,.my-sm-auto{margin-top:auto!important}.mr-sm-auto,.mx-sm-auto{margin-right:auto!important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto!important}.ml-sm-auto,.mx-sm-auto{margin-left:auto!important}}@media (min-width:768px){.m-md-0{margin:0!important}.mt-md-0,.my-md-0{margin-top:0!important}.mr-md-0,.mx-md-0{margin-right:0!important}.mb-md-0,.my-md-0{margin-bottom:0!important}.ml-md-0,.mx-md-0{margin-left:0!important}.m-md-1{margin:.25rem!important}.mt-md-1,.my-md-1{margin-top:.25rem!important}.mr-md-1,.mx-md-1{margin-right:.25rem!important}.mb-md-1,.my-md-1{margin-bottom:.25rem!important}.ml-md-1,.mx-md-1{margin-left:.25rem!important}.m-md-2{margin:.5rem!important}.mt-md-2,.my-md-2{margin-top:.5rem!important}.mr-md-2,.mx-md-2{margin-right:.5rem!important}.mb-md-2,.my-md-2{margin-bottom:.5rem!important}.ml-md-2,.mx-md-2{margin-left:.5rem!important}.m-md-3{margin:1rem!important}.mt-md-3,.my-md-3{margin-top:1rem!important}.mr-md-3,.mx-md-3{margin-right:1rem!important}.mb-md-3,.my-md-3{margin-bottom:1rem!important}.ml-md-3,.mx-md-3{margin-left:1rem!important}.m-md-4{margin:1.5rem!important}.mt-md-4,.my-md-4{margin-top:1.5rem!important}.mr-md-4,.mx-md-4{margin-right:1.5rem!important}.mb-md-4,.my-md-4{margin-bottom:1.5rem!important}.ml-md-4,.mx-md-4{margin-left:1.5rem!important}.m-md-5{margin:3rem!important}.mt-md-5,.my-md-5{margin-top:3rem!important}.mr-md-5,.mx-md-5{margin-right:3rem!important}.mb-md-5,.my-md-5{margin-bottom:3rem!important}.ml-md-5,.mx-md-5{margin-left:3rem!important}.p-md-0{padding:0!important}.pt-md-0,.py-md-0{padding-top:0!important}.pr-md-0,.px-md-0{padding-right:0!important}.pb-md-0,.py-md-0{padding-bottom:0!important}.pl-md-0,.px-md-0{padding-left:0!important}.p-md-1{padding:.25rem!important}.pt-md-1,.py-md-1{padding-top:.25rem!important}.pr-md-1,.px-md-1{padding-right:.25rem!important}.pb-md-1,.py-md-1{padding-bottom:.25rem!important}.pl-md-1,.px-md-1{padding-left:.25rem!important}.p-md-2{padding:.5rem!important}.pt-md-2,.py-md-2{padding-top:.5rem!important}.pr-md-2,.px-md-2{padding-right:.5rem!important}.pb-md-2,.py-md-2{padding-bottom:.5rem!important}.pl-md-2,.px-md-2{padding-left:.5rem!important}.p-md-3{padding:1rem!important}.pt-md-3,.py-md-3{padding-top:1rem!important}.pr-md-3,.px-md-3{padding-right:1rem!important}.pb-md-3,.py-md-3{padding-bottom:1rem!important}.pl-md-3,.px-md-3{padding-left:1rem!important}.p-md-4{padding:1.5rem!important}.pt-md-4,.py-md-4{padding-top:1.5rem!important}.pr-md-4,.px-md-4{padding-right:1.5rem!important}.pb-md-4,.py-md-4{padding-bottom:1.5rem!important}.pl-md-4,.px-md-4{padding-left:1.5rem!important}.p-md-5{padding:3rem!important}.pt-md-5,.py-md-5{padding-top:3rem!important}.pr-md-5,.px-md-5{padding-right:3rem!important}.pb-md-5,.py-md-5{padding-bottom:3rem!important}.pl-md-5,.px-md-5{padding-left:3rem!important}.m-md-n1{margin:-.25rem!important}.mt-md-n1,.my-md-n1{margin-top:-.25rem!important}.mr-md-n1,.mx-md-n1{margin-right:-.25rem!important}.mb-md-n1,.my-md-n1{margin-bottom:-.25rem!important}.ml-md-n1,.mx-md-n1{margin-left:-.25rem!important}.m-md-n2{margin:-.5rem!important}.mt-md-n2,.my-md-n2{margin-top:-.5rem!important}.mr-md-n2,.mx-md-n2{margin-right:-.5rem!important}.mb-md-n2,.my-md-n2{margin-bottom:-.5rem!important}.ml-md-n2,.mx-md-n2{margin-left:-.5rem!important}.m-md-n3{margin:-1rem!important}.mt-md-n3,.my-md-n3{margin-top:-1rem!important}.mr-md-n3,.mx-md-n3{margin-right:-1rem!important}.mb-md-n3,.my-md-n3{margin-bottom:-1rem!important}.ml-md-n3,.mx-md-n3{margin-left:-1rem!important}.m-md-n4{margin:-1.5rem!important}.mt-md-n4,.my-md-n4{margin-top:-1.5rem!important}.mr-md-n4,.mx-md-n4{margin-right:-1.5rem!important}.mb-md-n4,.my-md-n4{margin-bottom:-1.5rem!important}.ml-md-n4,.mx-md-n4{margin-left:-1.5rem!important}.m-md-n5{margin:-3rem!important}.mt-md-n5,.my-md-n5{margin-top:-3rem!important}.mr-md-n5,.mx-md-n5{margin-right:-3rem!important}.mb-md-n5,.my-md-n5{margin-bottom:-3rem!important}.ml-md-n5,.mx-md-n5{margin-left:-3rem!important}.m-md-auto{margin:auto!important}.mt-md-auto,.my-md-auto{margin-top:auto!important}.mr-md-auto,.mx-md-auto{margin-right:auto!important}.mb-md-auto,.my-md-auto{margin-bottom:auto!important}.ml-md-auto,.mx-md-auto{margin-left:auto!important}}@media (min-width:992px){.m-lg-0{margin:0!important}.mt-lg-0,.my-lg-0{margin-top:0!important}.mr-lg-0,.mx-lg-0{margin-right:0!important}.mb-lg-0,.my-lg-0{margin-bottom:0!important}.ml-lg-0,.mx-lg-0{margin-left:0!important}.m-lg-1{margin:.25rem!important}.mt-lg-1,.my-lg-1{margin-top:.25rem!important}.mr-lg-1,.mx-lg-1{margin-right:.25rem!important}.mb-lg-1,.my-lg-1{margin-bottom:.25rem!important}.ml-lg-1,.mx-lg-1{margin-left:.25rem!important}.m-lg-2{margin:.5rem!important}.mt-lg-2,.my-lg-2{margin-top:.5rem!important}.mr-lg-2,.mx-lg-2{margin-right:.5rem!important}.mb-lg-2,.my-lg-2{margin-bottom:.5rem!important}.ml-lg-2,.mx-lg-2{margin-left:.5rem!important}.m-lg-3{margin:1rem!important}.mt-lg-3,.my-lg-3{margin-top:1rem!important}.mr-lg-3,.mx-lg-3{margin-right:1rem!important}.mb-lg-3,.my-lg-3{margin-bottom:1rem!important}.ml-lg-3,.mx-lg-3{margin-left:1rem!important}.m-lg-4{margin:1.5rem!important}.mt-lg-4,.my-lg-4{margin-top:1.5rem!important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem!important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem!important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem!important}.m-lg-5{margin:3rem!important}.mt-lg-5,.my-lg-5{margin-top:3rem!important}.mr-lg-5,.mx-lg-5{margin-right:3rem!important}.mb-lg-5,.my-lg-5{margin-bottom:3rem!important}.ml-lg-5,.mx-lg-5{margin-left:3rem!important}.p-lg-0{padding:0!important}.pt-lg-0,.py-lg-0{padding-top:0!important}.pr-lg-0,.px-lg-0{padding-right:0!important}.pb-lg-0,.py-lg-0{padding-bottom:0!important}.pl-lg-0,.px-lg-0{padding-left:0!important}.p-lg-1{padding:.25rem!important}.pt-lg-1,.py-lg-1{padding-top:.25rem!important}.pr-lg-1,.px-lg-1{padding-right:.25rem!important}.pb-lg-1,.py-lg-1{padding-bottom:.25rem!important}.pl-lg-1,.px-lg-1{padding-left:.25rem!important}.p-lg-2{padding:.5rem!important}.pt-lg-2,.py-lg-2{padding-top:.5rem!important}.pr-lg-2,.px-lg-2{padding-right:.5rem!important}.pb-lg-2,.py-lg-2{padding-bottom:.5rem!important}.pl-lg-2,.px-lg-2{padding-left:.5rem!important}.p-lg-3{padding:1rem!important}.pt-lg-3,.py-lg-3{padding-top:1rem!important}.pr-lg-3,.px-lg-3{padding-right:1rem!important}.pb-lg-3,.py-lg-3{padding-bottom:1rem!important}.pl-lg-3,.px-lg-3{padding-left:1rem!important}.p-lg-4{padding:1.5rem!important}.pt-lg-4,.py-lg-4{padding-top:1.5rem!important}.pr-lg-4,.px-lg-4{padding-right:1.5rem!important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem!important}.pl-lg-4,.px-lg-4{padding-left:1.5rem!important}.p-lg-5{padding:3rem!important}.pt-lg-5,.py-lg-5{padding-top:3rem!important}.pr-lg-5,.px-lg-5{padding-right:3rem!important}.pb-lg-5,.py-lg-5{padding-bottom:3rem!important}.pl-lg-5,.px-lg-5{padding-left:3rem!important}.m-lg-n1{margin:-.25rem!important}.mt-lg-n1,.my-lg-n1{margin-top:-.25rem!important}.mr-lg-n1,.mx-lg-n1{margin-right:-.25rem!important}.mb-lg-n1,.my-lg-n1{margin-bottom:-.25rem!important}.ml-lg-n1,.mx-lg-n1{margin-left:-.25rem!important}.m-lg-n2{margin:-.5rem!important}.mt-lg-n2,.my-lg-n2{margin-top:-.5rem!important}.mr-lg-n2,.mx-lg-n2{margin-right:-.5rem!important}.mb-lg-n2,.my-lg-n2{margin-bottom:-.5rem!important}.ml-lg-n2,.mx-lg-n2{margin-left:-.5rem!important}.m-lg-n3{margin:-1rem!important}.mt-lg-n3,.my-lg-n3{margin-top:-1rem!important}.mr-lg-n3,.mx-lg-n3{margin-right:-1rem!important}.mb-lg-n3,.my-lg-n3{margin-bottom:-1rem!important}.ml-lg-n3,.mx-lg-n3{margin-left:-1rem!important}.m-lg-n4{margin:-1.5rem!important}.mt-lg-n4,.my-lg-n4{margin-top:-1.5rem!important}.mr-lg-n4,.mx-lg-n4{margin-right:-1.5rem!important}.mb-lg-n4,.my-lg-n4{margin-bottom:-1.5rem!important}.ml-lg-n4,.mx-lg-n4{margin-left:-1.5rem!important}.m-lg-n5{margin:-3rem!important}.mt-lg-n5,.my-lg-n5{margin-top:-3rem!important}.mr-lg-n5,.mx-lg-n5{margin-right:-3rem!important}.mb-lg-n5,.my-lg-n5{margin-bottom:-3rem!important}.ml-lg-n5,.mx-lg-n5{margin-left:-3rem!important}.m-lg-auto{margin:auto!important}.mt-lg-auto,.my-lg-auto{margin-top:auto!important}.mr-lg-auto,.mx-lg-auto{margin-right:auto!important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto!important}.ml-lg-auto,.mx-lg-auto{margin-left:auto!important}}@media (min-width:1200px){.m-xl-0{margin:0!important}.mt-xl-0,.my-xl-0{margin-top:0!important}.mr-xl-0,.mx-xl-0{margin-right:0!important}.mb-xl-0,.my-xl-0{margin-bottom:0!important}.ml-xl-0,.mx-xl-0{margin-left:0!important}.m-xl-1{margin:.25rem!important}.mt-xl-1,.my-xl-1{margin-top:.25rem!important}.mr-xl-1,.mx-xl-1{margin-right:.25rem!important}.mb-xl-1,.my-xl-1{margin-bottom:.25rem!important}.ml-xl-1,.mx-xl-1{margin-left:.25rem!important}.m-xl-2{margin:.5rem!important}.mt-xl-2,.my-xl-2{margin-top:.5rem!important}.mr-xl-2,.mx-xl-2{margin-right:.5rem!important}.mb-xl-2,.my-xl-2{margin-bottom:.5rem!important}.ml-xl-2,.mx-xl-2{margin-left:.5rem!important}.m-xl-3{margin:1rem!important}.mt-xl-3,.my-xl-3{margin-top:1rem!important}.mr-xl-3,.mx-xl-3{margin-right:1rem!important}.mb-xl-3,.my-xl-3{margin-bottom:1rem!important}.ml-xl-3,.mx-xl-3{margin-left:1rem!important}.m-xl-4{margin:1.5rem!important}.mt-xl-4,.my-xl-4{margin-top:1.5rem!important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem!important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem!important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem!important}.m-xl-5{margin:3rem!important}.mt-xl-5,.my-xl-5{margin-top:3rem!important}.mr-xl-5,.mx-xl-5{margin-right:3rem!important}.mb-xl-5,.my-xl-5{margin-bottom:3rem!important}.ml-xl-5,.mx-xl-5{margin-left:3rem!important}.p-xl-0{padding:0!important}.pt-xl-0,.py-xl-0{padding-top:0!important}.pr-xl-0,.px-xl-0{padding-right:0!important}.pb-xl-0,.py-xl-0{padding-bottom:0!important}.pl-xl-0,.px-xl-0{padding-left:0!important}.p-xl-1{padding:.25rem!important}.pt-xl-1,.py-xl-1{padding-top:.25rem!important}.pr-xl-1,.px-xl-1{padding-right:.25rem!important}.pb-xl-1,.py-xl-1{padding-bottom:.25rem!important}.pl-xl-1,.px-xl-1{padding-left:.25rem!important}.p-xl-2{padding:.5rem!important}.pt-xl-2,.py-xl-2{padding-top:.5rem!important}.pr-xl-2,.px-xl-2{padding-right:.5rem!important}.pb-xl-2,.py-xl-2{padding-bottom:.5rem!important}.pl-xl-2,.px-xl-2{padding-left:.5rem!important}.p-xl-3{padding:1rem!important}.pt-xl-3,.py-xl-3{padding-top:1rem!important}.pr-xl-3,.px-xl-3{padding-right:1rem!important}.pb-xl-3,.py-xl-3{padding-bottom:1rem!important}.pl-xl-3,.px-xl-3{padding-left:1rem!important}.p-xl-4{padding:1.5rem!important}.pt-xl-4,.py-xl-4{padding-top:1.5rem!important}.pr-xl-4,.px-xl-4{padding-right:1.5rem!important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem!important}.pl-xl-4,.px-xl-4{padding-left:1.5rem!important}.p-xl-5{padding:3rem!important}.pt-xl-5,.py-xl-5{padding-top:3rem!important}.pr-xl-5,.px-xl-5{padding-right:3rem!important}.pb-xl-5,.py-xl-5{padding-bottom:3rem!important}.pl-xl-5,.px-xl-5{padding-left:3rem!important}.m-xl-n1{margin:-.25rem!important}.mt-xl-n1,.my-xl-n1{margin-top:-.25rem!important}.mr-xl-n1,.mx-xl-n1{margin-right:-.25rem!important}.mb-xl-n1,.my-xl-n1{margin-bottom:-.25rem!important}.ml-xl-n1,.mx-xl-n1{margin-left:-.25rem!important}.m-xl-n2{margin:-.5rem!important}.mt-xl-n2,.my-xl-n2{margin-top:-.5rem!important}.mr-xl-n2,.mx-xl-n2{margin-right:-.5rem!important}.mb-xl-n2,.my-xl-n2{margin-bottom:-.5rem!important}.ml-xl-n2,.mx-xl-n2{margin-left:-.5rem!important}.m-xl-n3{margin:-1rem!important}.mt-xl-n3,.my-xl-n3{margin-top:-1rem!important}.mr-xl-n3,.mx-xl-n3{margin-right:-1rem!important}.mb-xl-n3,.my-xl-n3{margin-bottom:-1rem!important}.ml-xl-n3,.mx-xl-n3{margin-left:-1rem!important}.m-xl-n4{margin:-1.5rem!important}.mt-xl-n4,.my-xl-n4{margin-top:-1.5rem!important}.mr-xl-n4,.mx-xl-n4{margin-right:-1.5rem!important}.mb-xl-n4,.my-xl-n4{margin-bottom:-1.5rem!important}.ml-xl-n4,.mx-xl-n4{margin-left:-1.5rem!important}.m-xl-n5{margin:-3rem!important}.mt-xl-n5,.my-xl-n5{margin-top:-3rem!important}.mr-xl-n5,.mx-xl-n5{margin-right:-3rem!important}.mb-xl-n5,.my-xl-n5{margin-bottom:-3rem!important}.ml-xl-n5,.mx-xl-n5{margin-left:-3rem!important}.m-xl-auto{margin:auto!important}.mt-xl-auto,.my-xl-auto{margin-top:auto!important}.mr-xl-auto,.mx-xl-auto{margin-right:auto!important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto!important}.ml-xl-auto,.mx-xl-auto{margin-left:auto!important}}.text-monospace{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace!important}.text-justify{text-align:justify!important}.text-wrap{white-space:normal!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}@media (min-width:576px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-light{font-weight:300!important}.font-weight-lighter{font-weight:lighter!important}.font-weight-normal{font-weight:400!important}.font-weight-bold{font-weight:700!important}.font-weight-bolder{font-weight:bolder!important}.font-italic{font-style:italic!important}.text-white{color:#fff!important}.text-primary{color:#007bff!important}a.text-primary:focus,a.text-primary:hover{color:#0056b3!important}.text-secondary{color:#6c757d!important}a.text-secondary:focus,a.text-secondary:hover{color:#494f54!important}.text-success{color:#28a745!important}a.text-success:focus,a.text-success:hover{color:#19692c!important}.text-info{color:#17a2b8!important}a.text-info:focus,a.text-info:hover{color:#0f6674!important}.text-warning{color:#ffc107!important}a.text-warning:focus,a.text-warning:hover{color:#ba8b00!important}.text-danger{color:#dc3545!important}a.text-danger:focus,a.text-danger:hover{color:#a71d2a!important}.text-light{color:#f8f9fa!important}a.text-light:focus,a.text-light:hover{color:#cbd3da!important}.text-dark{color:#343a40!important}a.text-dark:focus,a.text-dark:hover{color:#121416!important}.text-body{color:#212529!important}.text-muted{color:#6c757d!important}.text-black-50{color:rgba(0,0,0,.5)!important}.text-white-50{color:rgba(255,255,255,.5)!important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.text-decoration-none{text-decoration:none!important}.text-break{word-break:break-word!important;overflow-wrap:break-word!important}.text-reset{color:inherit!important}.visible{visibility:visible!important}.invisible{visibility:hidden!important}@media print{*,::after,::before{text-shadow:none!important;box-shadow:none!important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px!important}.container{min-width:992px!important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #dee2e6!important}.table-dark{color:inherit}.table-dark tbody+tbody,.table-dark td,.table-dark th,.table-dark thead th{border-color:#dee2e6}.table .thead-dark th{color:inherit;border-color:#dee2e6}}",""])},
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,n){var r,o,a={},i=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),s=null,c=0,u=[],d=n(/*! ./urls */89);function p(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=a[r.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](r.parts[i]);for(;i<r.parts.length;i++)o.parts.push(v(r.parts[i],t))}else{var l=[];for(i=0;i<r.parts.length;i++)l.push(v(r.parts[i],t));a[r.id]={id:r.id,refs:1,parts:l}}}}function f(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function m(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=u[u.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertAt.before,n);n.insertBefore(t,o)}}function g(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function b(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return h(t,e.attrs),m(e,t),t}function h(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function v(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=a}if(t.singleton){var i=c++;n=s||(s=b(t)),r=w.bind(null,n,i,!1),o=w.bind(null,n,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",h(t,e.attrs),m(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=d(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){g(n),n.href&&URL.revokeObjectURL(n.href)}):(n=b(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){g(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return p(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var i=n[o];(l=a[i.id]).refs--,r.push(l)}e&&p(f(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete a[l.id]}}}};var x,y=(x=[],function(e,t){return x[e]=t,x.filter(Boolean).join("\n")});function w(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=y(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}},
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},
/*!***********************************!*\
  !*** ./src/index.js + 69 modules ***!
  \***********************************/
/*! no exports provided */
/*! all exports used */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js because of ./node_modules/styled-components/dist/styled-components.browser.esm.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js because of ./node_modules/styled-components/dist/styled-components.browser.esm.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/@restart/context/forwardRef.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/@restart/hooks/useEventCallback.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/axios/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/classnames/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/create-react-context/lib/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/dom-helpers/style/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/dom-helpers/transition/end.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/dom-helpers/util/camelize.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/memoize-one/dist/memoize-one.esm.js because of ./node_modules/styled-components/dist/styled-components.browser.esm.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/prop-types/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/query-string/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/raf/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/react-dom/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/react-input-autosize/lib/AutosizeInput.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/react-router/node_modules/path-to-regexp/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/react/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/styled-components/dist/styled-components.browser.esm.js (<- Module uses injected variables (process)) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/uncontrollable/index.js (<- Module is not an ECMAScript module) */function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),a=n(5),i=n.n(a);function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var s=n(41),c=n.n(s),u=n(1),d=n.n(u);function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function m(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var g=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&f(e),a=t&&f(t),i=o||a;if(e&&f(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var s=r[r.length-1];l="."===s||".."===s||""===s}else l=!1;for(var c=0,u=r.length;u>=0;u--){var d=r[u];"."===d?m(r,u):".."===d?(m(r,u),c++):c&&(m(r,u),c--)}if(!i)for(;c--;c)r.unshift("..");!i||""===r[0]||r[0]&&f(r[0])||r.unshift("");var p=r.join("/");return l&&"/"!==p.substr(-1)&&(p+="/"),p},b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var h=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":b(t);if(r!==(void 0===n?"undefined":b(n)))return!1;if("object"===r){var o=t.valueOf(),a=n.valueOf();if(o!==t||a!==n)return e(o,a);var i=Object.keys(t),l=Object.keys(n);return i.length===l.length&&i.every(function(r){return e(t[r],n[r])})}return!1},v=!0,x="Invariant failed";var y=function(e,t){if(!e)throw v?new Error(x):new Error(x+": "+(t||""))};function w(e){return"/"===e.charAt(0)?e:"/"+e}function k(e){return"/"===e.charAt(0)?e.substr(1):e}function E(e,t){return function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)}(e,t)?e.substr(t.length):e}function C(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function S(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function O(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=p({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=g(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function T(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&h(e.state,t.state)}function A(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var a="function"==typeof e?e(t,n):e;"string"==typeof a?"function"==typeof r?r(a,o):o(!0):o(!1!==a)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}}var P=!("undefined"==typeof window||!window.document||!window.document.createElement);function _(e,t){t(window.confirm(e))}var j="popstate",N="hashchange";function I(){try{return window.history.state||{}}catch(e){return{}}}function R(e){void 0===e&&(e={}),P||y(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,i=a.forceRefresh,l=void 0!==i&&i,s=a.getUserConfirmation,c=void 0===s?_:s,u=a.keyLength,d=void 0===u?6:u,f=e.basename?C(w(e.basename)):"";function m(e){var t=e||{},n=t.key,r=t.state,o=window.location,a=o.pathname+o.search+o.hash;return f&&(a=E(a,f)),O(a,r,n)}function g(){return Math.random().toString(36).substr(2,d)}var b=A();function h(e){p(B,e),B.length=n.length,b.notifyListeners(B.location,B.action)}function v(e){(function(e){void 0===e.state&&navigator.userAgent.indexOf("CriOS")})(e)||T(m(e.state))}function x(){T(m(I()))}var k=!1;function T(e){if(k)k=!1,h();else{b.confirmTransitionTo(e,"POP",c,function(t){t?h({action:"POP",location:e}):function(e){var t=B.location,n=F.indexOf(t.key);-1===n&&(n=0);var r=F.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(k=!0,D(o))}(e)})}}var R=m(I()),F=[R.key];function M(e){return f+S(e)}function D(e){n.go(e)}var z=0;function L(e){1===(z+=e)&&1===e?(window.addEventListener(j,v),o&&window.addEventListener(N,x)):0===z&&(window.removeEventListener(j,v),o&&window.removeEventListener(N,x))}var U=!1;var B={length:n.length,action:"POP",location:R,createHref:M,push:function(e,t){var o=O(e,t,g(),B.location);b.confirmTransitionTo(o,"PUSH",c,function(e){if(e){var t=M(o),a=o.key,i=o.state;if(r)if(n.pushState({key:a,state:i},null,t),l)window.location.href=t;else{var s=F.indexOf(B.location.key),c=F.slice(0,-1===s?0:s+1);c.push(o.key),F=c,h({action:"PUSH",location:o})}else window.location.href=t}})},replace:function(e,t){var o=O(e,t,g(),B.location);b.confirmTransitionTo(o,"REPLACE",c,function(e){if(e){var t=M(o),a=o.key,i=o.state;if(r)if(n.replaceState({key:a,state:i},null,t),l)window.location.replace(t);else{var s=F.indexOf(B.location.key);-1!==s&&(F[s]=o.key),h({action:"REPLACE",location:o})}else window.location.replace(t)}})},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},block:function(e){void 0===e&&(e=!1);var t=b.setPrompt(e);return U||(L(1),U=!0),function(){return U&&(U=!1,L(-1)),t()}},listen:function(e){var t=b.appendListener(e);return L(1),function(){L(-1),t()}}};return B}var F="hashchange",M={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+k(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:k,decodePath:w},slash:{encodePath:w,decodePath:w}};function D(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function z(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)}function L(e){void 0===e&&(e={}),P||y(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?_:r,a=n.hashType,i=void 0===a?"slash":a,l=e.basename?C(w(e.basename)):"",s=M[i],c=s.encodePath,u=s.decodePath;function d(){var e=u(D());return l&&(e=E(e,l)),O(e)}var f=A();function m(e){p(U,e),U.length=t.length,f.notifyListeners(U.location,U.action)}var g=!1,b=null;function h(){var e=D(),t=c(e);if(e!==t)z(t);else{var n=d(),r=U.location;if(!g&&T(r,n))return;if(b===S(n))return;b=null,function(e){if(g)g=!1,m();else{f.confirmTransitionTo(e,"POP",o,function(t){t?m({action:"POP",location:e}):function(e){var t=U.location,n=j.lastIndexOf(S(t));-1===n&&(n=0);var r=j.lastIndexOf(S(e));-1===r&&(r=0);var o=n-r;o&&(g=!0,N(o))}(e)})}}(n)}}var v=D(),x=c(v);v!==x&&z(x);var k=d(),j=[S(k)];function N(e){t.go(e)}var I=0;function R(e){1===(I+=e)&&1===e?window.addEventListener(F,h):0===I&&window.removeEventListener(F,h)}var L=!1;var U={length:t.length,action:"POP",location:k,createHref:function(e){return"#"+c(l+S(e))},push:function(e,t){var n=O(e,void 0,void 0,U.location);f.confirmTransitionTo(n,"PUSH",o,function(e){if(e){var t=S(n),r=c(l+t);if(D()!==r){b=t,function(e){window.location.hash=e}(r);var o=j.lastIndexOf(S(U.location)),a=j.slice(0,-1===o?0:o+1);a.push(t),j=a,m({action:"PUSH",location:n})}else m()}})},replace:function(e,t){var n=O(e,void 0,void 0,U.location);f.confirmTransitionTo(n,"REPLACE",o,function(e){if(e){var t=S(n),r=c(l+t);D()!==r&&(b=t,z(r));var o=j.indexOf(S(U.location));-1!==o&&(j[o]=t),m({action:"REPLACE",location:n})}})},go:N,goBack:function(){N(-1)},goForward:function(){N(1)},block:function(e){void 0===e&&(e=!1);var t=f.setPrompt(e);return L||(R(1),L=!0),function(){return L&&(L=!1,R(-1)),t()}},listen:function(e){var t=f.appendListener(e);return R(1),function(){R(-1),t()}}};return U}function U(e,t,n){return Math.min(Math.max(e,t),n)}var B=n(19),V=n.n(B);n(8);function H(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var W=n(42),$=n.n(W),q=function(e){var t=c()();return t.Provider.displayName=e+".Provider",t.Consumer.displayName=e+".Consumer",t}("Router"),K=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen(function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e})),n}l(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(q.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(o.a.Component);o.a.Component;o.a.Component;var Y={},X=1e4,G=0;function Q(e,t){void 0===t&&(t={}),"string"==typeof t&&(t={path:t});var n=t,r=n.path,o=n.exact,a=void 0!==o&&o,i=n.strict,l=void 0!==i&&i,s=n.sensitive,c=void 0!==s&&s;return[].concat(r).reduce(function(t,n){if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=Y[n]||(Y[n]={});if(r[e])return r[e];var o=[],a={regexp:V()(e,o,t),keys:o};return G<X&&(r[e]=a,G++),a}(n,{end:a,strict:l,sensitive:c}),o=r.regexp,i=r.keys,s=o.exec(e);if(!s)return null;var u=s[0],d=s.slice(1),p=e===u;return a&&!p?null:{path:n,url:"/"===n&&""===u?"/":u,isExact:p,params:i.reduce(function(e,t,n){return e[t.name]=d[n],e},{})}},null)}var J=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(q.Consumer,null,function(t){t||y(!1);var n=e.props.location||t.location,r=p({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?Q(n.pathname,e.props):t.match}),a=e.props,i=a.children,l=a.component,s=a.render;(Array.isArray(i)&&0===i.length&&(i=null),"function"==typeof i)&&(void 0===(i=i(r))&&(i=null));return o.a.createElement(q.Provider,{value:r},i&&!function(e){return 0===o.a.Children.count(e)}(i)?i:r.match?l?o.a.createElement(l,r):s?s(r):null:null)})},t}(o.a.Component);function Z(e){return"/"===e.charAt(0)?e:"/"+e}function ee(e,t){if(!e)return t;var n=Z(e);return 0!==t.pathname.indexOf(n)?t:p({},t,{pathname:t.pathname.substr(n.length)})}function te(e){return"string"==typeof e?e:S(e)}function ne(e){return function(){y(!1)}}function re(){}o.a.Component;var oe=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(q.Consumer,null,function(t){t||y(!1);var n,r,a=e.props.location||t.location;return o.a.Children.forEach(e.props.children,function(e){if(null==r&&o.a.isValidElement(e)){n=e;var i=e.props.path||e.props.from;r=i?Q(a.pathname,p({},e.props,{path:i})):t.match}}),r?o.a.cloneElement(n,{location:a,computedMatch:r}):null})},t}(o.a.Component);function ae(e){var t=function(t){var n=t.wrappedComponentRef,r=H(t,["wrappedComponentRef"]);return o.a.createElement(J,{children:function(t){return o.a.createElement(e,p({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,$()(t,e)}var ie=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=R(t.props),t}return l(t,e),t.prototype.render=function(){return o.a.createElement(K,{history:this.history,children:this.props.children})},t}(o.a.Component);o.a.Component;var le=function(e){function t(){return e.apply(this,arguments)||this}l(t,e);var n=t.prototype;return n.handleClick=function(e,t){(this.props.onClick&&this.props.onClick(e),e.defaultPrevented||0!==e.button||this.props.target&&"_self"!==this.props.target||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))||(e.preventDefault(),(this.props.replace?t.replace:t.push)(this.props.to))},n.render=function(){var e=this,t=this.props,n=t.innerRef,r=(t.replace,t.to),a=H(t,["innerRef","replace","to"]);return o.a.createElement(q.Consumer,null,function(t){t||y(!1);var i="string"==typeof r?O(r,null,null,t.location):r,l=i?t.history.createHref(i):"";return o.a.createElement("a",p({},a,{onClick:function(n){return e.handleClick(n,t.history)},href:l,ref:n}))})},t}(o.a.Component);var se=n(4),ce=n(34),ue=n.n(ce),de=n(2),pe=n.n(de),fe=(n(53),{type:d.a.string.isRequired,as:d.a.elementType}),me=o.a.forwardRef(function(e,t){var n=e.as,r=void 0===n?"div":n,a=e.className,i=e.type,l=H(e,["as","className","type"]);return o.a.createElement(r,p({},l,{ref:t,className:pe()(a,i&&i+"-feedback")}))});me.displayName="Feedback",me.propTypes=fe,me.defaultProps={type:"valid"};var ge=me,be=o.a.createContext({controlId:void 0}),he=n(35),ve=n.n(he),xe=o.a.createContext(new Map),ye=(xe.Consumer,xe.Provider);function we(e,t){var n=Object(r.useContext)(xe);return e||n.get(t)||t}o.a.Component;var ke=o.a.forwardRef(function(e,t){var n,a,i=e.bsPrefix,l=e.type,s=e.size,c=e.id,u=e.className,d=e.isValid,f=e.isInvalid,m=e.plaintext,g=e.readOnly,b=e.as,h=void 0===b?"input":b,v=H(e,["bsPrefix","type","size","id","className","isValid","isInvalid","plaintext","readOnly","as"]),x=Object(r.useContext)(be).controlId;if(i=we(i,"form-control"),m)(a={})[i+"-plaintext"]=!0,n=a;else if("file"===l){var y;(y={})[i+"-file"]=!0,n=y}else{var w;(w={})[i]=!0,w[i+"-"+s]=s,n=w}return o.a.createElement(h,p({},v,{type:l,ref:t,readOnly:g,id:c||x,className:pe()(u,n,d&&"is-valid",f&&"is-invalid")}))});ke.displayName="FormControl",ke.Feedback=ge;var Ee=ke,Ce=o.a.forwardRef(function(e,t){var n=e.bsPrefix,a=e.className,i=e.children,l=e.controlId,s=e.as,c=void 0===s?"div":s,u=H(e,["bsPrefix","className","children","controlId","as"]);n=we(n,"form-group");var d=Object(r.useMemo)(function(){return{controlId:l}},[l]);return o.a.createElement(be.Provider,{value:d},o.a.createElement(c,p({},u,{ref:t,className:pe()(a,n)}),i))});Ce.displayName="FormGroup";var Se=Ce;function Oe(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    &&& {\n        max-width: 1200px;\n        margin: 15px auto;\n        label {\n            font-weight: bold;\n        }\n        input[type='text'] {\n            border: 1px solid #81858b;\n            min-height: 45px;\n            &:focus {\n                box-shadow: none;\n                border-color: #81858b !important;\n            }\n        }   \n    } \n"]);return Oe=function(){return e},e}function Te(e){return(Te="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ae(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Pe(e){return(Pe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _e(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function je(e,t){return(je=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ne=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=Pe(t).call(this,e))||"object"!==Te(o)&&"function"!=typeof o?_e(r):o).state={textValue:e.value?e.value:""},n.onChange=n.onChange.bind(_e(n)),n.onKeyPress=n.onKeyPress.bind(_e(n)),n}var n,r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&je(e,t)}(t,o.a.Component),n=t,(r=[{key:"onChange",value:function(e){this.setState({textValue:e.value})}},{key:"onKeyPress",value:function(e){}},{key:"render",value:function(){var e=this.props,t=e.label,n=e.maxLength,r=e.name,a=e.placeholder;return o.a.createElement(Re,null,o.a.createElement("label",null,t),o.a.createElement(Ee,{type:"text",className:"textInput",name:r,id:r,value:this.state.textValue,placeholder:a,onChange:this.onChange,onKeyPress:this.onKeyPress,maxLength:n}))}}])&&Ae(n.prototype,r),a&&Ae(n,a),t}();Object.assign(Ne,{propTypes:{maxLength:d.a.number,name:d.a.string,onChange:d.a.func,label:d.a.string,placeholder:d.a.string,value:d.a.string},defaultProps:{maxLength:100,placeholder:"",value:"",label:""}});var Ie=Ne,Re=Object(se.a)(Se)(Oe()),Fe=n(38),Me=n.n(Fe),De=n(15),ze=n.n(De),Le=function(e){return e[0].toUpperCase()+ze()(e).slice(1)};var Ue=o.a.forwardRef(function(e,t){var n=e.bsPrefix,r=e.className,a=e.as,i=H(e,["bsPrefix","className","as"]);n=we(n,"navbar-brand");var l=a||(i.href?"a":"span");return o.a.createElement(l,p({},i,{ref:t,className:pe()(r,n)}))});Ue.displayName="NavbarBrand";var Be=Ue,Ve=n(11),He=n.n(Ve),We=n(40),$e=n.n(We),qe=!1,Ke=o.a.createContext(null),Ye="unmounted",Xe="exited",Ge="entering",Qe="entered",Je=function(e){function t(t,n){var r;r=e.call(this,t,n)||this;var o,a=n&&!n.isMounting?t.enter:t.appear;return r.appearStatus=null,t.in?a?(o=Xe,r.appearStatus=Ge):o=Qe:o=t.unmountOnExit||t.mountOnEnter?Ye:Xe,r.state={status:o},r.nextCallback=null,r}l(t,e),t.getDerivedStateFromProps=function(e,t){return e.in&&t.status===Ye?{status:Xe}:null};var n=t.prototype;return n.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},n.componentDidUpdate=function(e){var t=null;if(e!==this.props){var n=this.state.status;this.props.in?n!==Ge&&n!==Qe&&(t=Ge):n!==Ge&&n!==Qe||(t="exiting")}this.updateStatus(!1,t)},n.componentWillUnmount=function(){this.cancelNextCallback()},n.getTimeouts=function(){var e,t,n,r=this.props.timeout;return e=t=n=r,null!=r&&"number"!=typeof r&&(e=r.exit,t=r.enter,n=void 0!==r.appear?r.appear:t),{exit:e,enter:t,appear:n}},n.updateStatus=function(e,t){if(void 0===e&&(e=!1),null!==t){this.cancelNextCallback();var n=i.a.findDOMNode(this);t===Ge?this.performEnter(n,e):this.performExit(n)}else this.props.unmountOnExit&&this.state.status===Xe&&this.setState({status:Ye})},n.performEnter=function(e,t){var n=this,r=this.props.enter,o=this.context?this.context.isMounting:t,a=this.getTimeouts(),i=o?a.appear:a.enter;!t&&!r||qe?this.safeSetState({status:Qe},function(){n.props.onEntered(e)}):(this.props.onEnter(e,o),this.safeSetState({status:Ge},function(){n.props.onEntering(e,o),n.onTransitionEnd(e,i,function(){n.safeSetState({status:Qe},function(){n.props.onEntered(e,o)})})}))},n.performExit=function(e){var t=this,n=this.props.exit,r=this.getTimeouts();n&&!qe?(this.props.onExit(e),this.safeSetState({status:"exiting"},function(){t.props.onExiting(e),t.onTransitionEnd(e,r.exit,function(){t.safeSetState({status:Xe},function(){t.props.onExited(e)})})})):this.safeSetState({status:Xe},function(){t.props.onExited(e)})},n.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},n.safeSetState=function(e,t){t=this.setNextCallback(t),this.setState(e,t)},n.setNextCallback=function(e){var t=this,n=!0;return this.nextCallback=function(r){n&&(n=!1,t.nextCallback=null,e(r))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},n.onTransitionEnd=function(e,t,n){this.setNextCallback(n);var r=null==t&&!this.props.addEndListener;e&&!r?(this.props.addEndListener&&this.props.addEndListener(e,this.nextCallback),null!=t&&setTimeout(this.nextCallback,t)):setTimeout(this.nextCallback,0)},n.render=function(){var e=this.state.status;if(e===Ye)return null;var t=this.props,n=t.children,r=H(t,["children"]);if(delete r.in,delete r.mountOnEnter,delete r.unmountOnExit,delete r.appear,delete r.enter,delete r.exit,delete r.timeout,delete r.addEndListener,delete r.onEnter,delete r.onEntering,delete r.onEntered,delete r.onExit,delete r.onExiting,delete r.onExited,"function"==typeof n)return o.a.createElement(Ke.Provider,{value:null},n(e,r));var a=o.a.Children.only(n);return o.a.createElement(Ke.Provider,{value:null},o.a.cloneElement(a,r))},t}(o.a.Component);function Ze(){}Je.contextType=Ke,Je.propTypes={},Je.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:Ze,onEntering:Ze,onEntered:Ze,onExit:Ze,onExiting:Ze,onExited:Ze},Je.UNMOUNTED=0,Je.EXITED=1,Je.ENTERING=2,Je.ENTERED=3,Je.EXITING=4;var et=Je;var tt,nt=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter(function(e){return null!=e}).reduce(function(e,t){if("function"!=typeof t)throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return null===e?t:function(){for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];e.apply(this,r),t.apply(this,r)}},null)},rt={height:["marginTop","marginBottom"],width:["marginLeft","marginRight"]};var ot=((tt={})[Xe]="collapse",tt.exiting="collapsing",tt[Ge]="collapsing",tt[Qe]="collapse show",tt),at={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,dimension:"height",getDimensionValue:function(e,t){var n=t["offset"+e[0].toUpperCase()+e.slice(1)],r=rt[e];return n+parseInt(He()(t,r[0]),10)+parseInt(He()(t,r[1]),10)}},it=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).handleEnter=function(e){e.style[t.getDimension()]="0"},t.handleEntering=function(e){var n=t.getDimension();e.style[n]=t._getScrollDimensionValue(e,n)},t.handleEntered=function(e){e.style[t.getDimension()]=null},t.handleExit=function(e){var n=t.getDimension();e.style[n]=t.props.getDimensionValue(n,e)+"px",e.offsetHeight},t.handleExiting=function(e){e.style[t.getDimension()]=null},t}l(t,e);var n=t.prototype;return n.getDimension=function(){return"function"==typeof this.props.dimension?this.props.dimension():this.props.dimension},n._getScrollDimensionValue=function(e,t){return e["scroll"+t[0].toUpperCase()+t.slice(1)]+"px"},n.render=function(){var e=this,t=this.props,n=t.onEnter,r=t.onEntering,a=t.onEntered,i=t.onExit,l=t.onExiting,s=t.className,c=t.children,u=H(t,["onEnter","onEntering","onEntered","onExit","onExiting","className","children"]);delete u.dimension,delete u.getDimensionValue;var d=nt(this.handleEnter,n),f=nt(this.handleEntering,r),m=nt(this.handleEntered,a),g=nt(this.handleExit,i),b=nt(this.handleExiting,l);return o.a.createElement(et,p({addEndListener:$e.a},u,{"aria-expanded":u.role?u.in:null,onEnter:d,onEntering:f,onEntered:m,onExit:g,onExiting:b}),function(t,n){return o.a.cloneElement(c,p({},n,{className:pe()(s,c.props.className,ot[t],"width"===e.getDimension()&&"width")}))})},t}(o.a.Component);it.defaultProps=at;var lt=it,st=o.a.createContext(null),ct=o.a.forwardRef(function(e,t){var n=e.children,r=e.bsPrefix,a=H(e,["children","bsPrefix"]);return r=we(r,"navbar-collapse"),o.a.createElement(st.Consumer,null,function(e){return o.a.createElement(lt,p({in:!(!e||!e.expanded)},a),o.a.createElement("div",{ref:t,className:r},n))})});ct.displayName="NavbarCollapse";var ut=ct,dt=n(39),pt=n.n(dt),ft=o.a.forwardRef(function(e,t){var n=e.bsPrefix,a=e.className,i=e.children,l=e.label,s=e.as,c=void 0===s?"button":s,u=e.onClick,d=H(e,["bsPrefix","className","children","label","as","onClick"]);n=we(n,"navbar-toggler");var f=Object(r.useContext)(st)||{},m=f.onToggle,g=f.expanded,b=pt()(function(e){u&&u(e),m&&m()});return"button"===c&&(d.type="button"),o.a.createElement(c,p({},d,{ref:t,onClick:b,"aria-label":l,className:pe()(a,n,!!g&&"collapsed")}),i||o.a.createElement("span",{className:n+"-icon"}))});ft.displayName="NavbarToggle",ft.defaultProps={label:"Toggle navigation"};var mt=ft,gt=o.a.createContext(),bt=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).handleCollapse=function(){var e=t.props,n=e.onToggle,r=e.expanded,o=e.collapseOnSelect,a=e.onSelect;a&&a.apply(void 0,arguments),o&&r&&n(!1)},t.handleToggle=function(){var e=t.props;(0,e.onToggle)(!e.expanded)},t.state={navbarContext:{onToggle:t.handleToggle}},t}return l(t,e),t.getDerivedStateFromProps=function(e,t){var n=e.bsPrefix,r=e.expanded;return{navbarContext:p({},t.navbarContext,{bsPrefix:n,expanded:r})}},t.prototype.render=function(){var e=this.props,t=e.bsPrefix,n=e.expand,r=e.variant,a=e.bg,i=e.fixed,l=e.sticky,s=e.className,c=e.children,u=e.as,d=void 0===u?"nav":u,f=(e.expanded,e.onToggle,e.onSelect,e.collapseOnSelect,H(e,["bsPrefix","expand","variant","bg","fixed","sticky","className","children","as","expanded","onToggle","onSelect","collapseOnSelect"]));void 0===f.role&&"nav"!==d&&(f.role="navigation");var m=t+"-expand";return"string"==typeof n&&(m=m+"-"+n),o.a.createElement(st.Provider,{value:this.state.navbarContext},o.a.createElement(gt.Provider,{value:this.handleCollapse},o.a.createElement(d,p({},f,{className:pe()(s,t,n&&m,r&&t+"-"+r,a&&"bg-"+a,l&&"sticky-"+l,i&&"fixed-"+i)}),c)))},t}(o.a.Component);bt.defaultProps={expand:!0,variant:"light",collapseOnSelect:!1};var ht,vt,xt,yt,wt,kt,Et,Ct,St,Ot=function(e,t){"string"==typeof t&&(t={prefix:t});var n=e.prototype&&e.prototype.isReactComponent,a=t,i=a.prefix,l=a.forwardRefAs,s=void 0===l?n?"ref":"innerRef":l;return ve()(function(t,n){var a=p({},t);a[s]=n;var l=Object(r.useContext)(xe);return o.a.createElement(e,p({},a,{bsPrefix:a.bsPrefix||l.get(i)||i}))},{displayName:"Bootstrap("+(e.displayName||e.name)+")"})}(Me()(bt,{expanded:"onToggle"}),"navbar");Ot.Brand=Be,Ot.Toggle=mt,Ot.Collapse=ut,Ot.Text=(ht="navbar-text",yt=(xt=void 0===(vt={Component:"span"})?{}:vt).displayName,wt=void 0===yt?Le(ht):yt,kt=xt.Component,Et=void 0===kt?"div":kt,Ct=xt.defaultProps,(St=o.a.forwardRef(function(e,t){var n=e.className,r=e.bsPrefix,a=e.as,i=void 0===a?Et:a,l=H(e,["className","bsPrefix","as"]),s=we(r,ht);return o.a.createElement(i,p({ref:t,className:pe()(n,s)},l))})).defaultProps=Ct,St.displayName=wt,St);var Tt=Ot;function At(e){return(At="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Pt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _t(e,t){return!t||"object"!==At(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function jt(e){return(jt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Nt(e,t){return(Nt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var It=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),_t(this,jt(t).apply(this,arguments))}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Nt(e,t)}(t,r["Component"]),n=t,(a=[{key:"render",value:function(){var e=this.props.userName;return o.a.createElement(Tt,{bg:"dark",variant:"dark"},o.a.createElement(le,{to:{pathname:"/"},title:"Logo"},o.a.createElement(Tt.Brand,{href:"#home"},"LOGO")),o.a.createElement(Tt.Collapse,{className:"justify-content-end"},o.a.createElement(Tt.Text,null,"Signed in as: ",o.a.createElement("a",{href:"#login"},e))))}}])&&Pt(n.prototype,a),i&&Pt(n,i),t}();function Rt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ft(e){return!e||"#"===e.trim()}var Mt=function(e){function t(t,n){var r;return(r=e.call(this,t,n)||this).handleClick=r.handleClick.bind(Rt(r)),r.handleKeyDown=r.handleKeyDown.bind(Rt(r)),r}l(t,e);var n=t.prototype;return n.handleClick=function(e){var t=this.props,n=t.disabled,r=t.href,o=t.onClick;(n||Ft(r))&&e.preventDefault(),n?e.stopPropagation():o&&o(e)},n.handleKeyDown=function(e){" "===e.key&&(e.preventDefault(),this.handleClick(e))},n.render=function(){var e=this.props,t=e.as,n=void 0===t?"a":t,r=e.disabled,a=e.onKeyDown,i=e.innerRef,l=H(e,["as","disabled","onKeyDown","innerRef"]);return Ft(l.href)&&(l.role=l.role||"button",l.href=l.href||"#"),r&&(l.tabIndex=-1,l["aria-disabled"]=!0),i&&(l.ref=i),o.a.createElement(n,p({},l,{onClick:this.handleClick,onKeyDown:nt(this.handleKeyDown,a)}))},t}(o.a.Component),Dt=o.a.forwardRef(function(e,t){var n=e.bsPrefix,r=e.variant,a=e.size,i=e.active,l=e.className,s=e.block,c=e.type,u=e.as,d=H(e,["bsPrefix","variant","size","active","className","block","type","as"]),f=we(n,"btn"),m=pe()(l,f,i&&"active",f+"-"+r,s&&f+"-block",a&&f+"-"+a);if(d.href)return o.a.createElement(Mt,p({},d,{as:u,innerRef:t,className:pe()(m,d.disabled&&"disabled")}));var g=u||"button";return t&&(d.ref=t),o.a.createElement(g,p({},d,{type:c,className:m}))});Dt.displayName="Button",Dt.defaultProps={variant:"primary",active:!1,disabled:!1,type:"button"};var zt=Dt;function Lt(e){return(Lt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ut(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Bt(e){return(Bt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Vt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ht(e,t){return(Ht=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Wt=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=Bt(t).call(this,e))||"object"!==Lt(o)&&"function"!=typeof o?Vt(r):o).handleClick=n.handleClick.bind(Vt(n)),n}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ht(e,t)}(t,r["Component"]),n=t,(a=[{key:"handleClick",value:function(e){this.props.handleClick(e)}},{key:"render",value:function(){var e=this.props,t=e.styleName,n=e.disabled,r=e.label,a=e.value;return o.a.createElement(zt,{variant:t,disabled:n,onClick:this.handleClick,value:a},r)}}])&&Ut(n.prototype,a),i&&Ut(n,i),t}();function $t(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    align-items: center;\n    padding: .5rem 1rem;\n    border-bottom: 1px solid #b9b9b9;\n\n    .btn{\n        margin-left: auto;\n    }\n"]);return $t=function(){return e},e}function qt(e){return(qt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Kt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Yt(e){return(Yt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Xt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Gt(e,t){return(Gt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Qt=ae(function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=Yt(t).call(this,e))||"object"!==qt(o)&&"function"!=typeof o?Xt(r):o).handleAddClick=n.handleAddClick.bind(Xt(n)),n}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Gt(e,t)}(t,r["Component"]),n=t,(a=[{key:"handleAddClick",value:function(){this.props.history.push({pathname:"/add",search:"?username="+this.props.userName})}},{key:"render",value:function(){var e=this.props,t=e.pageTitle,n=e.showButton,r=e.userName;return o.a.createElement(o.a.Fragment,null,o.a.createElement(It,{userName:r}),o.a.createElement(Jt,null,o.a.createElement("h1",null,t),n&&o.a.createElement(Wt,{label:"Add",handleClick:this.handleAddClick,styleName:"primary"})))}}])&&Kt(n.prototype,a),i&&Kt(n,i),t}()),Jt=se.a.section($t());function Zt(e,t){if(null==e)return{};var n,r,o=H(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function en(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function tn(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function nn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){tn(e,t,n[t])})}return e}function rn(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function on(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function an(e,t,n){return t&&on(e.prototype,t),n&&on(e,n),e}function ln(e){return(ln="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function sn(e){return(sn="function"==typeof Symbol&&"symbol"===ln(Symbol.iterator)?function(e){return ln(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":ln(e)})(e)}function cn(e,t){return!t||"object"!==sn(t)&&"function"!=typeof t?Rt(e):t}function un(e){return(un=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function dn(e,t){return(dn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function pn(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&dn(e,t)}var fn=n(6);var mn=function(){function e(e){this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.before=null}var t=e.prototype;return t.insert=function(e){if(this.ctr%(this.isSpeedy?65e3:1)==0){var t,n=function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t}(this);t=0===this.tags.length?this.before:this.tags[this.tags.length-1].nextSibling,this.container.insertBefore(n,t),this.tags.push(n)}var r=this.tags[this.tags.length-1];if(this.isSpeedy){var o=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(r);try{var a=105===e.charCodeAt(1)&&64===e.charCodeAt(0);o.insertRule(e,a?0:o.cssRules.length)}catch(e){0}}else r.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach(function(e){return e.parentNode.removeChild(e)}),this.tags=[],this.ctr=0},e}();var gn=function(e){function t(e,t,r){var o=t.trim().split(m);t=o;var a=o.length,i=e.length;switch(i){case 0:case 1:var l=0;for(e=0===i?"":e[0]+" ";l<a;++l)t[l]=n(e,t[l],r).trim();break;default:var s=l=0;for(t=[];l<a;++l)for(var c=0;c<i;++c)t[s++]=n(e[c]+" ",o[l],r).trim()}return t}function n(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function r(e,t,n,a){var i=e+";",l=2*t+3*n+4*a;if(944===l){e=i.indexOf(":",9)+1;var s=i.substring(e,i.length-1).trim();return s=i.substring(0,e).trim()+s+";",1===P||2===P&&o(s,1)?"-webkit-"+s+s:s}if(0===P||2===P&&!o(i,1))return i;switch(l){case 1015:return 97===i.charCodeAt(10)?"-webkit-"+i+i:i;case 951:return 116===i.charCodeAt(3)?"-webkit-"+i+i:i;case 963:return 110===i.charCodeAt(5)?"-webkit-"+i+i:i;case 1009:if(100!==i.charCodeAt(4))break;case 969:case 942:return"-webkit-"+i+i;case 978:return"-webkit-"+i+"-moz-"+i+i;case 1019:case 983:return"-webkit-"+i+"-moz-"+i+"-ms-"+i+i;case 883:if(45===i.charCodeAt(8))return"-webkit-"+i+i;if(0<i.indexOf("image-set(",11))return i.replace(S,"$1-webkit-$2")+i;break;case 932:if(45===i.charCodeAt(4))switch(i.charCodeAt(5)){case 103:return"-webkit-box-"+i.replace("-grow","")+"-webkit-"+i+"-ms-"+i.replace("grow","positive")+i;case 115:return"-webkit-"+i+"-ms-"+i.replace("shrink","negative")+i;case 98:return"-webkit-"+i+"-ms-"+i.replace("basis","preferred-size")+i}return"-webkit-"+i+"-ms-"+i+i;case 964:return"-webkit-"+i+"-ms-flex-"+i+i;case 1023:if(99!==i.charCodeAt(8))break;return"-webkit-box-pack"+(s=i.substring(i.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+i+"-ms-flex-pack"+s+i;case 1005:return p.test(i)?i.replace(d,":-webkit-")+i.replace(d,":-moz-")+i:i;case 1e3:switch(t=(s=i.substring(13).trim()).indexOf("-")+1,s.charCodeAt(0)+s.charCodeAt(t)){case 226:s=i.replace(x,"tb");break;case 232:s=i.replace(x,"tb-rl");break;case 220:s=i.replace(x,"lr");break;default:return i}return"-webkit-"+i+"-ms-"+s+i;case 1017:if(-1===i.indexOf("sticky",9))break;case 975:switch(t=(i=e).length-10,l=(s=(33===i.charCodeAt(t)?i.substring(0,t):i).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|s.charCodeAt(7))){case 203:if(111>s.charCodeAt(8))break;case 115:i=i.replace(s,"-webkit-"+s)+";"+i;break;case 207:case 102:i=i.replace(s,"-webkit-"+(102<l?"inline-":"")+"box")+";"+i.replace(s,"-webkit-"+s)+";"+i.replace(s,"-ms-"+s+"box")+";"+i}return i+";";case 938:if(45===i.charCodeAt(5))switch(i.charCodeAt(6)){case 105:return s=i.replace("-items",""),"-webkit-"+i+"-webkit-box-"+s+"-ms-flex-"+s+i;case 115:return"-webkit-"+i+"-ms-flex-item-"+i.replace(k,"")+i;default:return"-webkit-"+i+"-ms-flex-line-pack"+i.replace("align-content","").replace(k,"")+i}break;case 973:case 989:if(45!==i.charCodeAt(3)||122===i.charCodeAt(4))break;case 931:case 953:if(!0===C.test(e))return 115===(s=e.substring(e.indexOf(":")+1)).charCodeAt(0)?r(e.replace("stretch","fill-available"),t,n,a).replace(":fill-available",":stretch"):i.replace(s,"-webkit-"+s)+i.replace(s,"-moz-"+s.replace("fill-",""))+i;break;case 962:if(i="-webkit-"+i+(102===i.charCodeAt(5)?"-ms-"+i:"")+i,211===n+a&&105===i.charCodeAt(13)&&0<i.indexOf("transform",10))return i.substring(0,i.indexOf(";",27)+1).replace(f,"$1-webkit-$2")+i}return i}function o(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),I(2!==t?r:r.replace(E,"$1"),n,t)}function a(e,t){var n=r(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(w," or ($1)").substring(4):"("+t+")"}function i(e,t,n,r,o,a,i,l,c,u){for(var d,p=0,f=t;p<N;++p)switch(d=j[p].call(s,e,f,n,r,o,a,i,l,c,u)){case void 0:case!1:case!0:case null:break;default:f=d}if(f!==t)return f}function l(e){return void 0!==(e=e.prefix)&&(I=null,e?"function"!=typeof e?P=1:(P=2,I=e):P=0),l}function s(e,n){var l=e;if(33>l.charCodeAt(0)&&(l=l.trim()),l=[l],0<N){var s=i(-1,n,l,l,T,O,0,0,0,0);void 0!==s&&"string"==typeof s&&(n=s)}var d=function e(n,l,s,d,p){for(var f,m,g,x,w,k=0,E=0,C=0,S=0,j=0,I=0,F=g=f=0,M=0,D=0,z=0,L=0,U=s.length,B=U-1,V="",H="",W="",$="";M<U;){if(m=s.charCodeAt(M),M===B&&0!==E+S+C+k&&(0!==E&&(m=47===E?10:47),S=C=k=0,U++,B++),0===E+S+C+k){if(M===B&&(0<D&&(V=V.replace(u,"")),0<V.trim().length)){switch(m){case 32:case 9:case 59:case 13:case 10:break;default:V+=s.charAt(M)}m=59}switch(m){case 123:for(f=(V=V.trim()).charCodeAt(0),g=1,L=++M;M<U;){switch(m=s.charCodeAt(M)){case 123:g++;break;case 125:g--;break;case 47:switch(m=s.charCodeAt(M+1)){case 42:case 47:e:{for(F=M+1;F<B;++F)switch(s.charCodeAt(F)){case 47:if(42===m&&42===s.charCodeAt(F-1)&&M+2!==F){M=F+1;break e}break;case 10:if(47===m){M=F+1;break e}}M=F}}break;case 91:m++;case 40:m++;case 34:case 39:for(;M++<B&&s.charCodeAt(M)!==m;);}if(0===g)break;M++}switch(g=s.substring(L,M),0===f&&(f=(V=V.replace(c,"").trim()).charCodeAt(0)),f){case 64:switch(0<D&&(V=V.replace(u,"")),m=V.charCodeAt(1)){case 100:case 109:case 115:case 45:D=l;break;default:D=_}if(L=(g=e(l,D,g,m,p+1)).length,0<N&&(w=i(3,g,D=t(_,V,z),l,T,O,L,m,p,d),V=D.join(""),void 0!==w&&0===(L=(g=w.trim()).length)&&(m=0,g="")),0<L)switch(m){case 115:V=V.replace(y,a);case 100:case 109:case 45:g=V+"{"+g+"}";break;case 107:g=(V=V.replace(b,"$1 $2"))+"{"+g+"}",g=1===P||2===P&&o("@"+g,3)?"@-webkit-"+g+"@"+g:"@"+g;break;default:g=V+g,112===d&&(H+=g,g="")}else g="";break;default:g=e(l,t(l,V,z),g,d,p+1)}W+=g,g=z=D=F=f=0,V="",m=s.charCodeAt(++M);break;case 125:case 59:if(1<(L=(V=(0<D?V.replace(u,""):V).trim()).length))switch(0===F&&(f=V.charCodeAt(0),45===f||96<f&&123>f)&&(L=(V=V.replace(" ",":")).length),0<N&&void 0!==(w=i(1,V,l,n,T,O,H.length,d,p,d))&&0===(L=(V=w.trim()).length)&&(V="\0\0"),f=V.charCodeAt(0),m=V.charCodeAt(1),f){case 0:break;case 64:if(105===m||99===m){$+=V+s.charAt(M);break}default:58!==V.charCodeAt(L-1)&&(H+=r(V,f,m,V.charCodeAt(2)))}z=D=F=f=0,V="",m=s.charCodeAt(++M)}}switch(m){case 13:case 10:47===E?E=0:0===1+f&&107!==d&&0<V.length&&(D=1,V+="\0"),0<N*R&&i(0,V,l,n,T,O,H.length,d,p,d),O=1,T++;break;case 59:case 125:if(0===E+S+C+k){O++;break}default:switch(O++,x=s.charAt(M),m){case 9:case 32:if(0===S+k+E)switch(j){case 44:case 58:case 9:case 32:x="";break;default:32!==m&&(x=" ")}break;case 0:x="\\0";break;case 12:x="\\f";break;case 11:x="\\v";break;case 38:0===S+E+k&&(D=z=1,x="\f"+x);break;case 108:if(0===S+E+k+A&&0<F)switch(M-F){case 2:112===j&&58===s.charCodeAt(M-3)&&(A=j);case 8:111===I&&(A=I)}break;case 58:0===S+E+k&&(F=M);break;case 44:0===E+C+S+k&&(D=1,x+="\r");break;case 34:case 39:0===E&&(S=S===m?0:0===S?m:S);break;case 91:0===S+E+C&&k++;break;case 93:0===S+E+C&&k--;break;case 41:0===S+E+k&&C--;break;case 40:if(0===S+E+k){if(0===f)switch(2*j+3*I){case 533:break;default:f=1}C++}break;case 64:0===E+C+S+k+F+g&&(g=1);break;case 42:case 47:if(!(0<S+k+C))switch(E){case 0:switch(2*m+3*s.charCodeAt(M+1)){case 235:E=47;break;case 220:L=M,E=42}break;case 42:47===m&&42===j&&L+2!==M&&(33===s.charCodeAt(L+2)&&(H+=s.substring(L,M+1)),x="",E=0)}}0===E&&(V+=x)}I=j,j=m,M++}if(0<(L=H.length)){if(D=l,0<N&&void 0!==(w=i(2,H,D,n,T,O,L,d,p,d))&&0===(H=w).length)return $+H+W;if(H=D.join(",")+"{"+H+"}",0!=P*A){switch(2!==P||o(H,2)||(A=0),A){case 111:H=H.replace(v,":-moz-$1")+H;break;case 112:H=H.replace(h,"::-webkit-input-$1")+H.replace(h,"::-moz-$1")+H.replace(h,":-ms-input-$1")+H}A=0}}return $+H+W}(_,l,n,0,0);return 0<N&&void 0!==(s=i(-2,d,l,l,T,O,d.length,0,0,0))&&(d=s),A=0,O=T=1,d}var c=/^\0+/g,u=/[\0\r\f]/g,d=/: */g,p=/zoo|gra/,f=/([,: ])(transform)/g,m=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,b=/@(k\w+)\s*(\S*)\s*/,h=/::(place)/g,v=/:(read-only)/g,x=/[svh]\w+-[tblr]{2}/,y=/\(\s*(.*)\s*\)/g,w=/([\s\S]*?);/g,k=/-self|flex-/g,E=/[^]*?(:[rp][el]a[\w-]+)[^]*/,C=/stretch|:\s*\w+\-(?:conte|avail)/,S=/([^-])(image-set\()/,O=1,T=1,A=0,P=1,_=[],j=[],N=0,I=null,R=0;return s.use=function e(t){switch(t){case void 0:case null:N=j.length=0;break;default:if("function"==typeof t)j[N++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else R=0|!!t}return e},s.set=l,void 0!==e&&l(e),s};function bn(e){e&&hn.current.insert(e+"}")}var hn={current:null},vn=function(e,t,n,r,o,a,i,l,s,c){switch(e){case 1:switch(t.charCodeAt(0)){case 64:return hn.current.insert(t+";"),"";case 108:if(98===t.charCodeAt(2))return""}break;case 2:if(0===l)return t+"/*|*/";break;case 3:switch(l){case 102:case 112:return hn.current.insert(n[0]+t),"";default:return t+(0===c?"/*|*/":"")}case-2:t.split("/*|*/}").forEach(bn)}},xn=function(e){void 0===e&&(e={});var t,n=e.key||"css";void 0!==e.prefix&&(t={prefix:e.prefix});var r=new gn(t);var o,a={};o=e.container||document.head;var i,l=document.querySelectorAll("style[data-emotion-"+n+"]");Array.prototype.forEach.call(l,function(e){e.getAttribute("data-emotion-"+n).split(" ").forEach(function(e){a[e]=!0}),e.parentNode!==o&&o.appendChild(e)}),r.use(e.stylisPlugins)(vn),i=function(e,t,n,o){var a=t.name;hn.current=n,r(e,t.styles),o&&(s.inserted[a]=!0)};var s={key:n,sheet:new mn({key:n,container:o,nonce:e.nonce,speedy:e.speedy}),nonce:e.nonce,inserted:a,registered:{},insert:i};return s};function yn(e,t,n){var r="";return n.split(" ").forEach(function(n){void 0!==e[n]?t.push(e[n]):r+=n+" "}),r}var wn=function(e,t,n){var r=e.key+"-"+t.name;if(!1===n&&void 0===e.registered[r]&&(e.registered[r]=t.styles),void 0===e.inserted[t.name]){var o=t;do{e.insert("."+r,o,e.sheet,!0);o=o.next}while(void 0!==o)}};var kn=function(e){for(var t,n=e.length,r=n^n,o=0;n>=4;)t=1540483477*(65535&(t=255&e.charCodeAt(o)|(255&e.charCodeAt(++o))<<8|(255&e.charCodeAt(++o))<<16|(255&e.charCodeAt(++o))<<24))+((1540483477*(t>>>16)&65535)<<16),r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16)^(t=1540483477*(65535&(t^=t>>>24))+((1540483477*(t>>>16)&65535)<<16)),n-=4,++o;switch(n){case 3:r^=(255&e.charCodeAt(o+2))<<16;case 2:r^=(255&e.charCodeAt(o+1))<<8;case 1:r=1540483477*(65535&(r^=255&e.charCodeAt(o)))+((1540483477*(r>>>16)&65535)<<16)}return r=1540483477*(65535&(r^=r>>>13))+((1540483477*(r>>>16)&65535)<<16),((r^=r>>>15)>>>0).toString(36)},En=n(9),Cn=n(10),Sn=/[A-Z]|^ms/g,On=/_EMO_([^_]+?)_([^]*?)_EMO_/g,Tn=Object(Cn.a)(function(e){return e.replace(Sn,"-$&").toLowerCase()}),An=function(e,t){if(null==t||"boolean"==typeof t)return"";switch(e){case"animation":case"animationName":"string"==typeof t&&(t=t.replace(On,function(e,t,n){return _n={name:t,styles:n,next:_n},t}))}return 1!==En.a[e]&&45!==e.charCodeAt(1)&&"number"==typeof t&&0!==t?t+"px":t};function Pn(e,t,n,r){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return _n={name:n.name,styles:n.styles,next:_n},n.name;if(void 0!==n.styles){var o=n.next;if(void 0!==o)for(;void 0!==o;)_n={name:o.name,styles:o.styles,next:_n},o=o.next;return n.styles}return function(e,t,n){var r="";if(Array.isArray(n))for(var o=0;o<n.length;o++)r+=Pn(e,t,n[o],!1);else for(var a in n){var i=n[a];if("object"!=typeof i)null!=t&&void 0!==t[i]?r+=a+"{"+t[i]+"}":r+=Tn(a)+":"+An(a,i)+";";else if(!Array.isArray(i)||"string"!=typeof i[0]||null!=t&&void 0!==t[i[0]])r+=a+"{"+Pn(e,t,i,!1)+"}";else for(var l=0;l<i.length;l++)r+=Tn(a)+":"+An(a,i[l])+";"}return r}(e,t,n);case"function":if(void 0!==e){var a=_n,i=n(e);return _n=a,Pn(e,t,i,r)}default:if(null==t)return n;var l=t[n];return void 0===l||r?n:l}}var _n,jn=/label:\s*([^\s;\n{]+)\s*;/g;var Nn=function(e,t,n){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,o="";_n=void 0;var a=e[0];null==a||void 0===a.raw?(r=!1,o+=Pn(n,t,a,!1)):o+=a[0];for(var i=1;i<e.length;i++)o+=Pn(n,t,e[i],46===o.charCodeAt(o.length-1)),r&&(o+=a[i]);jn.lastIndex=0;for(var l,s="";null!==(l=jn.exec(o));)s+="-"+l[1];return{name:kn(o)+s,styles:o,next:_n}};var In=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Nn(t)};var Rn=Object(r.createContext)(xn()),Fn=Object(r.createContext)({}),Mn=(Rn.Provider,function(e){return Object(r.forwardRef)(function(t,n){return Object(r.createElement)(Rn.Consumer,null,function(r){return e(t,r,n)})})}),Dn="__EMOTION_TYPE_PLEASE_DO_NOT_USE__",zn=Object.prototype.hasOwnProperty,Ln=function(e,t,n,o){var a=t[Dn],i=[],l="",s=null===n?t.css:t.css(n);"string"==typeof s&&void 0!==e.registered[s]&&(s=e.registered[s]),i.push(s),void 0!==t.className&&(l=yn(e.registered,i,t.className));var c=Nn(i);wn(e,c,"string"==typeof a);l+=e.key+"-"+c.name;var u={};for(var d in t)zn.call(t,d)&&"css"!==d&&d!==Dn&&(u[d]=t[d]);return u.ref=o,u.className=l,Object(r.createElement)(a,u)},Un=Mn(function(e,t,n){return"function"==typeof e.css?Object(r.createElement)(Fn.Consumer,null,function(r){return Ln(t,e,r,n)}):Ln(t,e,null,n)});var Bn=function(e,t){var n=arguments;if(null==t||null==t.css)return r.createElement.apply(void 0,n);var o=n.length,a=new Array(o);a[0]=Un;var i={};for(var l in t)zn.call(t,l)&&(i[l]=t[l]);i[Dn]=e,a[1]=i;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)};r.Component;var Vn=Mn(function(e,t){return Object(r.createElement)(Fn.Consumer,null,function(n){var r=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];var o=Nn(n,t.registered);return wn(t,o,!1),t.key+"-"+o.name},o={css:r,cx:function(){for(var e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];return function(e,t,n){var r=[],o=yn(e,r,n);return r.length<2?n:o+t(r)}(t.registered,r,function e(t){for(var n=t.length,r=0,o="";r<n;r++){var a=t[r];if(null!=a){var i=void 0;switch(typeof a){case"boolean":break;case"object":if(Array.isArray(a))i=e(a);else for(var l in i="",a)a[l]&&l&&(i&&(i+=" "),i+=l);break;default:i=a}i&&(o&&(o+=" "),o+=i)}}return o}(n))},theme:n},a=e.children(o);return!0,a})}),Hn=n(16),Wn=n.n(Hn),$n=function(){};function qn(e,t){return t?"-"===t[0]?e+t:e+"__"+t:e}var Kn=function(e){return Array.isArray(e)?e.filter(Boolean):"object"===sn(e)&&null!==e?[e]:[]};function Yn(e){return[document.documentElement,document.body,window].indexOf(e)>-1}function Xn(e){return Yn(e)?window.pageYOffset:e.scrollTop}function Gn(e,t){Yn(e)?window.scrollTo(0,t):e.scrollTop=t}function Qn(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:200,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$n,o=Xn(e),a=t-o,i=10,l=0;!function t(){var s,c=a*((s=(s=l+=i)/n-1)*s*s+1)+o;Gn(e,c),l<n?Wn()(t):r(e)}()}function Jn(){try{return document.createEvent("TouchEvent"),!0}catch(e){return!1}}var Zn=n(17),er=n.n(Zn);function tr(e){var t=e.maxHeight,n=e.menuEl,r=e.minHeight,o=e.placement,a=e.shouldScroll,i=e.isFixedPosition,l=e.theme.spacing,s=function(e){var t=getComputedStyle(e),n="absolute"===t.position,r=/(auto|scroll)/,o=document.documentElement;if("fixed"===t.position)return o;for(var a=e;a=a.parentElement;)if(t=getComputedStyle(a),(!n||"static"!==t.position)&&r.test(t.overflow+t.overflowY+t.overflowX))return a;return o}(n),c={placement:"bottom",maxHeight:t};if(!n||!n.offsetParent)return c;var u=s.getBoundingClientRect().height,d=n.getBoundingClientRect(),p=d.bottom,f=d.height,m=d.top,g=n.offsetParent.getBoundingClientRect().top,b=window.innerHeight,h=Xn(s),v=parseInt(getComputedStyle(n).marginBottom,10),x=parseInt(getComputedStyle(n).marginTop,10),y=g-x,w=b-m,k=y+h,E=u-h-m,C=p-b+h+v,S=h+m-x;switch(o){case"auto":case"bottom":if(w>=f)return{placement:"bottom",maxHeight:t};if(E>=f&&!i)return a&&Qn(s,C,160),{placement:"bottom",maxHeight:t};if(!i&&E>=r||i&&w>=r)return a&&Qn(s,C,160),{placement:"bottom",maxHeight:i?w-v:E-v};if("auto"===o||i){var O=t,T=i?y:k;return T>=r&&(O=Math.min(T-v-l.controlHeight,t)),{placement:"top",maxHeight:O}}if("bottom"===o)return Gn(s,C),{placement:"bottom",maxHeight:t};break;case"top":if(y>=f)return{placement:"top",maxHeight:t};if(k>=f&&!i)return a&&Qn(s,S,160),{placement:"top",maxHeight:t};if(!i&&k>=r||i&&y>=r){var A=t;return(!i&&k>=r||i&&y>=r)&&(A=i?y-x:k-x),a&&Qn(s,S,160),{placement:"top",maxHeight:A}}return{placement:"bottom",maxHeight:t};default:throw new Error('Invalid placement provided "'.concat(o,'".'))}return c}var nr=function(e){return"auto"===e?"bottom":e},rr=function(e){function t(){var e,n;rn(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return tn(Rt(Rt(n=cn(this,(e=un(t)).call.apply(e,[this].concat(o))))),"state",{maxHeight:n.props.maxMenuHeight,placement:null}),tn(Rt(Rt(n)),"getPlacement",function(e){var t=n.props,r=t.minMenuHeight,o=t.maxMenuHeight,a=t.menuPlacement,i=t.menuPosition,l=t.menuShouldScrollIntoView,s=t.theme,c=n.context.getPortalPlacement;if(e){var u="fixed"===i,d=tr({maxHeight:o,menuEl:e,minHeight:r,placement:a,shouldScroll:l&&!u,isFixedPosition:u,theme:s});c&&c(d),n.setState(d)}}),tn(Rt(Rt(n)),"getUpdatedProps",function(){var e=n.props.menuPlacement,t=n.state.placement||nr(e);return nn({},n.props,{placement:t,maxHeight:n.state.maxHeight})}),n}return pn(t,r["Component"]),an(t,[{key:"render",value:function(){return(0,this.props.children)({ref:this.getPlacement,placerProps:this.getUpdatedProps()})}}]),t}();tn(rr,"contextTypes",{getPortalPlacement:d.a.func});var or=function(e){var t=e.theme,n=t.spacing.baseUnit;return{color:t.colors.neutral40,padding:"".concat(2*n,"px ").concat(3*n,"px"),textAlign:"center"}},ar=or,ir=or,lr=function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.innerProps;return Bn("div",p({css:o("noOptionsMessage",e),className:r({"menu-notice":!0,"menu-notice--no-options":!0},n)},a),t)};lr.defaultProps={children:"No options"};var sr=function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.innerProps;return Bn("div",p({css:o("loadingMessage",e),className:r({"menu-notice":!0,"menu-notice--loading":!0},n)},a),t)};sr.defaultProps={children:"Loading..."};var cr=function(e){function t(){var e,n;rn(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return tn(Rt(Rt(n=cn(this,(e=un(t)).call.apply(e,[this].concat(o))))),"state",{placement:null}),tn(Rt(Rt(n)),"getPortalPlacement",function(e){var t=e.placement;t!==nr(n.props.menuPlacement)&&n.setState({placement:t})}),n}return pn(t,r["Component"]),an(t,[{key:"getChildContext",value:function(){return{getPortalPlacement:this.getPortalPlacement}}},{key:"render",value:function(){var e=this.props,t=e.appendTo,n=e.children,r=e.controlElement,o=e.menuPlacement,i=e.menuPosition,l=e.getStyles,s="fixed"===i;if(!t&&!s||!r)return null;var c=this.state.placement||nr(o),u=function(e){var t=e.getBoundingClientRect();return{bottom:t.bottom,height:t.height,left:t.left,right:t.right,top:t.top,width:t.width}}(r),d=s?0:window.pageYOffset,p=u[c]+d,f=Bn("div",{css:l("menuPortal",{offset:p,position:i,rect:u})},n);return t?Object(a.createPortal)(f,t):f}}]),t}();tn(cr,"childContextTypes",{getPortalPlacement:d.a.func});var ur=Array.isArray,dr=Object.keys,pr=Object.prototype.hasOwnProperty;function fr(e,t){try{return function e(t,n){if(t===n)return!0;if(t&&n&&"object"==sn(t)&&"object"==sn(n)){var r,o,a,i=ur(t),l=ur(n);if(i&&l){if((o=t.length)!=n.length)return!1;for(r=o;0!=r--;)if(!e(t[r],n[r]))return!1;return!0}if(i!=l)return!1;var s=t instanceof Date,c=n instanceof Date;if(s!=c)return!1;if(s&&c)return t.getTime()==n.getTime();var u=t instanceof RegExp,d=n instanceof RegExp;if(u!=d)return!1;if(u&&d)return t.toString()==n.toString();var p=dr(t);if((o=p.length)!==dr(n).length)return!1;for(r=o;0!=r--;)if(!pr.call(n,p[r]))return!1;for(r=o;0!=r--;)if(!("_owner"===(a=p[r])&&t.$$typeof||e(t[a],n[a])))return!1;return!0}return t!=t&&n!=n}(e,t)}catch(e){if(e.message&&e.message.match(/stack|recursion/i))return console.warn("Warning: react-fast-compare does not handle circular references.",e.name,e.message),!1;throw e}}var mr=function(e){function t(){return rn(this,t),cn(this,un(t).apply(this,arguments))}return pn(t,r["Component"]),an(t,[{key:"render",value:function(){var e=this.props,t=e.children,n=e.className,r=e.cx,o=e.isMulti,a=e.getStyles,i=e.hasValue;return Bn("div",{css:a("valueContainer",this.props),className:r({"value-container":!0,"value-container--is-multi":o,"value-container--has-value":i},n)},t)}}]),t}();function gr(){var e,t,n=(e=["\n  0%, 80%, 100% { opacity: 0; }\n  40% { opacity: 1; }\n"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return gr=function(){return n},n}var br={name:"19bqh2r",styles:"display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;"},hr=function(e){var t=e.size,n=Zt(e,["size"]);return Bn("svg",p({height:t,width:t,viewBox:"0 0 20 20","aria-hidden":"true",focusable:"false",css:br},n))},vr=function(e){return Bn(hr,p({size:20},e),Bn("path",{d:"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"}))},xr=function(e){return Bn(hr,p({size:20},e),Bn("path",{d:"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"}))},yr=function(e){var t=e.isFocused,n=e.theme,r=n.spacing.baseUnit,o=n.colors;return{label:"indicatorContainer",color:t?o.neutral60:o.neutral20,display:"flex",padding:2*r,transition:"color 150ms",":hover":{color:t?o.neutral80:o.neutral40}}},wr=yr,kr=yr,Er=function(){var e=In.apply(void 0,arguments),t="animation-"+e.name;return{name:t,styles:"@keyframes "+t+"{"+e.styles+"}",anim:1,toString:function(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_"}}}(gr()),Cr=function(e){var t=e.color,n=e.delay,r=e.offset;return Bn("span",{css:In({animation:"".concat(Er," 1s ease-in-out ").concat(n,"ms infinite;"),backgroundColor:t,borderRadius:"1em;",display:"inline-block;",marginLeft:r?"1em;":null,height:"1em;",verticalAlign:"top;",width:"1em;"},"")})},Sr=function(e){var t=e.className,n=e.cx,r=e.getStyles,o=e.innerProps,a=e.isFocused,i=e.isRtl,l=e.theme.colors,s=a?l.neutral80:l.neutral20;return Bn("div",p({},o,{css:r("loadingIndicator",e),className:n({indicator:!0,"loading-indicator":!0},t)}),Bn(Cr,{color:s,delay:0,offset:i}),Bn(Cr,{color:s,delay:160,offset:!0}),Bn(Cr,{color:s,delay:320,offset:!i}))};Sr.defaultProps={size:4};var Or=function(e){return{label:"input",background:0,border:0,fontSize:"inherit",opacity:e?0:1,outline:0,padding:0,color:"inherit"}},Tr=function(e){var t=e.children,n=e.innerProps;return Bn("div",n,t)},Ar=Tr,Pr=Tr,_r=function(e){function t(){return rn(this,t),cn(this,un(t).apply(this,arguments))}return pn(t,r["Component"]),an(t,[{key:"render",value:function(){var e=this.props,t=e.children,n=e.innerProps;return Bn("div",n,t||Bn(vr,{size:14}))}}]),t}(),jr=function(e){function t(){return rn(this,t),cn(this,un(t).apply(this,arguments))}return pn(t,r["Component"]),an(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.children,r=t.className,o=t.components,a=t.cx,i=t.data,l=t.getStyles,s=t.innerProps,c=t.isDisabled,u=t.removeProps,d=t.selectProps,p=o.Container,f=o.Label,m=o.Remove;return Bn(Vn,null,function(t){var o=t.css,g=t.cx;return Bn(p,{data:i,innerProps:nn({},s,{className:g(o(l("multiValue",e.props)),a({"multi-value":!0,"multi-value--is-disabled":c},r))}),selectProps:d},Bn(f,{data:i,innerProps:{className:g(o(l("multiValueLabel",e.props)),a({"multi-value__label":!0},r))},selectProps:d},n),Bn(m,{data:i,innerProps:nn({className:g(o(l("multiValueRemove",e.props)),a({"multi-value__remove":!0},r))},u),selectProps:d}))})}}]),t}();tn(jr,"defaultProps",{cropWithEllipsis:!0});var Nr={ClearIndicator:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.innerProps;return Bn("div",p({},a,{css:o("clearIndicator",e),className:r({indicator:!0,"clear-indicator":!0},n)}),t||Bn(vr,null))},Control:function(e){var t=e.children,n=e.cx,r=e.getStyles,o=e.className,a=e.isDisabled,i=e.isFocused,l=e.innerRef,s=e.innerProps,c=e.menuIsOpen;return Bn("div",p({ref:l,css:r("control",e),className:n({control:!0,"control--is-disabled":a,"control--is-focused":i,"control--menu-is-open":c},o)},s),t)},DropdownIndicator:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.innerProps;return Bn("div",p({},a,{css:o("dropdownIndicator",e),className:r({indicator:!0,"dropdown-indicator":!0},n)}),t||Bn(xr,null))},DownChevron:xr,CrossIcon:vr,Group:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.Heading,i=e.headingProps,l=e.label,s=e.theme,c=e.selectProps;return Bn("div",{css:o("group",e),className:r({group:!0},n)},Bn(a,p({},i,{selectProps:c,theme:s,getStyles:o,cx:r}),l),Bn("div",null,t))},GroupHeading:function(e){var t=e.className,n=e.cx,r=e.getStyles,o=e.theme,a=(e.selectProps,Zt(e,["className","cx","getStyles","theme","selectProps"]));return Bn("div",p({css:r("groupHeading",nn({theme:o},a)),className:n({"group-heading":!0},t)},a))},IndicatorsContainer:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles;return Bn("div",{css:o("indicatorsContainer",e),className:r({indicators:!0},n)},t)},IndicatorSeparator:function(e){var t=e.className,n=e.cx,r=e.getStyles,o=e.innerProps;return Bn("span",p({},o,{css:r("indicatorSeparator",e),className:n({"indicator-separator":!0},t)}))},Input:function(e){var t=e.className,n=e.cx,r=e.getStyles,o=e.innerRef,a=e.isHidden,i=e.isDisabled,l=e.theme,s=(e.selectProps,Zt(e,["className","cx","getStyles","innerRef","isHidden","isDisabled","theme","selectProps"]));return Bn("div",{css:r("input",nn({theme:l},s))},Bn(er.a,p({className:n({input:!0},t),inputRef:o,inputStyle:Or(a),disabled:i},s)))},LoadingIndicator:Sr,Menu:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.innerRef,i=e.innerProps;return Bn("div",p({css:o("menu",e),className:r({menu:!0},n)},i,{ref:a}),t)},MenuList:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.isMulti,i=e.innerRef;return Bn("div",{css:o("menuList",e),className:r({"menu-list":!0,"menu-list--is-multi":a},n),ref:i},t)},MenuPortal:cr,LoadingMessage:sr,NoOptionsMessage:lr,MultiValue:jr,MultiValueContainer:Ar,MultiValueLabel:Pr,MultiValueRemove:_r,Option:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.isDisabled,i=e.isFocused,l=e.isSelected,s=e.innerRef,c=e.innerProps;return Bn("div",p({css:o("option",e),className:r({option:!0,"option--is-disabled":a,"option--is-focused":i,"option--is-selected":l},n),ref:s},c),t)},Placeholder:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.innerProps;return Bn("div",p({css:o("placeholder",e),className:r({placeholder:!0},n)},a),t)},SelectContainer:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.innerProps,i=e.isDisabled,l=e.isRtl;return Bn("div",p({css:o("container",e),className:r({"--is-disabled":i,"--is-rtl":l},n)},a),t)},SingleValue:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,a=e.isDisabled,i=e.innerProps;return Bn("div",p({css:o("singleValue",e),className:r({"single-value":!0,"single-value--is-disabled":a},n)},i),t)},ValueContainer:mr},Ir=function(e){return nn({},Nr,e.components)},Rr=[{base:"A",letters:/[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g},{base:"AA",letters:/[\uA732]/g},{base:"AE",letters:/[\u00C6\u01FC\u01E2]/g},{base:"AO",letters:/[\uA734]/g},{base:"AU",letters:/[\uA736]/g},{base:"AV",letters:/[\uA738\uA73A]/g},{base:"AY",letters:/[\uA73C]/g},{base:"B",letters:/[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g},{base:"C",letters:/[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g},{base:"D",letters:/[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g},{base:"DZ",letters:/[\u01F1\u01C4]/g},{base:"Dz",letters:/[\u01F2\u01C5]/g},{base:"E",letters:/[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g},{base:"F",letters:/[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g},{base:"G",letters:/[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g},{base:"H",letters:/[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g},{base:"I",letters:/[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g},{base:"J",letters:/[\u004A\u24BF\uFF2A\u0134\u0248]/g},{base:"K",letters:/[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g},{base:"L",letters:/[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g},{base:"LJ",letters:/[\u01C7]/g},{base:"Lj",letters:/[\u01C8]/g},{base:"M",letters:/[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g},{base:"N",letters:/[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g},{base:"NJ",letters:/[\u01CA]/g},{base:"Nj",letters:/[\u01CB]/g},{base:"O",letters:/[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g},{base:"OI",letters:/[\u01A2]/g},{base:"OO",letters:/[\uA74E]/g},{base:"OU",letters:/[\u0222]/g},{base:"P",letters:/[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g},{base:"Q",letters:/[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g},{base:"R",letters:/[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g},{base:"S",letters:/[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g},{base:"T",letters:/[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g},{base:"TZ",letters:/[\uA728]/g},{base:"U",letters:/[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g},{base:"V",letters:/[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g},{base:"VY",letters:/[\uA760]/g},{base:"W",letters:/[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g},{base:"X",letters:/[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g},{base:"Y",letters:/[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g},{base:"Z",letters:/[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g},{base:"a",letters:/[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g},{base:"aa",letters:/[\uA733]/g},{base:"ae",letters:/[\u00E6\u01FD\u01E3]/g},{base:"ao",letters:/[\uA735]/g},{base:"au",letters:/[\uA737]/g},{base:"av",letters:/[\uA739\uA73B]/g},{base:"ay",letters:/[\uA73D]/g},{base:"b",letters:/[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g},{base:"c",letters:/[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g},{base:"d",letters:/[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g},{base:"dz",letters:/[\u01F3\u01C6]/g},{base:"e",letters:/[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g},{base:"f",letters:/[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g},{base:"g",letters:/[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g},{base:"h",letters:/[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g},{base:"hv",letters:/[\u0195]/g},{base:"i",letters:/[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g},{base:"j",letters:/[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g},{base:"k",letters:/[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g},{base:"l",letters:/[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g},{base:"lj",letters:/[\u01C9]/g},{base:"m",letters:/[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g},{base:"n",letters:/[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g},{base:"nj",letters:/[\u01CC]/g},{base:"o",letters:/[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g},{base:"oi",letters:/[\u01A3]/g},{base:"ou",letters:/[\u0223]/g},{base:"oo",letters:/[\uA74F]/g},{base:"p",letters:/[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g},{base:"q",letters:/[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g},{base:"r",letters:/[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g},{base:"s",letters:/[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g},{base:"t",letters:/[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g},{base:"tz",letters:/[\uA729]/g},{base:"u",letters:/[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g},{base:"v",letters:/[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g},{base:"vy",letters:/[\uA761]/g},{base:"w",letters:/[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g},{base:"x",letters:/[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g},{base:"y",letters:/[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g},{base:"z",letters:/[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g}],Fr=function(e){for(var t=0;t<Rr.length;t++)e=e.replace(Rr[t].letters,Rr[t].base);return e},Mr=function(e){return e.replace(/^\s+|\s+$/g,"")},Dr=function(e){return"".concat(e.label," ").concat(e.value)},zr={name:"1laao21-a11yText",styles:"label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;"},Lr=function(e){return Bn("span",p({css:zr},e))},Ur=function(e){function t(){return rn(this,t),cn(this,un(t).apply(this,arguments))}return pn(t,r["Component"]),an(t,[{key:"render",value:function(){var e=this.props,t=(e.in,e.out,e.onExited,e.appear,e.enter,e.exit,e.innerRef),n=(e.emotion,Zt(e,["in","out","onExited","appear","enter","exit","innerRef","emotion"]));return Bn("input",p({ref:t},n,{css:In({label:"dummyInput",background:0,border:0,fontSize:"inherit",outline:0,padding:0,width:1,color:"transparent",left:-100,opacity:0,position:"relative",transform:"scale(0)"},"")}))}}]),t}(),Br=function(e){function t(){return rn(this,t),cn(this,un(t).apply(this,arguments))}return pn(t,r["Component"]),an(t,[{key:"componentDidMount",value:function(){this.props.innerRef(Object(a.findDOMNode)(this))}},{key:"componentWillUnmount",value:function(){this.props.innerRef(null)}},{key:"render",value:function(){return this.props.children}}]),t}(),Vr=["boxSizing","height","overflow","paddingRight","position"],Hr={boxSizing:"border-box",overflow:"hidden",position:"relative",height:"100%"};function Wr(e){e.preventDefault()}function $r(e){e.stopPropagation()}function qr(){var e=this.scrollTop,t=this.scrollHeight,n=e+this.offsetHeight;0===e?this.scrollTop=1:n===t&&(this.scrollTop=e-1)}function Kr(){return"ontouchstart"in window||navigator.maxTouchPoints}var Yr=!(!window.document||!window.document.createElement),Xr=0,Gr=function(e){function t(){var e,n;rn(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return tn(Rt(Rt(n=cn(this,(e=un(t)).call.apply(e,[this].concat(o))))),"originalStyles",{}),tn(Rt(Rt(n)),"listenerOptions",{capture:!1,passive:!1}),n}return pn(t,r["Component"]),an(t,[{key:"componentDidMount",value:function(){var e=this;if(Yr){var t=this.props,n=t.accountForScrollbars,r=t.touchScrollTarget,o=document.body,a=o&&o.style;if(n&&Vr.forEach(function(t){var n=a&&a[t];e.originalStyles[t]=n}),n&&Xr<1){var i=parseInt(this.originalStyles.paddingRight,10)||0,l=document.body?document.body.clientWidth:0,s=window.innerWidth-l+i||0;Object.keys(Hr).forEach(function(e){var t=Hr[e];a&&(a[e]=t)}),a&&(a.paddingRight="".concat(s,"px"))}o&&Kr()&&(o.addEventListener("touchmove",Wr,this.listenerOptions),r&&(r.addEventListener("touchstart",qr,this.listenerOptions),r.addEventListener("touchmove",$r,this.listenerOptions))),Xr+=1}}},{key:"componentWillUnmount",value:function(){var e=this;if(Yr){var t=this.props,n=t.accountForScrollbars,r=t.touchScrollTarget,o=document.body,a=o&&o.style;Xr=Math.max(Xr-1,0),n&&Xr<1&&Vr.forEach(function(t){var n=e.originalStyles[t];a&&(a[t]=n)}),o&&Kr()&&(o.removeEventListener("touchmove",Wr,this.listenerOptions),r&&(r.removeEventListener("touchstart",qr,this.listenerOptions),r.removeEventListener("touchmove",$r,this.listenerOptions)))}}},{key:"render",value:function(){return null}}]),t}();tn(Gr,"defaultProps",{accountForScrollbars:!0});var Qr={name:"1dsbpcp",styles:"position:fixed;left:0;bottom:0;right:0;top:0;"},Jr=function(e){function t(){var e,n;rn(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return tn(Rt(Rt(n=cn(this,(e=un(t)).call.apply(e,[this].concat(o))))),"state",{touchScrollTarget:null}),tn(Rt(Rt(n)),"getScrollTarget",function(e){e!==n.state.touchScrollTarget&&n.setState({touchScrollTarget:e})}),tn(Rt(Rt(n)),"blurSelectInput",function(){document.activeElement&&document.activeElement.blur()}),n}return pn(t,r["PureComponent"]),an(t,[{key:"render",value:function(){var e=this.props,t=e.children,n=e.isEnabled,r=this.state.touchScrollTarget;return n?Bn("div",null,Bn("div",{onClick:this.blurSelectInput,css:Qr}),Bn(Br,{innerRef:this.getScrollTarget},t),r?Bn(Gr,{touchScrollTarget:r}):null):t}}]),t}(),Zr=function(e){function t(){var e,n;rn(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return tn(Rt(Rt(n=cn(this,(e=un(t)).call.apply(e,[this].concat(o))))),"isBottom",!1),tn(Rt(Rt(n)),"isTop",!1),tn(Rt(Rt(n)),"scrollTarget",void 0),tn(Rt(Rt(n)),"touchStart",void 0),tn(Rt(Rt(n)),"cancelScroll",function(e){e.preventDefault(),e.stopPropagation()}),tn(Rt(Rt(n)),"handleEventDelta",function(e,t){var r=n.props,o=r.onBottomArrive,a=r.onBottomLeave,i=r.onTopArrive,l=r.onTopLeave,s=n.scrollTarget,c=s.scrollTop,u=s.scrollHeight,d=s.clientHeight,p=n.scrollTarget,f=t>0,m=u-d-c,g=!1;m>t&&n.isBottom&&(a&&a(e),n.isBottom=!1),f&&n.isTop&&(l&&l(e),n.isTop=!1),f&&t>m?(o&&!n.isBottom&&o(e),p.scrollTop=u,g=!0,n.isBottom=!0):!f&&-t>c&&(i&&!n.isTop&&i(e),p.scrollTop=0,g=!0,n.isTop=!0),g&&n.cancelScroll(e)}),tn(Rt(Rt(n)),"onWheel",function(e){n.handleEventDelta(e,e.deltaY)}),tn(Rt(Rt(n)),"onTouchStart",function(e){n.touchStart=e.changedTouches[0].clientY}),tn(Rt(Rt(n)),"onTouchMove",function(e){var t=n.touchStart-e.changedTouches[0].clientY;n.handleEventDelta(e,t)}),tn(Rt(Rt(n)),"getScrollTarget",function(e){n.scrollTarget=e}),n}return pn(t,r["Component"]),an(t,[{key:"componentDidMount",value:function(){this.startListening(this.scrollTarget)}},{key:"componentWillUnmount",value:function(){this.stopListening(this.scrollTarget)}},{key:"startListening",value:function(e){e&&(e.scrollHeight<=e.clientHeight||("function"==typeof e.addEventListener&&e.addEventListener("wheel",this.onWheel,!1),"function"==typeof e.addEventListener&&e.addEventListener("touchstart",this.onTouchStart,!1),"function"==typeof e.addEventListener&&e.addEventListener("touchmove",this.onTouchMove,!1)))}},{key:"stopListening",value:function(e){e.scrollHeight<=e.clientHeight||("function"==typeof e.removeEventListener&&e.removeEventListener("wheel",this.onWheel,!1),"function"==typeof e.removeEventListener&&e.removeEventListener("touchstart",this.onTouchStart,!1),"function"==typeof e.removeEventListener&&e.removeEventListener("touchmove",this.onTouchMove,!1))}},{key:"render",value:function(){return o.a.createElement(Br,{innerRef:this.getScrollTarget},this.props.children)}}]),t}(),eo=function(e){function t(){return rn(this,t),cn(this,un(t).apply(this,arguments))}return pn(t,r["Component"]),an(t,[{key:"render",value:function(){var e=this.props,t=e.isEnabled,n=Zt(e,["isEnabled"]);return t?o.a.createElement(Zr,n):this.props.children}}]),t}();tn(eo,"defaultProps",{isEnabled:!0});var to=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.isSearchable,r=t.isMulti,o=t.label,a=t.isDisabled;switch(e){case"menu":return"Use Up and Down to choose options".concat(a?"":", press Enter to select the currently focused option",", press Escape to exit the menu, press Tab to select the option and exit the menu.");case"input":return"".concat(o||"Select"," is focused ").concat(n?",type to refine list":"",", press Down to open the menu, ").concat(r?" press left to focus selected values":"");case"value":return"Use left and right to toggle between focused values, press Backspace to remove the currently focused value"}},no=function(e,t){var n=t.value,r=t.isDisabled;if(n)switch(e){case"deselect-option":case"pop-value":case"remove-value":return"option ".concat(n,", deselected.");case"select-option":return"option ".concat(n,r?" is disabled. Select another option.":", selected.")}},ro=function(e){return!!e.isDisabled},oo={clearIndicator:kr,container:function(e){var t=e.isDisabled;return{label:"container",direction:e.isRtl?"rtl":null,pointerEvents:t?"none":null,position:"relative"}},control:function(e){var t=e.isDisabled,n=e.isFocused,r=e.theme,o=r.colors,a=r.borderRadius,i=r.spacing;return{label:"control",alignItems:"center",backgroundColor:t?o.neutral5:o.neutral0,borderColor:t?o.neutral10:n?o.primary:o.neutral20,borderRadius:a,borderStyle:"solid",borderWidth:1,boxShadow:n?"0 0 0 1px ".concat(o.primary):null,cursor:"default",display:"flex",flexWrap:"wrap",justifyContent:"space-between",minHeight:i.controlHeight,outline:"0 !important",position:"relative",transition:"all 100ms","&:hover":{borderColor:n?o.primary:o.neutral30}}},dropdownIndicator:wr,group:function(e){var t=e.theme.spacing;return{paddingBottom:2*t.baseUnit,paddingTop:2*t.baseUnit}},groupHeading:function(e){var t=e.theme.spacing;return{label:"group",color:"#999",cursor:"default",display:"block",fontSize:"75%",fontWeight:"500",marginBottom:"0.25em",paddingLeft:3*t.baseUnit,paddingRight:3*t.baseUnit,textTransform:"uppercase"}},indicatorsContainer:function(){return{alignItems:"center",alignSelf:"stretch",display:"flex",flexShrink:0}},indicatorSeparator:function(e){var t=e.isDisabled,n=e.theme,r=n.spacing.baseUnit,o=n.colors;return{label:"indicatorSeparator",alignSelf:"stretch",backgroundColor:t?o.neutral10:o.neutral20,marginBottom:2*r,marginTop:2*r,width:1}},input:function(e){var t=e.isDisabled,n=e.theme,r=n.spacing,o=n.colors;return{margin:r.baseUnit/2,paddingBottom:r.baseUnit/2,paddingTop:r.baseUnit/2,visibility:t?"hidden":"visible",color:o.neutral80}},loadingIndicator:function(e){var t=e.isFocused,n=e.size,r=e.theme,o=r.colors,a=r.spacing.baseUnit;return{label:"loadingIndicator",color:t?o.neutral60:o.neutral20,display:"flex",padding:2*a,transition:"color 150ms",alignSelf:"center",fontSize:n,lineHeight:1,marginRight:n,textAlign:"center",verticalAlign:"middle"}},loadingMessage:ir,menu:function(e){var t,n=e.placement,r=e.theme,o=r.borderRadius,a=r.spacing,i=r.colors;return tn(t={label:"menu"},function(e){return e?{bottom:"top",top:"bottom"}[e]:"bottom"}(n),"100%"),tn(t,"backgroundColor",i.neutral0),tn(t,"borderRadius",o),tn(t,"boxShadow","0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)"),tn(t,"marginBottom",a.menuGutter),tn(t,"marginTop",a.menuGutter),tn(t,"position","absolute"),tn(t,"width","100%"),tn(t,"zIndex",1),t},menuList:function(e){var t=e.maxHeight,n=e.theme.spacing.baseUnit;return{maxHeight:t,overflowY:"auto",paddingBottom:n,paddingTop:n,position:"relative",WebkitOverflowScrolling:"touch"}},menuPortal:function(e){var t=e.rect,n=e.offset,r=e.position;return{left:t.left,position:r,top:n,width:t.width,zIndex:1}},multiValue:function(e){var t=e.theme,n=t.spacing,r=t.borderRadius;return{label:"multiValue",backgroundColor:t.colors.neutral10,borderRadius:r/2,display:"flex",margin:n.baseUnit/2,minWidth:0}},multiValueLabel:function(e){var t=e.theme,n=t.borderRadius,r=t.colors,o=e.cropWithEllipsis;return{borderRadius:n/2,color:r.neutral80,fontSize:"85%",overflow:"hidden",padding:3,paddingLeft:6,textOverflow:o?"ellipsis":null,whiteSpace:"nowrap"}},multiValueRemove:function(e){var t=e.theme,n=t.spacing,r=t.borderRadius,o=t.colors;return{alignItems:"center",borderRadius:r/2,backgroundColor:e.isFocused&&o.dangerLight,display:"flex",paddingLeft:n.baseUnit,paddingRight:n.baseUnit,":hover":{backgroundColor:o.dangerLight,color:o.danger}}},noOptionsMessage:ar,option:function(e){var t=e.isDisabled,n=e.isFocused,r=e.isSelected,o=e.theme,a=o.spacing,i=o.colors;return{label:"option",backgroundColor:r?i.primary:n?i.primary25:"transparent",color:t?i.neutral20:r?i.neutral0:"inherit",cursor:"default",display:"block",fontSize:"inherit",padding:"".concat(2*a.baseUnit,"px ").concat(3*a.baseUnit,"px"),width:"100%",userSelect:"none",WebkitTapHighlightColor:"rgba(0, 0, 0, 0)",":active":{backgroundColor:!t&&(r?i.primary:i.primary50)}}},placeholder:function(e){var t=e.theme,n=t.spacing;return{label:"placeholder",color:t.colors.neutral50,marginLeft:n.baseUnit/2,marginRight:n.baseUnit/2,position:"absolute",top:"50%",transform:"translateY(-50%)"}},singleValue:function(e){var t=e.isDisabled,n=e.theme,r=n.spacing,o=n.colors;return{label:"singleValue",color:t?o.neutral40:o.neutral80,marginLeft:r.baseUnit/2,marginRight:r.baseUnit/2,maxWidth:"calc(100% - ".concat(2*r.baseUnit,"px)"),overflow:"hidden",position:"absolute",textOverflow:"ellipsis",whiteSpace:"nowrap",top:"50%",transform:"translateY(-50%)"}},valueContainer:function(e){var t=e.theme.spacing;return{alignItems:"center",display:"flex",flex:1,flexWrap:"wrap",padding:"".concat(t.baseUnit/2,"px ").concat(2*t.baseUnit,"px"),WebkitOverflowScrolling:"touch",position:"relative",overflow:"hidden"}}};var ao,io={borderRadius:4,colors:{primary:"#2684FF",primary75:"#4C9AFF",primary50:"#B2D4FF",primary25:"#DEEBFF",danger:"#DE350B",dangerLight:"#FFBDAD",neutral0:"hsl(0, 0%, 100%)",neutral5:"hsl(0, 0%, 95%)",neutral10:"hsl(0, 0%, 90%)",neutral20:"hsl(0, 0%, 80%)",neutral30:"hsl(0, 0%, 70%)",neutral40:"hsl(0, 0%, 60%)",neutral50:"hsl(0, 0%, 50%)",neutral60:"hsl(0, 0%, 40%)",neutral70:"hsl(0, 0%, 30%)",neutral80:"hsl(0, 0%, 20%)",neutral90:"hsl(0, 0%, 10%)"},spacing:{baseUnit:4,controlHeight:38,menuGutter:8}},lo={backspaceRemovesValue:!0,blurInputOnSelect:Jn(),captureMenuScroll:!Jn(),closeMenuOnSelect:!0,closeMenuOnScroll:!1,components:{},controlShouldRenderValue:!0,escapeClearsValue:!1,filterOption:function(e,t){var n=nn({ignoreCase:!0,ignoreAccents:!0,stringify:Dr,trim:!0,matchFrom:"any"},ao),r=n.ignoreCase,o=n.ignoreAccents,a=n.stringify,i=n.trim,l=n.matchFrom,s=i?Mr(t):t,c=i?Mr(a(e)):a(e);return r&&(s=s.toLowerCase(),c=c.toLowerCase()),o&&(s=Fr(s),c=Fr(c)),"start"===l?c.substr(0,s.length)===s:c.indexOf(s)>-1},formatGroupLabel:function(e){return e.label},getOptionLabel:function(e){return e.label},getOptionValue:function(e){return e.value},isDisabled:!1,isLoading:!1,isMulti:!1,isRtl:!1,isSearchable:!0,isOptionDisabled:ro,loadingMessage:function(){return"Loading..."},maxMenuHeight:300,minMenuHeight:140,menuIsOpen:!1,menuPlacement:"bottom",menuPosition:"absolute",menuShouldBlockScroll:!1,menuShouldScrollIntoView:!function(){try{return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}catch(e){return!1}}(),noOptionsMessage:function(){return"No options"},openMenuOnFocus:!1,openMenuOnClick:!0,options:[],pageSize:5,placeholder:"Select...",screenReaderStatus:function(e){var t=e.count;return"".concat(t," result").concat(1!==t?"s":""," available")},styles:{},tabIndex:"0",tabSelectsValue:!0},so=1,co=function(e){function t(e){var n;rn(this,t),tn(Rt(Rt(n=cn(this,un(t).call(this,e)))),"state",{ariaLiveSelection:"",ariaLiveContext:"",focusedOption:null,focusedValue:null,inputIsHidden:!1,isFocused:!1,menuOptions:{render:[],focusable:[]},selectValue:[]}),tn(Rt(Rt(n)),"blockOptionHover",!1),tn(Rt(Rt(n)),"isComposing",!1),tn(Rt(Rt(n)),"clearFocusValueOnUpdate",!1),tn(Rt(Rt(n)),"commonProps",void 0),tn(Rt(Rt(n)),"components",void 0),tn(Rt(Rt(n)),"hasGroups",!1),tn(Rt(Rt(n)),"initialTouchX",0),tn(Rt(Rt(n)),"initialTouchY",0),tn(Rt(Rt(n)),"inputIsHiddenAfterUpdate",void 0),tn(Rt(Rt(n)),"instancePrefix",""),tn(Rt(Rt(n)),"openAfterFocus",!1),tn(Rt(Rt(n)),"scrollToFocusedOptionOnUpdate",!1),tn(Rt(Rt(n)),"userIsDragging",void 0),tn(Rt(Rt(n)),"controlRef",null),tn(Rt(Rt(n)),"getControlRef",function(e){n.controlRef=e}),tn(Rt(Rt(n)),"focusedOptionRef",null),tn(Rt(Rt(n)),"getFocusedOptionRef",function(e){n.focusedOptionRef=e}),tn(Rt(Rt(n)),"menuListRef",null),tn(Rt(Rt(n)),"getMenuListRef",function(e){n.menuListRef=e}),tn(Rt(Rt(n)),"inputRef",null),tn(Rt(Rt(n)),"getInputRef",function(e){n.inputRef=e}),tn(Rt(Rt(n)),"cacheComponents",function(e){n.components=Ir({components:e})}),tn(Rt(Rt(n)),"focus",n.focusInput),tn(Rt(Rt(n)),"blur",n.blurInput),tn(Rt(Rt(n)),"onChange",function(e,t){var r=n.props;(0,r.onChange)(e,nn({},t,{name:r.name}))}),tn(Rt(Rt(n)),"setValue",function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"set-value",r=arguments.length>2?arguments[2]:void 0,o=n.props,a=o.closeMenuOnSelect,i=o.isMulti;n.onInputChange("",{action:"set-value"}),a&&(n.inputIsHiddenAfterUpdate=!i,n.onMenuClose()),n.clearFocusValueOnUpdate=!0,n.onChange(e,{action:t,option:r})}),tn(Rt(Rt(n)),"selectOption",function(e){var t=n.props,r=t.blurInputOnSelect,o=t.isMulti,a=n.state.selectValue;if(o)if(n.isOptionSelected(e,a)){var i=n.getOptionValue(e);n.setValue(a.filter(function(e){return n.getOptionValue(e)!==i}),"deselect-option",e),n.announceAriaLiveSelection({event:"deselect-option",context:{value:n.getOptionLabel(e)}})}else n.isOptionDisabled(e,a)?n.announceAriaLiveSelection({event:"select-option",context:{value:n.getOptionLabel(e),isDisabled:!0}}):(n.setValue([].concat(en(a),[e]),"select-option",e),n.announceAriaLiveSelection({event:"select-option",context:{value:n.getOptionLabel(e)}}));else n.isOptionDisabled(e,a)?n.announceAriaLiveSelection({event:"select-option",context:{value:n.getOptionLabel(e),isDisabled:!0}}):(n.setValue(e,"select-option"),n.announceAriaLiveSelection({event:"select-option",context:{value:n.getOptionLabel(e)}}));r&&n.blurInput()}),tn(Rt(Rt(n)),"removeValue",function(e){var t=n.state.selectValue,r=n.getOptionValue(e),o=t.filter(function(e){return n.getOptionValue(e)!==r});n.onChange(o.length?o:null,{action:"remove-value",removedValue:e}),n.announceAriaLiveSelection({event:"remove-value",context:{value:e?n.getOptionLabel(e):""}}),n.focusInput()}),tn(Rt(Rt(n)),"clearValue",function(){var e=n.props.isMulti;n.onChange(e?[]:null,{action:"clear"})}),tn(Rt(Rt(n)),"popValue",function(){var e=n.state.selectValue,t=e[e.length-1],r=e.slice(0,e.length-1);n.announceAriaLiveSelection({event:"pop-value",context:{value:t?n.getOptionLabel(t):""}}),n.onChange(r.length?r:null,{action:"pop-value",removedValue:t})}),tn(Rt(Rt(n)),"getOptionLabel",function(e){return n.props.getOptionLabel(e)}),tn(Rt(Rt(n)),"getOptionValue",function(e){return n.props.getOptionValue(e)}),tn(Rt(Rt(n)),"getStyles",function(e,t){var r=oo[e](t);r.boxSizing="border-box";var o=n.props.styles[e];return o?o(r,t):r}),tn(Rt(Rt(n)),"getElementId",function(e){return"".concat(n.instancePrefix,"-").concat(e)}),tn(Rt(Rt(n)),"getActiveDescendentId",function(){var e=n.props.menuIsOpen,t=n.state,r=t.menuOptions,o=t.focusedOption;if(o&&e){var a=r.focusable.indexOf(o),i=r.render[a];return i&&i.key}}),tn(Rt(Rt(n)),"announceAriaLiveSelection",function(e){var t=e.event,r=e.context;n.setState({ariaLiveSelection:no(t,r)})}),tn(Rt(Rt(n)),"announceAriaLiveContext",function(e){var t=e.event,r=e.context;n.setState({ariaLiveContext:to(t,nn({},r,{label:n.props["aria-label"]}))})}),tn(Rt(Rt(n)),"onMenuMouseDown",function(e){0===e.button&&(e.stopPropagation(),e.preventDefault(),n.focusInput())}),tn(Rt(Rt(n)),"onMenuMouseMove",function(e){n.blockOptionHover=!1}),tn(Rt(Rt(n)),"onControlMouseDown",function(e){var t=n.props.openMenuOnClick;n.state.isFocused?n.props.menuIsOpen?"INPUT"!==e.target.tagName&&n.onMenuClose():t&&n.openMenu("first"):(t&&(n.openAfterFocus=!0),n.focusInput()),"INPUT"!==e.target.tagName&&e.preventDefault()}),tn(Rt(Rt(n)),"onDropdownIndicatorMouseDown",function(e){if(!(e&&"mousedown"===e.type&&0!==e.button||n.props.isDisabled)){var t=n.props,r=t.isMulti,o=t.menuIsOpen;n.focusInput(),o?(n.inputIsHiddenAfterUpdate=!r,n.onMenuClose()):n.openMenu("first"),e.preventDefault(),e.stopPropagation()}}),tn(Rt(Rt(n)),"onClearIndicatorMouseDown",function(e){e&&"mousedown"===e.type&&0!==e.button||(n.clearValue(),e.stopPropagation(),n.openAfterFocus=!1,"touchend"===e.type?n.focusInput():setTimeout(function(){return n.focusInput()}))}),tn(Rt(Rt(n)),"onScroll",function(e){"boolean"==typeof n.props.closeMenuOnScroll?e.target instanceof HTMLElement&&Yn(e.target)&&n.props.onMenuClose():"function"==typeof n.props.closeMenuOnScroll&&n.props.closeMenuOnScroll(e)&&n.props.onMenuClose()}),tn(Rt(Rt(n)),"onCompositionStart",function(){n.isComposing=!0}),tn(Rt(Rt(n)),"onCompositionEnd",function(){n.isComposing=!1}),tn(Rt(Rt(n)),"onTouchStart",function(e){var t=e.touches.item(0);t&&(n.initialTouchX=t.clientX,n.initialTouchY=t.clientY,n.userIsDragging=!1)}),tn(Rt(Rt(n)),"onTouchMove",function(e){var t=e.touches.item(0);if(t){var r=Math.abs(t.clientX-n.initialTouchX),o=Math.abs(t.clientY-n.initialTouchY);n.userIsDragging=r>5||o>5}}),tn(Rt(Rt(n)),"onTouchEnd",function(e){n.userIsDragging||(n.controlRef&&!n.controlRef.contains(e.target)&&n.menuListRef&&!n.menuListRef.contains(e.target)&&n.blurInput(),n.initialTouchX=0,n.initialTouchY=0)}),tn(Rt(Rt(n)),"onControlTouchEnd",function(e){n.userIsDragging||n.onControlMouseDown(e)}),tn(Rt(Rt(n)),"onClearIndicatorTouchEnd",function(e){n.userIsDragging||n.onClearIndicatorMouseDown(e)}),tn(Rt(Rt(n)),"onDropdownIndicatorTouchEnd",function(e){n.userIsDragging||n.onDropdownIndicatorMouseDown(e)}),tn(Rt(Rt(n)),"handleInputChange",function(e){var t=e.currentTarget.value;n.inputIsHiddenAfterUpdate=!1,n.onInputChange(t,{action:"input-change"}),n.onMenuOpen()}),tn(Rt(Rt(n)),"onInputFocus",function(e){var t=n.props,r=t.isSearchable,o=t.isMulti;n.props.onFocus&&n.props.onFocus(e),n.inputIsHiddenAfterUpdate=!1,n.announceAriaLiveContext({event:"input",context:{isSearchable:r,isMulti:o}}),n.setState({isFocused:!0}),(n.openAfterFocus||n.props.openMenuOnFocus)&&n.openMenu("first"),n.openAfterFocus=!1}),tn(Rt(Rt(n)),"onInputBlur",function(e){n.menuListRef&&n.menuListRef.contains(document.activeElement)?n.inputRef.focus():(n.props.onBlur&&n.props.onBlur(e),n.onInputChange("",{action:"input-blur"}),n.onMenuClose(),n.setState({focusedValue:null,isFocused:!1}))}),tn(Rt(Rt(n)),"onOptionHover",function(e){n.blockOptionHover||n.state.focusedOption===e||n.setState({focusedOption:e})}),tn(Rt(Rt(n)),"shouldHideSelectedOptions",function(){var e=n.props,t=e.hideSelectedOptions,r=e.isMulti;return void 0===t?r:t}),tn(Rt(Rt(n)),"onKeyDown",function(e){var t=n.props,r=t.isMulti,o=t.backspaceRemovesValue,a=t.escapeClearsValue,i=t.inputValue,l=t.isClearable,s=t.isDisabled,c=t.menuIsOpen,u=t.onKeyDown,d=t.tabSelectsValue,p=t.openMenuOnFocus,f=n.state,m=f.focusedOption,g=f.focusedValue,b=f.selectValue;if(!(s||"function"==typeof u&&(u(e),e.defaultPrevented))){switch(n.blockOptionHover=!0,e.key){case"ArrowLeft":if(!r||i)return;n.focusValue("previous");break;case"ArrowRight":if(!r||i)return;n.focusValue("next");break;case"Delete":case"Backspace":if(i)return;if(g)n.removeValue(g);else{if(!o)return;r?n.popValue():l&&n.clearValue()}break;case"Tab":if(n.isComposing)return;if(e.shiftKey||!c||!d||!m||p&&n.isOptionSelected(m,b))return;n.selectOption(m);break;case"Enter":if(229===e.keyCode)break;if(c){if(!m)return;if(n.isComposing)return;n.selectOption(m);break}return;case"Escape":c?(n.inputIsHiddenAfterUpdate=!1,n.onInputChange("",{action:"menu-close"}),n.onMenuClose()):l&&a&&n.clearValue();break;case" ":if(i)return;if(!c){n.openMenu("first");break}if(!m)return;n.selectOption(m);break;case"ArrowUp":c?n.focusOption("up"):n.openMenu("last");break;case"ArrowDown":c?n.focusOption("down"):n.openMenu("first");break;case"PageUp":if(!c)return;n.focusOption("pageup");break;case"PageDown":if(!c)return;n.focusOption("pagedown");break;case"Home":if(!c)return;n.focusOption("first");break;case"End":if(!c)return;n.focusOption("last");break;default:return}e.preventDefault()}});var r=e.value;n.cacheComponents=Object(fn.a)(n.cacheComponents,fr).bind(Rt(Rt(n))),n.cacheComponents(e.components),n.instancePrefix="react-select-"+(n.props.instanceId||++so);var o=Kn(r),a=e.menuIsOpen?n.buildMenuOptions(e,o):{render:[],focusable:[]};return n.state.menuOptions=a,n.state.selectValue=o,n}return pn(t,r["Component"]),an(t,[{key:"componentDidMount",value:function(){this.startListeningComposition(),this.startListeningToTouch(),this.props.closeMenuOnScroll&&document&&document.addEventListener&&document.addEventListener("scroll",this.onScroll,!0),this.props.autoFocus&&this.focusInput()}},{key:"componentWillReceiveProps",value:function(e){var t=this.props,n=t.options,r=t.value,o=t.menuIsOpen,a=t.inputValue;if(this.cacheComponents(e.components),e.value!==r||e.options!==n||e.menuIsOpen!==o||e.inputValue!==a){var i=Kn(e.value),l=e.menuIsOpen?this.buildMenuOptions(e,i):{render:[],focusable:[]},s=this.getNextFocusedValue(i),c=this.getNextFocusedOption(l.focusable);this.setState({menuOptions:l,selectValue:i,focusedOption:c,focusedValue:s})}null!=this.inputIsHiddenAfterUpdate&&(this.setState({inputIsHidden:this.inputIsHiddenAfterUpdate}),delete this.inputIsHiddenAfterUpdate)}},{key:"componentDidUpdate",value:function(e){var t,n,r,o,a,i=this.props,l=i.isDisabled,s=i.menuIsOpen,c=this.state.isFocused;(c&&!l&&e.isDisabled||c&&s&&!e.menuIsOpen)&&this.focusInput(),this.menuListRef&&this.focusedOptionRef&&this.scrollToFocusedOptionOnUpdate&&(t=this.menuListRef,n=this.focusedOptionRef,r=t.getBoundingClientRect(),o=n.getBoundingClientRect(),a=n.offsetHeight/3,o.bottom+a>r.bottom?Gn(t,Math.min(n.offsetTop+n.clientHeight-t.offsetHeight+a,t.scrollHeight)):o.top-a<r.top&&Gn(t,Math.max(n.offsetTop-a,0))),this.scrollToFocusedOptionOnUpdate=!1}},{key:"componentWillUnmount",value:function(){this.stopListeningComposition(),this.stopListeningToTouch(),document.removeEventListener("scroll",this.onScroll,!0)}},{key:"onMenuOpen",value:function(){this.props.onMenuOpen()}},{key:"onMenuClose",value:function(){var e=this.props,t=e.isSearchable,n=e.isMulti;this.announceAriaLiveContext({event:"input",context:{isSearchable:t,isMulti:n}}),this.onInputChange("",{action:"menu-close"}),this.props.onMenuClose()}},{key:"onInputChange",value:function(e,t){this.props.onInputChange(e,t)}},{key:"focusInput",value:function(){this.inputRef&&this.inputRef.focus()}},{key:"blurInput",value:function(){this.inputRef&&this.inputRef.blur()}},{key:"openMenu",value:function(e){var t=this.state,n=t.menuOptions,r=t.selectValue,o=t.isFocused,a=this.props.isMulti,i="first"===e?0:n.focusable.length-1;if(!a){var l=n.focusable.indexOf(r[0]);l>-1&&(i=l)}this.scrollToFocusedOptionOnUpdate=!(o&&this.menuListRef),this.inputIsHiddenAfterUpdate=!1,this.onMenuOpen(),this.setState({focusedValue:null,focusedOption:n.focusable[i]}),this.announceAriaLiveContext({event:"menu"})}},{key:"focusValue",value:function(e){var t=this.props,n=t.isMulti,r=t.isSearchable,o=this.state,a=o.selectValue,i=o.focusedValue;if(n){this.setState({focusedOption:null});var l=a.indexOf(i);i||(l=-1,this.announceAriaLiveContext({event:"value"}));var s=a.length-1,c=-1;if(a.length){switch(e){case"previous":c=0===l?0:-1===l?s:l-1;break;case"next":l>-1&&l<s&&(c=l+1)}-1===c&&this.announceAriaLiveContext({event:"input",context:{isSearchable:r,isMulti:n}}),this.setState({inputIsHidden:-1!==c,focusedValue:a[c]})}}}},{key:"focusOption",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"first",t=this.props.pageSize,n=this.state,r=n.focusedOption,o=n.menuOptions.focusable;if(o.length){var a=0,i=o.indexOf(r);r||(i=-1,this.announceAriaLiveContext({event:"menu"})),"up"===e?a=i>0?i-1:o.length-1:"down"===e?a=(i+1)%o.length:"pageup"===e?(a=i-t)<0&&(a=0):"pagedown"===e?(a=i+t)>o.length-1&&(a=o.length-1):"last"===e&&(a=o.length-1),this.scrollToFocusedOptionOnUpdate=!0,this.setState({focusedOption:o[a],focusedValue:null}),this.announceAriaLiveContext({event:"menu",context:{isDisabled:ro(o[a])}})}}},{key:"getTheme",value:function(){return this.props.theme?"function"==typeof this.props.theme?this.props.theme(io):nn({},io,this.props.theme):io}},{key:"getCommonProps",value:function(){var e=this.clearValue,t=this.getStyles,n=this.setValue,r=this.selectOption,o=this.props,a=o.classNamePrefix,i=o.isMulti,l=o.isRtl,s=o.options,c=this.state.selectValue,u=this.hasValue();return{cx:function(e,t,n){var r=[n];if(t&&e)for(var o in t)t.hasOwnProperty(o)&&t[o]&&r.push("".concat(qn(e,o)));return r.filter(function(e){return e}).map(function(e){return String(e).trim()}).join(" ")}.bind(null,a),clearValue:e,getStyles:t,getValue:function(){return c},hasValue:u,isMulti:i,isRtl:l,options:s,selectOption:r,setValue:n,selectProps:o,theme:this.getTheme()}}},{key:"getNextFocusedValue",value:function(e){if(this.clearFocusValueOnUpdate)return this.clearFocusValueOnUpdate=!1,null;var t=this.state,n=t.focusedValue,r=t.selectValue.indexOf(n);if(r>-1){if(e.indexOf(n)>-1)return n;if(r<e.length)return e[r]}return null}},{key:"getNextFocusedOption",value:function(e){var t=this.state.focusedOption;return t&&e.indexOf(t)>-1?t:e[0]}},{key:"hasValue",value:function(){return this.state.selectValue.length>0}},{key:"hasOptions",value:function(){return!!this.state.menuOptions.render.length}},{key:"countOptions",value:function(){return this.state.menuOptions.focusable.length}},{key:"isClearable",value:function(){var e=this.props,t=e.isClearable,n=e.isMulti;return void 0===t?n:t}},{key:"isOptionDisabled",value:function(e,t){return"function"==typeof this.props.isOptionDisabled&&this.props.isOptionDisabled(e,t)}},{key:"isOptionSelected",value:function(e,t){var n=this;if(t.indexOf(e)>-1)return!0;if("function"==typeof this.props.isOptionSelected)return this.props.isOptionSelected(e,t);var r=this.getOptionValue(e);return t.some(function(e){return n.getOptionValue(e)===r})}},{key:"filterOption",value:function(e,t){return!this.props.filterOption||this.props.filterOption(e,t)}},{key:"formatOptionLabel",value:function(e,t){if("function"==typeof this.props.formatOptionLabel){var n=this.props.inputValue,r=this.state.selectValue;return this.props.formatOptionLabel(e,{context:t,inputValue:n,selectValue:r})}return this.getOptionLabel(e)}},{key:"formatGroupLabel",value:function(e){return this.props.formatGroupLabel(e)}},{key:"startListeningComposition",value:function(){document&&document.addEventListener&&(document.addEventListener("compositionstart",this.onCompositionStart,!1),document.addEventListener("compositionend",this.onCompositionEnd,!1))}},{key:"stopListeningComposition",value:function(){document&&document.removeEventListener&&(document.removeEventListener("compositionstart",this.onCompositionStart),document.removeEventListener("compositionend",this.onCompositionEnd))}},{key:"startListeningToTouch",value:function(){document&&document.addEventListener&&(document.addEventListener("touchstart",this.onTouchStart,!1),document.addEventListener("touchmove",this.onTouchMove,!1),document.addEventListener("touchend",this.onTouchEnd,!1))}},{key:"stopListeningToTouch",value:function(){document&&document.removeEventListener&&(document.removeEventListener("touchstart",this.onTouchStart),document.removeEventListener("touchmove",this.onTouchMove),document.removeEventListener("touchend",this.onTouchEnd))}},{key:"buildMenuOptions",value:function(e,t){var n=this,r=e.inputValue,o=void 0===r?"":r,a=e.options,i=function(e,r){var a=n.isOptionDisabled(e,t),i=n.isOptionSelected(e,t),l=n.getOptionLabel(e),s=n.getOptionValue(e);if(!(n.shouldHideSelectedOptions()&&i||!n.filterOption({label:l,value:s,data:e},o))){var c=a?void 0:function(){return n.onOptionHover(e)},u=a?void 0:function(){return n.selectOption(e)},d="".concat(n.getElementId("option"),"-").concat(r);return{innerProps:{id:d,onClick:u,onMouseMove:c,onMouseOver:c,tabIndex:-1},data:e,isDisabled:a,isSelected:i,key:d,label:l,type:"option",value:s}}};return a.reduce(function(e,t,r){if(t.options){n.hasGroups||(n.hasGroups=!0);var o=t.options.map(function(t,n){var o=i(t,"".concat(r,"-").concat(n));return o&&e.focusable.push(t),o}).filter(Boolean);if(o.length){var a="".concat(n.getElementId("group"),"-").concat(r);e.render.push({type:"group",key:a,data:t,options:o})}}else{var l=i(t,"".concat(r));l&&(e.render.push(l),e.focusable.push(t))}return e},{render:[],focusable:[]})}},{key:"constructAriaLiveMessage",value:function(){var e=this.state,t=e.ariaLiveContext,n=e.selectValue,r=e.focusedValue,o=e.focusedOption,a=this.props,i=a.options,l=a.menuIsOpen,s=a.inputValue,c=a.screenReaderStatus,u=r?function(e){var t=e.focusedValue,n=e.getOptionLabel,r=e.selectValue;return"value ".concat(n(t)," focused, ").concat(r.indexOf(t)+1," of ").concat(r.length,".")}({focusedValue:r,getOptionLabel:this.getOptionLabel,selectValue:n}):"",d=o&&l?function(e){var t=e.focusedOption,n=e.getOptionLabel,r=e.options;return"option ".concat(n(t)," focused").concat(t.isDisabled?" disabled":"",", ").concat(r.indexOf(t)+1," of ").concat(r.length,".")}({focusedOption:o,getOptionLabel:this.getOptionLabel,options:i}):"",p=function(e){var t=e.inputValue,n=e.screenReaderMessage;return"".concat(n).concat(t?" for search term "+t:"",".")}({inputValue:s,screenReaderMessage:c({count:this.countOptions()})});return"".concat(u," ").concat(d," ").concat(p," ").concat(t)}},{key:"renderInput",value:function(){var e=this.props,t=e.isDisabled,n=e.isSearchable,r=e.inputId,a=e.inputValue,i=e.tabIndex,l=this.components.Input,s=this.state.inputIsHidden,c=r||this.getElementId("input");if(!n)return o.a.createElement(Ur,{id:c,innerRef:this.getInputRef,onBlur:this.onInputBlur,onChange:$n,onFocus:this.onInputFocus,readOnly:!0,disabled:t,tabIndex:i,value:""});var u={"aria-autocomplete":"list","aria-label":this.props["aria-label"],"aria-labelledby":this.props["aria-labelledby"]},d=this.commonProps,f=d.cx,m=d.theme,g=d.selectProps;return o.a.createElement(l,p({autoCapitalize:"none",autoComplete:"off",autoCorrect:"off",cx:f,getStyles:this.getStyles,id:c,innerRef:this.getInputRef,isDisabled:t,isHidden:s,onBlur:this.onInputBlur,onChange:this.handleInputChange,onFocus:this.onInputFocus,selectProps:g,spellCheck:"false",tabIndex:i,theme:m,type:"text",value:a},u))}},{key:"renderPlaceholderOrValue",value:function(){var e=this,t=this.components,n=t.MultiValue,r=t.MultiValueContainer,a=t.MultiValueLabel,i=t.MultiValueRemove,l=t.SingleValue,s=t.Placeholder,c=this.commonProps,u=this.props,d=u.controlShouldRenderValue,f=u.isDisabled,m=u.isMulti,g=u.inputValue,b=u.placeholder,h=this.state,v=h.selectValue,x=h.focusedValue,y=h.isFocused;if(!this.hasValue()||!d)return g?null:o.a.createElement(s,p({},c,{key:"placeholder",isDisabled:f,isFocused:y}),b);if(m)return v.map(function(t){var l=t===x;return o.a.createElement(n,p({},c,{components:{Container:r,Label:a,Remove:i},isFocused:l,isDisabled:f,key:e.getOptionValue(t),removeProps:{onClick:function(){return e.removeValue(t)},onTouchEnd:function(){return e.removeValue(t)},onMouseDown:function(e){e.preventDefault(),e.stopPropagation()}},data:t}),e.formatOptionLabel(t,"value"))});if(g)return null;var w=v[0];return o.a.createElement(l,p({},c,{data:w,isDisabled:f}),this.formatOptionLabel(w,"value"))}},{key:"renderClearIndicator",value:function(){var e=this.components.ClearIndicator,t=this.commonProps,n=this.props,r=n.isDisabled,a=n.isLoading,i=this.state.isFocused;if(!this.isClearable()||!e||r||!this.hasValue()||a)return null;var l={onMouseDown:this.onClearIndicatorMouseDown,onTouchEnd:this.onClearIndicatorTouchEnd,"aria-hidden":"true"};return o.a.createElement(e,p({},t,{innerProps:l,isFocused:i}))}},{key:"renderLoadingIndicator",value:function(){var e=this.components.LoadingIndicator,t=this.commonProps,n=this.props,r=n.isDisabled,a=n.isLoading,i=this.state.isFocused;if(!e||!a)return null;return o.a.createElement(e,p({},t,{innerProps:{"aria-hidden":"true"},isDisabled:r,isFocused:i}))}},{key:"renderIndicatorSeparator",value:function(){var e=this.components,t=e.DropdownIndicator,n=e.IndicatorSeparator;if(!t||!n)return null;var r=this.commonProps,a=this.props.isDisabled,i=this.state.isFocused;return o.a.createElement(n,p({},r,{isDisabled:a,isFocused:i}))}},{key:"renderDropdownIndicator",value:function(){var e=this.components.DropdownIndicator;if(!e)return null;var t=this.commonProps,n=this.props.isDisabled,r=this.state.isFocused,a={onMouseDown:this.onDropdownIndicatorMouseDown,onTouchEnd:this.onDropdownIndicatorTouchEnd,"aria-hidden":"true"};return o.a.createElement(e,p({},t,{innerProps:a,isDisabled:n,isFocused:r}))}},{key:"renderMenu",value:function(){var e=this,t=this.components,n=t.Group,r=t.GroupHeading,a=t.Menu,i=t.MenuList,l=t.MenuPortal,s=t.LoadingMessage,c=t.NoOptionsMessage,u=t.Option,d=this.commonProps,f=this.state,m=f.focusedOption,g=f.menuOptions,b=this.props,h=b.captureMenuScroll,v=b.inputValue,x=b.isLoading,y=b.loadingMessage,w=b.minMenuHeight,k=b.maxMenuHeight,E=b.menuIsOpen,C=b.menuPlacement,S=b.menuPosition,O=b.menuPortalTarget,T=b.menuShouldBlockScroll,A=b.menuShouldScrollIntoView,P=b.noOptionsMessage,_=b.onMenuScrollToTop,j=b.onMenuScrollToBottom;if(!E)return null;var N,I=function(t){var n=m===t.data;return t.innerRef=n?e.getFocusedOptionRef:void 0,o.a.createElement(u,p({},d,t,{isFocused:n}),e.formatOptionLabel(t.data,"menu"))};if(this.hasOptions())N=g.render.map(function(t){if("group"===t.type){t.type;var a=Zt(t,["type"]),i="".concat(t.key,"-heading");return o.a.createElement(n,p({},d,a,{Heading:r,headingProps:{id:i},label:e.formatGroupLabel(t.data)}),t.options.map(function(e){return I(e)}))}if("option"===t.type)return I(t)});else if(x){var R=y({inputValue:v});if(null===R)return null;N=o.a.createElement(s,d,R)}else{var F=P({inputValue:v});if(null===F)return null;N=o.a.createElement(c,d,F)}var M={minMenuHeight:w,maxMenuHeight:k,menuPlacement:C,menuPosition:S,menuShouldScrollIntoView:A},D=o.a.createElement(rr,p({},d,M),function(t){var n=t.ref,r=t.placerProps,l=r.placement,s=r.maxHeight;return o.a.createElement(a,p({},d,M,{innerRef:n,innerProps:{onMouseDown:e.onMenuMouseDown,onMouseMove:e.onMenuMouseMove},isLoading:x,placement:l}),o.a.createElement(eo,{isEnabled:h,onTopArrive:_,onBottomArrive:j},o.a.createElement(Jr,{isEnabled:T},o.a.createElement(i,p({},d,{innerRef:e.getMenuListRef,isLoading:x,maxHeight:s}),N))))});return O||"fixed"===S?o.a.createElement(l,p({},d,{appendTo:O,controlElement:this.controlRef,menuPlacement:C,menuPosition:S}),D):D}},{key:"renderFormField",value:function(){var e=this,t=this.props,n=t.delimiter,r=t.isDisabled,a=t.isMulti,i=t.name,l=this.state.selectValue;if(i&&!r){if(a){if(n){var s=l.map(function(t){return e.getOptionValue(t)}).join(n);return o.a.createElement("input",{name:i,type:"hidden",value:s})}var c=l.length>0?l.map(function(t,n){return o.a.createElement("input",{key:"i-".concat(n),name:i,type:"hidden",value:e.getOptionValue(t)})}):o.a.createElement("input",{name:i,type:"hidden"});return o.a.createElement("div",null,c)}var u=l[0]?this.getOptionValue(l[0]):"";return o.a.createElement("input",{name:i,type:"hidden",value:u})}}},{key:"renderLiveRegion",value:function(){return this.state.isFocused?o.a.createElement(Lr,{"aria-live":"polite"},o.a.createElement("p",{id:"aria-selection-event"}," ",this.state.ariaLiveSelection),o.a.createElement("p",{id:"aria-context"}," ",this.constructAriaLiveMessage())):null}},{key:"render",value:function(){var e=this.components,t=e.Control,n=e.IndicatorsContainer,r=e.SelectContainer,a=e.ValueContainer,i=this.props,l=i.className,s=i.id,c=i.isDisabled,u=i.menuIsOpen,d=this.state.isFocused,f=this.commonProps=this.getCommonProps();return o.a.createElement(r,p({},f,{className:l,innerProps:{id:s,onKeyDown:this.onKeyDown},isDisabled:c,isFocused:d}),this.renderLiveRegion(),o.a.createElement(t,p({},f,{innerRef:this.getControlRef,innerProps:{onMouseDown:this.onControlMouseDown,onTouchEnd:this.onControlTouchEnd},isDisabled:c,isFocused:d,menuIsOpen:u}),o.a.createElement(a,p({},f,{isDisabled:c}),this.renderPlaceholderOrValue(),this.renderInput()),o.a.createElement(n,p({},f,{isDisabled:c}),this.renderClearIndicator(),this.renderLoadingIndicator(),this.renderIndicatorSeparator(),this.renderDropdownIndicator())),this.renderMenu(),this.renderFormField())}}]),t}();tn(co,"defaultProps",lo);var uo={defaultInputValue:"",defaultMenuIsOpen:!1,defaultValue:null},po=function(e){var t,n;return n=t=function(t){function n(){var e,t;rn(this,n);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return tn(Rt(Rt(t=cn(this,(e=un(n)).call.apply(e,[this].concat(o))))),"select",void 0),tn(Rt(Rt(t)),"state",{inputValue:void 0!==t.props.inputValue?t.props.inputValue:t.props.defaultInputValue,menuIsOpen:void 0!==t.props.menuIsOpen?t.props.menuIsOpen:t.props.defaultMenuIsOpen,value:void 0!==t.props.value?t.props.value:t.props.defaultValue}),tn(Rt(Rt(t)),"onChange",function(e,n){t.callProp("onChange",e,n),t.setState({value:e})}),tn(Rt(Rt(t)),"onInputChange",function(e,n){var r=t.callProp("onInputChange",e,n);t.setState({inputValue:void 0!==r?r:e})}),tn(Rt(Rt(t)),"onMenuOpen",function(){t.callProp("onMenuOpen"),t.setState({menuIsOpen:!0})}),tn(Rt(Rt(t)),"onMenuClose",function(){t.callProp("onMenuClose"),t.setState({menuIsOpen:!1})}),t}return pn(n,r.Component),an(n,[{key:"focus",value:function(){this.select.focus()}},{key:"blur",value:function(){this.select.blur()}},{key:"getProp",value:function(e){return void 0!==this.props[e]?this.props[e]:this.state[e]}},{key:"callProp",value:function(e){if("function"==typeof this.props[e]){for(var t,n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return(t=this.props)[e].apply(t,r)}}},{key:"render",value:function(){var t=this,n=this.props,r=(n.defaultInputValue,n.defaultMenuIsOpen,n.defaultValue,Zt(n,["defaultInputValue","defaultMenuIsOpen","defaultValue"]));return o.a.createElement(e,p({},r,{ref:function(e){t.select=e},inputValue:this.getProp("inputValue"),menuIsOpen:this.getProp("menuIsOpen"),onChange:this.onChange,onInputChange:this.onInputChange,onMenuClose:this.onMenuClose,onMenuOpen:this.onMenuOpen,value:this.getProp("value")}))}}]),n}(),tn(t,"defaultProps",uo),n}(co),fo=[{value:"1",label:"Researching"},{value:"2",label:"Pending approval"},{value:"3",label:"Approved"},{value:"4",label:"Declined"}];function mo(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    &&& {\n        max-width: 1200px;\n        margin: 15px auto;\n        label {\n            font-weight: bold;\n        }  \n    } \n"]);return mo=function(){return e},e}function go(e){return(go="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function bo(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ho(e){return(ho=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function vo(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function xo(e,t){return(xo=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var yo=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=ho(t).call(this,e))||"object"!==go(o)&&"function"!=typeof o?vo(r):o).state={selectedOption:e.value||1},n.handleChange=n.handleChange.bind(vo(n)),n}var n,r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&xo(e,t)}(t,o.a.Component),n=t,(r=[{key:"handleChange",value:function(e){this.setState({selectedOption:e.value})}},{key:"render",value:function(){var e=this.state.selectedOption,t=this.props.label;return o.a.createElement(wo,null,o.a.createElement("label",null,t),o.a.createElement(po,{value:e,onChange:this.handleChange,options:fo,placeholder:fo[e-1].label}))}}])&&bo(n.prototype,r),a&&bo(n,a),t}(),wo=Object(se.a)(Se)(mo());function ko(){var e=Co(["\n\tinput {\n\t\tmargin-right: 15px;\n\t}\n"]);return ko=function(){return e},e}function Eo(){var e=Co(["\n    .form_fields_wrapper{\n        overflow: auto;\n        flex:1;\n    }\n"]);return Eo=function(){return e},e}function Co(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function So(e){return(So="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Oo(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function To(e){return(To=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ao(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Po(e,t){return(Po=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var _o=ae(function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=To(t).call(this,e))||"object"!==So(o)&&"function"!=typeof o?Ao(r):o).state={companyID:e.match&&e.match.params&&e.match.params.id?e.match.params.id:0,companyInfo:e.location&&e.location.state?e.location.state.data:{},userName:ue.a.parse(e.location.search).username},n.handleCancel=n.handleCancel.bind(Ao(n)),n}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Po(e,t)}(t,r["Component"]),n=t,(a=[{key:"handleCancel",value:function(){this.props.history.push({pathname:"/"})}},{key:"render",value:function(){var e=this.state,t=e.companyID,n=e.companyInfo,r=e.userName,a=t>0?"Edit company":"Add newly acquired company";return o.a.createElement(jo,{className:"main_container"},o.a.createElement(Qt,{pageTitle:a,userName:r}),o.a.createElement("section",{className:"form_fields_wrapper"},o.a.createElement(Ie,{name:"name",placeholder:"Enter company name",value:n.name||"",label:"Company name",maxLength:500}),o.a.createElement(Ie,{name:"description",placeholder:"Enter company description",value:n.description||"",label:"Company description",maxLength:500}),o.a.createElement(Ie,{name:"keycontacts",placeholder:"Enter key contacts",value:n.keycontacts||"",label:"Key contacts",maxLength:500}),o.a.createElement(Ie,{name:"name",placeholder:"Enter financial performance",value:n.financialperformance||"",label:"Financial performance (in %)"}),o.a.createElement(Ie,{name:"status",placeholder:"Enter status",value:n.status||0,label:"Status"}),o.a.createElement(yo,{label:"Status",value:n.status})),o.a.createElement(No,{className:"footer"},o.a.createElement(Wt,{label:"Save",handleClick:this.handleCancel,styleName:"primary"}),o.a.createElement(Wt,{label:"Cancel",handleClick:this.handleCancel,styleName:"secondary"})))}}])&&Oo(n.prototype,a),i&&Oo(n,i),t}()),jo=se.a.section(Eo()),No=se.a.section(ko()),Io=n(43),Ro=n.n(Io);function Fo(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    \n"]);return Fo=function(){return e},e}function Mo(e){return(Mo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Do(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function zo(e){return(zo=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Lo(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Uo(e,t){return(Uo=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Bo=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=zo(t).call(this,e))||"object"!==Mo(o)&&"function"!=typeof o?Lo(r):o).handleDelete=n.handleDelete.bind(Lo(n)),n}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Uo(e,t)}(t,r["Component"]),n=t,(a=[{key:"handleDelete",value:function(e){return this.props.deleteIteam(e.target.value),!1}},{key:"render",value:function(){var e=this.props,t=e.data,n=e.userName;return o.a.createElement(Vo,{className:"list-row"},o.a.createElement("section",{className:"user-name"},t.name),o.a.createElement("section",{className:"user-name"},t.financialperformance),o.a.createElement("section",{className:"user-name"},fo[t.status-1].label),o.a.createElement("section",{className:"edit"},o.a.createElement(le,{to:{pathname:"/edit/"+t.id,search:"?username="+n,state:{data:t}},title:"Edit"},"Edit"),o.a.createElement(Wt,{label:"Delete",handleClick:this.handleDelete,value:t.id,styleName:"primary"})))}}])&&Do(n.prototype,a),i&&Do(n,i),t}(),Vo=se.a.section(Fo());function Ho(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    .list-table {\n        margin: 0;\n        width: 100%;\n        border: 0;\n        display: inline-block;\n        padding: .5rem 1rem;\n        flex: 1;\n        overflow: auto;\n        flex-flow: column;\n        display: flex;\n        \n        .list-header {\n            font-weight: bold;\n            padding-bottom: 5px;\n            padding-left: 0;\n            border-bottom: 1px solid #eee;\n        } \n        .list-row {\n            display: flex;\n            align-items: center;\n            border-bottom: 1px solid #eee;\n            padding: 5px 0;\n        }\n        .edit {\n            display: inline-flex;\n            align-items: center;\n            position: relative;\n            margin-left: auto;\n            a{\n                margin-right:15px;\n            }            \n        }        \n    }\n    .user-name {\n        display: inline-block;\n        padding: 5px 15px;\n        width: 30%;\n        min-width: 30%;\n        vertical-align: top;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n"]);return Ho=function(){return e},e}function Wo(e){return(Wo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function $o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function qo(e){return(qo=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ko(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Yo(e,t){return(Yo=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Xo=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=qo(t).call(this,e))||"object"!==Wo(o)&&"function"!=typeof o?Ko(r):o).state={companiesInfo:{},list:[],isLoading:!0,errors:null},n.deleteIteam=n.deleteIteam.bind(Ko(n)),n}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Yo(e,t)}(t,r["Component"]),n=t,(a=[{key:"componentDidMount",value:function(){this.getCompanies()}},{key:"getCompanies",value:function(){var e=this;Ro.a.get("./acquisitions.json").then(function(t){e.setState({companiesInfo:t.data,list:t.data.companies,isLoading:!1})}).catch(function(t){return e.setState({error:t,isLoading:!1})})}},{key:"deleteIteam",value:function(e){console.log(e);var t=this.state.list.filter(function(t){return t.id!==Number(e)});this.setState({list:t})}},{key:"render",value:function(){var e=this,t=this.state.list,n=this.state.companiesInfo.username;return o.a.createElement(Go,{className:"main_container"},o.a.createElement(Qt,{showButton:!0,pageTitle:"Acquired companies list",userName:n}),t&&t.length>0?o.a.createElement("section",{className:"list-table"},o.a.createElement("section",{className:"list-header"},o.a.createElement("section",{className:"user-name"},"Company Name"),o.a.createElement("section",{className:"user-name"},"Financial Performance"),o.a.createElement("section",{className:"user-name"},"Status"),o.a.createElement("section",{className:"edit"})),t.map(function(t){return o.a.createElement(Bo,{data:t,deleteIteam:e.deleteIteam,userName:n})})):o.a.createElement("strong",{className:"noRecords"},"No records to show."))}}])&&$o(n.prototype,a),i&&$o(n,i),t}(),Go=se.a.section(Ho());function Qo(e){return(Qo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Jo(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Zo(e,t){return!t||"object"!==Qo(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ea(e){return(ea=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ta(e,t){return(ta=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var na=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),Zo(this,ea(t).apply(this,arguments))}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ta(e,t)}(t,r["Component"]),n=t,(a=[{key:"render",value:function(){return o.a.createElement(oe,null,o.a.createElement(J,{exact:!0,path:"/add",component:_o}),o.a.createElement(J,{exact:!0,path:"/edit/:id",component:_o}),o.a.createElement(J,{component:Xo}))}}])&&Jo(n.prototype,a),i&&Jo(n,i),t}();n(85);function ra(e){return(ra="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function oa(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function aa(e,t){return!t||"object"!==ra(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ia(e){return(ia=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function la(e,t){return(la=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var sa=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),aa(this,ia(t).apply(this,arguments))}var n,r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&la(e,t)}(t,o.a.Component),n=t,(r=[{key:"render",value:function(){return o.a.createElement(ie,null,o.a.createElement(na,null))}}])&&oa(n.prototype,r),a&&oa(n,a),t}();i.a.render(o.a.createElement(sa,null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlZC1jb21wb25lbnRzL2Rpc3Qvc3R5bGVkLWNvbXBvbmVudHMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWVtb2l6ZS1vbmUvZGlzdC9tZW1vaXplLW9uZS5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL3N0eWxlL2luZGV4LmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvdXRpbC9jYW1lbGl6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmFmL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pbnB1dC1hdXRvc2l6ZS9saWIvQXV0b3NpemVJbnB1dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGlzL3N0eWxpcy5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy91dGlsL2NhbWVsaXplU3R5bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL3RyYW5zaXRpb24vcHJvcGVydGllcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL3hoci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeS1zdHJpbmcvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2NvbnRleHQvZm9yd2FyZFJlZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGlzLXJ1bGUtc2hlZXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2lzLXByb3AtdmFsaWQvZGlzdC9pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91bmNvbnRyb2xsYWJsZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvdXNlRXZlbnRDYWxsYmFjay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvdHJhbnNpdGlvbi9lbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NyZWF0ZS1yZWFjdC1jb250ZXh0L2xpYi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHJpY3QtdXJpLWVuY29kZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVjb2RlLXVyaS1jb21wb25lbnQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NwbGl0LW9uLWZpcnN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3dhcm5pbmcvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91bmNvbnRyb2xsYWJsZS91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvdXNlQ29tbWl0dGVkUmVmLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy91dGlsL2h5cGhlbmF0ZVN0eWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy91dGlsL2h5cGhlbmF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvc3R5bGUvZ2V0Q29tcHV0ZWRTdHlsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvc3R5bGUvcmVtb3ZlU3R5bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL3V0aWwvaW5ET00uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL3RyYW5zaXRpb24vaXNUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NyZWF0ZS1yZWFjdC1jb250ZXh0L2xpYi9pbXBsZW1lbnRhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3VkL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi93YXJuaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BlcmZvcm1hbmNlLW5vdy9saWIvcGVyZm9ybWFuY2Utbm93LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYXhpb3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL25vZGVfbW9kdWxlcy9pcy1idWZmZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9JbnRlcmNlcHRvck1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9lbmhhbmNlRXJyb3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb29raWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0Fic29sdXRlVVJMLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIiwid2VicGFjazovLy8uL3NyYy9zdHlsZS9tYWluLmxlc3M/OWQ0MyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvbWFpbi5sZXNzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvZGlzdC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXNtL3JlYWN0LXJvdXRlci1kb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvb3RzdHJhcC9lcy9GZWVkYmFjay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtYm9vdHN0cmFwL2VzL0Zvcm1Db250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXMvVGhlbWVQcm92aWRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtYm9vdHN0cmFwL2VzL0Zvcm1Db250cm9sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXMvRm9ybUdyb3VwLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbW1vbi90ZXh0SW5wdXQvVGV4dElucHV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXMvdXRpbHMvY3JlYXRlV2l0aEJzUHJlZml4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXMvTmF2YmFyQnJhbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL2NvbmZpZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9lc20vVHJhbnNpdGlvbkdyb3VwQ29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9lc20vVHJhbnNpdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtYm9vdHN0cmFwL2VzL3V0aWxzL2NyZWF0ZUNoYWluZWRGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtYm9vdHN0cmFwL2VzL0NvbGxhcHNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXMvdXRpbHMvdHJpZ2dlckJyb3dzZXJSZWZsb3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvb3RzdHJhcC9lcy9OYXZiYXJDb250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXMvTmF2YmFyQ29sbGFwc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvb3RzdHJhcC9lcy9OYXZiYXJUb2dnbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvb3RzdHJhcC9lcy9TZWxlY3RhYmxlQ29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtYm9vdHN0cmFwL2VzL05hdmJhci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9oZWFkZXIvTmF2LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvb3RzdHJhcC9lcy9TYWZlQW5jaG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXMvQnV0dG9uLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9idXR0b24vQ29tbW9uQnV0dG9uLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2hlYWRlci9IZWFkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRob3V0SG9sZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVTcHJlYWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zaGVldC9kaXN0L3NoZWV0LmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zdHlsaXMvZGlzdC9zdHlsaXMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2NhY2hlL2Rpc3QvY2FjaGUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3V0aWxzL2Rpc3QvdXRpbHMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2hhc2gvZGlzdC9oYXNoLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zZXJpYWxpemUvZGlzdC9zZXJpYWxpemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2Nzcy9kaXN0L2Nzcy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9kaXN0L2NvcmUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXNlbGVjdC9kaXN0L2NodW5rLWU4YWU0YjBmLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1zZWxlY3QvZGlzdC9jaHVuay01ZDIwMGE0MS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1zZWxlY3QvZGlzdC9iYXNlL2Rpc3QvcmVhY3Qtc2VsZWN0LWEzNGU5ZDEyLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1zZWxlY3QvZGlzdC9jaHVuay1iMzZiYWYxYS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtc2VsZWN0L2Rpc3QvcmVhY3Qtc2VsZWN0LmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb21tb24vdHlwZWFoZWFkZHJvcGRvd24vVHlwZUFoZWFkRHJvcGRvd24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvYWRkaXRlbS9BZGQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbGlzdC9MaXN0SXRlbS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9saXN0L0xpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1JvdXRlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyIsImhhc093biIsImNsYXNzTmFtZXMiLCJjbGFzc2VzIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJnIiwiYXJnVHlwZSIsInB1c2giLCJBcnJheSIsImlzQXJyYXkiLCJpbm5lciIsImFwcGx5Iiwiam9pbiIsImRlZmF1bHQiLCJ1bmRlZmluZWQiLCJpc0J1ZmZlciIsInRvU3RyaW5nIiwidmFsIiwiaXNPYmplY3QiLCJpc0Z1bmN0aW9uIiwiZm9yRWFjaCIsIm9iaiIsImZuIiwiaXNBcnJheUJ1ZmZlciIsImlzRm9ybURhdGEiLCJGb3JtRGF0YSIsImlzQXJyYXlCdWZmZXJWaWV3IiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJidWZmZXIiLCJpc1N0cmluZyIsImlzTnVtYmVyIiwiaXNVbmRlZmluZWQiLCJpc0RhdGUiLCJpc0ZpbGUiLCJpc0Jsb2IiLCJpc1N0cmVhbSIsInBpcGUiLCJpc1VSTFNlYXJjaFBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsImlzU3RhbmRhcmRCcm93c2VyRW52IiwibmF2aWdhdG9yIiwicHJvZHVjdCIsIndpbmRvdyIsImRvY3VtZW50IiwibWVyZ2UiLCJyZXN1bHQiLCJhc3NpZ25WYWx1ZSIsImRlZXBNZXJnZSIsImV4dGVuZCIsImEiLCJiIiwidGhpc0FyZyIsInRyaW0iLCJzdHIiLCJyZXBsYWNlIiwicHJvY2VzcyIsInN0eWxpc19zdHlsaXNfbWluX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJzdHlsaXNfc3R5bGlzX21pbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQiLCJzdHlsaXNfcnVsZV9zaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwic3R5bGlzX3J1bGVfc2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0IiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19fZGVmYXVsdCIsIl9lbW90aW9uX3VuaXRsZXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJyZWFjdF9pc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwibWVtb2l6ZV9vbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsIl9lbW90aW9uX2lzX3Byb3BfdmFsaWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsImludGVybGVhdmUiLCJzdHJpbmdzIiwiaW50ZXJwb2xhdGlvbnMiLCJsZW4iLCJfdHlwZW9mIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsImNsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsImNyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiZGVzY3JpcHRvciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJzb3VyY2UiLCJpbmhlcml0cyIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwib2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJrZXlzIiwiaW5kZXhPZiIsInBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJpc1BsYWluT2JqZWN0IiwieCIsIkVNUFRZX0FSUkFZIiwiZnJlZXplIiwiRU1QVFlfT0JKRUNUIiwidGVzdCIsImdldENvbXBvbmVudE5hbWUiLCJkaXNwbGF5TmFtZSIsImlzU3R5bGVkQ29tcG9uZW50Iiwic3R5bGVkQ29tcG9uZW50SWQiLCJTQ19BVFRSIiwiZW52IiwiSVNfQlJPV1NFUiIsIkRJU0FCTEVfU1BFRURZIiwiU0NfRElTQUJMRV9TUEVFRFkiLCJTdHlsZWRDb21wb25lbnRzRXJyb3IiLCJfRXJyb3IiLCJjb2RlIiwidGhpcyIsIl9sZW4iLCJfa2V5IiwiX3RoaXMiLCJFcnJvciIsIlNDX0NPTVBPTkVOVF9JRCIsImV4dHJhY3RDb21wcyIsIm1heWJlQ1NTIiwiY3NzIiwiZXhpc3RpbmdDb21wb25lbnRzIiwibWF0Y2giLCJjb21wb25lbnRJZCIsIm1hdGNoSW5kZXgiLCJtYXAiLCJfcmVmIiwibmV4dENvbXAiLCJjc3NGcm9tRE9NIiwic2xpY2UiLCJDT01NRU5UX1JFR0VYIiwic3R5bGlzU3BsaXR0ZXIiLCJnbG9iYWwiLCJjYXNjYWRlIiwia2V5ZnJhbWUiLCJwcmVmaXgiLCJjb21wcmVzcyIsInNlbWljb2xvbiIsInN0eWxpcyIsInBhcnNpbmdSdWxlcyIsInJldHVyblJ1bGVzUGx1Z2luIiwiY29udGV4dCIsInBhcnNlZFJ1bGVzIiwicGFyc2VSdWxlc1BsdWdpbiIsInJ1bGUiLCJfY29tcG9uZW50SWQiLCJfc2VsZWN0b3IiLCJfc2VsZWN0b3JSZWdleHAiLCJzZWxmUmVmZXJlbmNlUmVwbGFjZXIiLCJvZmZzZXQiLCJzdHJpbmciLCJ1c2UiLCJfIiwic2VsZWN0b3JzIiwibGFzdEluZGV4T2YiLCJzcGxpdEJ5UnVsZXMiLCJzdHJpbmdpZnlSdWxlcyIsInJ1bGVzIiwic2VsZWN0b3IiLCJmbGF0Q1NTIiwiY3NzU3RyIiwiUmVnRXhwIiwiZ2V0Tm9uY2UiLCJuYyIsImFkZE5hbWVGb3JJZCIsIm5hbWVzIiwiaWQiLCJyZXNldElkTmFtZXMiLCJoYXNOYW1lRm9ySWQiLCJzdHJpbmdpZnlOYW1lcyIsInNoZWV0Rm9yVGFnIiwidGFnIiwic2hlZXQiLCJzaXplIiwic3R5bGVTaGVldHMiLCJvd25lck5vZGUiLCJzYWZlSW5zZXJ0UnVsZSIsImNzc1J1bGUiLCJpbmRleCIsIm1heEluZGV4IiwiY3NzUnVsZXMiLCJpbnNlcnRSdWxlIiwiZXJyIiwibWFrZVRleHRNYXJrZXIiLCJhZGRVcFVudGlsSW5kZXgiLCJzaXplcyIsInRvdGFsVXBUb0luZGV4Iiwid3JhcEFzSHRtbFRhZyIsImFkZGl0aW9uYWxBdHRycyIsIm5vbmNlIiwiU0NfVkVSU0lPTl9BVFRSIiwiZmlsdGVyIiwiQm9vbGVhbiIsIndyYXBBc0VsZW1lbnQiLCJfcHJvcHMiLCJjcmVhdGVFbGVtZW50IiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkiLCJtYXJrZXJzIiwibWFrZVRleHROb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJtYWtlU2VydmVyVGFnIiwibmFtZXNBcmciLCJtYXJrZXJzQXJnIiwiaW5zZXJ0TWFya2VyIiwicHJldiIsImNzc0ZvcklkIiwiY2xvbmUiLCJuYW1lc0Nsb25lIiwiY2xvbmVOYW1lcyIsIm1hcmtlcnNDbG9uZSIsImdldElkcyIsImluc2VydFJ1bGVzIiwicmVtb3ZlUnVsZXMiLCJtYXJrZXIiLCJzZWFsZWQiLCJzdHlsZVRhZyIsInRvRWxlbWVudCIsInRvSFRNTCIsIm1ha2VUYWciLCJ0YWdFbCIsImZvcmNlU2VydmVyIiwiaW5zZXJ0QmVmb3JlIiwiZ2V0SW1wb3J0UnVsZVRhZyIsImVsIiwic2V0QXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiLCJwYXJlbnROb2RlIiwibmV4dFNpYmxpbmciLCJtYWtlU3R5bGVUYWciLCJleHRyYWN0SW1wb3J0IiwidXNlZEltcG9ydFJ1bGVUYWciLCJkYXRhIiwiaW1wb3J0UnVsZXMiLCJjc3NSdWxlc1NpemUiLCJtYXlIYXZlSW1wb3J0Iiwic2VwYXJhdG9yIiwiYXBwZW5kRGF0YSIsIm5ld01hcmtlciIsInJlcGxhY2VDaGlsZCIsIm1ha2VCcm93c2VyVGFnIiwiZW5kIiwiY3NzVGV4dCIsImluc2VydEluZGV4IiwiaW5qZWN0ZWRSdWxlcyIsInJlbW92YWxJbmRleCIsImxvd2VyQm91bmQiLCJkZWxldGVSdWxlIiwiZGVsZXRlUnVsZXMiLCJtYWtlU3BlZWR5VGFnIiwiU1BMSVRfUkVHRVgiLCJNQVhfU0laRSIsInNoZWV0UnVubmluZ0lkIiwibWFzdGVyIiwiU3R5bGVTaGVldCIsImhlYWQiLCJpbXBvcnRSdWxlVGFnIiwiZmlyc3RUYWciLCJ0YWdzIiwidGFnTWFwIiwiZGVmZXJyZWQiLCJyZWh5ZHJhdGVkTmFtZXMiLCJpZ25vcmVSZWh5ZHJhdGVkTmFtZXMiLCJjYXBhY2l0eSIsImNsb25lcyIsInJlaHlkcmF0ZSIsImVscyIsImV4dHJhY3RlZCIsImlzU3RyZWFtZWQiLCJub2RlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJub2Rlc1NpemUiLCJnZXRBdHRyaWJ1dGUiLCJlbE5hbWVzIiwic3BsaXQiLCJlbE5hbWVzU2l6ZSIsImoiLCJ0ZXh0Q29udGVudCIsImV4dHJhY3RlZFNpemUiLCJfZXh0cmFjdGVkJGkiLCJfaSIsInJlbW92ZUNoaWxkIiwiTWF0aCIsIm1heCIsIl9qIiwicmVzZXQiLCJpZHMiLCJuZXdUYWciLCJzZWFsQWxsVGFncyIsImxhc3RFbCIsImdldFRhZ0ZvcklkIiwiaGFzSWQiLCJkZWZlcnJlZEluamVjdCIsImluamVjdCIsImNvbmNhdCIsInJlbW92ZSIsInRvUmVhY3RFbGVtZW50cyIsIktleWZyYW1lcyIsInN0eWxlU2hlZXQiLCJTdHJpbmciLCJnZXROYW1lIiwidXBwZXJjYXNlUGF0dGVybiIsIm1zUGF0dGVybiIsImh5cGhlbmF0ZVN0eWxlTmFtZSIsInRvTG93ZXJDYXNlIiwiaXNGYWxzaXNoIiwiY2h1bmsiLCJvYmpUb0Nzc0FycmF5IiwicHJldktleSIsImZsYXR0ZW4iLCJleGVjdXRpb25Db250ZXh0IiwicnVsZVNldCIsImlzUmVhY3RDb21wb25lbnQiLCJzdHlsZXMiLCJtdXJtdXJoYXNoIiwiZSIsImNoYXJDb2RlQXQiLCJjaGFyc0xlbmd0aCIsImdldEFscGhhYmV0aWNDaGFyIiwiZnJvbUNoYXJDb2RlIiwiZ2VuZXJhdGVBbHBoYWJldGljTmFtZSIsImZsb29yIiwiaXNTdGF0aWNSdWxlcyIsImF0dHJzIiwic29tZSIsImhhc0Z1bmN0aW9uT2JqZWN0S2V5IiwiX1RZUEVfU1RBVElDUyIsImlzSE1SRW5hYmxlZCIsImhhc2hlciIsIkNvbXBvbmVudFN0eWxlIiwiaXNTdGF0aWMiLCJnZW5lcmF0ZUFuZEluamVjdFN0eWxlcyIsImxhc3RDbGFzc05hbWUiLCJnZW5lcmF0ZU5hbWUiLCJkZXRlcm1pbmVUaGVtZSIsImZhbGxiYWNrVGhlbWUiLCJkZWZhdWx0UHJvcHMiLCJpc0RlZmF1bHRUaGVtZSIsInRoZW1lIiwiZXNjYXBlUmVnZXgiLCJkYXNoZXNBdEVuZHMiLCJlc2NhcGUiLCJpc1RhZyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlcyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJUWVBFX1NUQVRJQ1MiLCIkJHR5cGVvZiIsInJlbmRlciIsImRlZmluZVByb3BlcnR5JDEiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiX09iamVjdCRnZXRPd25Qcm9wZXJ0IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJhcnJheVByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJUaGVtZUNvbnRleHQiLCJUaGVtZUNvbnN1bWVyIiwiQ29uc3VtZXIiLCJTdHlsZVNoZWV0Q29udGV4dCIsIl9Db21wb25lbnQiLCJUaGVtZVByb3ZpZGVyIiwiZ2V0Q29udGV4dCIsInJlbmRlcklubmVyIiwiY2hpbGRyZW4iLCJvdXRlclRoZW1lIiwiUHJvdmlkZXIiLCJDaGlsZHJlbiIsIm9ubHkiLCJnZXRUaGVtZSIsIlNlcnZlclN0eWxlU2hlZXQiLCJtYXN0ZXJTaGVldCIsInNlYWwiLCJzcGxpY2UiLCJjb2xsZWN0U3R5bGVzIiwiU3R5bGVTaGVldE1hbmFnZXIiLCJnZXRTdHlsZVRhZ3MiLCJnZXRTdHlsZUVsZW1lbnQiLCJpbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0iLCJyZWFkYWJsZVN0cmVhbSIsIlN0eWxlU2hlZXRDb25zdW1lciIsImlkZW50aWZpZXJzIiwiU3R5bGVkQ29tcG9uZW50IiwicmVuZGVyT3V0ZXIiLCJmb3J3YXJkZWRDb21wb25lbnQiLCJjb21wb25lbnRTdHlsZSIsIl9wcm9wcyRmb3J3YXJkZWRDb21wbyIsImZvbGRlZENvbXBvbmVudElkcyIsImdlbmVyYXRlZENsYXNzTmFtZSIsImVsZW1lbnRUb0JlQ3JlYXRlZCIsImFzIiwiaXNUYXJnZXRUYWciLCJwcm9wc0ZvckVsZW1lbnQiLCJjb21wdXRlZFByb3BzIiwicmVmIiwic3R5bGUiLCJjbGFzc05hbWUiLCJidWlsZEV4ZWN1dGlvbkNvbnRleHQiLCJfdGhpczIiLCJhdHRyRGVmIiwicmVzb2x2ZWRBdHRyRGVmIiwiYXR0ckRlZldhc0ZuIiwiYXR0ciIsIl9wcm9wcyRmb3J3YXJkZWRDb21wbzIiLCJ3YXJuVG9vTWFueUNsYXNzZXMiLCJjcmVhdGVTdHlsZWRDb21wb25lbnQiLCJvcHRpb25zIiwiaXNUYXJnZXRTdHlsZWRDb21wIiwiaXNDbGFzcyIsIl9vcHRpb25zJGRpc3BsYXlOYW1lIiwiZ2VuZXJhdGVEaXNwbGF5TmFtZSIsIl9vcHRpb25zJGNvbXBvbmVudElkIiwiX0NvbXBvbmVudFN0eWxlIiwiX2Rpc3BsYXlOYW1lIiwicGFyZW50Q29tcG9uZW50SWQiLCJuciIsImdlbmVyYXRlSWQiLCJfb3B0aW9ucyRQYXJlbnRDb21wb24iLCJQYXJlbnRDb21wb25lbnQiLCJfb3B0aW9ucyRhdHRycyIsImZpbmFsQXR0cnMiLCJXcmFwcGVkU3R5bGVkQ29tcG9uZW50IiwiZm9yd2FyZFJlZiIsImZvcndhcmRlZFJlZiIsIndpdGhDb21wb25lbnQiLCJwcmV2aW91c0NvbXBvbmVudElkIiwib3B0aW9uc1RvQ29weSIsIm5ld0NvbXBvbmVudElkIiwic3R5bGVkIiwiY29uc3RydWN0V2l0aE9wdGlvbnMiLCJjb21wb25lbnRDb25zdHJ1Y3RvciIsInRlbXBsYXRlRnVuY3Rpb24iLCJ3aXRoQ29uZmlnIiwiY29uZmlnIiwiZG9tRWxlbWVudCIsIkdsb2JhbFN0eWxlIiwiY3JlYXRlU3R5bGVzIiwicmVtb3ZlU3R5bGVzIiwicmVuZGVyU3R5bGVzIiwic2NDR1NITVJDYWNoZSIsIl9fd2VicGFja19leHBvcnRzX18iLCJjaGVja0RDRSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImNvbnNvbGUiLCJlcnJvciIsImFyZUlucHV0c0VxdWFsIiwibmV3SW5wdXRzIiwibGFzdElucHV0cyIsInJlc3VsdEZuIiwiaXNFcXVhbCIsImxhc3RUaGlzIiwibGFzdFJlc3VsdCIsImxhc3RBcmdzIiwiY2FsbGVkT25jZSIsIm5ld0FyZ3MiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwibXNHcmlkUm93IiwibXNHcmlkUm93U3BhbiIsIm1zR3JpZENvbHVtbiIsIm1zR3JpZENvbHVtblNwYW4iLCJmb250V2VpZ2h0IiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsIldlYmtpdExpbmVDbGFtcCIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImNhY2hlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm5vZGUiLCJ0cmFuc2Zvcm1zIiwiX2NhbWVsaXplU3R5bGUiLCJfZ2V0Q29tcHV0ZWRTdHlsZTIiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiX2h5cGhlbmF0ZVN0eWxlIiwiX2lzVHJhbnNmb3JtIiwiX3JlbW92ZVN0eWxlIiwiX3Byb3BlcnRpZXMiLCJ0cmFuc2Zvcm0iLCJnIiwiRnVuY3Rpb24iLCJjYWNoZWRTZXRUaW1lb3V0IiwiY2FjaGVkQ2xlYXJUaW1lb3V0IiwiZGVmYXVsdFNldFRpbW91dCIsImRlZmF1bHRDbGVhclRpbWVvdXQiLCJydW5UaW1lb3V0IiwiZnVuIiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsImN1cnJlbnRRdWV1ZSIsInF1ZXVlIiwiZHJhaW5pbmciLCJxdWV1ZUluZGV4IiwiY2xlYW5VcE5leHRUaWNrIiwiZHJhaW5RdWV1ZSIsInRpbWVvdXQiLCJydW4iLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwiYXJyYXkiLCJub29wIiwibmV4dFRpY2siLCJhcmdzIiwidGl0bGUiLCJicm93c2VyIiwiYXJndiIsInZlcnNpb24iLCJ2ZXJzaW9ucyIsIm9uIiwiYWRkTGlzdGVuZXIiLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJlbWl0IiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsImxpc3RlbmVycyIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsImRpciIsInVtYXNrIiwickh5cGhlbiIsImNociIsInRvVXBwZXJDYXNlIiwibm93Iiwicm9vdCIsInZlbmRvcnMiLCJzdWZmaXgiLCJyYWYiLCJjYWYiLCJsYXN0IiwiY2FsbGJhY2siLCJfbm93IiwibmV4dCIsImNwIiwiY2FuY2VsbGVkIiwicm91bmQiLCJoYW5kbGUiLCJjYW5jZWwiLCJwb2x5ZmlsbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiX2NyZWF0ZUNsYXNzIiwiX3JlYWN0IiwiX3JlYWN0MiIsIl9wcm9wVHlwZXMyIiwic2l6ZXJTdHlsZSIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsInZpc2liaWxpdHkiLCJoZWlnaHQiLCJvdmVyZmxvdyIsIndoaXRlU3BhY2UiLCJJTlBVVF9QUk9QU19CTEFDS0xJU1QiLCJjb3B5U3R5bGVzIiwiZm9udFNpemUiLCJmb250RmFtaWx5IiwiZm9udFN0eWxlIiwibGV0dGVyU3BhY2luZyIsInRleHRUcmFuc2Zvcm0iLCJpc0lFIiwidXNlckFnZW50IiwicmFuZG9tIiwic3Vic3RyIiwiQXV0b3NpemVJbnB1dCIsIl9jbGFzc0NhbGxDaGVjayIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiaW5wdXRSZWYiLCJpbnB1dCIsInBsYWNlSG9sZGVyU2l6ZXJSZWYiLCJwbGFjZUhvbGRlclNpemVyIiwic2l6ZXJSZWYiLCJzaXplciIsInN0YXRlIiwiaW5wdXRXaWR0aCIsIm1pbldpZHRoIiwiaW5wdXRJZCIsIl9pbmhlcml0cyIsIkNvbXBvbmVudCIsIm1vdW50ZWQiLCJjb3B5SW5wdXRTdHlsZXMiLCJ1cGRhdGVJbnB1dFdpZHRoIiwibmV4dFByb3BzIiwic2V0U3RhdGUiLCJwcmV2UHJvcHMiLCJwcmV2U3RhdGUiLCJvbkF1dG9zaXplIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImlucHV0U3R5bGVzIiwic2Nyb2xsV2lkdGgiLCJuZXdJbnB1dFdpZHRoIiwicGxhY2Vob2xkZXIiLCJwbGFjZWhvbGRlcklzTWluV2lkdGgiLCJleHRyYVdpZHRoIiwicGFyc2VJbnQiLCJmb2N1cyIsImJsdXIiLCJzZWxlY3QiLCJpbmplY3RTdHlsZXMiLCJzaXplclZhbHVlIiwiZGVmYXVsdFZhbHVlIiwicmVkdWNlIiwicHJldmlvdXNWYWx1ZSIsImN1cnJlbnRWYWx1ZSIsIndyYXBwZXJTdHlsZSIsImRpc3BsYXkiLCJpbnB1dFN0eWxlIiwiYm94U2l6aW5nIiwid2lkdGgiLCJpbnB1dFByb3BzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZmllbGQiLCJjbGVhbklucHV0UHJvcHMiLCJpbnB1dENsYXNzTmFtZSIsImFueSIsIm9uZU9mVHlwZSIsIm51bWJlciIsImJvb2wiLCJmdW5jIiwib25DaGFuZ2UiLCJmIiwiaCIsInUiLCJrIiwiQSIsIkMiLCJ3IiwidiIsIiQiLCJ5IiwiTyIsInoiLCJOIiwiUyIsIkYiLCJXIiwicSIsIkIiLCJEIiwiRSIsIkciLCJIIiwiSSIsIkoiLCJLIiwiTCIsIk0iLCJQIiwiUSIsIlIiLCJUIiwiVSIsIlYiLCJYIiwiWSIsIloiLCJlZSIsImFlIiwicmUiLCJjZSIsInNlIiwidGUiLCJpZSIsImZlIiwibmUiLCJsZSIsIm9lIiwiaGUiLCJ1ZSIsImRlIiwiYmUiLCJwZSIsImtlIiwiZ2UiLCJBZSIsIkNlIiwid2UiLCJ2ZSIsIm1lIiwieGUiLCIkZSIsInllIiwiT2UiLCJqZSIsInplIiwiTmUiLCJTZSIsIkZlIiwiV2UiLCJxZSIsIkJlIiwiRGUiLCJFZSIsIkdlIiwiSGUiLCJKZSIsIlJlIiwiVGUiLCJVZSIsIlZlIiwiWGUiLCJZZSIsImNoYXJBdCIsIlFlIiwic3Vic3RyaW5nIiwiSWUiLCJQZSIsIk1lIiwiTGUiLCJLZSIsImlzTmFOIiwicGFyc2VGbG9hdCIsInNldCIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJwYXJzZSIsImNvbXBpbGUiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsInJlcyIsInRva2VucyIsInBhdGgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwiZXhlYyIsImVzY2FwZWQiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwicGF0dGVybiIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwibWF0Y2hlcyIsIm9wdHMiLCJlbmNvZGUiLCJwcmV0dHkiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ0b2tlbiIsInNlZ21lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiYXR0YWNoS2V5cyIsImZsYWdzIiwic2Vuc2l0aXZlIiwic3RyaWN0Iiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImdyb3VwcyIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0ZXN0MSIsInRlc3QyIiwidGVzdDMiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidG9PYmplY3QiLCJjb25kaXRpb24iLCJmb3JtYXQiLCJhcmdJbmRleCIsImZyYW1lc1RvUG9wIiwiX2NhbWVsaXplIiwiYW5pbWF0aW9uRW5kIiwiYW5pbWF0aW9uRGVsYXkiLCJhbmltYXRpb25UaW1pbmciLCJhbmltYXRpb25EdXJhdGlvbiIsImFuaW1hdGlvbk5hbWUiLCJ0cmFuc2l0aW9uRW5kIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwidHJhbnNpdGlvbkRlbGF5IiwidHJhbnNpdGlvblRpbWluZyIsInRyYW5zaXRpb25Qcm9wZXJ0eSIsIl9pbkRPTSIsIl9nZXRUcmFuc2l0aW9uUHJvcGVydCIsInZlbmRvck1hcCIsIk1veiIsIldlYmtpdCIsIm1zIiwidmVuZG9yIiwiZ2V0VHJhbnNpdGlvblByb3BlcnRpZXMiLCJfZGVmYXVsdCIsInRpbWluZyIsImRlbGF5IiwiZHVyYXRpb24iLCJ1dGlscyIsInVybCIsInBhcmFtcyIsInBhcmFtc1NlcmlhbGl6ZXIiLCJzZXJpYWxpemVkUGFyYW1zIiwidG9JU09TdHJpbmciLCJoYXNobWFya0luZGV4IiwiX19DQU5DRUxfXyIsIm5vcm1hbGl6ZUhlYWRlck5hbWUiLCJERUZBVUxUX0NPTlRFTlRfVFlQRSIsIkNvbnRlbnQtVHlwZSIsInNldENvbnRlbnRUeXBlSWZVbnNldCIsImhlYWRlcnMiLCJhZGFwdGVyIiwiZGVmYXVsdHMiLCJYTUxIdHRwUmVxdWVzdCIsInRyYW5zZm9ybVJlcXVlc3QiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsInhzcmZDb29raWVOYW1lIiwieHNyZkhlYWRlck5hbWUiLCJtYXhDb250ZW50TGVuZ3RoIiwidmFsaWRhdGVTdGF0dXMiLCJzdGF0dXMiLCJjb21tb24iLCJBY2NlcHQiLCJtZXRob2QiLCJzZXR0bGUiLCJidWlsZFVSTCIsInBhcnNlSGVhZGVycyIsImlzVVJMU2FtZU9yaWdpbiIsImNyZWF0ZUVycm9yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJyZXF1ZXN0RGF0YSIsInJlcXVlc3RIZWFkZXJzIiwicmVxdWVzdCIsImF1dGgiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiQXV0aG9yaXphdGlvbiIsImJ0b2EiLCJvcGVuIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInJlc3BvbnNlVVJMIiwicmVzcG9uc2VIZWFkZXJzIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwicmVzcG9uc2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJzdGF0dXNUZXh0Iiwib25hYm9ydCIsIm9uZXJyb3IiLCJvbnRpbWVvdXQiLCJjb29raWVzIiwieHNyZlZhbHVlIiwid2l0aENyZWRlbnRpYWxzIiwicmVhZCIsInNldFJlcXVlc3RIZWFkZXIiLCJvbkRvd25sb2FkUHJvZ3Jlc3MiLCJhZGRFdmVudExpc3RlbmVyIiwib25VcGxvYWRQcm9ncmVzcyIsInVwbG9hZCIsImNhbmNlbFRva2VuIiwicHJvbWlzZSIsInRoZW4iLCJhYm9ydCIsInNlbmQiLCJlbmhhbmNlRXJyb3IiLCJtZXNzYWdlIiwiY29uZmlnMSIsImNvbmZpZzIiLCJwcm9wIiwiQ2FuY2VsIiwidXNlU291cmNlTWFwIiwibGlzdCIsIml0ZW0iLCJjb250ZW50IiwiY3NzTWFwcGluZyIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsInN0cmljdFVyaUVuY29kZSIsImRlY29kZUNvbXBvbmVudCIsInNwbGl0T25GaXJzdCIsImRlY29kZSIsInJlbW92ZUhhc2giLCJoYXNoU3RhcnQiLCJleHRyYWN0IiwicXVlcnlTdGFydCIsImZvcm1hdHRlciIsImFycmF5Rm9ybWF0IiwiYWNjdW11bGF0b3IiLCJuZXdWYWx1ZSIsInBhcnNlckZvckFycmF5Rm9ybWF0Iiwic29ydCIsInJldCIsInBhcmFtIiwia2V5c1NvcnRlciIsIk51bWJlciIsImVuY29kZXJGb3JBcnJheUZvcm1hdCIsInBhcnNlVXJsIiwicXVlcnkiLCJyZW5kZXJGbiIsIl90ZW1wIiwiX3JlZiRhbGxvd0ZhbGxiYWNrIiwiYWxsb3dGYWxsYmFjayIsIl9yZWYkZGlzcGxheU5hbWUiLCJ0b1NoZWV0IiwiYmxvY2siLCJwYXJlbnRzIiwibGluZSIsImNvbHVtbiIsImRlcHRoIiwiYXQiLCJmYWN0b3J5IiwiX2Vtb3Rpb25fbWVtb2l6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwicmVhY3RQcm9wc1JlZ2V4IiwidW5jb250cm9sbGFibGUiLCJjb250cm9sbGVkVmFsdWVzIiwibWV0aG9kcyIsImNhbkFjY2VwdFJlZiIsIlV0aWxzIiwiY29udHJvbGxlZFByb3BzIiwiUFJPUFNfVE9fT01JVCIsImRlZmF1bHRLZXkiLCJpbnZhcmlhbnQiLCJVbmNvbnRyb2xsZWRDb21wb25lbnQiLCJfUmVhY3QkQ29tcG9uZW50IiwiaGFuZGxlcnMiLCJwcm9wTmFtZSIsImhhbmRsZXJOYW1lIiwiX3RoaXMkcHJvcHMiLCJfbm90aWZ5aW5nIiwiX2xlbjIiLCJfa2V5MiIsIl92YWx1ZXMiLCJ1bm1vdW50ZWQiLCJmb3JjZVVwZGF0ZSIsImF0dGFjaFJlZiIsIl9wcm90byIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJfdGhpczMiLCJpc1Byb3AiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIl90aGlzNCIsIl90aGlzJHByb3BzMiIsImlubmVyUmVmIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJuZXdQcm9wcyIsInByb3BWYWx1ZSIsInVuY29udHJvbGxlZFByb3BUeXBlcyIsIl90aGlzJGlubmVyIiwiV3JhcHBlZENvbXBvbmVudCIsIkNvbnRyb2xsZWRDb21wb25lbnQiLCJkZWZlckNvbnRyb2xUbyIsIm5ld0NvbXBvbmVudCIsImFkZGl0aW9ucyIsIm5leHRNZXRob2RzIiwibmV3T2JqIiwiZGVzYyIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX3VzZUNvbW1pdHRlZFJlZiIsInVzZUNhbGxiYWNrIiwiY3VycmVudCIsIl9zdHlsZSIsIm9uRW5kIiwiaGFuZGxlciIsImJhY2t1cCIsImZha2VFdmVudCIsImN1cnJlbnRUYXJnZXQiLCJkb25lIiwiZXZlbnQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicGFyc2VEdXJhdGlvbiIsIl9wYXJzZUR1cmF0aW9uIiwibXVsdCIsIl9pbXBsZW1lbnRhdGlvbjIiLCJjcmVhdGVDb250ZXh0IiwiUmVhY3RJcyIsImNvbnRleHRUeXBlIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwibWl4aW5zIiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwiZm9yIiwiYWEiLCJiYSIsImNhIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsInJlZnMiLCJ1cGRhdGVyIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIl9vd25lciIsInBvcCIsImtleVByZWZpeCIsImNvdW50IiwiPSIsIjoiLCJlYSIsImZhIiwiZGEiLCJ0b0FycmF5IiwiY3JlYXRlUmVmIiwiUHVyZUNvbXBvbmVudCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIl9jb250ZXh0IiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwidW5zdGFibGVfQ29uY3VycmVudE1vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudE93bmVyIiwiaGEiLCJpYSIsIm9uRXJyb3IiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJwYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwicWEiLCJyZWdpc3RyYXRpb25OYW1lIiwicmEiLCJzYSIsImRlcGVuZGVuY2llcyIsInRhIiwidWEiLCJ2YSIsIndhIiwia2EiLCJ4YSIsInlhIiwiemEiLCJBYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkJhIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIkNhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJyZXR1cm4iLCJNYSIsImRpc3BhdGNoQ29uZmlnIiwiTmEiLCJfdGFyZ2V0SW5zdCIsIk9hIiwiUGEiLCJRYSIsIlJhIiwiU2EiLCJUYSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlVhIiwiVmEiLCJXYSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYSIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJmYiIsImdiIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpYiIsImV2ZW50UG9vbCIsImpiIiwiZGVzdHJ1Y3RvciIsImhiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsImlzVHJ1c3RlZCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJkb2N1bWVudE1vZGUiLCJwYiIsInFiIiwicmIiLCJzYiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJ0YiIsInViIiwia2V5Q29kZSIsInZiIiwiZGV0YWlsIiwid2IiLCJ6YiIsImxvY2FsZSIsIndoaWNoIiwieGIiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJ5YiIsIkFiIiwiQmIiLCJDYiIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJNYiIsIm5vZGVOYW1lIiwiTmIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJub2RlVHlwZSIsIk9iIiwiUGIiLCJSYiIsIl92YWx1ZVRyYWNrZXIiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiUWIiLCJTYiIsImNoZWNrZWQiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImtjIiwibGMiLCJtYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJyYyIsInNjIiwidGMiLCJwYyIsInFjIiwib2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInVjIiwidmMiLCJkZWZhdWx0Q2hlY2tlZCIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIndjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsInhjIiwieWMiLCJ6YyIsIkFjIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJCYyIsImNoYW5nZSIsIkNjIiwiRGMiLCJFYyIsIkZjIiwiR2MiLCJIYyIsIkljIiwiSmMiLCJkZXRhY2hFdmVudCIsIktjIiwiTGMiLCJhdHRhY2hFdmVudCIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIlFjIiwidmlldyIsIlJjIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlNjIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlRjIiwiVWMiLCJWYyIsIldjIiwiWGMiLCJZYyIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiWmMiLCJwb2ludGVySWQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiJGMiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImFkIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJhbHRlcm5hdGUiLCJiZCIsImNkIiwiZGQiLCJlZCIsImVmZmVjdFRhZyIsImZkIiwiaGQiLCJjaGlsZCIsInNpYmxpbmciLCJnZCIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsImpkIiwiY2xpcGJvYXJkRGF0YSIsImtkIiwibGQiLCJjaGFyQ29kZSIsIm1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIm5kIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIm9kIiwibG9jYXRpb24iLCJwZCIsImRhdGFUcmFuc2ZlciIsInFkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInJkIiwic2QiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInRkIiwidWQiLCJ2ZCIsIndkIiwiaXNJbnRlcmFjdGl2ZSIsInhkIiwiaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlIiwieWQiLCJ6ZCIsIkFkIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsImNvbnRhaW5lckluZm8iLCJ0b3BMZXZlbFR5cGUiLCJCZCIsIkNkIiwiRGQiLCJFZCIsIkZkIiwiR2QiLCJIZCIsIklkIiwiSmQiLCJib2R5IiwiS2QiLCJmaXJzdENoaWxkIiwiTGQiLCJOZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJPZCIsImNvbnRlbnRFZGl0YWJsZSIsIlFkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIk1kIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImRvY3VtZW50RWxlbWVudCIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJtaW4iLCJnZXRTZWxlY3Rpb24iLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwiZWxlbWVudCIsInNjcm9sbExlZnQiLCJzY3JvbGxUb3AiLCJSZCIsIlNkIiwiVGQiLCJVZCIsIlZkIiwiV2QiLCJYZCIsIllkIiwib25TZWxlY3QiLCIkZCIsIlpkIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiaHRtbCIsIm1hdGhtbCIsInN2ZyIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJncmlkQXJlYSIsImxpbmVDbGFtcCIsInNldFByb3BlcnR5IiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwidHJhY2siLCJ3YnIiLCJpcyIsImF1dG9Gb2N1cyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIlNldCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImdldENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiZWxlbWVudFR5cGUiLCJwZW5kaW5nUHJvcHMiLCJjb250ZXh0RGVwZW5kZW5jaWVzIiwibWVtb2l6ZWRTdGF0ZSIsInVwZGF0ZVF1ZXVlIiwibWVtb2l6ZWRQcm9wcyIsImxhc3RFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJaZSIsImFmIiwiYmYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImNmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJkZiIsImZmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJnZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwiamYiLCJrZiIsImJhc2VTdGF0ZSIsInRmIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImxmIiwibmYiLCJtZiIsInBheWxvYWQiLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwidWYiLCJ2ZiIsIndmIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJ4ZiIsInlmIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJ6ZiIsIkFmIiwiX3N0cmluZ1JlZiIsIkJmIiwiQ2YiLCJNYXAiLCJkZWxldGUiLCJEZiIsIkVmIiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJKZiIsInRhZ05hbWUiLCJLZiIsIkxmIiwiTWYiLCJOZiIsIk9mIiwiUGYiLCJRZiIsIlJmIiwiU2YiLCJUZiIsIlVmIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJiYXNlVXBkYXRlIiwibmciLCJvZyIsInBnIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImRpc3BhdGNoIiwiYWN0aW9uIiwicWciLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJyZyIsImRlc3Ryb3kiLCJkZXBzIiwic2ciLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInJlYWRDb250ZXh0IiwieGciLCJ5ZyIsInpnIiwiQWciLCJCZyIsIkNnIiwiRGciLCJFZyIsIkZnIiwiR2ciLCJIZyIsIklnIiwiSmciLCJLZyIsIkxnIiwiTWciLCJOZyIsIk9nIiwiUGciLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJRZyIsIlJnIiwicGVuZGluZ0NvbnRleHQiLCJTZyIsInRpbWVkT3V0QXQiLCJmYWxsYmFjayIsIlRnIiwiVWciLCJoZiIsImh5ZHJhdGUiLCJoaWRkZW4iLCJmaXJzdCIsIm9ic2VydmVkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsImNoIiwiZGgiLCJlaCIsImZoIiwiZ2giLCJoaCIsImloIiwiamgiLCJzdGFjayIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJvbkNsaWNrIiwib25jbGljayIsInBoIiwiV2Vha1NldCIsInFoIiwicmgiLCJzaCIsInRoIiwidmgiLCJ3aCIsInhoIiwieWgiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiemgiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwidWgiLCJoaSIsIlhoIiwiaGFzIiwiYWRkIiwiQmgiLCJXZWFrTWFwIiwiQ2giLCJEaCIsIkVoIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJGaCIsImNvbXBvbmVudFN0YWNrIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJWaCIsIlpoIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwiZWYiLCJQZCIsIlloIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJmaW5pc2hlZFdvcmsiLCIkaCIsImFpIiwiY3JlYXRlRWxlbWVudE5TIiwiYmkiLCJjaSIsImRpIiwibWF4RHVyYXRpb24iLCJwaW5nQ2FjaGUiLCJlaSIsImZpIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJnaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVuc3RhYmxlX25vdyIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsInRpbWVvdXRIYW5kbGUiLCJCaSIsIkNpIiwibmV4dFNjaGVkdWxlZFJvb3QiLCJEaSIsIkVpIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsIkZpIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsIkdpIiwiSGkiLCJJaSIsIkppIiwiS2kiLCJMaSIsIk5pIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJPaSIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJQaSIsIl9pbnRlcm5hbFJvb3QiLCJRaSIsIlNpIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiUmkiLCJUaSIsIk1pIiwiZm9ybSIsImNvbW1pdCIsInVubW91bnQiLCJjcmVhdGVCYXRjaCIsIlZpIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlcyIsImZsdXNoU3luYyIsInVuc3RhYmxlX2NyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIm92ZXJyaWRlUHJvcHMiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJXaSIsIlhpIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicGVyZm9ybWFuY2UiLCJfc2NoZWRNb2NrIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwic2luZ2xlTWF0Y2hlciIsIm11bHRpTWF0Y2hlciIsImRlY29kZUNvbXBvbmVudHMiLCJjb21wb25lbnRzIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmlnaHQiLCJlbmNvZGVkVVJJIiwicmVwbGFjZU1hcCIsIiVGRSVGRiIsIiVGRiVGRSIsImVudHJpZXMiLCJjdXN0b21EZWNvZGVVUklDb21wb25lbnQiLCJzZXBhcmF0b3JJbmRleCIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsInN5bWJvbCIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsIndhcm5pbmciLCJ0eXBlT2YiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJMYXp5IiwiTWVtbyIsIlBvcnRhbCIsIlByb2ZpbGVyIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiX2h5cGhlbmF0ZSIsInJVcHBlciIsImRvYyIsIm9wZW5lciIsImN1cnJlbnRTdHlsZSIsInJudW1ub25weCIsInJwb3NpdGlvbiIsInJ1blN0eWxlIiwicnVudGltZVN0eWxlIiwicnNMZWZ0IiwicGl4ZWxMZWZ0IiwicmVtb3ZlUHJvcGVydHkiLCJzdXBwb3J0ZWRUcmFuc2Zvcm1zIiwiX2d1ZDIiLCJNQVhfU0lHTkVEXzMxX0JJVF9JTlQiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiZW1pdHRlciIsImNoYW5nZWRCaXRzIiwib2xkVmFsdWUiLCJfQ29tcG9uZW50MiIsIl90ZW1wMiIsIm9uVXBkYXRlIiwibWFrZUVtcHR5RnVuY3Rpb24iLCJ0aGF0UmV0dXJucyIsInRoYXRSZXR1cm5zRmFsc2UiLCJ0aGF0UmV0dXJuc1RydWUiLCJ0aGF0UmV0dXJuc051bGwiLCJ0aGF0UmV0dXJuc1RoaXMiLCJ0aGF0UmV0dXJuc0FyZ3VtZW50IiwiYXJyIiwiZ2V0TmFub1NlY29uZHMiLCJocnRpbWUiLCJsb2FkVGltZSIsIm1vZHVsZUxvYWRUaW1lIiwibm9kZUxvYWRUaW1lIiwidXBUaW1lIiwidXB0aW1lIiwiZ2V0VGltZSIsIkF4aW9zIiwibWVyZ2VDb25maWciLCJjcmVhdGVJbnN0YW5jZSIsImRlZmF1bHRDb25maWciLCJheGlvcyIsImluc3RhbmNlQ29uZmlnIiwiQ2FuY2VsVG9rZW4iLCJpc0NhbmNlbCIsImFsbCIsInByb21pc2VzIiwic3ByZWFkIiwiSW50ZXJjZXB0b3JNYW5hZ2VyIiwiZGlzcGF0Y2hSZXF1ZXN0IiwiaW50ZXJjZXB0b3JzIiwiY2hhaW4iLCJpbnRlcmNlcHRvciIsInVuc2hpZnQiLCJmdWxmaWxsZWQiLCJyZWplY3RlZCIsInNoaWZ0IiwiZ2V0VXJpIiwiZWplY3QiLCJ0cmFuc2Zvcm1EYXRhIiwiaXNBYnNvbHV0ZVVSTCIsImNvbWJpbmVVUkxzIiwidGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZCIsInRocm93SWZSZXF1ZXN0ZWQiLCJiYXNlVVJMIiwicmVhc29uIiwiZm5zIiwibm9ybWFsaXplZE5hbWUiLCJpc0F4aW9zRXJyb3IiLCJ0b0pTT04iLCJkZXNjcmlwdGlvbiIsImNvbHVtbk51bWJlciIsImlnbm9yZUR1cGxpY2F0ZU9mIiwicGFyc2VkIiwib3JpZ2luVVJMIiwibXNpZSIsInVybFBhcnNpbmdOb2RlIiwicmVzb2x2ZVVSTCIsInByb3RvY29sIiwiaG9zdCIsImhhc2giLCJob3N0bmFtZSIsInBvcnQiLCJwYXRobmFtZSIsInJlcXVlc3RVUkwiLCJ3cml0ZSIsImV4cGlyZXMiLCJkb21haW4iLCJzZWN1cmUiLCJjb29raWUiLCJ0b0dNVFN0cmluZyIsInJlbGF0aXZlVVJMIiwiZXhlY3V0b3IiLCJyZXNvbHZlUHJvbWlzZSIsImhtciIsImluc2VydEludG8iLCJsb2NhbHMiLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInBhcmVudCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwiZG9tU3R5bGUiLCJhZGRTdHlsZSIsImxpc3RUb1N0eWxlcyIsIm5ld1N0eWxlcyIsInBhcnQiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJpZHgiLCJjcmVhdGVTdHlsZUVsZW1lbnQiLCJhZGRBdHRycyIsInVwZGF0ZSIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJibG9iIiwib2xkU3JjIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiYmFzZVVybCIsImN1cnJlbnREaXIiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwiJDEiLCJfaW5oZXJpdHNMb29zZSIsImlzQWJzb2x1dGUiLCJzcGxpY2VPbmUiLCJyZXNvbHZlX3BhdGhuYW1lIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwiaGFzVHJhaWxpbmdTbGFzaCIsInVwIiwidmFsdWVfZXF1YWwiLCJ2YWx1ZUVxdWFsIiwiZXZlcnkiLCJhVHlwZSIsImFWYWx1ZSIsInZhbHVlT2YiLCJiVmFsdWUiLCJhS2V5cyIsImJLZXlzIiwiaXNQcm9kdWN0aW9uIiwidGlueV9pbnZhcmlhbnRfZXNtX3ByZWZpeCIsInRpbnlfaW52YXJpYW50X2VzbSIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwTGVhZGluZ1NsYXNoIiwic3RyaXBCYXNlbmFtZSIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImNyZWF0ZUxvY2F0aW9uIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImxvY2F0aW9uc0FyZUVxdWFsIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImlzQWN0aXZlIiwibGlzdGVuZXIiLCJub3RpZnlMaXN0ZW5lcnMiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiUG9wU3RhdGVFdmVudCIsIkhhc2hDaGFuZ2VFdmVudCIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImlzQmxvY2tlZCIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaENoYW5nZUV2ZW50JDEiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsInB1c2hIYXNoUGF0aCIsIm5leHRQYXRocyIsImNsYW1wIiwidXBwZXJCb3VuZCIsInJlYWN0X3JvdXRlcl9jb250ZXh0IiwibGliX2RlZmF1bHQiLCJyZWFjdF9yb3V0ZXJfY3JlYXRlTmFtZWRDb250ZXh0IiwicmVhY3Rfcm91dGVyX1JvdXRlciIsIlJvdXRlciIsIl9pc01vdW50ZWQiLCJfcGVuZGluZ0xvY2F0aW9uIiwic3RhdGljQ29udGV4dCIsImNvbXB1dGVSb290TWF0Y2giLCJpc0V4YWN0IiwicmVhY3RfZGVmYXVsdCIsImNhY2hlJDEiLCJjYWNoZUxpbWl0JDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwicGF0aF90b19yZWdleHBfZGVmYXVsdCIsImNvbXBpbGVQYXRoJDEiLCJ2YWx1ZXMiLCJyZWFjdF9yb3V0ZXJfUm91dGUiLCJSb3V0ZSIsImNvbnRleHQkJDEiLCJjb21wdXRlZE1hdGNoIiwiaXNFbXB0eUNoaWxkcmVuIiwicmVhY3Rfcm91dGVyX2FkZExlYWRpbmdTbGFzaCIsInJlYWN0X3JvdXRlcl9zdHJpcEJhc2VuYW1lIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJyZWFjdF9yb3V0ZXJfU3dpdGNoIiwiU3dpdGNoIiwid2l0aFJvdXRlciIsIndyYXBwZWRDb21wb25lbnRSZWYiLCJyZW1haW5pbmdQcm9wcyIsInJvdXRlQ29tcG9uZW50UHJvcHMiLCJob2lzdF9ub25fcmVhY3Rfc3RhdGljc19janNfZGVmYXVsdCIsInJlYWN0X3JvdXRlcl9kb21fQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXIiLCJyZWFjdF9yb3V0ZXJfZG9tX0xpbmsiLCJMaW5rIiwiaGFuZGxlQ2xpY2siLCJpc01vZGlmaWVkRXZlbnQiLCJyZXN0IiwicHJvcF90eXBlc19kZWZhdWx0IiwiRmVlZGJhY2siLCJfcmVmJGFzIiwiY2xhc3NuYW1lc19kZWZhdWx0IiwiZXNfRmVlZGJhY2siLCJlc19Gb3JtQ29udGV4dCIsImNvbnRyb2xJZCIsInVzZUJvb3RzdHJhcFByZWZpeCIsImRlZmF1bHRQcmVmaXgiLCJwcmVmaXhlcyIsInJlYWN0IiwiRm9ybUNvbnRyb2wiLCJfY2xhc3NlcyIsImJzUHJlZml4IiwiaXNWYWxpZCIsImlzSW52YWxpZCIsInBsYWludGV4dCIsInJlYWRPbmx5IiwiX2NsYXNzZXMyIiwiX2NsYXNzZXMzIiwiZXNfRm9ybUNvbnRyb2wiLCJGb3JtR3JvdXAiLCJlc19Gb3JtR3JvdXAiLCJUZXh0SW5wdXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJ0ZXh0VmFsdWUiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwib25LZXlQcmVzcyIsIlJlYWN0IiwibGFiZWwiLCJtYXhMZW5ndGgiLCJTdHlsZWRGb3JtR3JvdXAiLCJfdGVtcGxhdGVPYmplY3QiLCJjcmVhdGVXaXRoQnNQcmVmaXhfcGFzY2FsQ2FzZSIsImNhbWVsaXplX2RlZmF1bHQiLCJOYXZiYXJCcmFuZCIsImVzX05hdmJhckJyYW5kIiwiZXNtX2NvbmZpZyIsIlRyYW5zaXRpb25Hcm91cENvbnRleHQiLCJVTk1PVU5URUQiLCJFWElURUQiLCJFTlRFUklORyIsIkVOVEVSRUQiLCJUcmFuc2l0aW9uX1RyYW5zaXRpb24iLCJUcmFuc2l0aW9uIiwiaW5pdGlhbFN0YXR1cyIsImFwcGVhciIsImlzTW91bnRpbmciLCJlbnRlciIsImFwcGVhclN0YXR1cyIsImluIiwidW5tb3VudE9uRXhpdCIsIm1vdW50T25FbnRlciIsIm5leHRDYWxsYmFjayIsInVwZGF0ZVN0YXR1cyIsIm5leHRTdGF0dXMiLCJjYW5jZWxOZXh0Q2FsbGJhY2siLCJnZXRUaW1lb3V0cyIsImV4aXQiLCJtb3VudGluZyIsInJlYWN0X2RvbV9kZWZhdWx0IiwicGVyZm9ybUVudGVyIiwicGVyZm9ybUV4aXQiLCJhcHBlYXJpbmciLCJ0aW1lb3V0cyIsImVudGVyVGltZW91dCIsInNhZmVTZXRTdGF0ZSIsIm9uRW50ZXJlZCIsIm9uRW50ZXIiLCJvbkVudGVyaW5nIiwib25UcmFuc2l0aW9uRW5kIiwib25FeGl0Iiwib25FeGl0aW5nIiwib25FeGl0ZWQiLCJzZXROZXh0Q2FsbGJhY2siLCJhY3RpdmUiLCJkb2VzTm90SGF2ZVRpbWVvdXRPckxpc3RlbmVyIiwiYWRkRW5kTGlzdGVuZXIiLCJjaGlsZFByb3BzIiwiVHJhbnNpdGlvbl9ub29wIiwiRVhJVElORyIsImVzbV9UcmFuc2l0aW9uIiwiX2NvbGxhcHNlU3R5bGVzIiwidXRpbHNfY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uIiwiZnVuY3MiLCJhY2MiLCJNQVJHSU5TIiwiY29sbGFwc2VTdHlsZXMiLCJDb2xsYXBzZV9kZWZhdWx0UHJvcHMiLCJkaW1lbnNpb24iLCJnZXREaW1lbnNpb25WYWx1ZSIsImVsZW0iLCJtYXJnaW5zIiwic3R5bGVfZGVmYXVsdCIsIkNvbGxhcHNlX0NvbGxhcHNlIiwiQ29sbGFwc2UiLCJoYW5kbGVFbnRlciIsImdldERpbWVuc2lvbiIsImhhbmRsZUVudGVyaW5nIiwiX2dldFNjcm9sbERpbWVuc2lvblZhbHVlIiwiaGFuZGxlRW50ZXJlZCIsImhhbmRsZUV4aXQiLCJvZmZzZXRIZWlnaHQiLCJoYW5kbGVFeGl0aW5nIiwiZW5kX2RlZmF1bHQiLCJhcmlhLWV4cGFuZGVkIiwicm9sZSIsImlubmVyUHJvcHMiLCJlc19Db2xsYXBzZSIsIk5hdmJhckNvbnRleHQiLCJOYXZiYXJDb2xsYXBzZSIsImV4cGFuZGVkIiwiZXNfTmF2YmFyQ29sbGFwc2UiLCJOYXZiYXJUb2dnbGUiLCJfcmVmMiIsIm9uVG9nZ2xlIiwidXNlRXZlbnRDYWxsYmFja19kZWZhdWx0IiwiYXJpYS1sYWJlbCIsImVzX05hdmJhclRvZ2dsZSIsImVzX1NlbGVjdGFibGVDb250ZXh0IiwiTmF2YmFyX05hdmJhciIsIk5hdmJhciIsIl9hcmdzIiwiaGFuZGxlQ29sbGFwc2UiLCJjb2xsYXBzZU9uU2VsZWN0IiwiaGFuZGxlVG9nZ2xlIiwibmF2YmFyQ29udGV4dCIsIl90aGlzJHByb3BzMyIsImV4cGFuZCIsInZhcmlhbnQiLCJmaXhlZCIsInN0aWNreSIsIl90aGlzJHByb3BzMyRhcyIsImV4cGFuZENsYXNzIiwiX3JlZiRDb21wb25lbnQiLCJCc0NvbXBvbmVudCIsIkRlY29yYXRlZE5hdmJhciIsImlzQ2xhc3N5IiwiX29wdHMiLCJfb3B0cyRmb3J3YXJkUmVmQXMiLCJmb3J3YXJkUmVmQXMiLCJmb3J3YXJkUmVmX2RlZmF1bHQiLCJjcmVhdGVCb290c3RyYXBDb21wb25lbnQiLCJ1bmNvbnRyb2xsYWJsZV9kZWZhdWx0IiwiQnJhbmQiLCJUb2dnbGUiLCJUZXh0IiwiX3JlZjIkYXMiLCJUYWciLCJyZXNvbHZlZFByZWZpeCIsImVzX05hdmJhciIsIk5hdiIsInVzZXJOYW1lIiwiYXNzZXJ0VGhpc0luaXRpYWxpemVkX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsImlzVHJpdmlhbEhyZWYiLCJlc19TYWZlQW5jaG9yIiwiU2FmZUFuY2hvciIsImhhbmRsZUtleURvd24iLCJfdGhpcyRwcm9wczIkYXMiLCJvbktleURvd24iLCJ0YWJJbmRleCIsIkJ1dHRvbiIsImVzX0J1dHRvbiIsIkNvbW1vbkJ1dHRvbiIsIkNvbW1vbkJ1dHRvbl9jbGFzc0NhbGxDaGVjayIsIkNvbW1vbkJ1dHRvbl9nZXRQcm90b3R5cGVPZiIsIkNvbW1vbkJ1dHRvbl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJzdHlsZU5hbWUiLCJIZWFkZXIiLCJIZWFkZXJfY2xhc3NDYWxsQ2hlY2siLCJIZWFkZXJfZ2V0UHJvdG90eXBlT2YiLCJoYW5kbGVBZGRDbGljayIsIkhlYWRlcl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJwYWdlVGl0bGUiLCJzaG93QnV0dG9uIiwiaGVhZGVyX05hdiIsIkhlYWRlcldyYXBwZXIiLCJidXR0b25fQ29tbW9uQnV0dG9uIiwic2VjdGlvbiIsIkhlYWRlcl90ZW1wbGF0ZU9iamVjdCIsInNvdXJjZVN5bWJvbEtleXMiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJhcnIyIiwiX2FycmF5V2l0aG91dEhvbGVzIiwiaXRlciIsIl9pdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVTcHJlYWQiLCJfZGVmaW5lUHJvcGVydHkiLCJfb2JqZWN0U3ByZWFkIiwib3duS2V5cyIsInN5bSIsImNsYXNzQ2FsbENoZWNrX2NsYXNzQ2FsbENoZWNrIiwiY3JlYXRlQ2xhc3NfZGVmaW5lUHJvcGVydGllcyIsImNyZWF0ZUNsYXNzX2NyZWF0ZUNsYXNzIiwiX3R5cGVvZjIiLCJ0eXBlb2ZfdHlwZW9mIiwicG9zc2libGVDb25zdHJ1Y3RvclJldHVybl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiZ2V0UHJvdG90eXBlT2ZfZ2V0UHJvdG90eXBlT2YiLCJzZXRQcm90b3R5cGVPZl9zZXRQcm90b3R5cGVPZiIsImluaGVyaXRzX2luaGVyaXRzIiwiaXNTcGVlZHkiLCJzcGVlZHkiLCJjdHIiLCJjb250YWluZXIiLCJpbnNlcnQiLCJfdGFnIiwiaXNJbXBvcnRSdWxlIiwiZmx1c2giLCJzdHlsaXNfYnJvd3Nlcl9lc20iLCJTaGVldCIsInJ1bGVTaGVldCIsImNhY2hlX2Jyb3dzZXJfZXNtX2RlbGltaXRlciIsImNhY2hlX2Jyb3dzZXJfZXNtIiwic3R5bGlzT3B0aW9ucyIsImluc2VydGVkIiwiX2luc2VydCIsInN0eWxpc1BsdWdpbnMiLCJzZXJpYWxpemVkIiwic2hvdWxkQ2FjaGUiLCJyZWdpc3RlcmVkIiwiZ2V0UmVnaXN0ZXJlZFN0eWxlcyIsInJlZ2lzdGVyZWRTdHlsZXMiLCJyYXdDbGFzc05hbWUiLCJpbnNlcnRTdHlsZXMiLCJpc1N0cmluZ1RhZyIsImhhc2hfYnJvd3Nlcl9lc20iLCJoeXBoZW5hdGVSZWdleCIsImFuaW1hdGlvblJlZ2V4IiwicHJvY2Vzc1N0eWxlTmFtZSIsIm1lbW9pemVfYnJvd3Nlcl9lc20iLCJzZXJpYWxpemVfYnJvd3Nlcl9lc21fcHJvY2Vzc1N0eWxlVmFsdWUiLCJwMSIsInAyIiwiY3Vyc29yIiwidW5pdGxlc3NfYnJvd3Nlcl9lc20iLCJoYW5kbGVJbnRlcnBvbGF0aW9uIiwibWVyZ2VkUHJvcHMiLCJpbnRlcnBvbGF0aW9uIiwiY291bGRCZVNlbGVjdG9ySW50ZXJwb2xhdGlvbiIsIl9fZW1vdGlvbl9zdHlsZXMiLCJhbmltIiwiY3JlYXRlU3RyaW5nRnJvbU9iamVjdCIsInByZXZpb3VzQ3Vyc29yIiwiY2FjaGVkIiwibGFiZWxQYXR0ZXJuIiwic2VyaWFsaXplX2Jyb3dzZXJfZXNtX3NlcmlhbGl6ZVN0eWxlcyIsInN0cmluZ01vZGUiLCJyYXciLCJsYXN0SW5kZXgiLCJpZGVudGlmaWVyTmFtZSIsImNzc19icm93c2VyX2VzbSIsIkVtb3Rpb25DYWNoZUNvbnRleHQiLCJjb3JlX2Jyb3dzZXJfZXNtX1RoZW1lQ29udGV4dCIsImNvcmVfYnJvd3Nlcl9lc21fd2l0aEVtb3Rpb25DYWNoZSIsInR5cGVQcm9wTmFtZSIsImNvcmVfYnJvd3Nlcl9lc21faGFzT3duUHJvcGVydHkiLCJjb3JlX2Jyb3dzZXJfZXNtX3JlbmRlciIsImNzc1Byb3AiLCJFbW90aW9uIiwiY29yZV9icm93c2VyX2VzbV9qc3giLCJhcmdzTGVuZ3RoIiwiY3JlYXRlRWxlbWVudEFyZ0FycmF5IiwiQ2xhc3NOYW1lcyIsImNzcyQkMSIsImN4IiwiY2xhc3NuYW1lcyIsImNscyIsInRvQWRkIiwiY29yZV9icm93c2VyX2VzbV9jbGFzc25hbWVzIiwiZWxlIiwiY2h1bmtfZThhZTRiMGZfYnJvd3Nlcl9lc21fbm9vcCIsImFwcGx5UHJlZml4VG9OYW1lIiwiY2h1bmtfZThhZTRiMGZfYnJvd3Nlcl9lc21fY2xlYW5WYWx1ZSIsImlzRG9jdW1lbnRFbGVtZW50IiwiZ2V0U2Nyb2xsVG9wIiwicGFnZVlPZmZzZXQiLCJzY3JvbGxUbyIsImFuaW1hdGVkU2Nyb2xsVG8iLCJpbmNyZW1lbnQiLCJjdXJyZW50VGltZSIsImFuaW1hdGVTY3JvbGwiLCJyYWZfZGVmYXVsdCIsImlzVG91Y2hDYXBhYmxlIiwiY3JlYXRlRXZlbnQiLCJnZXRNZW51UGxhY2VtZW50IiwibWF4SGVpZ2h0IiwibWVudUVsIiwibWluSGVpZ2h0IiwicGxhY2VtZW50Iiwic2hvdWxkU2Nyb2xsIiwiaXNGaXhlZFBvc2l0aW9uIiwic3BhY2luZyIsInNjcm9sbFBhcmVudCIsImV4Y2x1ZGVTdGF0aWNQYXJlbnQiLCJvdmVyZmxvd1J4IiwiZG9jRWwiLCJwYXJlbnRFbGVtZW50Iiwib3ZlcmZsb3dZIiwib3ZlcmZsb3dYIiwiZ2V0U2Nyb2xsUGFyZW50IiwiZGVmYXVsdFN0YXRlIiwib2Zmc2V0UGFyZW50Iiwic2Nyb2xsSGVpZ2h0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiX21lbnVFbCRnZXRCb3VuZGluZ0NsIiwibWVudUJvdHRvbSIsImJvdHRvbSIsIm1lbnVIZWlnaHQiLCJtZW51VG9wIiwiY29udGFpbmVyVG9wIiwidmlld0hlaWdodCIsImlubmVySGVpZ2h0IiwibWFyZ2luQm90dG9tIiwibWFyZ2luVG9wIiwidmlld1NwYWNlQWJvdmUiLCJ2aWV3U3BhY2VCZWxvdyIsInNjcm9sbFNwYWNlQWJvdmUiLCJzY3JvbGxTcGFjZUJlbG93Iiwic2Nyb2xsRG93biIsInNjcm9sbFVwIiwiX2NvbnN0cmFpbmVkSGVpZ2h0Iiwic3BhY2VBYm92ZSIsImNvbnRyb2xIZWlnaHQiLCJfY29uc3RyYWluZWRIZWlnaHQyIiwiY29lcmNlUGxhY2VtZW50IiwiY2h1bmtfNWQyMDBhNDFfYnJvd3Nlcl9lc21fTWVudVBsYWNlciIsIk1lbnVQbGFjZXIiLCJfZ2V0UHJvdG90eXBlT2YyIiwibWF4TWVudUhlaWdodCIsIm1pbk1lbnVIZWlnaHQiLCJtZW51UGxhY2VtZW50IiwibWVudVBvc2l0aW9uIiwibWVudVNob3VsZFNjcm9sbEludG9WaWV3IiwiZ2V0UG9ydGFsUGxhY2VtZW50IiwiZ2V0UGxhY2VtZW50IiwicGxhY2VyUHJvcHMiLCJnZXRVcGRhdGVkUHJvcHMiLCJub3RpY2VDU1MiLCJfcmVmNSIsIl9yZWY1JHRoZW1lIiwiYmFzZVVuaXQiLCJjb2xvcnMiLCJuZXV0cmFsNDAiLCJwYWRkaW5nIiwidGV4dEFsaWduIiwibm9PcHRpb25zTWVzc2FnZUNTUyIsImxvYWRpbmdNZXNzYWdlQ1NTIiwiY2h1bmtfNWQyMDBhNDFfYnJvd3Nlcl9lc21fTm9PcHRpb25zTWVzc2FnZSIsImdldFN0eWxlcyIsIm1lbnUtbm90aWNlIiwibWVudS1ub3RpY2UtLW5vLW9wdGlvbnMiLCJjaHVua181ZDIwMGE0MV9icm93c2VyX2VzbV9Mb2FkaW5nTWVzc2FnZSIsIm1lbnUtbm90aWNlLS1sb2FkaW5nIiwiY2h1bmtfNWQyMDBhNDFfYnJvd3Nlcl9lc21fTWVudVBvcnRhbCIsIk1lbnVQb3J0YWwiLCJfZ2V0UHJvdG90eXBlT2YzIiwiX3JlZjciLCJhcHBlbmRUbyIsImNvbnRyb2xFbGVtZW50IiwiaXNGaXhlZCIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudE9iaiIsInNjcm9sbERpc3RhbmNlIiwibWVudVdyYXBwZXIiLCJyZWFjdF9kb20iLCJrZXlMaXN0IiwiaGFzUHJvcCIsImV4cG9ydGVkRXF1YWwiLCJlcXVhbCIsImFyckEiLCJhcnJCIiwiZGF0ZUEiLCJkYXRlQiIsInJlZ2V4cEEiLCJyZWdleHBCIiwid2FybiIsImNodW5rXzVkMjAwYTQxX2Jyb3dzZXJfZXNtX1ZhbHVlQ29udGFpbmVyIiwiVmFsdWVDb250YWluZXIiLCJpc011bHRpIiwiaGFzVmFsdWUiLCJ2YWx1ZS1jb250YWluZXIiLCJ2YWx1ZS1jb250YWluZXItLWlzLW11bHRpIiwidmFsdWUtY29udGFpbmVyLS1oYXMtdmFsdWUiLCJjaHVua181ZDIwMGE0MV9icm93c2VyX2VzbV90ZW1wbGF0ZU9iamVjdCIsImNodW5rXzVkMjAwYTQxX2Jyb3dzZXJfZXNtX3JlZjIiLCJjaHVua181ZDIwMGE0MV9icm93c2VyX2VzbV9TdmciLCJ2aWV3Qm94IiwiYXJpYS1oaWRkZW4iLCJmb2N1c2FibGUiLCJjaHVua181ZDIwMGE0MV9icm93c2VyX2VzbV9Dcm9zc0ljb24iLCJjaHVua181ZDIwMGE0MV9icm93c2VyX2VzbV9Eb3duQ2hldnJvbiIsImJhc2VDU1MiLCJfcmVmMyIsImlzRm9jdXNlZCIsIl9yZWYzJHRoZW1lIiwibmV1dHJhbDYwIiwibmV1dHJhbDIwIiwiOmhvdmVyIiwibmV1dHJhbDgwIiwiZHJvcGRvd25JbmRpY2F0b3JDU1MiLCJjbGVhckluZGljYXRvckNTUyIsImxvYWRpbmdEb3RBbmltYXRpb25zIiwiaW5zZXJ0YWJsZSIsImNvcmVfYnJvd3Nlcl9lc21fa2V5ZnJhbWVzIiwiY2h1bmtfNWQyMDBhNDFfYnJvd3Nlcl9lc21fTG9hZGluZ0RvdCIsIl9yZWY2IiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwibWFyZ2luTGVmdCIsInZlcnRpY2FsQWxpZ24iLCJjaHVua181ZDIwMGE0MV9icm93c2VyX2VzbV9Mb2FkaW5nSW5kaWNhdG9yIiwiaXNSdGwiLCJpbmRpY2F0b3IiLCJsb2FkaW5nLWluZGljYXRvciIsImlzSGlkZGVuIiwiYmFja2dyb3VuZCIsImJvcmRlciIsIm91dGxpbmUiLCJjaHVua181ZDIwMGE0MV9icm93c2VyX2VzbV9NdWx0aVZhbHVlR2VuZXJpYyIsIl9yZWY0IiwiY2h1bmtfNWQyMDBhNDFfYnJvd3Nlcl9lc21fTXVsdGlWYWx1ZUNvbnRhaW5lciIsImNodW5rXzVkMjAwYTQxX2Jyb3dzZXJfZXNtX011bHRpVmFsdWVMYWJlbCIsImNodW5rXzVkMjAwYTQxX2Jyb3dzZXJfZXNtX011bHRpVmFsdWVSZW1vdmUiLCJNdWx0aVZhbHVlUmVtb3ZlIiwiY2h1bmtfNWQyMDBhNDFfYnJvd3Nlcl9lc21fTXVsdGlWYWx1ZSIsIk11bHRpVmFsdWUiLCJyZW1vdmVQcm9wcyIsInNlbGVjdFByb3BzIiwiQ29udGFpbmVyIiwiTGFiZWwiLCJSZW1vdmUiLCJlbW90aW9uQ3giLCJtdWx0aS12YWx1ZSIsIm11bHRpLXZhbHVlLS1pcy1kaXNhYmxlZCIsIm11bHRpLXZhbHVlX19sYWJlbCIsIm11bHRpLXZhbHVlX19yZW1vdmUiLCJjcm9wV2l0aEVsbGlwc2lzIiwiY2h1bmtfNWQyMDBhNDFfYnJvd3Nlcl9lc21fY29tcG9uZW50cyIsIkNsZWFySW5kaWNhdG9yIiwiY2xlYXItaW5kaWNhdG9yIiwibWVudUlzT3BlbiIsImNvbnRyb2wiLCJjb250cm9sLS1pcy1kaXNhYmxlZCIsImNvbnRyb2wtLWlzLWZvY3VzZWQiLCJjb250cm9sLS1tZW51LWlzLW9wZW4iLCJEcm9wZG93bkluZGljYXRvciIsImRyb3Bkb3duLWluZGljYXRvciIsIkRvd25DaGV2cm9uIiwiQ3Jvc3NJY29uIiwiR3JvdXAiLCJIZWFkaW5nIiwiaGVhZGluZ1Byb3BzIiwiR3JvdXBIZWFkaW5nIiwiY2xlYW5Qcm9wcyIsImdyb3VwLWhlYWRpbmciLCJJbmRpY2F0b3JzQ29udGFpbmVyIiwiaW5kaWNhdG9ycyIsIkluZGljYXRvclNlcGFyYXRvciIsImluZGljYXRvci1zZXBhcmF0b3IiLCJJbnB1dCIsIkF1dG9zaXplSW5wdXRfZGVmYXVsdCIsIkxvYWRpbmdJbmRpY2F0b3IiLCJtZW51IiwiTWVudUxpc3QiLCJtZW51LWxpc3QiLCJtZW51LWxpc3QtLWlzLW11bHRpIiwiTG9hZGluZ01lc3NhZ2UiLCJOb09wdGlvbnNNZXNzYWdlIiwiTXVsdGlWYWx1ZUNvbnRhaW5lciIsIk11bHRpVmFsdWVMYWJlbCIsIk9wdGlvbiIsImlzU2VsZWN0ZWQiLCJvcHRpb24iLCJvcHRpb24tLWlzLWRpc2FibGVkIiwib3B0aW9uLS1pcy1mb2N1c2VkIiwib3B0aW9uLS1pcy1zZWxlY3RlZCIsIlBsYWNlaG9sZGVyIiwiU2VsZWN0Q29udGFpbmVyIiwiLS1pcy1kaXNhYmxlZCIsIi0taXMtcnRsIiwiU2luZ2xlVmFsdWUiLCJzaW5nbGUtdmFsdWUiLCJzaW5nbGUtdmFsdWUtLWlzLWRpc2FibGVkIiwiY2h1bmtfNWQyMDBhNDFfYnJvd3Nlcl9lc21fZGVmYXVsdENvbXBvbmVudHMiLCJkaWFjcml0aWNzIiwibGV0dGVycyIsInN0cmlwRGlhY3JpdGljcyIsInRyaW1TdHJpbmciLCJkZWZhdWx0U3RyaW5naWZ5IiwicmVhY3Rfc2VsZWN0X2EzNGU5ZDEyX2Jyb3dzZXJfZXNtX3JlZiIsInJlYWN0X3NlbGVjdF9hMzRlOWQxMl9icm93c2VyX2VzbV9BMTF5VGV4dCIsInJlYWN0X3NlbGVjdF9hMzRlOWQxMl9icm93c2VyX2VzbV9EdW1teUlucHV0IiwiRHVtbXlJbnB1dCIsIm91dCIsImVtb3Rpb24iLCJyZWFjdF9zZWxlY3RfYTM0ZTlkMTJfYnJvd3Nlcl9lc21fTm9kZVJlc29sdmVyIiwiTm9kZVJlc29sdmVyIiwiU1RZTEVfS0VZUyIsIkxPQ0tfU1RZTEVTIiwicHJldmVudFRvdWNoTW92ZSIsImFsbG93VG91Y2hNb3ZlIiwicHJldmVudEluZXJ0aWFTY3JvbGwiLCJ0b3RhbFNjcm9sbCIsImN1cnJlbnRTY3JvbGwiLCJpc1RvdWNoRGV2aWNlIiwibWF4VG91Y2hQb2ludHMiLCJyZWFjdF9zZWxlY3RfYTM0ZTlkMTJfYnJvd3Nlcl9lc21fY2FuVXNlRE9NIiwiYWN0aXZlU2Nyb2xsTG9ja3MiLCJyZWFjdF9zZWxlY3RfYTM0ZTlkMTJfYnJvd3Nlcl9lc21fU2Nyb2xsTG9jayIsIlNjcm9sbExvY2siLCJwYXNzaXZlIiwiYWNjb3VudEZvclNjcm9sbGJhcnMiLCJ0b3VjaFNjcm9sbFRhcmdldCIsInRhcmdldFN0eWxlIiwib3JpZ2luYWxTdHlsZXMiLCJjdXJyZW50UGFkZGluZyIsInBhZGRpbmdSaWdodCIsImNsaWVudFdpZHRoIiwiYWRqdXN0ZWRQYWRkaW5nIiwiaW5uZXJXaWR0aCIsImxpc3RlbmVyT3B0aW9ucyIsIl9yZWYkMSIsInJlYWN0X3NlbGVjdF9hMzRlOWQxMl9icm93c2VyX2VzbV9TY3JvbGxCbG9jayIsIl9QdXJlQ29tcG9uZW50IiwiU2Nyb2xsQmxvY2siLCJpc0VuYWJsZWQiLCJibHVyU2VsZWN0SW5wdXQiLCJnZXRTY3JvbGxUYXJnZXQiLCJyZWFjdF9zZWxlY3RfYTM0ZTlkMTJfYnJvd3Nlcl9lc21fU2Nyb2xsQ2FwdG9yIiwiU2Nyb2xsQ2FwdG9yIiwib25Cb3R0b21BcnJpdmUiLCJvbkJvdHRvbUxlYXZlIiwib25Ub3BBcnJpdmUiLCJvblRvcExlYXZlIiwiX3RoaXMkc2Nyb2xsVGFyZ2V0Iiwic2Nyb2xsVGFyZ2V0IiwiY2xpZW50SGVpZ2h0IiwiaXNEZWx0YVBvc2l0aXZlIiwiYXZhaWxhYmxlU2Nyb2xsIiwic2hvdWxkQ2FuY2VsU2Nyb2xsIiwiaXNCb3R0b20iLCJpc1RvcCIsImNhbmNlbFNjcm9sbCIsImhhbmRsZUV2ZW50RGVsdGEiLCJ0b3VjaFN0YXJ0Iiwic3RhcnRMaXN0ZW5pbmciLCJzdG9wTGlzdGVuaW5nIiwib25XaGVlbCIsIm9uVG91Y2hTdGFydCIsIm9uVG91Y2hNb3ZlIiwicmVhY3Rfc2VsZWN0X2EzNGU5ZDEyX2Jyb3dzZXJfZXNtX1Njcm9sbENhcHRvclN3aXRjaCIsIlNjcm9sbENhcHRvclN3aXRjaCIsImluc3RydWN0aW9uc0FyaWFNZXNzYWdlIiwiaXNTZWFyY2hhYmxlIiwidmFsdWVFdmVudEFyaWFNZXNzYWdlIiwiaXNPcHRpb25EaXNhYmxlZCIsImRlZmF1bHRTdHlsZXMiLCJjbGVhckluZGljYXRvciIsImRpcmVjdGlvbiIsInBvaW50ZXJFdmVudHMiLCJfcmVmJHRoZW1lIiwiYWxpZ25JdGVtcyIsIm5ldXRyYWw1IiwibmV1dHJhbDAiLCJib3JkZXJDb2xvciIsIm5ldXRyYWwxMCIsInByaW1hcnkiLCJib3JkZXJTdHlsZSIsImJvcmRlcldpZHRoIiwiYm94U2hhZG93IiwiZmxleFdyYXAiLCJqdXN0aWZ5Q29udGVudCIsIiY6aG92ZXIiLCJuZXV0cmFsMzAiLCJkcm9wZG93bkluZGljYXRvciIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nVG9wIiwiZ3JvdXBIZWFkaW5nIiwicGFkZGluZ0xlZnQiLCJpbmRpY2F0b3JzQ29udGFpbmVyIiwiYWxpZ25TZWxmIiwiaW5kaWNhdG9yU2VwYXJhdG9yIiwiX3JlZjQkdGhlbWUiLCJtYXJnaW4iLCJsb2FkaW5nSW5kaWNhdG9yIiwibWFyZ2luUmlnaHQiLCJsb2FkaW5nTWVzc2FnZSIsIl9yZWYyJHRoZW1lIiwiYWxpZ25Ub0NvbnRyb2wiLCJtZW51R3V0dGVyIiwibWVudUxpc3QiLCJXZWJraXRPdmVyZmxvd1Njcm9sbGluZyIsIm1lbnVQb3J0YWwiLCJtdWx0aVZhbHVlIiwibXVsdGlWYWx1ZUxhYmVsIiwidGV4dE92ZXJmbG93IiwibXVsdGlWYWx1ZVJlbW92ZSIsImRhbmdlckxpZ2h0IiwiZGFuZ2VyIiwibm9PcHRpb25zTWVzc2FnZSIsInByaW1hcnkyNSIsInVzZXJTZWxlY3QiLCJXZWJraXRUYXBIaWdobGlnaHRDb2xvciIsIjphY3RpdmUiLCJwcmltYXJ5NTAiLCJuZXV0cmFsNTAiLCJzaW5nbGVWYWx1ZSIsIm1heFdpZHRoIiwidmFsdWVDb250YWluZXIiLCJkZWZhdWx0VGhlbWUiLCJwcmltYXJ5NzUiLCJuZXV0cmFsNzAiLCJuZXV0cmFsOTAiLCJyZWFjdF9zZWxlY3RfYTM0ZTlkMTJfYnJvd3Nlcl9lc21fZGVmYXVsdFByb3BzIiwiYmFja3NwYWNlUmVtb3Zlc1ZhbHVlIiwiYmx1cklucHV0T25TZWxlY3QiLCJjYXB0dXJlTWVudVNjcm9sbCIsImNsb3NlTWVudU9uU2VsZWN0IiwiY2xvc2VNZW51T25TY3JvbGwiLCJjb250cm9sU2hvdWxkUmVuZGVyVmFsdWUiLCJlc2NhcGVDbGVhcnNWYWx1ZSIsImZpbHRlck9wdGlvbiIsInJhd0lucHV0IiwiX2lnbm9yZUNhc2UkaWdub3JlQWNjIiwiaWdub3JlQ2FzZSIsImlnbm9yZUFjY2VudHMiLCJtYXRjaEZyb20iLCJjYW5kaWRhdGUiLCJmb3JtYXRHcm91cExhYmVsIiwiZ2V0T3B0aW9uTGFiZWwiLCJnZXRPcHRpb25WYWx1ZSIsImlzTG9hZGluZyIsIm1lbnVTaG91bGRCbG9ja1Njcm9sbCIsImlzTW9iaWxlRGV2aWNlIiwib3Blbk1lbnVPbkZvY3VzIiwib3Blbk1lbnVPbkNsaWNrIiwicGFnZVNpemUiLCJzY3JlZW5SZWFkZXJTdGF0dXMiLCJ0YWJTZWxlY3RzVmFsdWUiLCJpbnN0YW5jZUlkIiwicmVhY3Rfc2VsZWN0X2EzNGU5ZDEyX2Jyb3dzZXJfZXNtX1NlbGVjdCIsIlNlbGVjdCIsImFyaWFMaXZlU2VsZWN0aW9uIiwiYXJpYUxpdmVDb250ZXh0IiwiZm9jdXNlZE9wdGlvbiIsImZvY3VzZWRWYWx1ZSIsImlucHV0SXNIaWRkZW4iLCJtZW51T3B0aW9ucyIsInNlbGVjdFZhbHVlIiwiY29udHJvbFJlZiIsImZvY3VzZWRPcHRpb25SZWYiLCJtZW51TGlzdFJlZiIsImZvY3VzSW5wdXQiLCJibHVySW5wdXQiLCJhY3Rpb25NZXRhIiwib25JbnB1dENoYW5nZSIsImlucHV0SXNIaWRkZW5BZnRlclVwZGF0ZSIsIm9uTWVudUNsb3NlIiwiY2xlYXJGb2N1c1ZhbHVlT25VcGRhdGUiLCJpc09wdGlvblNlbGVjdGVkIiwiYW5ub3VuY2VBcmlhTGl2ZVNlbGVjdGlvbiIsInJlbW92ZWRWYWx1ZSIsImxhc3RTZWxlY3RlZFZhbHVlIiwiY3VzdG9tIiwiaW5zdGFuY2VQcmVmaXgiLCJfdGhpcyRzdGF0ZSIsImJsb2NrT3B0aW9uSG92ZXIiLCJvcGVuTWVudSIsIm9wZW5BZnRlckZvY3VzIiwiX3RoaXMkcHJvcHM0IiwiY2xlYXJWYWx1ZSIsIkhUTUxFbGVtZW50IiwiaXNDb21wb3NpbmciLCJ0b3VjaCIsImluaXRpYWxUb3VjaFgiLCJpbml0aWFsVG91Y2hZIiwidXNlcklzRHJhZ2dpbmciLCJhYnMiLCJvbkNvbnRyb2xNb3VzZURvd24iLCJvbkNsZWFySW5kaWNhdG9yTW91c2VEb3duIiwib25Ecm9wZG93bkluZGljYXRvck1vdXNlRG93biIsImlucHV0VmFsdWUiLCJvbk1lbnVPcGVuIiwiX3RoaXMkcHJvcHM1Iiwib25Gb2N1cyIsImFubm91bmNlQXJpYUxpdmVDb250ZXh0Iiwib25CbHVyIiwiX3RoaXMkcHJvcHM2IiwiaGlkZVNlbGVjdGVkT3B0aW9ucyIsIl90aGlzJHByb3BzNyIsImlzQ2xlYXJhYmxlIiwiX3RoaXMkc3RhdGUyIiwiZm9jdXNWYWx1ZSIsInJlbW92ZVZhbHVlIiwicG9wVmFsdWUiLCJzZWxlY3RPcHRpb24iLCJmb2N1c09wdGlvbiIsImNhY2hlQ29tcG9uZW50cyIsIm1lbW9pemVfb25lX2VzbSIsIl9zZWxlY3RWYWx1ZSIsIl9tZW51T3B0aW9ucyIsImJ1aWxkTWVudU9wdGlvbnMiLCJzdGFydExpc3RlbmluZ0NvbXBvc2l0aW9uIiwic3RhcnRMaXN0ZW5pbmdUb1RvdWNoIiwib25TY3JvbGwiLCJfdGhpcyRwcm9wczgiLCJnZXROZXh0Rm9jdXNlZFZhbHVlIiwiZ2V0TmV4dEZvY3VzZWRPcHRpb24iLCJmb2N1c2VkRWwiLCJtZW51UmVjdCIsImZvY3VzZWRSZWN0Iiwib3ZlclNjcm9sbCIsIl90aGlzJHByb3BzOSIsInNjcm9sbFRvRm9jdXNlZE9wdGlvbk9uVXBkYXRlIiwib2Zmc2V0VG9wIiwic3RvcExpc3RlbmluZ0NvbXBvc2l0aW9uIiwic3RvcExpc3RlbmluZ1RvVG91Y2giLCJfdGhpcyRwcm9wczEwIiwiX3RoaXMkc3RhdGUzIiwib3BlbkF0SW5kZXgiLCJzZWxlY3RlZEluZGV4IiwiX3RoaXMkcHJvcHMxMSIsIl90aGlzJHN0YXRlNCIsImZvY3VzZWRJbmRleCIsIm5leHRGb2N1cyIsIl90aGlzJHN0YXRlNSIsImNsYXNzTmFtZVByZWZpeCIsIm5leHRTZWxlY3RWYWx1ZSIsIl90aGlzJHN0YXRlNiIsImxhc3RGb2N1c2VkSW5kZXgiLCJsYXN0Rm9jdXNlZE9wdGlvbiIsIl90aGlzJHByb3BzMTIiLCJmb3JtYXRPcHRpb25MYWJlbCIsIm9uQ29tcG9zaXRpb25TdGFydCIsIm9uQ29tcG9zaXRpb25FbmQiLCJvblRvdWNoRW5kIiwiX3Byb3BzJGlucHV0VmFsdWUiLCJ0b09wdGlvbiIsInNob3VsZEhpZGVTZWxlY3RlZE9wdGlvbnMiLCJvbkhvdmVyIiwib25PcHRpb25Ib3ZlciIsIm9wdGlvbklkIiwiZ2V0RWxlbWVudElkIiwib25Nb3VzZU1vdmUiLCJvbk1vdXNlT3ZlciIsIml0ZW1JbmRleCIsImhhc0dyb3VwcyIsImdyb3VwSWQiLCJfdGhpcyRzdGF0ZTciLCJfdGhpcyRwcm9wczEzIiwiZm9jdXNlZFZhbHVlTXNnIiwidmFsdWVGb2N1c0FyaWFNZXNzYWdlIiwiZm9jdXNlZE9wdGlvbk1zZyIsIm9wdGlvbkZvY3VzQXJpYU1lc3NhZ2UiLCJyZXN1bHRzTXNnIiwic2NyZWVuUmVhZGVyTWVzc2FnZSIsInJlc3VsdHNBcmlhTWVzc2FnZSIsImNvdW50T3B0aW9ucyIsIl90aGlzJHByb3BzMTQiLCJnZXRJbnB1dFJlZiIsIm9uSW5wdXRCbHVyIiwib25JbnB1dEZvY3VzIiwiYXJpYUF0dHJpYnV0ZXMiLCJhcmlhLWF1dG9jb21wbGV0ZSIsImFyaWEtbGFiZWxsZWRieSIsIl90aGlzJGNvbW1vblByb3BzIiwiY29tbW9uUHJvcHMiLCJhdXRvQ2FwaXRhbGl6ZSIsImF1dG9Db21wbGV0ZSIsImF1dG9Db3JyZWN0IiwiaGFuZGxlSW5wdXRDaGFuZ2UiLCJzcGVsbENoZWNrIiwiX3RoaXMkY29tcG9uZW50cyIsIl90aGlzJHByb3BzMTUiLCJfdGhpcyRzdGF0ZTgiLCJvcHQiLCJpc09wdGlvbkZvY3VzZWQiLCJvbk1vdXNlRG93biIsIl90aGlzJHByb3BzMTYiLCJvbkNsZWFySW5kaWNhdG9yVG91Y2hFbmQiLCJfdGhpcyRwcm9wczE3IiwiX3RoaXMkY29tcG9uZW50czIiLCJvbkRyb3Bkb3duSW5kaWNhdG9yVG91Y2hFbmQiLCJfdGhpczUiLCJfdGhpcyRjb21wb25lbnRzMyIsIl90aGlzJHN0YXRlOSIsIl90aGlzJHByb3BzMTgiLCJtZW51UG9ydGFsVGFyZ2V0Iiwib25NZW51U2Nyb2xsVG9Ub3AiLCJvbk1lbnVTY3JvbGxUb0JvdHRvbSIsIm1lbnVVSSIsImdldEZvY3VzZWRPcHRpb25SZWYiLCJoYXNPcHRpb25zIiwiaGVhZGluZ0lkIiwiX21lc3NhZ2UiLCJtZW51UGxhY2VtZW50UHJvcHMiLCJtZW51RWxlbWVudCIsIl9yZWY2JHBsYWNlclByb3BzIiwib25NZW51TW91c2VEb3duIiwib25NZW51TW91c2VNb3ZlIiwiZ2V0TWVudUxpc3RSZWYiLCJfdGhpczYiLCJfdGhpcyRwcm9wczE5IiwiX3ZhbHVlIiwiYXJpYS1saXZlIiwiY29uc3RydWN0QXJpYUxpdmVNZXNzYWdlIiwiX3RoaXMkY29tcG9uZW50czQiLCJfdGhpcyRwcm9wczIwIiwiZ2V0Q29tbW9uUHJvcHMiLCJyZW5kZXJMaXZlUmVnaW9uIiwiZ2V0Q29udHJvbFJlZiIsIm9uQ29udHJvbFRvdWNoRW5kIiwicmVuZGVyUGxhY2Vob2xkZXJPclZhbHVlIiwicmVuZGVySW5wdXQiLCJyZW5kZXJDbGVhckluZGljYXRvciIsInJlbmRlckxvYWRpbmdJbmRpY2F0b3IiLCJyZW5kZXJJbmRpY2F0b3JTZXBhcmF0b3IiLCJyZW5kZXJEcm9wZG93bkluZGljYXRvciIsInJlbmRlck1lbnUiLCJyZW5kZXJGb3JtRmllbGQiLCJjaHVua19iMzZiYWYxYV9icm93c2VyX2VzbV9kZWZhdWx0UHJvcHMiLCJkZWZhdWx0SW5wdXRWYWx1ZSIsImRlZmF1bHRNZW51SXNPcGVuIiwicmVhY3Rfc2VsZWN0X2Jyb3dzZXJfZXNtIiwiU2VsZWN0Q29tcG9uZW50IiwiX2NsYXNzIiwiU3RhdGVNYW5hZ2VyIiwiY2FsbFByb3AiLCJnZXRQcm9wIiwiY2h1bmtfYjM2YmFmMWFfYnJvd3Nlcl9lc21fbWFuYWdlU3RhdGUiLCJzdGF0dXNPcHRpb25zIiwiVHlwZUFoZWFkRHJvcGRvd24iLCJUeXBlQWhlYWREcm9wZG93bl9jbGFzc0NhbGxDaGVjayIsIlR5cGVBaGVhZERyb3Bkb3duX2dldFByb3RvdHlwZU9mIiwic2VsZWN0ZWRPcHRpb24iLCJoYW5kbGVDaGFuZ2UiLCJUeXBlQWhlYWREcm9wZG93bl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJUeXBlQWhlYWREcm9wZG93bl9TdHlsZWRGb3JtR3JvdXAiLCJUeXBlQWhlYWREcm9wZG93bl90ZW1wbGF0ZU9iamVjdCIsIkFkZCIsIkFkZF9jbGFzc0NhbGxDaGVjayIsIkFkZF9nZXRQcm90b3R5cGVPZiIsImNvbXBhbnlJRCIsImNvbXBhbnlJbmZvIiwicXVlcnlTdHJpbmciLCJoYW5kbGVDYW5jZWwiLCJBZGRfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiV3JhcHBlciIsImhlYWRlcl9IZWFkZXIiLCJ0ZXh0SW5wdXRfVGV4dElucHV0Iiwia2V5Y29udGFjdHMiLCJmaW5hbmNpYWxwZXJmb3JtYW5jZSIsInR5cGVhaGVhZGRyb3Bkb3duX1R5cGVBaGVhZERyb3Bkb3duIiwiRm9vdGVyIiwiQWRkX3RlbXBsYXRlT2JqZWN0IiwiX3RlbXBsYXRlT2JqZWN0MiIsIkxpc3RJdGVtIiwiTGlzdEl0ZW1fY2xhc3NDYWxsQ2hlY2siLCJMaXN0SXRlbV9nZXRQcm90b3R5cGVPZiIsImhhbmRsZURlbGV0ZSIsIkxpc3RJdGVtX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsImRlbGV0ZUl0ZWFtIiwiTGlzdEl0ZW1fV3JhcHBlciIsIkxpc3RJdGVtX3RlbXBsYXRlT2JqZWN0IiwiTGlzdCIsIkxpc3RfY2xhc3NDYWxsQ2hlY2siLCJMaXN0X2dldFByb3RvdHlwZU9mIiwiY29tcGFuaWVzSW5mbyIsImVycm9ycyIsIkxpc3RfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiZ2V0Q29tcGFuaWVzIiwiY29tcGFuaWVzIiwibG9nIiwiY29tcGFuaWVzTGlzdCIsIkxpc3RfV3JhcHBlciIsImNvbXBhbnkiLCJsaXN0X0xpc3RJdGVtIiwiTGlzdF90ZW1wbGF0ZU9iamVjdCIsIlJvdXRlcyIsIlJvb3RDb21wb25lbnQiLCJzcmNfUm91dGVzIiwiUmVhY3RET00iLCJzcmNfUm9vdENvbXBvbmVudCIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxhQUNBTixPQUFBQyxlQUFBYixFQUFBaUIsT0FBQUMsWUFBQSxDQUF3REMsTUFBQSxXQUV4RFAsT0FB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QUNBbXRDLFFBQUEseVFBQ0MsQ0FDRG50QyxLQUFBLEtBQ0FtdEMsUUFBQSxhQUNDLENBQ0RudEMsS0FBQSxLQUNBbXRDLFFBQUEsYUFDQyxDQUNEbnRDLEtBQUEsS0FDQW10QyxRQUFBLGFBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSxtRUFDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLDJDQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEsNkdBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSw2R0FDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLGlHQUNDLENBQ0RudEMsS0FBQSxLQUNBbXRDLFFBQUEsYUFDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLG1OQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEsdURBQ0MsQ0FDRG50QyxLQUFBLEtBQ0FtdEMsUUFBQSxhQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEsbUVBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSxxQ0FDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLGlHQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEsMkZBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSx5TkFDQyxDQUNEbnRDLEtBQUEsS0FDQW10QyxRQUFBLGFBQ0MsQ0FDRG50QyxLQUFBLEtBQ0FtdEMsUUFBQSx5QkFDQyxDQUNEbnRDLEtBQUEsS0FDQW10QyxRQUFBLGFBQ0MsQ0FDRG50QyxLQUFBLEtBQ0FtdEMsUUFBQSxhQUNDLENBQ0RudEMsS0FBQSxLQUNBbXRDLFFBQUEsbUJBQ0MsQ0FDRG50QyxLQUFBLEtBQ0FtdEMsUUFBQSxhQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEsNkRBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSxxRkFDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLDJGQUNDLENBQ0RudEMsS0FBQSxLQUNBbXRDLFFBQUEsbUJBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSxpTUFDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLDJDQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEsaUdBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSxpR0FDQyxDQUNEbnRDLEtBQUEsS0FDQW10QyxRQUFBLGFBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSwrSEFDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLDJDQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEsMkZBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSx5SEFDQyxDQUNEbnRDLEtBQUEsS0FDQW10QyxRQUFBLGFBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSx1REFDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLDZHQUNDLENBQ0RudEMsS0FBQSxLQUNBbXRDLFFBQUEsYUFDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLHlRQUNDLENBQ0RudEMsS0FBQSxLQUNBbXRDLFFBQUEsYUFDQyxDQUNEbnRDLEtBQUEsS0FDQW10QyxRQUFBLGFBQ0MsQ0FDRG50QyxLQUFBLEtBQ0FtdEMsUUFBQSxhQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEsbUVBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSwyQ0FDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLDZHQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEsbUhBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSx1R0FDQyxDQUNEbnRDLEtBQUEsS0FDQW10QyxRQUFBLGFBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSxtTkFDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLHVEQUNDLENBQ0RudEMsS0FBQSxLQUNBbXRDLFFBQUEsYUFDQyxDQUNEbnRDLEtBQUEsSUFDQW10QyxRQUFBLHlFQUNDLENBQ0RudEMsS0FBQSxJQUNBbXRDLFFBQUEscUNBQ0MsQ0FDRG50QyxLQUFBLElBQ0FtdEMsUUFBQSx1R0FDQyxDQUNEbnRD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YUFBbEIsK0RBV2Q4ckYsR0FBVTlwRixLQUFPaWdFLFFBQVYyckIsMHpCQzVERUMsb2FBWk1uZ0YsdURBRWIsT0FDSTRtRCxFQUFBdnJFLEVBQUF3SixjQUFDMGpFLEdBQUQsS0FDSTNCLEVBQUF2ckUsRUFBQXdKLGNBQUNnakUsRUFBRCxDQUFPelUsT0FBSyxFQUFDcHFDLEtBQUssT0FBT2lSLFVBQVcyakUsS0FDcENoM0IsRUFBQXZyRSxFQUFBd0osY0FBQ2dqRSxFQUFELENBQU96VSxPQUFLLEVBQUNwcUMsS0FBSyxZQUFZaVIsVUFBVzJqRSxLQUN6Q2gzQixFQUFBdnJFLEVBQUF3SixjQUFDZ2pFLEVBQUQsQ0FBTzV0QyxVQUFXb2xFLHUyQkNONUJlLG9hQUFzQm4xQixJQUFNanJELGtEQUUxQixPQUNJNG1ELEVBQUF2ckUsRUFBQXdKLGNBQUNpa0UsR0FBRCxLQUNJbEMsRUFBQXZyRSxFQUFBd0osY0FBQ3c3RixHQUFELDhDQU1oQkMsSUFBU3h4RixPQUFPODNELEVBQUF2ckUsRUFBQXdKLGNBQUMwN0YsR0FBRCxNQUFtQnhsRyxTQUFTeWxHLGVBQWUiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDkwKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyohXG4gIENvcHlyaWdodCAoYykgMjAxNyBKZWQgV2F0c29uLlxuICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuICBodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSAmJiBhcmcubGVuZ3RoKSB7XG5cdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0aWYgKGlubmVyKSB7XG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGlubmVyKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgaXNCdWZmZXIgPSByZXF1aXJlKCdpcy1idWZmZXInKTtcblxuLypnbG9iYWwgdG9TdHJpbmc6dHJ1ZSovXG5cbi8vIHV0aWxzIGlzIGEgbGlicmFyeSBvZiBnZW5lcmljIGhlbHBlciBmdW5jdGlvbnMgbm9uLXNwZWNpZmljIHRvIGF4aW9zXG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXkodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5QnVmZmVyXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGb3JtRGF0YVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEZvcm1EYXRhLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGb3JtRGF0YSh2YWwpIHtcbiAgcmV0dXJuICh0eXBlb2YgRm9ybURhdGEgIT09ICd1bmRlZmluZWQnKSAmJiAodmFsIGluc3RhbmNlb2YgRm9ybURhdGEpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KHZhbCkge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpICYmIChBcnJheUJ1ZmZlci5pc1ZpZXcpKSB7XG4gICAgcmVzdWx0ID0gQXJyYXlCdWZmZXIuaXNWaWV3KHZhbCk7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0ID0gKHZhbCkgJiYgKHZhbC5idWZmZXIpICYmICh2YWwuYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBTdHJpbmdcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFN0cmluZywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzU3RyaW5nKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3N0cmluZyc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBOdW1iZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIE51bWJlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzTnVtYmVyKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ251bWJlcic7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgdW5kZWZpbmVkXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHZhbHVlIGlzIHVuZGVmaW5lZCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gT2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gT2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3QodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IG51bGwgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBEYXRlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBEYXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGaWxlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGaWxlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGaWxlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGaWxlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCbG9iXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBCbG9iLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCbG9iKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBCbG9iXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRnVuY3Rpb24sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyZWFtXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJlYW0sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmVhbSh2YWwpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KHZhbCkgJiYgaXNGdW5jdGlvbih2YWwucGlwZSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVUkxTZWFyY2hQYXJhbXModmFsKSB7XG4gIHJldHVybiB0eXBlb2YgVVJMU2VhcmNoUGFyYW1zICE9PSAndW5kZWZpbmVkJyAmJiB2YWwgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXM7XG59XG5cbi8qKlxuICogVHJpbSBleGNlc3Mgd2hpdGVzcGFjZSBvZmYgdGhlIGJlZ2lubmluZyBhbmQgZW5kIG9mIGEgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgU3RyaW5nIHRvIHRyaW1cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBTdHJpbmcgZnJlZWQgb2YgZXhjZXNzIHdoaXRlc3BhY2VcbiAqL1xuZnVuY3Rpb24gdHJpbShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzKi8sICcnKS5yZXBsYWNlKC9cXHMqJC8sICcnKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgd2UncmUgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAqXG4gKiBUaGlzIGFsbG93cyBheGlvcyB0byBydW4gaW4gYSB3ZWIgd29ya2VyLCBhbmQgcmVhY3QtbmF0aXZlLlxuICogQm90aCBlbnZpcm9ubWVudHMgc3VwcG9ydCBYTUxIdHRwUmVxdWVzdCwgYnV0IG5vdCBmdWxseSBzdGFuZGFyZCBnbG9iYWxzLlxuICpcbiAqIHdlYiB3b3JrZXJzOlxuICogIHR5cGVvZiB3aW5kb3cgLT4gdW5kZWZpbmVkXG4gKiAgdHlwZW9mIGRvY3VtZW50IC0+IHVuZGVmaW5lZFxuICpcbiAqIHJlYWN0LW5hdGl2ZTpcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnUmVhY3ROYXRpdmUnXG4gKiBuYXRpdmVzY3JpcHRcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnTmF0aXZlU2NyaXB0JyBvciAnTlMnXG4gKi9cbmZ1bmN0aW9uIGlzU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgKG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOYXRpdmVTY3JpcHQnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOUycpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG4gICk7XG59XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFuIEFycmF5IG9yIGFuIE9iamVjdCBpbnZva2luZyBhIGZ1bmN0aW9uIGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgYG9iamAgaXMgYW4gQXJyYXkgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBpbmRleCwgYW5kIGNvbXBsZXRlIGFycmF5IGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgJ29iaicgaXMgYW4gT2JqZWN0IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwga2V5LCBhbmQgY29tcGxldGUgb2JqZWN0IGZvciBlYWNoIHByb3BlcnR5LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBvYmogVGhlIG9iamVjdCB0byBpdGVyYXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgY2FsbGJhY2sgdG8gaW52b2tlIGZvciBlYWNoIGl0ZW1cbiAqL1xuZnVuY3Rpb24gZm9yRWFjaChvYmosIGZuKSB7XG4gIC8vIERvbid0IGJvdGhlciBpZiBubyB2YWx1ZSBwcm92aWRlZFxuICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yY2UgYW4gYXJyYXkgaWYgbm90IGFscmVhZHkgc29tZXRoaW5nIGl0ZXJhYmxlXG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIG9iaiA9IFtvYmpdO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBhcnJheSB2YWx1ZXNcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2ldLCBpLCBvYmopO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgb2JqZWN0IGtleXNcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICBmbi5jYWxsKG51bGwsIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQWNjZXB0cyB2YXJhcmdzIGV4cGVjdGluZyBlYWNoIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCwgdGhlblxuICogaW1tdXRhYmx5IG1lcmdlcyB0aGUgcHJvcGVydGllcyBvZiBlYWNoIG9iamVjdCBhbmQgcmV0dXJucyByZXN1bHQuXG4gKlxuICogV2hlbiBtdWx0aXBsZSBvYmplY3RzIGNvbnRhaW4gdGhlIHNhbWUga2V5IHRoZSBsYXRlciBvYmplY3QgaW5cbiAqIHRoZSBhcmd1bWVudHMgbGlzdCB3aWxsIHRha2UgcHJlY2VkZW5jZS5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGpzXG4gKiB2YXIgcmVzdWx0ID0gbWVyZ2Uoe2ZvbzogMTIzfSwge2ZvbzogNDU2fSk7XG4gKiBjb25zb2xlLmxvZyhyZXN1bHQuZm9vKTsgLy8gb3V0cHV0cyA0NTZcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoxIE9iamVjdCB0byBtZXJnZVxuICogQHJldHVybnMge09iamVjdH0gUmVzdWx0IG9mIGFsbCBtZXJnZSBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIG1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHR5cGVvZiByZXN1bHRba2V5XSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2UocmVzdWx0W2tleV0sIHZhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGZvckVhY2goYXJndW1lbnRzW2ldLCBhc3NpZ25WYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBGdW5jdGlvbiBlcXVhbCB0byBtZXJnZSB3aXRoIHRoZSBkaWZmZXJlbmNlIGJlaW5nIHRoYXQgbm8gcmVmZXJlbmNlXG4gKiB0byBvcmlnaW5hbCBvYmplY3RzIGlzIGtlcHQuXG4gKlxuICogQHNlZSBtZXJnZVxuICogQHBhcmFtIHtPYmplY3R9IG9iajEgT2JqZWN0IHRvIG1lcmdlXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXN1bHQgb2YgYWxsIG1lcmdlIHByb3BlcnRpZXNcbiAqL1xuZnVuY3Rpb24gZGVlcE1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHR5cGVvZiByZXN1bHRba2V5XSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gZGVlcE1lcmdlKHJlc3VsdFtrZXldLCB2YWwpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gZGVlcE1lcmdlKHt9LCB2YWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHRba2V5XSA9IHZhbDtcbiAgICB9XG4gIH1cblxuICBmb3IgKHZhciBpID0gMCwgbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBmb3JFYWNoKGFyZ3VtZW50c1tpXSwgYXNzaWduVmFsdWUpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogRXh0ZW5kcyBvYmplY3QgYSBieSBtdXRhYmx5IGFkZGluZyB0byBpdCB0aGUgcHJvcGVydGllcyBvZiBvYmplY3QgYi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gYSBUaGUgb2JqZWN0IHRvIGJlIGV4dGVuZGVkXG4gKiBAcGFyYW0ge09iamVjdH0gYiBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyBmcm9tXG4gKiBAcGFyYW0ge09iamVjdH0gdGhpc0FyZyBUaGUgb2JqZWN0IHRvIGJpbmQgZnVuY3Rpb24gdG9cbiAqIEByZXR1cm4ge09iamVjdH0gVGhlIHJlc3VsdGluZyB2YWx1ZSBvZiBvYmplY3QgYVxuICovXG5mdW5jdGlvbiBleHRlbmQoYSwgYiwgdGhpc0FyZykge1xuICBmb3JFYWNoKGIsIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHRoaXNBcmcgJiYgdHlwZW9mIHZhbCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYVtrZXldID0gYmluZCh2YWwsIHRoaXNBcmcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhW2tleV0gPSB2YWw7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0FycmF5OiBpc0FycmF5LFxuICBpc0FycmF5QnVmZmVyOiBpc0FycmF5QnVmZmVyLFxuICBpc0J1ZmZlcjogaXNCdWZmZXIsXG4gIGlzRm9ybURhdGE6IGlzRm9ybURhdGEsXG4gIGlzQXJyYXlCdWZmZXJWaWV3OiBpc0FycmF5QnVmZmVyVmlldyxcbiAgaXNTdHJpbmc6IGlzU3RyaW5nLFxuICBpc051bWJlcjogaXNOdW1iZXIsXG4gIGlzT2JqZWN0OiBpc09iamVjdCxcbiAgaXNVbmRlZmluZWQ6IGlzVW5kZWZpbmVkLFxuICBpc0RhdGU6IGlzRGF0ZSxcbiAgaXNGaWxlOiBpc0ZpbGUsXG4gIGlzQmxvYjogaXNCbG9iLFxuICBpc0Z1bmN0aW9uOiBpc0Z1bmN0aW9uLFxuICBpc1N0cmVhbTogaXNTdHJlYW0sXG4gIGlzVVJMU2VhcmNoUGFyYW1zOiBpc1VSTFNlYXJjaFBhcmFtcyxcbiAgaXNTdGFuZGFyZEJyb3dzZXJFbnY6IGlzU3RhbmRhcmRCcm93c2VyRW52LFxuICBmb3JFYWNoOiBmb3JFYWNoLFxuICBtZXJnZTogbWVyZ2UsXG4gIGRlZXBNZXJnZTogZGVlcE1lcmdlLFxuICBleHRlbmQ6IGV4dGVuZCxcbiAgdHJpbTogdHJpbVxufTtcbiIsImltcG9ydCBTdHlsaXMgZnJvbSAnc3R5bGlzL3N0eWxpcy5taW4nO1xuaW1wb3J0IF9pbnNlcnRSdWxlUGx1Z2luIGZyb20gJ3N0eWxpcy1ydWxlLXNoZWV0JztcbmltcG9ydCBSZWFjdCwgeyBjbG9uZUVsZW1lbnQsIGNyZWF0ZUNvbnRleHQsIENvbXBvbmVudCwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1bml0bGVzcyBmcm9tICdAZW1vdGlvbi91bml0bGVzcyc7XG5pbXBvcnQgeyBpc0VsZW1lbnQsIGlzVmFsaWRFbGVtZW50VHlwZSwgRm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemUtb25lJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgdmFsaWRBdHRyIGZyb20gJ0BlbW90aW9uL2lzLXByb3AtdmFsaWQnO1xuXG4vLyBcblxudmFyIGludGVybGVhdmUgPSAoZnVuY3Rpb24gKHN0cmluZ3MsIGludGVycG9sYXRpb25zKSB7XG4gIHZhciByZXN1bHQgPSBbc3RyaW5nc1swXV07XG5cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGludGVycG9sYXRpb25zLmxlbmd0aDsgaSA8IGxlbjsgaSArPSAxKSB7XG4gICAgcmVzdWx0LnB1c2goaW50ZXJwb2xhdGlvbnNbaV0sIHN0cmluZ3NbaSArIDFdKTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59KTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmo7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbn07XG5cbnZhciBjbGFzc0NhbGxDaGVjayA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59O1xuXG52YXIgY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG4gIH07XG59KCk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59O1xuXG52YXIgaW5oZXJpdHMgPSBmdW5jdGlvbiAoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xuICBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59O1xuXG52YXIgb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgPSBmdW5jdGlvbiAob2JqLCBrZXlzKSB7XG4gIHZhciB0YXJnZXQgPSB7fTtcblxuICBmb3IgKHZhciBpIGluIG9iaikge1xuICAgIGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7XG4gICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7XG4gICAgdGFyZ2V0W2ldID0gb2JqW2ldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn07XG5cbnZhciBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuID0gZnVuY3Rpb24gKHNlbGYsIGNhbGwpIHtcbiAgaWYgKCFzZWxmKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7XG59O1xuXG4vLyBcbnZhciBpc1BsYWluT2JqZWN0ID0gKGZ1bmN0aW9uICh4KSB7XG4gIHJldHVybiAodHlwZW9mIHggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHgpKSA9PT0gJ29iamVjdCcgJiYgeC5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufSk7XG5cbi8vIFxudmFyIEVNUFRZX0FSUkFZID0gT2JqZWN0LmZyZWV6ZShbXSk7XG52YXIgRU1QVFlfT0JKRUNUID0gT2JqZWN0LmZyZWV6ZSh7fSk7XG5cbi8vIFxuZnVuY3Rpb24gaXNGdW5jdGlvbih0ZXN0KSB7XG4gIHJldHVybiB0eXBlb2YgdGVzdCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGdldENvbXBvbmVudE5hbWUodGFyZ2V0KSB7XG4gIHJldHVybiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHR5cGVvZiB0YXJnZXQgPT09ICdzdHJpbmcnICYmIHRhcmdldCA6IGZhbHNlKSB8fCB0YXJnZXQuZGlzcGxheU5hbWUgfHwgdGFyZ2V0Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG59XG5cbi8vIFxuZnVuY3Rpb24gaXNTdGF0ZWxlc3NGdW5jdGlvbih0ZXN0KSB7XG4gIHJldHVybiB0eXBlb2YgdGVzdCA9PT0gJ2Z1bmN0aW9uJyAmJiAhKHRlc3QucHJvdG90eXBlICYmIHRlc3QucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQpO1xufVxuXG4vLyBcbmZ1bmN0aW9uIGlzU3R5bGVkQ29tcG9uZW50KHRhcmdldCkge1xuICByZXR1cm4gdGFyZ2V0ICYmIHR5cGVvZiB0YXJnZXQuc3R5bGVkQ29tcG9uZW50SWQgPT09ICdzdHJpbmcnO1xufVxuXG4vLyBcblxudmFyIFNDX0FUVFIgPSB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy5lbnYuU0NfQVRUUiB8fCAnZGF0YS1zdHlsZWQnO1xuXG52YXIgU0NfVkVSU0lPTl9BVFRSID0gJ2RhdGEtc3R5bGVkLXZlcnNpb24nO1xuXG52YXIgU0NfU1RSRUFNX0FUVFIgPSAnZGF0YS1zdHlsZWQtc3RyZWFtZWQnO1xuXG52YXIgSVNfQlJPV1NFUiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICdIVE1MRWxlbWVudCcgaW4gd2luZG93O1xuXG52YXIgRElTQUJMRV9TUEVFRFkgPSB0eXBlb2YgU0NfRElTQUJMRV9TUEVFRFkgPT09ICdib29sZWFuJyAmJiBTQ19ESVNBQkxFX1NQRUVEWSB8fCBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nO1xuXG4vLyBTaGFyZWQgZW1wdHkgZXhlY3V0aW9uIGNvbnRleHQgd2hlbiBnZW5lcmF0aW5nIHN0YXRpYyBzdHlsZXNcbnZhciBTVEFUSUNfRVhFQ1VUSU9OX0NPTlRFWFQgPSB7fTtcblxuLy8gXG5cblxuLyoqXG4gKiBQYXJzZSBlcnJvcnMubWQgYW5kIHR1cm4gaXQgaW50byBhIHNpbXBsZSBoYXNoIG9mIGNvZGU6IG1lc3NhZ2VcbiAqL1xudmFyIEVSUk9SUyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB7XG4gIFwiMVwiOiBcIkNhbm5vdCBjcmVhdGUgc3R5bGVkLWNvbXBvbmVudCBmb3IgY29tcG9uZW50OiAlcy5cXG5cXG5cIixcbiAgXCIyXCI6IFwiQ2FuJ3QgY29sbGVjdCBzdHlsZXMgb25jZSB5b3UndmUgY29uc3VtZWQgYSBgU2VydmVyU3R5bGVTaGVldGAncyBzdHlsZXMhIGBTZXJ2ZXJTdHlsZVNoZWV0YCBpcyBhIG9uZSBvZmYgaW5zdGFuY2UgZm9yIGVhY2ggc2VydmVyLXNpZGUgcmVuZGVyIGN5Y2xlLlxcblxcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcmV1c2UgaXQgYWNyb3NzIHJlbmRlcnM/XFxuLSBBcmUgeW91IGFjY2lkZW50YWxseSBjYWxsaW5nIGNvbGxlY3RTdHlsZXMgdHdpY2U/XFxuXFxuXCIsXG4gIFwiM1wiOiBcIlN0cmVhbWluZyBTU1IgaXMgb25seSBzdXBwb3J0ZWQgaW4gYSBOb2RlLmpzIGVudmlyb25tZW50OyBQbGVhc2UgZG8gbm90IHRyeSB0byBjYWxsIHRoaXMgbWV0aG9kIGluIHRoZSBicm93c2VyLlxcblxcblwiLFxuICBcIjRcIjogXCJUaGUgYFN0eWxlU2hlZXRNYW5hZ2VyYCBleHBlY3RzIGEgdmFsaWQgdGFyZ2V0IG9yIHNoZWV0IHByb3AhXFxuXFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIGNsaWVudCBhbmQgaXMgeW91ciB0YXJnZXQgZmFsc3k/XFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIHNlcnZlciBhbmQgaXMgdGhlIHNoZWV0IGZhbHN5P1xcblxcblwiLFxuICBcIjVcIjogXCJUaGUgY2xvbmUgbWV0aG9kIGNhbm5vdCBiZSB1c2VkIG9uIHRoZSBjbGllbnQhXFxuXFxuLSBBcmUgeW91IHJ1bm5pbmcgaW4gYSBjbGllbnQtbGlrZSBlbnZpcm9ubWVudCBvbiB0aGUgc2VydmVyP1xcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcnVuIFNTUiBvbiB0aGUgY2xpZW50P1xcblxcblwiLFxuICBcIjZcIjogXCJUcnlpbmcgdG8gaW5zZXJ0IGEgbmV3IHN0eWxlIHRhZywgYnV0IHRoZSBnaXZlbiBOb2RlIGlzIHVubW91bnRlZCFcXG5cXG4tIEFyZSB5b3UgdXNpbmcgYSBjdXN0b20gdGFyZ2V0IHRoYXQgaXNuJ3QgbW91bnRlZD9cXG4tIERvZXMgeW91ciBkb2N1bWVudCBub3QgaGF2ZSBhIHZhbGlkIGhlYWQgZWxlbWVudD9cXG4tIEhhdmUgeW91IGFjY2lkZW50YWxseSByZW1vdmVkIGEgc3R5bGUgdGFnIG1hbnVhbGx5P1xcblxcblwiLFxuICBcIjdcIjogXCJUaGVtZVByb3ZpZGVyOiBQbGVhc2UgcmV0dXJuIGFuIG9iamVjdCBmcm9tIHlvdXIgXFxcInRoZW1lXFxcIiBwcm9wIGZ1bmN0aW9uLCBlLmcuXFxuXFxuYGBganNcXG50aGVtZT17KCkgPT4gKHt9KX1cXG5gYGBcXG5cXG5cIixcbiAgXCI4XCI6IFwiVGhlbWVQcm92aWRlcjogUGxlYXNlIG1ha2UgeW91ciBcXFwidGhlbWVcXFwiIHByb3AgYW4gb2JqZWN0LlxcblxcblwiLFxuICBcIjlcIjogXCJNaXNzaW5nIGRvY3VtZW50IGA8aGVhZD5gXFxuXFxuXCIsXG4gIFwiMTBcIjogXCJDYW5ub3QgZmluZCBhIFN0eWxlU2hlZXQgaW5zdGFuY2UuIFVzdWFsbHkgdGhpcyBoYXBwZW5zIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSBjb3BpZXMgb2Ygc3R5bGVkLWNvbXBvbmVudHMgbG9hZGVkIGF0IG9uY2UuIENoZWNrIG91dCB0aGlzIGlzc3VlIGZvciBob3cgdG8gdHJvdWJsZXNob290IGFuZCBmaXggdGhlIGNvbW1vbiBjYXNlcyB3aGVyZSB0aGlzIHNpdHVhdGlvbiBjYW4gaGFwcGVuOiBodHRwczovL2dpdGh1Yi5jb20vc3R5bGVkLWNvbXBvbmVudHMvc3R5bGVkLWNvbXBvbmVudHMvaXNzdWVzLzE5NDEjaXNzdWVjb21tZW50LTQxNzg2MjAyMVxcblxcblwiLFxuICBcIjExXCI6IFwiX1RoaXMgZXJyb3Igd2FzIHJlcGxhY2VkIHdpdGggYSBkZXYtdGltZSB3YXJuaW5nLCBpdCB3aWxsIGJlIGRlbGV0ZWQgZm9yIHY0IGZpbmFsLl8gW2NyZWF0ZUdsb2JhbFN0eWxlXSByZWNlaXZlZCBjaGlsZHJlbiB3aGljaCB3aWxsIG5vdCBiZSByZW5kZXJlZC4gUGxlYXNlIHVzZSB0aGUgY29tcG9uZW50IHdpdGhvdXQgcGFzc2luZyBjaGlsZHJlbiBlbGVtZW50cy5cXG5cXG5cIixcbiAgXCIxMlwiOiBcIkl0IHNlZW1zIHlvdSBhcmUgaW50ZXJwb2xhdGluZyBhIGtleWZyYW1lIGRlY2xhcmF0aW9uICglcykgaW50byBhbiB1bnRhZ2dlZCBzdHJpbmcuIFRoaXMgd2FzIHN1cHBvcnRlZCBpbiBzdHlsZWQtY29tcG9uZW50cyB2MywgYnV0IGlzIG5vdCBsb25nZXIgc3VwcG9ydGVkIGluIHY0IGFzIGtleWZyYW1lcyBhcmUgbm93IGluamVjdGVkIG9uLWRlbWFuZC4gUGxlYXNlIHdyYXAgeW91ciBzdHJpbmcgaW4gdGhlIGNzc1xcXFxgXFxcXGAgaGVscGVyIChzZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYXBpI2NzcyksIHdoaWNoIGVuc3VyZXMgdGhlIHN0eWxlcyBhcmUgaW5qZWN0ZWQgY29ycmVjdGx5LlxcblxcblwiLFxuICBcIjEzXCI6IFwiJXMgaXMgbm90IGEgc3R5bGVkIGNvbXBvbmVudCBhbmQgY2Fubm90IGJlIHJlZmVycmVkIHRvIHZpYSBjb21wb25lbnQgc2VsZWN0b3IuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hZHZhbmNlZCNyZWZlcnJpbmctdG8tb3RoZXItY29tcG9uZW50cyBmb3IgbW9yZSBkZXRhaWxzLlxcblwiXG59IDoge307XG5cbi8qKlxuICogc3VwZXIgYmFzaWMgdmVyc2lvbiBvZiBzcHJpbnRmXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdCgpIHtcbiAgdmFyIGEgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDAgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbMF07XG4gIHZhciBiID0gW107XG5cbiAgZm9yICh2YXIgYyA9IDEsIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGMgPCBsZW47IGMgKz0gMSkge1xuICAgIGIucHVzaChhcmd1bWVudHMubGVuZ3RoIDw9IGMgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbY10pO1xuICB9XG5cbiAgYi5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7XG4gICAgYSA9IGEucmVwbGFjZSgvJVthLXpdLywgZCk7XG4gIH0pO1xuXG4gIHJldHVybiBhO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBlcnJvciBmaWxlIG91dCBvZiBlcnJvcnMubWQgZm9yIGRldmVsb3BtZW50IGFuZCBhIHNpbXBsZSB3ZWIgbGluayB0byB0aGUgZnVsbCBlcnJvcnNcbiAqIGluIHByb2R1Y3Rpb24gbW9kZS5cbiAqL1xuXG52YXIgU3R5bGVkQ29tcG9uZW50c0Vycm9yID0gZnVuY3Rpb24gKF9FcnJvcikge1xuICBpbmhlcml0cyhTdHlsZWRDb21wb25lbnRzRXJyb3IsIF9FcnJvcik7XG5cbiAgZnVuY3Rpb24gU3R5bGVkQ29tcG9uZW50c0Vycm9yKGNvZGUpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTdHlsZWRDb21wb25lbnRzRXJyb3IpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9FcnJvci5jYWxsKHRoaXMsICdBbiBlcnJvciBvY2N1cnJlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zdHlsZWQtY29tcG9uZW50cy9zdHlsZWQtY29tcG9uZW50cy9ibG9iL21hc3Rlci9wYWNrYWdlcy9zdHlsZWQtY29tcG9uZW50cy9zcmMvdXRpbHMvZXJyb3JzLm1kIycgKyBjb2RlICsgJyBmb3IgbW9yZSBpbmZvcm1hdGlvbi4nICsgKGludGVycG9sYXRpb25zLmxlbmd0aCA+IDAgPyAnIEFkZGl0aW9uYWwgYXJndW1lbnRzOiAnICsgaW50ZXJwb2xhdGlvbnMuam9pbignLCAnKSA6ICcnKSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9FcnJvci5jYWxsKHRoaXMsIGZvcm1hdC5hcHBseSh1bmRlZmluZWQsIFtFUlJPUlNbY29kZV1dLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpLnRyaW0oKSkpO1xuICAgIH1cbiAgICByZXR1cm4gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcyk7XG4gIH1cblxuICByZXR1cm4gU3R5bGVkQ29tcG9uZW50c0Vycm9yO1xufShFcnJvcik7XG5cbi8vIFxudmFyIFNDX0NPTVBPTkVOVF9JRCA9IC9eW15cXFNcXG5dKj9cXC9cXCogc2MtY29tcG9uZW50LWlkOlxccyooXFxTKylcXHMrXFwqXFwvL2dtO1xuXG52YXIgZXh0cmFjdENvbXBzID0gKGZ1bmN0aW9uIChtYXliZUNTUykge1xuICB2YXIgY3NzID0gJycgKyAobWF5YmVDU1MgfHwgJycpOyAvLyBEZWZpbml0ZWx5IGEgc3RyaW5nLCBhbmQgYSBjbG9uZVxuICB2YXIgZXhpc3RpbmdDb21wb25lbnRzID0gW107XG4gIGNzcy5yZXBsYWNlKFNDX0NPTVBPTkVOVF9JRCwgZnVuY3Rpb24gKG1hdGNoLCBjb21wb25lbnRJZCwgbWF0Y2hJbmRleCkge1xuICAgIGV4aXN0aW5nQ29tcG9uZW50cy5wdXNoKHsgY29tcG9uZW50SWQ6IGNvbXBvbmVudElkLCBtYXRjaEluZGV4OiBtYXRjaEluZGV4IH0pO1xuICAgIHJldHVybiBtYXRjaDtcbiAgfSk7XG4gIHJldHVybiBleGlzdGluZ0NvbXBvbmVudHMubWFwKGZ1bmN0aW9uIChfcmVmLCBpKSB7XG4gICAgdmFyIGNvbXBvbmVudElkID0gX3JlZi5jb21wb25lbnRJZCxcbiAgICAgICAgbWF0Y2hJbmRleCA9IF9yZWYubWF0Y2hJbmRleDtcblxuICAgIHZhciBuZXh0Q29tcCA9IGV4aXN0aW5nQ29tcG9uZW50c1tpICsgMV07XG4gICAgdmFyIGNzc0Zyb21ET00gPSBuZXh0Q29tcCA/IGNzcy5zbGljZShtYXRjaEluZGV4LCBuZXh0Q29tcC5tYXRjaEluZGV4KSA6IGNzcy5zbGljZShtYXRjaEluZGV4KTtcbiAgICByZXR1cm4geyBjb21wb25lbnRJZDogY29tcG9uZW50SWQsIGNzc0Zyb21ET006IGNzc0Zyb21ET00gfTtcbiAgfSk7XG59KTtcblxuLy8gXG5cbnZhciBDT01NRU5UX1JFR0VYID0gL15cXHMqXFwvXFwvLiokL2dtO1xuXG4vLyBOT1RFOiBUaGlzIHN0eWxpcyBpbnN0YW5jZSBpcyBvbmx5IHVzZWQgdG8gc3BsaXQgcnVsZXMgZnJvbSBTU1InZCBzdHlsZSB0YWdzXG52YXIgc3R5bGlzU3BsaXR0ZXIgPSBuZXcgU3R5bGlzKHtcbiAgZ2xvYmFsOiBmYWxzZSxcbiAgY2FzY2FkZTogdHJ1ZSxcbiAga2V5ZnJhbWU6IGZhbHNlLFxuICBwcmVmaXg6IGZhbHNlLFxuICBjb21wcmVzczogZmFsc2UsXG4gIHNlbWljb2xvbjogdHJ1ZVxufSk7XG5cbnZhciBzdHlsaXMgPSBuZXcgU3R5bGlzKHtcbiAgZ2xvYmFsOiBmYWxzZSxcbiAgY2FzY2FkZTogdHJ1ZSxcbiAga2V5ZnJhbWU6IGZhbHNlLFxuICBwcmVmaXg6IHRydWUsXG4gIGNvbXByZXNzOiBmYWxzZSxcbiAgc2VtaWNvbG9uOiBmYWxzZSAvLyBOT1RFOiBUaGlzIG1lYW5zIFwiYXV0b2NvbXBsZXRlIG1pc3Npbmcgc2VtaWNvbG9uc1wiXG59KTtcblxuLy8gV3JhcCBgaW5zZXJ0UnVsZVBsdWdpbiB0byBidWlsZCBhIGxpc3Qgb2YgcnVsZXMsXG4vLyBhbmQgdGhlbiBtYWtlIG91ciBvd24gcGx1Z2luIHRvIHJldHVybiB0aGUgcnVsZXMuIFRoaXNcbi8vIG1ha2VzIGl0IGVhc2llciB0byBob29rIGludG8gdGhlIGV4aXN0aW5nIFNTUiBhcmNoaXRlY3R1cmVcblxudmFyIHBhcnNpbmdSdWxlcyA9IFtdO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbnZhciByZXR1cm5SdWxlc1BsdWdpbiA9IGZ1bmN0aW9uIHJldHVyblJ1bGVzUGx1Z2luKGNvbnRleHQpIHtcbiAgaWYgKGNvbnRleHQgPT09IC0yKSB7XG4gICAgdmFyIHBhcnNlZFJ1bGVzID0gcGFyc2luZ1J1bGVzO1xuICAgIHBhcnNpbmdSdWxlcyA9IFtdO1xuICAgIHJldHVybiBwYXJzZWRSdWxlcztcbiAgfVxufTtcblxudmFyIHBhcnNlUnVsZXNQbHVnaW4gPSBfaW5zZXJ0UnVsZVBsdWdpbihmdW5jdGlvbiAocnVsZSkge1xuICBwYXJzaW5nUnVsZXMucHVzaChydWxlKTtcbn0pO1xuXG52YXIgX2NvbXBvbmVudElkID0gdm9pZCAwO1xudmFyIF9zZWxlY3RvciA9IHZvaWQgMDtcbnZhciBfc2VsZWN0b3JSZWdleHAgPSB2b2lkIDA7XG5cbnZhciBzZWxmUmVmZXJlbmNlUmVwbGFjZXIgPSBmdW5jdGlvbiBzZWxmUmVmZXJlbmNlUmVwbGFjZXIobWF0Y2gsIG9mZnNldCwgc3RyaW5nKSB7XG4gIGlmIChcbiAgLy8gdGhlIGZpcnN0IHNlbGYtcmVmIGlzIGFsd2F5cyB1bnRvdWNoZWRcbiAgb2Zmc2V0ID4gMCAmJlxuICAvLyB0aGVyZSBzaG91bGQgYmUgYXQgbGVhc3QgdHdvIHNlbGYtcmVmcyB0byBkbyBhIHJlcGxhY2VtZW50ICguYiA+IC5iKVxuICBzdHJpbmcuc2xpY2UoMCwgb2Zmc2V0KS5pbmRleE9mKF9zZWxlY3RvcikgIT09IC0xICYmXG4gIC8vIG5vIGNvbnNlY3V0aXZlIHNlbGYgcmVmcyAoLmIuYik7IHRoYXQgaXMgYSBwcmVjZWRlbmNlIGJvb3N0IGFuZCB0cmVhdGVkIGRpZmZlcmVudGx5XG4gIHN0cmluZy5zbGljZShvZmZzZXQgLSBfc2VsZWN0b3IubGVuZ3RoLCBvZmZzZXQpICE9PSBfc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gJy4nICsgX2NvbXBvbmVudElkO1xuICB9XG5cbiAgcmV0dXJuIG1hdGNoO1xufTtcblxuLyoqXG4gKiBXaGVuIHdyaXRpbmcgYSBzdHlsZSBsaWtlXG4gKlxuICogJiArICYge1xuICogICBjb2xvcjogcmVkO1xuICogfVxuICpcbiAqIFRoZSBzZWNvbmQgYW1wZXJzYW5kIHNob3VsZCBiZSBhIHJlZmVyZW5jZSB0byB0aGUgc3RhdGljIGNvbXBvbmVudCBjbGFzcy4gc3R5bGlzXG4gKiBoYXMgbm8ga25vd2xlZGdlIG9mIHN0YXRpYyBjbGFzcyBzbyB3ZSBoYXZlIHRvIGludGVsbGlnZW50bHkgcmVwbGFjZSB0aGUgYmFzZSBzZWxlY3Rvci5cbiAqL1xudmFyIHNlbGZSZWZlcmVuY2VSZXBsYWNlbWVudFBsdWdpbiA9IGZ1bmN0aW9uIHNlbGZSZWZlcmVuY2VSZXBsYWNlbWVudFBsdWdpbihjb250ZXh0LCBfLCBzZWxlY3RvcnMpIHtcbiAgaWYgKGNvbnRleHQgPT09IDIgJiYgc2VsZWN0b3JzLmxlbmd0aCAmJiBzZWxlY3RvcnNbMF0ubGFzdEluZGV4T2YoX3NlbGVjdG9yKSA+IDApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBzZWxlY3RvcnNbMF0gPSBzZWxlY3RvcnNbMF0ucmVwbGFjZShfc2VsZWN0b3JSZWdleHAsIHNlbGZSZWZlcmVuY2VSZXBsYWNlcik7XG4gIH1cbn07XG5cbnN0eWxpcy51c2UoW3NlbGZSZWZlcmVuY2VSZXBsYWNlbWVudFBsdWdpbiwgcGFyc2VSdWxlc1BsdWdpbiwgcmV0dXJuUnVsZXNQbHVnaW5dKTtcbnN0eWxpc1NwbGl0dGVyLnVzZShbcGFyc2VSdWxlc1BsdWdpbiwgcmV0dXJuUnVsZXNQbHVnaW5dKTtcblxudmFyIHNwbGl0QnlSdWxlcyA9IGZ1bmN0aW9uIHNwbGl0QnlSdWxlcyhjc3MpIHtcbiAgcmV0dXJuIHN0eWxpc1NwbGl0dGVyKCcnLCBjc3MpO1xufTtcblxuZnVuY3Rpb24gc3RyaW5naWZ5UnVsZXMocnVsZXMsIHNlbGVjdG9yLCBwcmVmaXgpIHtcbiAgdmFyIGNvbXBvbmVudElkID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAnJic7XG5cbiAgdmFyIGZsYXRDU1MgPSBydWxlcy5qb2luKCcnKS5yZXBsYWNlKENPTU1FTlRfUkVHRVgsICcnKTsgLy8gcmVwbGFjZSBKUyBjb21tZW50c1xuXG4gIHZhciBjc3NTdHIgPSBzZWxlY3RvciAmJiBwcmVmaXggPyBwcmVmaXggKyAnICcgKyBzZWxlY3RvciArICcgeyAnICsgZmxhdENTUyArICcgfScgOiBmbGF0Q1NTO1xuXG4gIC8vIHN0eWxpcyBoYXMgbm8gY29uY2VwdCBvZiBzdGF0ZSB0byBiZSBwYXNzZWQgdG8gcGx1Z2luc1xuICAvLyBidXQgc2luY2UgSlMgaXMgc2luZ2xlPXRocmVhZGVkLCB3ZSBjYW4gcmVseSBvbiB0aGF0IHRvIGVuc3VyZVxuICAvLyB0aGVzZSBwcm9wZXJ0aWVzIHN0YXkgaW4gc3luYyB3aXRoIHRoZSBjdXJyZW50IHN0eWxpcyBydW5cbiAgX2NvbXBvbmVudElkID0gY29tcG9uZW50SWQ7XG4gIF9zZWxlY3RvciA9IHNlbGVjdG9yO1xuICBfc2VsZWN0b3JSZWdleHAgPSBuZXcgUmVnRXhwKCdcXFxcJyArIF9zZWxlY3RvciArICdcXFxcYicsICdnJyk7XG5cbiAgcmV0dXJuIHN0eWxpcyhwcmVmaXggfHwgIXNlbGVjdG9yID8gJycgOiBzZWxlY3RvciwgY3NzU3RyKTtcbn1cblxuLy8gXG4vKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UsIG5vLXVuZGVmICovXG5cbnZhciBnZXROb25jZSA9IChmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xufSk7XG5cbi8vIFxuLyogVGhlc2UgYXJlIGhlbHBlcnMgZm9yIHRoZSBTdHlsZVRhZ3MgdG8ga2VlcCB0cmFjayBvZiB0aGUgaW5qZWN0ZWRcbiAqIHJ1bGUgbmFtZXMgZm9yIGVhY2ggKGNvbXBvbmVudCkgSUQgdGhhdCB0aGV5J3JlIGtlZXBpbmcgdHJhY2sgb2YuXG4gKiBUaGV5J3JlIGNydWNpYWwgZm9yIGRldGVjdGluZyB3aGV0aGVyIGEgbmFtZSBoYXMgYWxyZWFkeSBiZWVuXG4gKiBpbmplY3RlZC5cbiAqIChUaGlzIGV4Y2x1ZGVzIHJlaHlkcmF0ZWQgbmFtZXMpICovXG5cbi8qIGFkZHMgYSBuZXcgSUQ6bmFtZSBwYWlyaW5nIHRvIGEgbmFtZXMgZGljdGlvbmFyeSAqL1xudmFyIGFkZE5hbWVGb3JJZCA9IGZ1bmN0aW9uIGFkZE5hbWVGb3JJZChuYW1lcywgaWQsIG5hbWUpIHtcbiAgaWYgKG5hbWUpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB2YXIgbmFtZXNGb3JJZCA9IG5hbWVzW2lkXSB8fCAobmFtZXNbaWRdID0gT2JqZWN0LmNyZWF0ZShudWxsKSk7XG4gICAgbmFtZXNGb3JJZFtuYW1lXSA9IHRydWU7XG4gIH1cbn07XG5cbi8qIHJlc2V0cyBhbiBJRCBlbnRpcmVseSBieSBvdmVyd3JpdGluZyBpdCBpbiB0aGUgZGljdGlvbmFyeSAqL1xudmFyIHJlc2V0SWROYW1lcyA9IGZ1bmN0aW9uIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIG5hbWVzW2lkXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG59O1xuXG4vKiBmYWN0b3J5IGZvciBhIG5hbWVzIGRpY3Rpb25hcnkgY2hlY2tpbmcgdGhlIGV4aXN0YW5jZSBvZiBhbiBJRDpuYW1lIHBhaXJpbmcgKi9cbnZhciBoYXNOYW1lRm9ySWQgPSBmdW5jdGlvbiBoYXNOYW1lRm9ySWQobmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpZCwgbmFtZSkge1xuICAgIHJldHVybiBuYW1lc1tpZF0gIT09IHVuZGVmaW5lZCAmJiBuYW1lc1tpZF1bbmFtZV07XG4gIH07XG59O1xuXG4vKiBzdHJpbmdpZmllcyBuYW1lcyBmb3IgdGhlIGh0bWwvZWxlbWVudCBvdXRwdXQgKi9cbnZhciBzdHJpbmdpZnlOYW1lcyA9IGZ1bmN0aW9uIHN0cmluZ2lmeU5hbWVzKG5hbWVzKSB7XG4gIHZhciBzdHIgPSAnJztcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICBmb3IgKHZhciBpZCBpbiBuYW1lcykge1xuICAgIHN0ciArPSBPYmplY3Qua2V5cyhuYW1lc1tpZF0pLmpvaW4oJyAnKSArICcgJztcbiAgfVxuICByZXR1cm4gc3RyLnRyaW0oKTtcbn07XG5cbi8qIGNsb25lcyB0aGUgbmVzdGVkIG5hbWVzIGRpY3Rpb25hcnkgKi9cbnZhciBjbG9uZU5hbWVzID0gZnVuY3Rpb24gY2xvbmVOYW1lcyhuYW1lcykge1xuICB2YXIgY2xvbmUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gIGZvciAodmFyIGlkIGluIG5hbWVzKSB7XG4gICAgY2xvbmVbaWRdID0gX2V4dGVuZHMoe30sIG5hbWVzW2lkXSk7XG4gIH1cbiAgcmV0dXJuIGNsb25lO1xufTtcblxuLy8gXG5cbi8qIFRoZXNlIGFyZSBoZWxwZXJzIHRoYXQgZGVhbCB3aXRoIHRoZSBpbnNlcnRSdWxlIChha2Egc3BlZWR5KSBBUElcbiAqIFRoZXkgYXJlIHVzZWQgaW4gdGhlIFN0eWxlVGFncyBhbmQgc3BlY2lmaWNhbGx5IHRoZSBzcGVlZHkgdGFnXG4gKi9cblxuLyogcmV0cmlldmUgYSBzaGVldCBmb3IgYSBnaXZlbiBzdHlsZSB0YWcgKi9cbnZhciBzaGVldEZvclRhZyA9IGZ1bmN0aW9uIHNoZWV0Rm9yVGFnKHRhZykge1xuICAvLyAkRmxvd0ZpeE1lXG4gIGlmICh0YWcuc2hlZXQpIHJldHVybiB0YWcuc2hlZXQ7XG5cbiAgLyogRmlyZWZveCBxdWlyayByZXF1aXJlcyB1cyB0byBzdGVwIHRocm91Z2ggYWxsIHN0eWxlc2hlZXRzIHRvIGZpbmQgb25lIG93bmVkIGJ5IHRoZSBnaXZlbiB0YWcgKi9cbiAgdmFyIHNpemUgPSBkb2N1bWVudC5zdHlsZVNoZWV0cy5sZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc2l6ZTsgaSArPSAxKSB7XG4gICAgdmFyIHNoZWV0ID0gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIGlmIChzaGVldC5vd25lck5vZGUgPT09IHRhZykgcmV0dXJuIHNoZWV0O1xuICB9XG5cbiAgLyogd2Ugc2hvdWxkIGFsd2F5cyBiZSBhYmxlIHRvIGZpbmQgYSB0YWcgKi9cbiAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigxMCk7XG59O1xuXG4vKiBpbnNlcnQgYSBydWxlIHNhZmVseSBhbmQgcmV0dXJuIHdoZXRoZXIgaXQgd2FzIGFjdHVhbGx5IGluamVjdGVkICovXG52YXIgc2FmZUluc2VydFJ1bGUgPSBmdW5jdGlvbiBzYWZlSW5zZXJ0UnVsZShzaGVldCwgY3NzUnVsZSwgaW5kZXgpIHtcbiAgLyogYWJvcnQgZWFybHkgaWYgY3NzUnVsZSBzdHJpbmcgaXMgZmFsc3kgKi9cbiAgaWYgKCFjc3NSdWxlKSByZXR1cm4gZmFsc2U7XG5cbiAgdmFyIG1heEluZGV4ID0gc2hlZXQuY3NzUnVsZXMubGVuZ3RoO1xuXG4gIHRyeSB7XG4gICAgLyogdXNlIGluc2VydFJ1bGUgYW5kIGNhcCBwYXNzZWQgaW5kZXggd2l0aCBtYXhJbmRleCAobm8gb2YgY3NzUnVsZXMpICovXG4gICAgc2hlZXQuaW5zZXJ0UnVsZShjc3NSdWxlLCBpbmRleCA8PSBtYXhJbmRleCA/IGluZGV4IDogbWF4SW5kZXgpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvKiBhbnkgZXJyb3IgaW5kaWNhdGVzIGFuIGludmFsaWQgcnVsZSAqL1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxuLyogZGVsZXRlcyBgc2l6ZWAgcnVsZXMgc3RhcnRpbmcgZnJvbSBgcmVtb3ZhbEluZGV4YCAqL1xudmFyIGRlbGV0ZVJ1bGVzID0gZnVuY3Rpb24gZGVsZXRlUnVsZXMoc2hlZXQsIHJlbW92YWxJbmRleCwgc2l6ZSkge1xuICB2YXIgbG93ZXJCb3VuZCA9IHJlbW92YWxJbmRleCAtIHNpemU7XG4gIGZvciAodmFyIGkgPSByZW1vdmFsSW5kZXg7IGkgPiBsb3dlckJvdW5kOyBpIC09IDEpIHtcbiAgICBzaGVldC5kZWxldGVSdWxlKGkpO1xuICB9XG59O1xuXG4vLyBcblxuLyogdGhpcyBtYXJrZXIgc2VwYXJhdGVzIGNvbXBvbmVudCBzdHlsZXMgYW5kIGlzIGltcG9ydGFudCBmb3IgcmVoeWRyYXRpb24gKi9cbnZhciBtYWtlVGV4dE1hcmtlciA9IGZ1bmN0aW9uIG1ha2VUZXh0TWFya2VyKGlkKSB7XG4gIHJldHVybiAnXFxuLyogc2MtY29tcG9uZW50LWlkOiAnICsgaWQgKyAnICovXFxuJztcbn07XG5cbi8qIGFkZCB1cCBhbGwgbnVtYmVycyBpbiBhcnJheSB1cCB1bnRpbCBhbmQgaW5jbHVkaW5nIHRoZSBpbmRleCAqL1xudmFyIGFkZFVwVW50aWxJbmRleCA9IGZ1bmN0aW9uIGFkZFVwVW50aWxJbmRleChzaXplcywgaW5kZXgpIHtcbiAgdmFyIHRvdGFsVXBUb0luZGV4ID0gMDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPD0gaW5kZXg7IGkgKz0gMSkge1xuICAgIHRvdGFsVXBUb0luZGV4ICs9IHNpemVzW2ldO1xuICB9XG5cbiAgcmV0dXJuIHRvdGFsVXBUb0luZGV4O1xufTtcblxuLyogY3JlYXRlIGEgbmV3IHN0eWxlIHRhZyBhZnRlciBsYXN0RWwgKi9cbnZhciBtYWtlU3R5bGVUYWcgPSBmdW5jdGlvbiBtYWtlU3R5bGVUYWcodGFyZ2V0LCB0YWdFbCwgaW5zZXJ0QmVmb3JlKSB7XG4gIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIGVsLnNldEF0dHJpYnV0ZShTQ19BVFRSLCAnJyk7XG4gIGVsLnNldEF0dHJpYnV0ZShTQ19WRVJTSU9OX0FUVFIsIFwiNC4yLjFcIik7XG5cbiAgdmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcbiAgaWYgKG5vbmNlKSB7XG4gICAgZWwuc2V0QXR0cmlidXRlKCdub25jZScsIG5vbmNlKTtcbiAgfVxuXG4gIC8qIFdvcmsgYXJvdW5kIGluc2VydFJ1bGUgcXVpcmsgaW4gRWRnZUhUTUwgKi9cbiAgZWwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpKTtcblxuICBpZiAodGFyZ2V0ICYmICF0YWdFbCkge1xuICAgIC8qIEFwcGVuZCB0byB0YXJnZXQgd2hlbiBubyBwcmV2aW91cyBlbGVtZW50IHdhcyBwYXNzZWQgKi9cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoZWwpO1xuICB9IGVsc2Uge1xuICAgIGlmICghdGFnRWwgfHwgIXRhcmdldCB8fCAhdGFnRWwucGFyZW50Tm9kZSkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig2KTtcbiAgICB9XG5cbiAgICAvKiBJbnNlcnQgbmV3IHN0eWxlIHRhZyBhZnRlciB0aGUgcHJldmlvdXMgb25lICovXG4gICAgdGFnRWwucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWwsIGluc2VydEJlZm9yZSA/IHRhZ0VsIDogdGFnRWwubmV4dFNpYmxpbmcpO1xuICB9XG5cbiAgcmV0dXJuIGVsO1xufTtcblxuLyogdGFrZXMgYSBjc3MgZmFjdG9yeSBmdW5jdGlvbiBhbmQgb3V0cHV0cyBhbiBodG1sIHN0eWxlZCB0YWcgZmFjdG9yeSAqL1xudmFyIHdyYXBBc0h0bWxUYWcgPSBmdW5jdGlvbiB3cmFwQXNIdG1sVGFnKGNzcywgbmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhZGRpdGlvbmFsQXR0cnMpIHtcbiAgICB2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuICAgIHZhciBhdHRycyA9IFtub25jZSAmJiAnbm9uY2U9XCInICsgbm9uY2UgKyAnXCInLCBTQ19BVFRSICsgJz1cIicgKyBzdHJpbmdpZnlOYW1lcyhuYW1lcykgKyAnXCInLCBTQ19WRVJTSU9OX0FUVFIgKyAnPVwiJyArIFwiNC4yLjFcIiArICdcIicsIGFkZGl0aW9uYWxBdHRyc107XG5cbiAgICB2YXIgaHRtbEF0dHIgPSBhdHRycy5maWx0ZXIoQm9vbGVhbikuam9pbignICcpO1xuICAgIHJldHVybiAnPHN0eWxlICcgKyBodG1sQXR0ciArICc+JyArIGNzcygpICsgJzwvc3R5bGU+JztcbiAgfTtcbn07XG5cbi8qIHRha2VzIGEgY3NzIGZhY3RvcnkgZnVuY3Rpb24gYW5kIG91dHB1dHMgYW4gZWxlbWVudCBmYWN0b3J5ICovXG52YXIgd3JhcEFzRWxlbWVudCA9IGZ1bmN0aW9uIHdyYXBBc0VsZW1lbnQoY3NzLCBuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcHJvcHM7XG5cbiAgICB2YXIgcHJvcHMgPSAoX3Byb3BzID0ge30sIF9wcm9wc1tTQ19BVFRSXSA9IHN0cmluZ2lmeU5hbWVzKG5hbWVzKSwgX3Byb3BzW1NDX1ZFUlNJT05fQVRUUl0gPSBcIjQuMi4xXCIsIF9wcm9wcyk7XG5cbiAgICB2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuICAgIGlmIChub25jZSkge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgcHJvcHMubm9uY2UgPSBub25jZTtcbiAgICB9XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3Qvbm8tZGFuZ2VyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJywgX2V4dGVuZHMoe30sIHByb3BzLCB7IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7IF9faHRtbDogY3NzKCkgfSB9KSk7XG4gIH07XG59O1xuXG52YXIgZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5ID0gZnVuY3Rpb24gZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5KG1hcmtlcnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMobWFya2Vycyk7XG4gIH07XG59O1xuXG4vKiBzcGVlZHkgdGFncyB1dGlsaXNlIGluc2VydFJ1bGUgKi9cbnZhciBtYWtlU3BlZWR5VGFnID0gZnVuY3Rpb24gbWFrZVNwZWVkeVRhZyhlbCwgZ2V0SW1wb3J0UnVsZVRhZykge1xuICB2YXIgbmFtZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB2YXIgbWFya2VycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBzaXplcyA9IFtdO1xuXG4gIHZhciBleHRyYWN0SW1wb3J0ID0gZ2V0SW1wb3J0UnVsZVRhZyAhPT0gdW5kZWZpbmVkO1xuICAvKiBpbmRpY2F0ZXMgd2hldGhlciBnZXRJbXBvcnRSdWxlVGFnIHdhcyBjYWxsZWQgKi9cbiAgdmFyIHVzZWRJbXBvcnRSdWxlVGFnID0gZmFsc2U7XG5cbiAgdmFyIGluc2VydE1hcmtlciA9IGZ1bmN0aW9uIGluc2VydE1hcmtlcihpZCkge1xuICAgIHZhciBwcmV2ID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKHByZXYgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHByZXY7XG4gICAgfVxuXG4gICAgbWFya2Vyc1tpZF0gPSBzaXplcy5sZW5ndGg7XG4gICAgc2l6ZXMucHVzaCgwKTtcbiAgICByZXNldElkTmFtZXMobmFtZXMsIGlkKTtcblxuICAgIHJldHVybiBtYXJrZXJzW2lkXTtcbiAgfTtcblxuICB2YXIgaW5zZXJ0UnVsZXMgPSBmdW5jdGlvbiBpbnNlcnRSdWxlcyhpZCwgY3NzUnVsZXMsIG5hbWUpIHtcbiAgICB2YXIgbWFya2VyID0gaW5zZXJ0TWFya2VyKGlkKTtcbiAgICB2YXIgc2hlZXQgPSBzaGVldEZvclRhZyhlbCk7XG4gICAgdmFyIGluc2VydEluZGV4ID0gYWRkVXBVbnRpbEluZGV4KHNpemVzLCBtYXJrZXIpO1xuXG4gICAgdmFyIGluamVjdGVkUnVsZXMgPSAwO1xuICAgIHZhciBpbXBvcnRSdWxlcyA9IFtdO1xuICAgIHZhciBjc3NSdWxlc1NpemUgPSBjc3NSdWxlcy5sZW5ndGg7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNzc1J1bGVzU2l6ZTsgaSArPSAxKSB7XG4gICAgICB2YXIgY3NzUnVsZSA9IGNzc1J1bGVzW2ldO1xuICAgICAgdmFyIG1heUhhdmVJbXBvcnQgPSBleHRyYWN0SW1wb3J0OyAvKiBAaW1wb3J0IHJ1bGVzIGFyZSByZW9yZGVyZWQgdG8gYXBwZWFyIGZpcnN0ICovXG4gICAgICBpZiAobWF5SGF2ZUltcG9ydCAmJiBjc3NSdWxlLmluZGV4T2YoJ0BpbXBvcnQnKSAhPT0gLTEpIHtcbiAgICAgICAgaW1wb3J0UnVsZXMucHVzaChjc3NSdWxlKTtcbiAgICAgIH0gZWxzZSBpZiAoc2FmZUluc2VydFJ1bGUoc2hlZXQsIGNzc1J1bGUsIGluc2VydEluZGV4ICsgaW5qZWN0ZWRSdWxlcykpIHtcbiAgICAgICAgbWF5SGF2ZUltcG9ydCA9IGZhbHNlO1xuICAgICAgICBpbmplY3RlZFJ1bGVzICs9IDE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGV4dHJhY3RJbXBvcnQgJiYgaW1wb3J0UnVsZXMubGVuZ3RoID4gMCkge1xuICAgICAgdXNlZEltcG9ydFJ1bGVUYWcgPSB0cnVlO1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgZ2V0SW1wb3J0UnVsZVRhZygpLmluc2VydFJ1bGVzKGlkICsgJy1pbXBvcnQnLCBpbXBvcnRSdWxlcyk7XG4gICAgfVxuXG4gICAgc2l6ZXNbbWFya2VyXSArPSBpbmplY3RlZFJ1bGVzOyAvKiBhZGQgdXAgbm8gb2YgaW5qZWN0ZWQgcnVsZXMgKi9cbiAgICBhZGROYW1lRm9ySWQobmFtZXMsIGlkLCBuYW1lKTtcbiAgfTtcblxuICB2YXIgcmVtb3ZlUnVsZXMgPSBmdW5jdGlvbiByZW1vdmVSdWxlcyhpZCkge1xuICAgIHZhciBtYXJrZXIgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAobWFya2VyID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIHZhciBzaXplID0gc2l6ZXNbbWFya2VyXTtcbiAgICB2YXIgc2hlZXQgPSBzaGVldEZvclRhZyhlbCk7XG4gICAgdmFyIHJlbW92YWxJbmRleCA9IGFkZFVwVW50aWxJbmRleChzaXplcywgbWFya2VyKSAtIDE7XG4gICAgZGVsZXRlUnVsZXMoc2hlZXQsIHJlbW92YWxJbmRleCwgc2l6ZSk7XG4gICAgc2l6ZXNbbWFya2VyXSA9IDA7XG4gICAgcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCk7XG5cbiAgICBpZiAoZXh0cmFjdEltcG9ydCAmJiB1c2VkSW1wb3J0UnVsZVRhZykge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgZ2V0SW1wb3J0UnVsZVRhZygpLnJlbW92ZVJ1bGVzKGlkICsgJy1pbXBvcnQnKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGNzcyA9IGZ1bmN0aW9uIGNzcygpIHtcbiAgICB2YXIgX3NoZWV0Rm9yVGFnID0gc2hlZXRGb3JUYWcoZWwpLFxuICAgICAgICBjc3NSdWxlcyA9IF9zaGVldEZvclRhZy5jc3NSdWxlcztcblxuICAgIHZhciBzdHIgPSAnJztcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICBmb3IgKHZhciBpZCBpbiBtYXJrZXJzKSB7XG4gICAgICBzdHIgKz0gbWFrZVRleHRNYXJrZXIoaWQpO1xuICAgICAgdmFyIG1hcmtlciA9IG1hcmtlcnNbaWRdO1xuICAgICAgdmFyIGVuZCA9IGFkZFVwVW50aWxJbmRleChzaXplcywgbWFya2VyKTtcbiAgICAgIHZhciBzaXplID0gc2l6ZXNbbWFya2VyXTtcbiAgICAgIGZvciAodmFyIGkgPSBlbmQgLSBzaXplOyBpIDwgZW5kOyBpICs9IDEpIHtcbiAgICAgICAgdmFyIHJ1bGUgPSBjc3NSdWxlc1tpXTtcbiAgICAgICAgaWYgKHJ1bGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHN0ciArPSBydWxlLmNzc1RleHQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3RyO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgY2xvbmU6IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig1KTtcbiAgICB9LFxuXG4gICAgY3NzOiBjc3MsXG4gICAgZ2V0SWRzOiBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkobWFya2VycyksXG4gICAgaGFzTmFtZUZvcklkOiBoYXNOYW1lRm9ySWQobmFtZXMpLFxuICAgIGluc2VydE1hcmtlcjogaW5zZXJ0TWFya2VyLFxuICAgIGluc2VydFJ1bGVzOiBpbnNlcnRSdWxlcyxcbiAgICByZW1vdmVSdWxlczogcmVtb3ZlUnVsZXMsXG4gICAgc2VhbGVkOiBmYWxzZSxcbiAgICBzdHlsZVRhZzogZWwsXG4gICAgdG9FbGVtZW50OiB3cmFwQXNFbGVtZW50KGNzcywgbmFtZXMpLFxuICAgIHRvSFRNTDogd3JhcEFzSHRtbFRhZyhjc3MsIG5hbWVzKVxuICB9O1xufTtcblxudmFyIG1ha2VUZXh0Tm9kZSA9IGZ1bmN0aW9uIG1ha2VUZXh0Tm9kZShpZCkge1xuICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUobWFrZVRleHRNYXJrZXIoaWQpKTtcbn07XG5cbnZhciBtYWtlQnJvd3NlclRhZyA9IGZ1bmN0aW9uIG1ha2VCcm93c2VyVGFnKGVsLCBnZXRJbXBvcnRSdWxlVGFnKSB7XG4gIHZhciBuYW1lcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBtYXJrZXJzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICB2YXIgZXh0cmFjdEltcG9ydCA9IGdldEltcG9ydFJ1bGVUYWcgIT09IHVuZGVmaW5lZDtcblxuICAvKiBpbmRpY2F0ZXMgd2hldGhlciBnZXRJbXBvcnRSdWxlVGFnIHdhcyBjYWxsZWQgKi9cbiAgdmFyIHVzZWRJbXBvcnRSdWxlVGFnID0gZmFsc2U7XG5cbiAgdmFyIGluc2VydE1hcmtlciA9IGZ1bmN0aW9uIGluc2VydE1hcmtlcihpZCkge1xuICAgIHZhciBwcmV2ID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKHByZXYgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHByZXY7XG4gICAgfVxuXG4gICAgbWFya2Vyc1tpZF0gPSBtYWtlVGV4dE5vZGUoaWQpO1xuICAgIGVsLmFwcGVuZENoaWxkKG1hcmtlcnNbaWRdKTtcbiAgICBuYW1lc1tpZF0gPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gICAgcmV0dXJuIG1hcmtlcnNbaWRdO1xuICB9O1xuXG4gIHZhciBpbnNlcnRSdWxlcyA9IGZ1bmN0aW9uIGluc2VydFJ1bGVzKGlkLCBjc3NSdWxlcywgbmFtZSkge1xuICAgIHZhciBtYXJrZXIgPSBpbnNlcnRNYXJrZXIoaWQpO1xuICAgIHZhciBpbXBvcnRSdWxlcyA9IFtdO1xuICAgIHZhciBjc3NSdWxlc1NpemUgPSBjc3NSdWxlcy5sZW5ndGg7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNzc1J1bGVzU2l6ZTsgaSArPSAxKSB7XG4gICAgICB2YXIgcnVsZSA9IGNzc1J1bGVzW2ldO1xuICAgICAgdmFyIG1heUhhdmVJbXBvcnQgPSBleHRyYWN0SW1wb3J0O1xuICAgICAgaWYgKG1heUhhdmVJbXBvcnQgJiYgcnVsZS5pbmRleE9mKCdAaW1wb3J0JykgIT09IC0xKSB7XG4gICAgICAgIGltcG9ydFJ1bGVzLnB1c2gocnVsZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtYXlIYXZlSW1wb3J0ID0gZmFsc2U7XG4gICAgICAgIHZhciBzZXBhcmF0b3IgPSBpID09PSBjc3NSdWxlc1NpemUgLSAxID8gJycgOiAnICc7XG4gICAgICAgIG1hcmtlci5hcHBlbmREYXRhKCcnICsgcnVsZSArIHNlcGFyYXRvcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgYWRkTmFtZUZvcklkKG5hbWVzLCBpZCwgbmFtZSk7XG5cbiAgICBpZiAoZXh0cmFjdEltcG9ydCAmJiBpbXBvcnRSdWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICB1c2VkSW1wb3J0UnVsZVRhZyA9IHRydWU7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBnZXRJbXBvcnRSdWxlVGFnKCkuaW5zZXJ0UnVsZXMoaWQgKyAnLWltcG9ydCcsIGltcG9ydFJ1bGVzKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJlbW92ZVJ1bGVzID0gZnVuY3Rpb24gcmVtb3ZlUnVsZXMoaWQpIHtcbiAgICB2YXIgbWFya2VyID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKG1hcmtlciA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICAvKiBjcmVhdGUgbmV3IGVtcHR5IHRleHQgbm9kZSBhbmQgcmVwbGFjZSB0aGUgY3VycmVudCBvbmUgKi9cbiAgICB2YXIgbmV3TWFya2VyID0gbWFrZVRleHROb2RlKGlkKTtcbiAgICBlbC5yZXBsYWNlQ2hpbGQobmV3TWFya2VyLCBtYXJrZXIpO1xuICAgIG1hcmtlcnNbaWRdID0gbmV3TWFya2VyO1xuICAgIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpO1xuXG4gICAgaWYgKGV4dHJhY3RJbXBvcnQgJiYgdXNlZEltcG9ydFJ1bGVUYWcpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIGdldEltcG9ydFJ1bGVUYWcoKS5yZW1vdmVSdWxlcyhpZCArICctaW1wb3J0Jyk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBjc3MgPSBmdW5jdGlvbiBjc3MoKSB7XG4gICAgdmFyIHN0ciA9ICcnO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAodmFyIGlkIGluIG1hcmtlcnMpIHtcbiAgICAgIHN0ciArPSBtYXJrZXJzW2lkXS5kYXRhO1xuICAgIH1cblxuICAgIHJldHVybiBzdHI7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBjbG9uZTogZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDUpO1xuICAgIH0sXG5cbiAgICBjc3M6IGNzcyxcbiAgICBnZXRJZHM6IGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeShtYXJrZXJzKSxcbiAgICBoYXNOYW1lRm9ySWQ6IGhhc05hbWVGb3JJZChuYW1lcyksXG4gICAgaW5zZXJ0TWFya2VyOiBpbnNlcnRNYXJrZXIsXG4gICAgaW5zZXJ0UnVsZXM6IGluc2VydFJ1bGVzLFxuICAgIHJlbW92ZVJ1bGVzOiByZW1vdmVSdWxlcyxcbiAgICBzZWFsZWQ6IGZhbHNlLFxuICAgIHN0eWxlVGFnOiBlbCxcbiAgICB0b0VsZW1lbnQ6IHdyYXBBc0VsZW1lbnQoY3NzLCBuYW1lcyksXG4gICAgdG9IVE1MOiB3cmFwQXNIdG1sVGFnKGNzcywgbmFtZXMpXG4gIH07XG59O1xuXG52YXIgbWFrZVNlcnZlclRhZyA9IGZ1bmN0aW9uIG1ha2VTZXJ2ZXJUYWcobmFtZXNBcmcsIG1hcmtlcnNBcmcpIHtcbiAgdmFyIG5hbWVzID0gbmFtZXNBcmcgPT09IHVuZGVmaW5lZCA/IE9iamVjdC5jcmVhdGUobnVsbCkgOiBuYW1lc0FyZztcbiAgdmFyIG1hcmtlcnMgPSBtYXJrZXJzQXJnID09PSB1bmRlZmluZWQgPyBPYmplY3QuY3JlYXRlKG51bGwpIDogbWFya2Vyc0FyZztcblxuICB2YXIgaW5zZXJ0TWFya2VyID0gZnVuY3Rpb24gaW5zZXJ0TWFya2VyKGlkKSB7XG4gICAgdmFyIHByZXYgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAocHJldiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gcHJldjtcbiAgICB9XG5cbiAgICByZXR1cm4gbWFya2Vyc1tpZF0gPSBbJyddO1xuICB9O1xuXG4gIHZhciBpbnNlcnRSdWxlcyA9IGZ1bmN0aW9uIGluc2VydFJ1bGVzKGlkLCBjc3NSdWxlcywgbmFtZSkge1xuICAgIHZhciBtYXJrZXIgPSBpbnNlcnRNYXJrZXIoaWQpO1xuICAgIG1hcmtlclswXSArPSBjc3NSdWxlcy5qb2luKCcgJyk7XG4gICAgYWRkTmFtZUZvcklkKG5hbWVzLCBpZCwgbmFtZSk7XG4gIH07XG5cbiAgdmFyIHJlbW92ZVJ1bGVzID0gZnVuY3Rpb24gcmVtb3ZlUnVsZXMoaWQpIHtcbiAgICB2YXIgbWFya2VyID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKG1hcmtlciA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG4gICAgbWFya2VyWzBdID0gJyc7XG4gICAgcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCk7XG4gIH07XG5cbiAgdmFyIGNzcyA9IGZ1bmN0aW9uIGNzcygpIHtcbiAgICB2YXIgc3RyID0gJyc7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAodmFyIGlkIGluIG1hcmtlcnMpIHtcbiAgICAgIHZhciBjc3NGb3JJZCA9IG1hcmtlcnNbaWRdWzBdO1xuICAgICAgaWYgKGNzc0ZvcklkKSB7XG4gICAgICAgIHN0ciArPSBtYWtlVGV4dE1hcmtlcihpZCkgKyBjc3NGb3JJZDtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN0cjtcbiAgfTtcblxuICB2YXIgY2xvbmUgPSBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICB2YXIgbmFtZXNDbG9uZSA9IGNsb25lTmFtZXMobmFtZXMpO1xuICAgIHZhciBtYXJrZXJzQ2xvbmUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAodmFyIGlkIGluIG1hcmtlcnMpIHtcbiAgICAgIG1hcmtlcnNDbG9uZVtpZF0gPSBbbWFya2Vyc1tpZF1bMF1dO1xuICAgIH1cblxuICAgIHJldHVybiBtYWtlU2VydmVyVGFnKG5hbWVzQ2xvbmUsIG1hcmtlcnNDbG9uZSk7XG4gIH07XG5cbiAgdmFyIHRhZyA9IHtcbiAgICBjbG9uZTogY2xvbmUsXG4gICAgY3NzOiBjc3MsXG4gICAgZ2V0SWRzOiBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkobWFya2VycyksXG4gICAgaGFzTmFtZUZvcklkOiBoYXNOYW1lRm9ySWQobmFtZXMpLFxuICAgIGluc2VydE1hcmtlcjogaW5zZXJ0TWFya2VyLFxuICAgIGluc2VydFJ1bGVzOiBpbnNlcnRSdWxlcyxcbiAgICByZW1vdmVSdWxlczogcmVtb3ZlUnVsZXMsXG4gICAgc2VhbGVkOiBmYWxzZSxcbiAgICBzdHlsZVRhZzogbnVsbCxcbiAgICB0b0VsZW1lbnQ6IHdyYXBBc0VsZW1lbnQoY3NzLCBuYW1lcyksXG4gICAgdG9IVE1MOiB3cmFwQXNIdG1sVGFnKGNzcywgbmFtZXMpXG4gIH07XG5cbiAgcmV0dXJuIHRhZztcbn07XG5cbnZhciBtYWtlVGFnID0gZnVuY3Rpb24gbWFrZVRhZyh0YXJnZXQsIHRhZ0VsLCBmb3JjZVNlcnZlciwgaW5zZXJ0QmVmb3JlLCBnZXRJbXBvcnRSdWxlVGFnKSB7XG4gIGlmIChJU19CUk9XU0VSICYmICFmb3JjZVNlcnZlcikge1xuICAgIHZhciBlbCA9IG1ha2VTdHlsZVRhZyh0YXJnZXQsIHRhZ0VsLCBpbnNlcnRCZWZvcmUpO1xuXG4gICAgaWYgKERJU0FCTEVfU1BFRURZKSB7XG4gICAgICByZXR1cm4gbWFrZUJyb3dzZXJUYWcoZWwsIGdldEltcG9ydFJ1bGVUYWcpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbWFrZVNwZWVkeVRhZyhlbCwgZ2V0SW1wb3J0UnVsZVRhZyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1ha2VTZXJ2ZXJUYWcoKTtcbn07XG5cbnZhciByZWh5ZHJhdGUgPSBmdW5jdGlvbiByZWh5ZHJhdGUodGFnLCBlbHMsIGV4dHJhY3RlZCkge1xuICAvKiBhZGQgYWxsIGV4dHJhY3RlZCBjb21wb25lbnRzIHRvIHRoZSBuZXcgdGFnICovXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBleHRyYWN0ZWQubGVuZ3RoOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICB2YXIgX2V4dHJhY3RlZCRpID0gZXh0cmFjdGVkW2ldLFxuICAgICAgICBjb21wb25lbnRJZCA9IF9leHRyYWN0ZWQkaS5jb21wb25lbnRJZCxcbiAgICAgICAgY3NzRnJvbURPTSA9IF9leHRyYWN0ZWQkaS5jc3NGcm9tRE9NO1xuXG4gICAgdmFyIGNzc1J1bGVzID0gc3BsaXRCeVJ1bGVzKGNzc0Zyb21ET00pO1xuICAgIHRhZy5pbnNlcnRSdWxlcyhjb21wb25lbnRJZCwgY3NzUnVsZXMpO1xuICB9XG5cbiAgLyogcmVtb3ZlIG9sZCBIVE1MU3R5bGVFbGVtZW50cywgc2luY2UgdGhleSBoYXZlIGJlZW4gcmVoeWRyYXRlZCAqL1xuICBmb3IgKHZhciBfaSA9IDAsIF9sZW4gPSBlbHMubGVuZ3RoOyBfaSA8IF9sZW47IF9pICs9IDEpIHtcbiAgICB2YXIgZWwgPSBlbHNbX2ldO1xuICAgIGlmIChlbC5wYXJlbnROb2RlKSB7XG4gICAgICBlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsKTtcbiAgICB9XG4gIH1cbn07XG5cbi8vIFxuXG52YXIgU1BMSVRfUkVHRVggPSAvXFxzKy87XG5cbi8qIGRldGVybWluZSB0aGUgbWF4aW11bSBudW1iZXIgb2YgY29tcG9uZW50cyBiZWZvcmUgdGFncyBhcmUgc2hhcmRlZCAqL1xudmFyIE1BWF9TSVpFID0gdm9pZCAwO1xuaWYgKElTX0JST1dTRVIpIHtcbiAgLyogaW4gc3BlZWR5IG1vZGUgd2UgY2FuIGtlZXAgYSBsb3QgbW9yZSBydWxlcyBpbiBhIHNoZWV0IGJlZm9yZSBhIHNsb3dkb3duIGNhbiBiZSBleHBlY3RlZCAqL1xuICBNQVhfU0laRSA9IERJU0FCTEVfU1BFRURZID8gNDAgOiAxMDAwO1xufSBlbHNlIHtcbiAgLyogZm9yIHNlcnZlcnMgd2UgZG8gbm90IG5lZWQgdG8gc2hhcmQgYXQgYWxsICovXG4gIE1BWF9TSVpFID0gLTE7XG59XG5cbnZhciBzaGVldFJ1bm5pbmdJZCA9IDA7XG52YXIgbWFzdGVyID0gdm9pZCAwO1xuXG52YXIgU3R5bGVTaGVldCA9IGZ1bmN0aW9uICgpIHtcblxuICAvKiBhIG1hcCBmcm9tIGlkcyB0byB0YWdzICovXG5cbiAgLyogZGVmZXJyZWQgcnVsZXMgZm9yIGEgZ2l2ZW4gaWQgKi9cblxuICAvKiB0aGlzIGlzIHVzZWQgZm9yIG5vdCByZWluamVjdGluZyBydWxlcyB2aWEgaGFzTmFtZUZvcklkKCkgKi9cblxuICAvKiB3aGVuIHJ1bGVzIGZvciBhbiBpZCBhcmUgcmVtb3ZlZCB1c2luZyByZW1vdmUoKSB3ZSBoYXZlIHRvIGlnbm9yZSByZWh5ZHJhdGVkTmFtZXMgZm9yIGl0ICovXG5cbiAgLyogYSBsaXN0IG9mIHRhZ3MgYmVsb25naW5nIHRvIHRoaXMgU3R5bGVTaGVldCAqL1xuXG4gIC8qIGEgdGFnIGZvciBpbXBvcnQgcnVsZXMgKi9cblxuICAvKiBjdXJyZW50IGNhcGFjaXR5IHVudGlsIGEgbmV3IHRhZyBtdXN0IGJlIGNyZWF0ZWQgKi9cblxuICAvKiBjaGlsZHJlbiAoYWthIGNsb25lcykgb2YgdGhpcyBTdHlsZVNoZWV0IGluaGVyaXRpbmcgYWxsIGFuZCBmdXR1cmUgaW5qZWN0aW9ucyAqL1xuXG4gIGZ1bmN0aW9uIFN0eWxlU2hlZXQoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciB0YXJnZXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IElTX0JST1dTRVIgPyBkb2N1bWVudC5oZWFkIDogbnVsbDtcbiAgICB2YXIgZm9yY2VTZXJ2ZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlO1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFN0eWxlU2hlZXQpO1xuXG4gICAgdGhpcy5nZXRJbXBvcnRSdWxlVGFnID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGltcG9ydFJ1bGVUYWcgPSBfdGhpcy5pbXBvcnRSdWxlVGFnO1xuXG4gICAgICBpZiAoaW1wb3J0UnVsZVRhZyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBpbXBvcnRSdWxlVGFnO1xuICAgICAgfVxuXG4gICAgICB2YXIgZmlyc3RUYWcgPSBfdGhpcy50YWdzWzBdO1xuICAgICAgdmFyIGluc2VydEJlZm9yZSA9IHRydWU7XG5cbiAgICAgIHJldHVybiBfdGhpcy5pbXBvcnRSdWxlVGFnID0gbWFrZVRhZyhfdGhpcy50YXJnZXQsIGZpcnN0VGFnID8gZmlyc3RUYWcuc3R5bGVUYWcgOiBudWxsLCBfdGhpcy5mb3JjZVNlcnZlciwgaW5zZXJ0QmVmb3JlKTtcbiAgICB9O1xuXG4gICAgc2hlZXRSdW5uaW5nSWQgKz0gMTtcbiAgICB0aGlzLmlkID0gc2hlZXRSdW5uaW5nSWQ7XG4gICAgdGhpcy5mb3JjZVNlcnZlciA9IGZvcmNlU2VydmVyO1xuICAgIHRoaXMudGFyZ2V0ID0gZm9yY2VTZXJ2ZXIgPyBudWxsIDogdGFyZ2V0O1xuICAgIHRoaXMudGFnTWFwID0ge307XG4gICAgdGhpcy5kZWZlcnJlZCA9IHt9O1xuICAgIHRoaXMucmVoeWRyYXRlZE5hbWVzID0ge307XG4gICAgdGhpcy5pZ25vcmVSZWh5ZHJhdGVkTmFtZXMgPSB7fTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmNhcGFjaXR5ID0gMTtcbiAgICB0aGlzLmNsb25lcyA9IFtdO1xuICB9XG5cbiAgLyogcmVoeWRyYXRlIGFsbCBTU1InZCBzdHlsZSB0YWdzICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5yZWh5ZHJhdGUgPSBmdW5jdGlvbiByZWh5ZHJhdGUkJDEoKSB7XG4gICAgaWYgKCFJU19CUk9XU0VSIHx8IHRoaXMuZm9yY2VTZXJ2ZXIpIHJldHVybiB0aGlzO1xuXG4gICAgdmFyIGVscyA9IFtdO1xuICAgIHZhciBleHRyYWN0ZWQgPSBbXTtcbiAgICB2YXIgaXNTdHJlYW1lZCA9IGZhbHNlO1xuXG4gICAgLyogcmV0cmlldmUgYWxsIG9mIG91ciBTU1Igc3R5bGUgZWxlbWVudHMgZnJvbSB0aGUgRE9NICovXG4gICAgdmFyIG5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3R5bGVbJyArIFNDX0FUVFIgKyAnXVsnICsgU0NfVkVSU0lPTl9BVFRSICsgJz1cIicgKyBcIjQuMi4xXCIgKyAnXCJdJyk7XG5cbiAgICB2YXIgbm9kZXNTaXplID0gbm9kZXMubGVuZ3RoO1xuXG4gICAgLyogYWJvcnQgcmVoeWRyYXRpb24gaWYgbm8gcHJldmlvdXMgc3R5bGUgdGFncyB3ZXJlIGZvdW5kICovXG4gICAgaWYgKCFub2Rlc1NpemUpIHJldHVybiB0aGlzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2Rlc1NpemU7IGkgKz0gMSkge1xuICAgICAgdmFyIGVsID0gbm9kZXNbaV07XG5cbiAgICAgIC8qIGNoZWNrIGlmIHN0eWxlIHRhZyBpcyBhIHN0cmVhbWVkIHRhZyAqL1xuICAgICAgaWYgKCFpc1N0cmVhbWVkKSBpc1N0cmVhbWVkID0gISFlbC5nZXRBdHRyaWJ1dGUoU0NfU1RSRUFNX0FUVFIpO1xuXG4gICAgICAvKiByZXRyaWV2ZSBhbGwgY29tcG9uZW50IG5hbWVzICovXG4gICAgICB2YXIgZWxOYW1lcyA9IChlbC5nZXRBdHRyaWJ1dGUoU0NfQVRUUikgfHwgJycpLnRyaW0oKS5zcGxpdChTUExJVF9SRUdFWCk7XG4gICAgICB2YXIgZWxOYW1lc1NpemUgPSBlbE5hbWVzLmxlbmd0aDtcbiAgICAgIGZvciAodmFyIGogPSAwLCBuYW1lOyBqIDwgZWxOYW1lc1NpemU7IGogKz0gMSkge1xuICAgICAgICBuYW1lID0gZWxOYW1lc1tqXTtcbiAgICAgICAgLyogYWRkIHJlaHlkcmF0ZWQgbmFtZSB0byBzaGVldCB0byBhdm9pZCByZS1hZGRpbmcgc3R5bGVzICovXG4gICAgICAgIHRoaXMucmVoeWRyYXRlZE5hbWVzW25hbWVdID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLyogZXh0cmFjdCBhbGwgY29tcG9uZW50cyBhbmQgdGhlaXIgQ1NTICovXG4gICAgICBleHRyYWN0ZWQucHVzaC5hcHBseShleHRyYWN0ZWQsIGV4dHJhY3RDb21wcyhlbC50ZXh0Q29udGVudCkpO1xuXG4gICAgICAvKiBzdG9yZSBvcmlnaW5hbCBIVE1MU3R5bGVFbGVtZW50ICovXG4gICAgICBlbHMucHVzaChlbCk7XG4gICAgfVxuXG4gICAgLyogYWJvcnQgcmVoeWRyYXRpb24gaWYgbm90aGluZyB3YXMgZXh0cmFjdGVkICovXG4gICAgdmFyIGV4dHJhY3RlZFNpemUgPSBleHRyYWN0ZWQubGVuZ3RoO1xuICAgIGlmICghZXh0cmFjdGVkU2l6ZSkgcmV0dXJuIHRoaXM7XG5cbiAgICAvKiBjcmVhdGUgYSB0YWcgdG8gYmUgdXNlZCBmb3IgcmVoeWRyYXRpb24gKi9cbiAgICB2YXIgdGFnID0gdGhpcy5tYWtlVGFnKG51bGwpO1xuXG4gICAgcmVoeWRyYXRlKHRhZywgZWxzLCBleHRyYWN0ZWQpO1xuXG4gICAgLyogcmVzZXQgY2FwYWNpdHkgYW5kIGFkanVzdCBNQVhfU0laRSBieSB0aGUgaW5pdGlhbCBzaXplIG9mIHRoZSByZWh5ZHJhdGlvbiAqL1xuICAgIHRoaXMuY2FwYWNpdHkgPSBNYXRoLm1heCgxLCBNQVhfU0laRSAtIGV4dHJhY3RlZFNpemUpO1xuICAgIHRoaXMudGFncy5wdXNoKHRhZyk7XG5cbiAgICAvKiByZXRyaWV2ZSBhbGwgY29tcG9uZW50IGlkcyAqL1xuICAgIGZvciAodmFyIF9qID0gMDsgX2ogPCBleHRyYWN0ZWRTaXplOyBfaiArPSAxKSB7XG4gICAgICB0aGlzLnRhZ01hcFtleHRyYWN0ZWRbX2pdLmNvbXBvbmVudElkXSA9IHRhZztcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvKiByZXRyaWV2ZSBhIFwibWFzdGVyXCIgaW5zdGFuY2Ugb2YgU3R5bGVTaGVldCB3aGljaCBpcyB0eXBpY2FsbHkgdXNlZCB3aGVuIG5vIG90aGVyIGlzIGF2YWlsYWJsZVxuICAgKiBUaGUgbWFzdGVyIFN0eWxlU2hlZXQgaXMgdGFyZ2V0ZWQgYnkgY3JlYXRlR2xvYmFsU3R5bGUsIGtleWZyYW1lcywgYW5kIGNvbXBvbmVudHMgb3V0c2lkZSBvZiBhbnlcbiAgICAqIFN0eWxlU2hlZXRNYW5hZ2VyJ3MgY29udGV4dCAqL1xuXG5cbiAgLyogcmVzZXQgdGhlIGludGVybmFsIFwibWFzdGVyXCIgaW5zdGFuY2UgKi9cbiAgU3R5bGVTaGVldC5yZXNldCA9IGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIHZhciBmb3JjZVNlcnZlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICBtYXN0ZXIgPSBuZXcgU3R5bGVTaGVldCh1bmRlZmluZWQsIGZvcmNlU2VydmVyKS5yZWh5ZHJhdGUoKTtcbiAgfTtcblxuICAvKiBhZGRzIFwiY2hpbGRyZW5cIiB0byB0aGUgU3R5bGVTaGVldCB0aGF0IGluaGVyaXQgYWxsIG9mIHRoZSBwYXJlbnRzJyBydWxlc1xuICAgKiB3aGlsZSB0aGVpciBvd24gcnVsZXMgZG8gbm90IGFmZmVjdCB0aGUgcGFyZW50ICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgIHZhciBzaGVldCA9IG5ldyBTdHlsZVNoZWV0KHRoaXMudGFyZ2V0LCB0aGlzLmZvcmNlU2VydmVyKTtcblxuICAgIC8qIGFkZCB0byBjbG9uZSBhcnJheSAqL1xuICAgIHRoaXMuY2xvbmVzLnB1c2goc2hlZXQpO1xuXG4gICAgLyogY2xvbmUgYWxsIHRhZ3MgKi9cbiAgICBzaGVldC50YWdzID0gdGhpcy50YWdzLm1hcChmdW5jdGlvbiAodGFnKSB7XG4gICAgICB2YXIgaWRzID0gdGFnLmdldElkcygpO1xuICAgICAgdmFyIG5ld1RhZyA9IHRhZy5jbG9uZSgpO1xuXG4gICAgICAvKiByZWNvbnN0cnVjdCB0YWdNYXAgKi9cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaWRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIHNoZWV0LnRhZ01hcFtpZHNbaV1dID0gbmV3VGFnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmV3VGFnO1xuICAgIH0pO1xuXG4gICAgLyogY2xvbmUgb3RoZXIgbWFwcyAqL1xuICAgIHNoZWV0LnJlaHlkcmF0ZWROYW1lcyA9IF9leHRlbmRzKHt9LCB0aGlzLnJlaHlkcmF0ZWROYW1lcyk7XG4gICAgc2hlZXQuZGVmZXJyZWQgPSBfZXh0ZW5kcyh7fSwgdGhpcy5kZWZlcnJlZCk7XG5cbiAgICByZXR1cm4gc2hlZXQ7XG4gIH07XG5cbiAgLyogZm9yY2UgU3R5bGVTaGVldCB0byBjcmVhdGUgYSBuZXcgdGFnIG9uIHRoZSBuZXh0IGluamVjdGlvbiAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuc2VhbEFsbFRhZ3MgPSBmdW5jdGlvbiBzZWFsQWxsVGFncygpIHtcbiAgICB0aGlzLmNhcGFjaXR5ID0gMTtcblxuICAgIHRoaXMudGFncy5mb3JFYWNoKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgdGFnLnNlYWxlZCA9IHRydWU7XG4gICAgfSk7XG4gIH07XG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUubWFrZVRhZyA9IGZ1bmN0aW9uIG1ha2VUYWckJDEodGFnKSB7XG4gICAgdmFyIGxhc3RFbCA9IHRhZyA/IHRhZy5zdHlsZVRhZyA6IG51bGw7XG4gICAgdmFyIGluc2VydEJlZm9yZSA9IGZhbHNlO1xuXG4gICAgcmV0dXJuIG1ha2VUYWcodGhpcy50YXJnZXQsIGxhc3RFbCwgdGhpcy5mb3JjZVNlcnZlciwgaW5zZXJ0QmVmb3JlLCB0aGlzLmdldEltcG9ydFJ1bGVUYWcpO1xuICB9O1xuXG4gIC8qIGdldCBhIHRhZyBmb3IgYSBnaXZlbiBjb21wb25lbnRJZCwgYXNzaWduIHRoZSBjb21wb25lbnRJZCB0byBvbmUsIG9yIHNoYXJkICovXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmdldFRhZ0ZvcklkID0gZnVuY3Rpb24gZ2V0VGFnRm9ySWQoaWQpIHtcbiAgICAvKiBzaW1wbHkgcmV0dXJuIGEgdGFnLCB3aGVuIHRoZSBjb21wb25lbnRJZCB3YXMgYWxyZWFkeSBhc3NpZ25lZCBvbmUgKi9cbiAgICB2YXIgcHJldiA9IHRoaXMudGFnTWFwW2lkXTtcbiAgICBpZiAocHJldiAhPT0gdW5kZWZpbmVkICYmICFwcmV2LnNlYWxlZCkge1xuICAgICAgcmV0dXJuIHByZXY7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV07XG5cbiAgICAvKiBzaGFyZCAoY3JlYXRlIGEgbmV3IHRhZykgaWYgdGhlIHRhZyBpcyBleGhhdXN0ZWQgKFNlZSBNQVhfU0laRSkgKi9cbiAgICB0aGlzLmNhcGFjaXR5IC09IDE7XG5cbiAgICBpZiAodGhpcy5jYXBhY2l0eSA9PT0gMCkge1xuICAgICAgdGhpcy5jYXBhY2l0eSA9IE1BWF9TSVpFO1xuICAgICAgdGFnID0gdGhpcy5tYWtlVGFnKHRhZyk7XG4gICAgICB0aGlzLnRhZ3MucHVzaCh0YWcpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnRhZ01hcFtpZF0gPSB0YWc7XG4gIH07XG5cbiAgLyogbWFpbmx5IGZvciBjcmVhdGVHbG9iYWxTdHlsZSB0byBjaGVjayBmb3IgaXRzIGlkICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5oYXNJZCA9IGZ1bmN0aW9uIGhhc0lkKGlkKSB7XG4gICAgcmV0dXJuIHRoaXMudGFnTWFwW2lkXSAhPT0gdW5kZWZpbmVkO1xuICB9O1xuXG4gIC8qIGNhY2hpbmcgbGF5ZXIgY2hlY2tpbmcgaWQrbmFtZSB0byBhbHJlYWR5IGhhdmUgYSBjb3JyZXNwb25kaW5nIHRhZyBhbmQgaW5qZWN0ZWQgcnVsZXMgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmhhc05hbWVGb3JJZCA9IGZ1bmN0aW9uIGhhc05hbWVGb3JJZChpZCwgbmFtZSkge1xuICAgIC8qIGV4Y2VwdGlvbiBmb3IgcmVoeWRyYXRlZCBuYW1lcyB3aGljaCBhcmUgY2hlY2tlZCBzZXBhcmF0ZWx5ICovXG4gICAgaWYgKHRoaXMuaWdub3JlUmVoeWRyYXRlZE5hbWVzW2lkXSA9PT0gdW5kZWZpbmVkICYmIHRoaXMucmVoeWRyYXRlZE5hbWVzW25hbWVdKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgdGFnID0gdGhpcy50YWdNYXBbaWRdO1xuICAgIHJldHVybiB0YWcgIT09IHVuZGVmaW5lZCAmJiB0YWcuaGFzTmFtZUZvcklkKGlkLCBuYW1lKTtcbiAgfTtcblxuICAvKiByZWdpc3RlcnMgYSBjb21wb25lbnRJZCBhbmQgcmVnaXN0ZXJzIGl0IG9uIGl0cyB0YWcgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmRlZmVycmVkSW5qZWN0ID0gZnVuY3Rpb24gZGVmZXJyZWRJbmplY3QoaWQsIGNzc1J1bGVzKSB7XG4gICAgLyogZG9uJ3QgaW5qZWN0IHdoZW4gdGhlIGlkIGlzIGFscmVhZHkgcmVnaXN0ZXJlZCAqL1xuICAgIGlmICh0aGlzLnRhZ01hcFtpZF0gIT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgdmFyIGNsb25lcyA9IHRoaXMuY2xvbmVzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbG9uZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGNsb25lc1tpXS5kZWZlcnJlZEluamVjdChpZCwgY3NzUnVsZXMpO1xuICAgIH1cblxuICAgIHRoaXMuZ2V0VGFnRm9ySWQoaWQpLmluc2VydE1hcmtlcihpZCk7XG4gICAgdGhpcy5kZWZlcnJlZFtpZF0gPSBjc3NSdWxlcztcbiAgfTtcblxuICAvKiBpbmplY3RzIHJ1bGVzIGZvciBhIGdpdmVuIGlkIHdpdGggYSBuYW1lIHRoYXQgd2lsbCBuZWVkIHRvIGJlIGNhY2hlZCAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuaW5qZWN0ID0gZnVuY3Rpb24gaW5qZWN0KGlkLCBjc3NSdWxlcywgbmFtZSkge1xuICAgIHZhciBjbG9uZXMgPSB0aGlzLmNsb25lcztcblxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbG9uZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGNsb25lc1tpXS5pbmplY3QoaWQsIGNzc1J1bGVzLCBuYW1lKTtcbiAgICB9XG5cbiAgICB2YXIgdGFnID0gdGhpcy5nZXRUYWdGb3JJZChpZCk7XG5cbiAgICAvKiBhZGQgZGVmZXJyZWQgcnVsZXMgZm9yIGNvbXBvbmVudCAqL1xuICAgIGlmICh0aGlzLmRlZmVycmVkW2lkXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBDb21iaW5lIHBhc3NlZCBjc3NSdWxlcyB3aXRoIHByZXZpb3VzbHkgZGVmZXJyZWQgQ1NTIHJ1bGVzXG4gICAgICAvLyBOT1RFOiBXZSBjYW5ub3QgbXV0YXRlIHRoZSBkZWZlcnJlZCBhcnJheSBpdHNlbGYgYXMgYWxsIGNsb25lc1xuICAgICAgLy8gZG8gdGhlIHNhbWUgKHNlZSBjbG9uZXNbaV0uaW5qZWN0KVxuICAgICAgdmFyIHJ1bGVzID0gdGhpcy5kZWZlcnJlZFtpZF0uY29uY2F0KGNzc1J1bGVzKTtcbiAgICAgIHRhZy5pbnNlcnRSdWxlcyhpZCwgcnVsZXMsIG5hbWUpO1xuXG4gICAgICB0aGlzLmRlZmVycmVkW2lkXSA9IHVuZGVmaW5lZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGFnLmluc2VydFJ1bGVzKGlkLCBjc3NSdWxlcywgbmFtZSk7XG4gICAgfVxuICB9O1xuXG4gIC8qIHJlbW92ZXMgYWxsIHJ1bGVzIGZvciBhIGdpdmVuIGlkLCB3aGljaCBkb2Vzbid0IHJlbW92ZSBpdHMgbWFya2VyIGJ1dCByZXNldHMgaXQgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZShpZCkge1xuICAgIHZhciB0YWcgPSB0aGlzLnRhZ01hcFtpZF07XG4gICAgaWYgKHRhZyA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICB2YXIgY2xvbmVzID0gdGhpcy5jbG9uZXM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsb25lcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY2xvbmVzW2ldLnJlbW92ZShpZCk7XG4gICAgfVxuXG4gICAgLyogcmVtb3ZlIGFsbCBydWxlcyBmcm9tIHRoZSB0YWcgKi9cbiAgICB0YWcucmVtb3ZlUnVsZXMoaWQpO1xuXG4gICAgLyogaWdub3JlIHBvc3NpYmxlIHJlaHlkcmF0ZWQgbmFtZXMgKi9cbiAgICB0aGlzLmlnbm9yZVJlaHlkcmF0ZWROYW1lc1tpZF0gPSB0cnVlO1xuXG4gICAgLyogZGVsZXRlIHBvc3NpYmxlIGRlZmVycmVkIHJ1bGVzICovXG4gICAgdGhpcy5kZWZlcnJlZFtpZF0gPSB1bmRlZmluZWQ7XG4gIH07XG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUudG9IVE1MID0gZnVuY3Rpb24gdG9IVE1MKCkge1xuICAgIHJldHVybiB0aGlzLnRhZ3MubWFwKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgIHJldHVybiB0YWcudG9IVE1MKCk7XG4gICAgfSkuam9pbignJyk7XG4gIH07XG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUudG9SZWFjdEVsZW1lbnRzID0gZnVuY3Rpb24gdG9SZWFjdEVsZW1lbnRzKCkge1xuICAgIHZhciBpZCA9IHRoaXMuaWQ7XG5cblxuICAgIHJldHVybiB0aGlzLnRhZ3MubWFwKGZ1bmN0aW9uICh0YWcsIGkpIHtcbiAgICAgIHZhciBrZXkgPSAnc2MtJyArIGlkICsgJy0nICsgaTtcbiAgICAgIHJldHVybiBjbG9uZUVsZW1lbnQodGFnLnRvRWxlbWVudCgpLCB7IGtleToga2V5IH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIGNyZWF0ZUNsYXNzKFN0eWxlU2hlZXQsIG51bGwsIFt7XG4gICAga2V5OiAnbWFzdGVyJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCQkMSgpIHtcbiAgICAgIHJldHVybiBtYXN0ZXIgfHwgKG1hc3RlciA9IG5ldyBTdHlsZVNoZWV0KCkucmVoeWRyYXRlKCkpO1xuICAgIH1cblxuICAgIC8qIE5PVEU6IFRoaXMgaXMganVzdCBmb3IgYmFja3dhcmRzLWNvbXBhdGliaWxpdHkgd2l0aCBqZXN0LXN0eWxlZC1jb21wb25lbnRzICovXG5cbiAgfSwge1xuICAgIGtleTogJ2luc3RhbmNlJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCQkMSgpIHtcbiAgICAgIHJldHVybiBTdHlsZVNoZWV0Lm1hc3RlcjtcbiAgICB9XG4gIH1dKTtcbiAgcmV0dXJuIFN0eWxlU2hlZXQ7XG59KCk7XG5cbi8vIFxuXG52YXIgS2V5ZnJhbWVzID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBLZXlmcmFtZXMobmFtZSwgcnVsZXMpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgS2V5ZnJhbWVzKTtcblxuICAgIHRoaXMuaW5qZWN0ID0gZnVuY3Rpb24gKHN0eWxlU2hlZXQpIHtcbiAgICAgIGlmICghc3R5bGVTaGVldC5oYXNOYW1lRm9ySWQoX3RoaXMuaWQsIF90aGlzLm5hbWUpKSB7XG4gICAgICAgIHN0eWxlU2hlZXQuaW5qZWN0KF90aGlzLmlkLCBfdGhpcy5ydWxlcywgX3RoaXMubmFtZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDEyLCBTdHJpbmcoX3RoaXMubmFtZSkpO1xuICAgIH07XG5cbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMucnVsZXMgPSBydWxlcztcblxuICAgIHRoaXMuaWQgPSAnc2Mta2V5ZnJhbWVzLScgKyBuYW1lO1xuICB9XG5cbiAgS2V5ZnJhbWVzLnByb3RvdHlwZS5nZXROYW1lID0gZnVuY3Rpb24gZ2V0TmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5uYW1lO1xuICB9O1xuXG4gIHJldHVybiBLZXlmcmFtZXM7XG59KCk7XG5cbi8vIFxuXG4vKipcbiAqIGlubGluZWQgdmVyc2lvbiBvZlxuICogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2ZianMvYmxvYi9tYXN0ZXIvcGFja2FnZXMvZmJqcy9zcmMvY29yZS9oeXBoZW5hdGVTdHlsZU5hbWUuanNcbiAqL1xuXG52YXIgdXBwZXJjYXNlUGF0dGVybiA9IC8oW0EtWl0pL2c7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xuXG4vKipcbiAqIEh5cGhlbmF0ZXMgYSBjYW1lbGNhc2VkIENTUyBwcm9wZXJ0eSBuYW1lLCBmb3IgZXhhbXBsZTpcbiAqXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdiYWNrZ3JvdW5kQ29sb3InKVxuICogICA8IFwiYmFja2dyb3VuZC1jb2xvclwiXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdNb3pUcmFuc2l0aW9uJylcbiAqICAgPCBcIi1tb3otdHJhbnNpdGlvblwiXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdtc1RyYW5zaXRpb24nKVxuICogICA8IFwiLW1zLXRyYW5zaXRpb25cIlxuICpcbiAqIEFzIE1vZGVybml6ciBzdWdnZXN0cyAoaHR0cDovL21vZGVybml6ci5jb20vZG9jcy8jcHJlZml4ZWQpLCBhbiBgbXNgIHByZWZpeFxuICogaXMgY29udmVydGVkIHRvIGAtbXMtYC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGh5cGhlbmF0ZVN0eWxlTmFtZShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKHVwcGVyY2FzZVBhdHRlcm4sICctJDEnKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UobXNQYXR0ZXJuLCAnLW1zLScpO1xufVxuXG4vLyBcblxuLy8gVGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9iODdhYWJkZmUxYjc0NjFlNzMzMWFiYjM2MDFkOWU2YmIyNzU0NGJjL3BhY2thZ2VzL3JlYWN0LWRvbS9zcmMvc2hhcmVkL2Rhbmdlcm91c1N0eWxlVmFsdWUuanNcbmZ1bmN0aW9uIGFkZFVuaXRJZk5lZWRlZChuYW1lLCB2YWx1ZSkge1xuICAvLyBodHRwczovL2dpdGh1Yi5jb20vYW1pbGFqYWNrL2VzbGludC1wbHVnaW4tZmxvd3R5cGUtZXJyb3JzL2lzc3Vlcy8xMzNcbiAgLy8gJEZsb3dGaXhNZVxuICBpZiAodmFsdWUgPT0gbnVsbCB8fCB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJyB8fCB2YWx1ZSA9PT0gJycpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiB2YWx1ZSAhPT0gMCAmJiAhKG5hbWUgaW4gdW5pdGxlc3MpKSB7XG4gICAgcmV0dXJuIHZhbHVlICsgJ3B4JzsgLy8gUHJlc3VtZXMgaW1wbGljaXQgJ3B4JyBzdWZmaXggZm9yIHVuaXRsZXNzIG51bWJlcnNcbiAgfVxuXG4gIHJldHVybiBTdHJpbmcodmFsdWUpLnRyaW0oKTtcbn1cblxuLy8gXG5cbi8qKlxuICogSXQncyBmYWxzaXNoIG5vdCBmYWxzeSBiZWNhdXNlIDAgaXMgYWxsb3dlZC5cbiAqL1xudmFyIGlzRmFsc2lzaCA9IGZ1bmN0aW9uIGlzRmFsc2lzaChjaHVuaykge1xuICByZXR1cm4gY2h1bmsgPT09IHVuZGVmaW5lZCB8fCBjaHVuayA9PT0gbnVsbCB8fCBjaHVuayA9PT0gZmFsc2UgfHwgY2h1bmsgPT09ICcnO1xufTtcblxudmFyIG9ialRvQ3NzQXJyYXkgPSBmdW5jdGlvbiBvYmpUb0Nzc0FycmF5KG9iaiwgcHJldktleSkge1xuICB2YXIgcnVsZXMgPSBbXTtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuXG4gIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKCFpc0ZhbHNpc2gob2JqW2tleV0pKSB7XG4gICAgICBpZiAoaXNQbGFpbk9iamVjdChvYmpba2V5XSkpIHtcbiAgICAgICAgcnVsZXMucHVzaC5hcHBseShydWxlcywgb2JqVG9Dc3NBcnJheShvYmpba2V5XSwga2V5KSk7XG5cbiAgICAgICAgcmV0dXJuIHJ1bGVzO1xuICAgICAgfSBlbHNlIGlmIChpc0Z1bmN0aW9uKG9ialtrZXldKSkge1xuICAgICAgICBydWxlcy5wdXNoKGh5cGhlbmF0ZVN0eWxlTmFtZShrZXkpICsgJzonLCBvYmpba2V5XSwgJzsnKTtcblxuICAgICAgICByZXR1cm4gcnVsZXM7XG4gICAgICB9XG4gICAgICBydWxlcy5wdXNoKGh5cGhlbmF0ZVN0eWxlTmFtZShrZXkpICsgJzogJyArIGFkZFVuaXRJZk5lZWRlZChrZXksIG9ialtrZXldKSArICc7Jyk7XG4gICAgfVxuICAgIHJldHVybiBydWxlcztcbiAgfSk7XG5cbiAgcmV0dXJuIHByZXZLZXkgPyBbcHJldktleSArICcgeyddLmNvbmNhdChydWxlcywgWyd9J10pIDogcnVsZXM7XG59O1xuXG5mdW5jdGlvbiBmbGF0dGVuKGNodW5rLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGNodW5rKSkge1xuICAgIHZhciBydWxlU2V0ID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gY2h1bmsubGVuZ3RoLCByZXN1bHQ7IGkgPCBsZW47IGkgKz0gMSkge1xuICAgICAgcmVzdWx0ID0gZmxhdHRlbihjaHVua1tpXSwgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCk7XG5cbiAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGNvbnRpbnVlO2Vsc2UgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkgcnVsZVNldC5wdXNoLmFwcGx5KHJ1bGVTZXQsIHJlc3VsdCk7ZWxzZSBydWxlU2V0LnB1c2gocmVzdWx0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcnVsZVNldDtcbiAgfVxuXG4gIGlmIChpc0ZhbHNpc2goY2h1bmspKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvKiBIYW5kbGUgb3RoZXIgY29tcG9uZW50cyAqL1xuICBpZiAoaXNTdHlsZWRDb21wb25lbnQoY2h1bmspKSB7XG4gICAgcmV0dXJuICcuJyArIGNodW5rLnN0eWxlZENvbXBvbmVudElkO1xuICB9XG5cbiAgLyogRWl0aGVyIGV4ZWN1dGUgb3IgZGVmZXIgdGhlIGZ1bmN0aW9uICovXG4gIGlmIChpc0Z1bmN0aW9uKGNodW5rKSkge1xuICAgIGlmIChpc1N0YXRlbGVzc0Z1bmN0aW9uKGNodW5rKSAmJiBleGVjdXRpb25Db250ZXh0KSB7XG4gICAgICB2YXIgX3Jlc3VsdCA9IGNodW5rKGV4ZWN1dGlvbkNvbnRleHQpO1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBpc0VsZW1lbnQoX3Jlc3VsdCkpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgY29uc29sZS53YXJuKGdldENvbXBvbmVudE5hbWUoY2h1bmspICsgJyBpcyBub3QgYSBzdHlsZWQgY29tcG9uZW50IGFuZCBjYW5ub3QgYmUgcmVmZXJyZWQgdG8gdmlhIGNvbXBvbmVudCBzZWxlY3Rvci4gU2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FkdmFuY2VkI3JlZmVycmluZy10by1vdGhlci1jb21wb25lbnRzIGZvciBtb3JlIGRldGFpbHMuJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmbGF0dGVuKF9yZXN1bHQsIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuICAgIH0gZWxzZSByZXR1cm4gY2h1bms7XG4gIH1cblxuICBpZiAoY2h1bmsgaW5zdGFuY2VvZiBLZXlmcmFtZXMpIHtcbiAgICBpZiAoc3R5bGVTaGVldCkge1xuICAgICAgY2h1bmsuaW5qZWN0KHN0eWxlU2hlZXQpO1xuICAgICAgcmV0dXJuIGNodW5rLmdldE5hbWUoKTtcbiAgICB9IGVsc2UgcmV0dXJuIGNodW5rO1xuICB9XG5cbiAgLyogSGFuZGxlIG9iamVjdHMgKi9cbiAgcmV0dXJuIGlzUGxhaW5PYmplY3QoY2h1bmspID8gb2JqVG9Dc3NBcnJheShjaHVuaykgOiBjaHVuay50b1N0cmluZygpO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gY3NzKHN0eWxlcykge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgaW50ZXJwb2xhdGlvbnMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGlzRnVuY3Rpb24oc3R5bGVzKSB8fCBpc1BsYWluT2JqZWN0KHN0eWxlcykpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgcmV0dXJuIGZsYXR0ZW4oaW50ZXJsZWF2ZShFTVBUWV9BUlJBWSwgW3N0eWxlc10uY29uY2F0KGludGVycG9sYXRpb25zKSkpO1xuICB9XG5cbiAgLy8gJEZsb3dGaXhNZVxuICByZXR1cm4gZmxhdHRlbihpbnRlcmxlYXZlKHN0eWxlcywgaW50ZXJwb2xhdGlvbnMpKTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGNvbnN0cnVjdFdpdGhPcHRpb25zKGNvbXBvbmVudENvbnN0cnVjdG9yLCB0YWcpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IEVNUFRZX09CSkVDVDtcblxuICBpZiAoIWlzVmFsaWRFbGVtZW50VHlwZSh0YWcpKSB7XG4gICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigxLCBTdHJpbmcodGFnKSk7XG4gIH1cblxuICAvKiBUaGlzIGlzIGNhbGxhYmxlIGRpcmVjdGx5IGFzIGEgdGVtcGxhdGUgZnVuY3Rpb24gKi9cbiAgLy8gJEZsb3dGaXhNZTogTm90IHR5cGVkIHRvIGF2b2lkIGRlc3RydWN0dXJpbmcgYXJndW1lbnRzXG4gIHZhciB0ZW1wbGF0ZUZ1bmN0aW9uID0gZnVuY3Rpb24gdGVtcGxhdGVGdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29tcG9uZW50Q29uc3RydWN0b3IodGFnLCBvcHRpb25zLCBjc3MuYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpKTtcbiAgfTtcblxuICAvKiBJZiBjb25maWcgbWV0aG9kcyBhcmUgY2FsbGVkLCB3cmFwIHVwIGEgbmV3IHRlbXBsYXRlIGZ1bmN0aW9uIGFuZCBtZXJnZSBvcHRpb25zICovXG4gIHRlbXBsYXRlRnVuY3Rpb24ud2l0aENvbmZpZyA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICByZXR1cm4gY29uc3RydWN0V2l0aE9wdGlvbnMoY29tcG9uZW50Q29uc3RydWN0b3IsIHRhZywgX2V4dGVuZHMoe30sIG9wdGlvbnMsIGNvbmZpZykpO1xuICB9O1xuXG4gIC8qIE1vZGlmeS9pbmplY3QgbmV3IHByb3BzIGF0IHJ1bnRpbWUgKi9cbiAgdGVtcGxhdGVGdW5jdGlvbi5hdHRycyA9IGZ1bmN0aW9uIChhdHRycykge1xuICAgIHJldHVybiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjb21wb25lbnRDb25zdHJ1Y3RvciwgdGFnLCBfZXh0ZW5kcyh7fSwgb3B0aW9ucywge1xuICAgICAgYXR0cnM6IEFycmF5LnByb3RvdHlwZS5jb25jYXQob3B0aW9ucy5hdHRycywgYXR0cnMpLmZpbHRlcihCb29sZWFuKVxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gdGVtcGxhdGVGdW5jdGlvbjtcbn1cblxuLy8gXG4vLyBTb3VyY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9nYXJ5Y291cnQvbXVybXVyaGFzaC1qcy9ibG9iL21hc3Rlci9tdXJtdXJoYXNoMl9nYy5qc1xuZnVuY3Rpb24gbXVybXVyaGFzaChjKSB7XG4gIGZvciAodmFyIGUgPSBjLmxlbmd0aCB8IDAsIGEgPSBlIHwgMCwgZCA9IDAsIGI7IGUgPj0gNDspIHtcbiAgICBiID0gYy5jaGFyQ29kZUF0KGQpICYgMjU1IHwgKGMuY2hhckNvZGVBdCgrK2QpICYgMjU1KSA8PCA4IHwgKGMuY2hhckNvZGVBdCgrK2QpICYgMjU1KSA8PCAxNiB8IChjLmNoYXJDb2RlQXQoKytkKSAmIDI1NSkgPDwgMjQsIGIgPSAxNTQwNDgzNDc3ICogKGIgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYiA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KSwgYiBePSBiID4+PiAyNCwgYiA9IDE1NDA0ODM0NzcgKiAoYiAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChiID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpLCBhID0gMTU0MDQ4MzQ3NyAqIChhICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGEgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNikgXiBiLCBlIC09IDQsICsrZDtcbiAgfVxuICBzd2l0Y2ggKGUpIHtcbiAgICBjYXNlIDM6XG4gICAgICBhIF49IChjLmNoYXJDb2RlQXQoZCArIDIpICYgMjU1KSA8PCAxNjtcbiAgICBjYXNlIDI6XG4gICAgICBhIF49IChjLmNoYXJDb2RlQXQoZCArIDEpICYgMjU1KSA8PCA4O1xuICAgIGNhc2UgMTpcbiAgICAgIGEgXj0gYy5jaGFyQ29kZUF0KGQpICYgMjU1LCBhID0gMTU0MDQ4MzQ3NyAqIChhICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGEgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNik7XG4gIH1cbiAgYSBePSBhID4+PiAxMztcbiAgYSA9IDE1NDA0ODM0NzcgKiAoYSAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChhID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpO1xuICByZXR1cm4gKGEgXiBhID4+PiAxNSkgPj4+IDA7XG59XG5cbi8vIFxuLyogZXNsaW50LWRpc2FibGUgbm8tYml0d2lzZSAqL1xuXG4vKiBUaGlzIGlzIHRoZSBcImNhcGFjaXR5XCIgb2Ygb3VyIGFscGhhYmV0IGkuZS4gMngyNiBmb3IgYWxsIGxldHRlcnMgcGx1cyB0aGVpciBjYXBpdGFsaXNlZFxuICogY291bnRlcnBhcnRzICovXG52YXIgY2hhcnNMZW5ndGggPSA1MjtcblxuLyogc3RhcnQgYXQgNzUgZm9yICdhJyB1bnRpbCAneicgKDI1KSBhbmQgdGhlbiBzdGFydCBhdCA2NSBmb3IgY2FwaXRhbGlzZWQgbGV0dGVycyAqL1xudmFyIGdldEFscGhhYmV0aWNDaGFyID0gZnVuY3Rpb24gZ2V0QWxwaGFiZXRpY0NoYXIoY29kZSkge1xuICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlICsgKGNvZGUgPiAyNSA/IDM5IDogOTcpKTtcbn07XG5cbi8qIGlucHV0IGEgbnVtYmVyLCB1c3VhbGx5IGEgaGFzaCBhbmQgY29udmVydCBpdCB0byBiYXNlLTUyICovXG5mdW5jdGlvbiBnZW5lcmF0ZUFscGhhYmV0aWNOYW1lKGNvZGUpIHtcbiAgdmFyIG5hbWUgPSAnJztcbiAgdmFyIHggPSB2b2lkIDA7XG5cbiAgLyogZ2V0IGEgY2hhciBhbmQgZGl2aWRlIGJ5IGFscGhhYmV0LWxlbmd0aCAqL1xuICBmb3IgKHggPSBjb2RlOyB4ID4gY2hhcnNMZW5ndGg7IHggPSBNYXRoLmZsb29yKHggLyBjaGFyc0xlbmd0aCkpIHtcbiAgICBuYW1lID0gZ2V0QWxwaGFiZXRpY0NoYXIoeCAlIGNoYXJzTGVuZ3RoKSArIG5hbWU7XG4gIH1cblxuICByZXR1cm4gZ2V0QWxwaGFiZXRpY0NoYXIoeCAlIGNoYXJzTGVuZ3RoKSArIG5hbWU7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBoYXNGdW5jdGlvbk9iamVjdEtleShvYmopIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pbiwgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChpc0Z1bmN0aW9uKG9ialtrZXldKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBpc1N0YXRpY1J1bGVzKHJ1bGVzLCBhdHRycykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdmFyIHJ1bGUgPSBydWxlc1tpXTtcblxuICAgIC8vIHJlY3Vyc2l2ZSBjYXNlXG4gICAgaWYgKEFycmF5LmlzQXJyYXkocnVsZSkgJiYgIWlzU3RhdGljUnVsZXMocnVsZSwgYXR0cnMpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIGlmIChpc0Z1bmN0aW9uKHJ1bGUpICYmICFpc1N0eWxlZENvbXBvbmVudChydWxlKSkge1xuICAgICAgLy8gZnVuY3Rpb25zIGFyZSBhbGxvd2VkIHRvIGJlIHN0YXRpYyBpZiB0aGV5J3JlIGp1c3QgYmVpbmdcbiAgICAgIC8vIHVzZWQgdG8gZ2V0IHRoZSBjbGFzc25hbWUgb2YgYSBuZXN0ZWQgc3R5bGVkIGNvbXBvbmVudFxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChhdHRycy5zb21lKGZ1bmN0aW9uICh4KSB7XG4gICAgcmV0dXJuIGlzRnVuY3Rpb24oeCkgfHwgaGFzRnVuY3Rpb25PYmplY3RLZXkoeCk7XG4gIH0pKSByZXR1cm4gZmFsc2U7XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8vIFxuXG52YXIgaXNITVJFbmFibGVkID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuaG90O1xuXG4vKiBjb21iaW5lcyBoYXNoU3RyIChtdXJtdXJoYXNoKSBhbmQgbmFtZUdlbmVyYXRvciBmb3IgY29udmVuaWVuY2UgKi9cbnZhciBoYXNoZXIgPSBmdW5jdGlvbiBoYXNoZXIoc3RyKSB7XG4gIHJldHVybiBnZW5lcmF0ZUFscGhhYmV0aWNOYW1lKG11cm11cmhhc2goc3RyKSk7XG59O1xuXG4vKlxuIENvbXBvbmVudFN0eWxlIGlzIGFsbCB0aGUgQ1NTLXNwZWNpZmljIHN0dWZmLCBub3RcbiB0aGUgUmVhY3Qtc3BlY2lmaWMgc3R1ZmYuXG4gKi9cblxudmFyIENvbXBvbmVudFN0eWxlID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBDb21wb25lbnRTdHlsZShydWxlcywgYXR0cnMsIGNvbXBvbmVudElkKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29tcG9uZW50U3R5bGUpO1xuXG4gICAgdGhpcy5ydWxlcyA9IHJ1bGVzO1xuICAgIHRoaXMuaXNTdGF0aWMgPSAhaXNITVJFbmFibGVkICYmIGlzU3RhdGljUnVsZXMocnVsZXMsIGF0dHJzKTtcbiAgICB0aGlzLmNvbXBvbmVudElkID0gY29tcG9uZW50SWQ7XG5cbiAgICBpZiAoIVN0eWxlU2hlZXQubWFzdGVyLmhhc0lkKGNvbXBvbmVudElkKSkge1xuICAgICAgU3R5bGVTaGVldC5tYXN0ZXIuZGVmZXJyZWRJbmplY3QoY29tcG9uZW50SWQsIFtdKTtcbiAgICB9XG4gIH1cblxuICAvKlxuICAgICAqIEZsYXR0ZW5zIGEgcnVsZSBzZXQgaW50byB2YWxpZCBDU1NcbiAgICAgKiBIYXNoZXMgaXQsIHdyYXBzIHRoZSB3aG9sZSBjaHVuayBpbiBhIC5oYXNoMTIzNCB7fVxuICAgICAqIFJldHVybnMgdGhlIGhhc2ggdG8gYmUgaW5qZWN0ZWQgb24gcmVuZGVyKClcbiAgICAgKiAqL1xuXG5cbiAgQ29tcG9uZW50U3R5bGUucHJvdG90eXBlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzID0gZnVuY3Rpb24gZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCkge1xuICAgIHZhciBpc1N0YXRpYyA9IHRoaXMuaXNTdGF0aWMsXG4gICAgICAgIGNvbXBvbmVudElkID0gdGhpcy5jb21wb25lbnRJZCxcbiAgICAgICAgbGFzdENsYXNzTmFtZSA9IHRoaXMubGFzdENsYXNzTmFtZTtcblxuICAgIGlmIChJU19CUk9XU0VSICYmIGlzU3RhdGljICYmIHR5cGVvZiBsYXN0Q2xhc3NOYW1lID09PSAnc3RyaW5nJyAmJiBzdHlsZVNoZWV0Lmhhc05hbWVGb3JJZChjb21wb25lbnRJZCwgbGFzdENsYXNzTmFtZSkpIHtcbiAgICAgIHJldHVybiBsYXN0Q2xhc3NOYW1lO1xuICAgIH1cblxuICAgIHZhciBmbGF0Q1NTID0gZmxhdHRlbih0aGlzLnJ1bGVzLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICB2YXIgbmFtZSA9IGhhc2hlcih0aGlzLmNvbXBvbmVudElkICsgZmxhdENTUy5qb2luKCcnKSk7XG4gICAgaWYgKCFzdHlsZVNoZWV0Lmhhc05hbWVGb3JJZChjb21wb25lbnRJZCwgbmFtZSkpIHtcbiAgICAgIHN0eWxlU2hlZXQuaW5qZWN0KHRoaXMuY29tcG9uZW50SWQsIHN0cmluZ2lmeVJ1bGVzKGZsYXRDU1MsICcuJyArIG5hbWUsIHVuZGVmaW5lZCwgY29tcG9uZW50SWQpLCBuYW1lKTtcbiAgICB9XG5cbiAgICB0aGlzLmxhc3RDbGFzc05hbWUgPSBuYW1lO1xuICAgIHJldHVybiBuYW1lO1xuICB9O1xuXG4gIENvbXBvbmVudFN0eWxlLmdlbmVyYXRlTmFtZSA9IGZ1bmN0aW9uIGdlbmVyYXRlTmFtZShzdHIpIHtcbiAgICByZXR1cm4gaGFzaGVyKHN0cik7XG4gIH07XG5cbiAgcmV0dXJuIENvbXBvbmVudFN0eWxlO1xufSgpO1xuXG4vLyBcblxudmFyIExJTUlUID0gMjAwO1xuXG52YXIgY3JlYXRlV2FyblRvb01hbnlDbGFzc2VzID0gKGZ1bmN0aW9uIChkaXNwbGF5TmFtZSkge1xuICB2YXIgZ2VuZXJhdGVkQ2xhc3NlcyA9IHt9O1xuICB2YXIgd2FybmluZ1NlZW4gPSBmYWxzZTtcblxuICByZXR1cm4gZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGlmICghd2FybmluZ1NlZW4pIHtcbiAgICAgIGdlbmVyYXRlZENsYXNzZXNbY2xhc3NOYW1lXSA9IHRydWU7XG4gICAgICBpZiAoT2JqZWN0LmtleXMoZ2VuZXJhdGVkQ2xhc3NlcykubGVuZ3RoID49IExJTUlUKSB7XG4gICAgICAgIC8vIFVuYWJsZSB0byBmaW5kIGxhdGVzdFJ1bGUgaW4gdGVzdCBlbnZpcm9ubWVudC5cbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSwgcHJlZmVyLXRlbXBsYXRlICovXG4gICAgICAgIGNvbnNvbGUud2FybignT3ZlciAnICsgTElNSVQgKyAnIGNsYXNzZXMgd2VyZSBnZW5lcmF0ZWQgZm9yIGNvbXBvbmVudCAnICsgZGlzcGxheU5hbWUgKyAnLiBcXG4nICsgJ0NvbnNpZGVyIHVzaW5nIHRoZSBhdHRycyBtZXRob2QsIHRvZ2V0aGVyIHdpdGggYSBzdHlsZSBvYmplY3QgZm9yIGZyZXF1ZW50bHkgY2hhbmdlZCBzdHlsZXMuXFxuJyArICdFeGFtcGxlOlxcbicgKyAnICBjb25zdCBDb21wb25lbnQgPSBzdHlsZWQuZGl2LmF0dHJzKHtcXG4nICsgJyAgICBzdHlsZTogKHsgYmFja2dyb3VuZCB9KSA9PiAoe1xcbicgKyAnICAgICAgYmFja2dyb3VuZCxcXG4nICsgJyAgICB9KSxcXG4nICsgJyAgfSlgd2lkdGg6IDEwMCU7YFxcblxcbicgKyAnICA8Q29tcG9uZW50IC8+Jyk7XG4gICAgICAgIHdhcm5pbmdTZWVuID0gdHJ1ZTtcbiAgICAgICAgZ2VuZXJhdGVkQ2xhc3NlcyA9IHt9O1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn0pO1xuXG4vLyBcblxudmFyIGRldGVybWluZVRoZW1lID0gKGZ1bmN0aW9uIChwcm9wcywgZmFsbGJhY2tUaGVtZSkge1xuICB2YXIgZGVmYXVsdFByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBFTVBUWV9PQkpFQ1Q7XG5cbiAgLy8gUHJvcHMgc2hvdWxkIHRha2UgcHJlY2VkZW5jZSBvdmVyIFRoZW1lUHJvdmlkZXIsIHdoaWNoIHNob3VsZCB0YWtlIHByZWNlZGVuY2Ugb3ZlclxuICAvLyBkZWZhdWx0UHJvcHMsIGJ1dCBSZWFjdCBhdXRvbWF0aWNhbGx5IHB1dHMgZGVmYXVsdFByb3BzIG9uIHByb3BzLlxuXG4gIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0L3Byb3AtdHlwZXMsIGZsb3d0eXBlLWVycm9ycy9zaG93LWVycm9ycyAqL1xuICB2YXIgaXNEZWZhdWx0VGhlbWUgPSBkZWZhdWx0UHJvcHMgPyBwcm9wcy50aGVtZSA9PT0gZGVmYXVsdFByb3BzLnRoZW1lIDogZmFsc2U7XG4gIHZhciB0aGVtZSA9IHByb3BzLnRoZW1lICYmICFpc0RlZmF1bHRUaGVtZSA/IHByb3BzLnRoZW1lIDogZmFsbGJhY2tUaGVtZSB8fCBkZWZhdWx0UHJvcHMudGhlbWU7XG4gIC8qIGVzbGludC1lbmFibGUgKi9cblxuICByZXR1cm4gdGhlbWU7XG59KTtcblxuLy8gXG52YXIgZXNjYXBlUmVnZXggPSAvW1tcXF0uIyokPjwrfj18XjooKSxcIidgLV0rL2c7XG52YXIgZGFzaGVzQXRFbmRzID0gLyheLXwtJCkvZztcblxuLyoqXG4gKiBUT0RPOiBFeHBsb3JlIHVzaW5nIENTUy5lc2NhcGUgd2hlbiBpdCBiZWNvbWVzIG1vcmUgYXZhaWxhYmxlXG4gKiBpbiBldmVyZ3JlZW4gYnJvd3NlcnMuXG4gKi9cbmZ1bmN0aW9uIGVzY2FwZShzdHIpIHtcbiAgcmV0dXJuIHN0clxuICAvLyBSZXBsYWNlIGFsbCBwb3NzaWJsZSBDU1Mgc2VsZWN0b3JzXG4gIC5yZXBsYWNlKGVzY2FwZVJlZ2V4LCAnLScpXG5cbiAgLy8gUmVtb3ZlIGV4dHJhbmVvdXMgaHlwaGVucyBhdCB0aGUgc3RhcnQgYW5kIGVuZFxuICAucmVwbGFjZShkYXNoZXNBdEVuZHMsICcnKTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGlzVGFnKHRhcmdldCkge1xuICByZXR1cm4gdHlwZW9mIHRhcmdldCA9PT0gJ3N0cmluZycgJiYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB0YXJnZXQuY2hhckF0KDApID09PSB0YXJnZXQuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgOiB0cnVlKTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGdlbmVyYXRlRGlzcGxheU5hbWUodGFyZ2V0KSB7XG4gIC8vICRGbG93Rml4TWVcbiAgcmV0dXJuIGlzVGFnKHRhcmdldCkgPyAnc3R5bGVkLicgKyB0YXJnZXQgOiAnU3R5bGVkKCcgKyBnZXRDb21wb25lbnROYW1lKHRhcmdldCkgKyAnKSc7XG59XG5cbnZhciBfVFlQRV9TVEFUSUNTO1xuXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG5cbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG5cbnZhciBUWVBFX1NUQVRJQ1MgPSAoX1RZUEVfU1RBVElDUyA9IHt9LCBfVFlQRV9TVEFUSUNTW0ZvcndhcmRSZWZdID0ge1xuICAkJHR5cGVvZjogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlXG59LCBfVFlQRV9TVEFUSUNTKTtcblxudmFyIGRlZmluZVByb3BlcnR5JDEgPSBPYmplY3QuZGVmaW5lUHJvcGVydHksXG4gICAgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLFxuICAgIF9PYmplY3QkZ2V0T3duUHJvcGVydCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsXG4gICAgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gX09iamVjdCRnZXRPd25Qcm9wZXJ0ID09PSB1bmRlZmluZWQgPyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBbXTtcbn0gOiBfT2JqZWN0JGdldE93blByb3BlcnQsXG4gICAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgICBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZixcbiAgICBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xudmFyIGFycmF5UHJvdG90eXBlID0gQXJyYXkucHJvdG90eXBlO1xuXG5cbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcblxuICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBhcnJheVByb3RvdHlwZS5jb25jYXQoZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpLFxuICAgIC8vICRGbG93Rml4TWVcbiAgICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IFRZUEVfU1RBVElDU1t0YXJnZXRDb21wb25lbnQuJCR0eXBlb2ZdIHx8IFJFQUNUX1NUQVRJQ1M7XG5cbiAgICB2YXIgc291cmNlU3RhdGljcyA9IFRZUEVfU1RBVElDU1tzb3VyY2VDb21wb25lbnQuJCR0eXBlb2ZdIHx8IFJFQUNUX1NUQVRJQ1M7XG5cbiAgICB2YXIgaSA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBkZXNjcmlwdG9yID0gdm9pZCAwO1xuICAgIHZhciBrZXkgPSB2b2lkIDA7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGx1c3BsdXNcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoXG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAhS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJlxuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgaWYgKGRlc2NyaXB0b3IpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkkMSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgLyogZmFpbCBzaWxlbnRseSAqL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG4vLyBcbmZ1bmN0aW9uIGlzRGVyaXZlZFJlYWN0Q29tcG9uZW50KGZuKSB7XG4gIHJldHVybiAhIShmbiAmJiBmbi5wcm90b3R5cGUgJiYgZm4ucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQpO1xufVxuXG4vLyBcbi8vIEhlbHBlciB0byBjYWxsIGEgZ2l2ZW4gZnVuY3Rpb24sIG9ubHkgb25jZVxudmFyIG9uY2UgPSAoZnVuY3Rpb24gKGNiKSB7XG4gIHZhciBjYWxsZWQgPSBmYWxzZTtcblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGlmICghY2FsbGVkKSB7XG4gICAgICBjYWxsZWQgPSB0cnVlO1xuICAgICAgY2IuYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfTtcbn0pO1xuXG4vLyBcblxudmFyIFRoZW1lQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcblxudmFyIFRoZW1lQ29uc3VtZXIgPSBUaGVtZUNvbnRleHQuQ29uc3VtZXI7XG5cbi8qKlxuICogUHJvdmlkZSBhIHRoZW1lIHRvIGFuIGVudGlyZSByZWFjdCBjb21wb25lbnQgdHJlZSB2aWEgY29udGV4dFxuICovXG5cbnZhciBUaGVtZVByb3ZpZGVyID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgaW5oZXJpdHMoVGhlbWVQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVGhlbWVQcm92aWRlcihwcm9wcykge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFRoZW1lUHJvdmlkZXIpO1xuXG4gICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgIF90aGlzLmdldENvbnRleHQgPSBtZW1vaXplKF90aGlzLmdldENvbnRleHQuYmluZChfdGhpcykpO1xuICAgIF90aGlzLnJlbmRlcklubmVyID0gX3RoaXMucmVuZGVySW5uZXIuYmluZChfdGhpcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgVGhlbWVQcm92aWRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIGlmICghdGhpcy5wcm9wcy5jaGlsZHJlbikgcmV0dXJuIG51bGw7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFRoZW1lQ29udGV4dC5Db25zdW1lcixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLnJlbmRlcklubmVyXG4gICAgKTtcbiAgfTtcblxuICBUaGVtZVByb3ZpZGVyLnByb3RvdHlwZS5yZW5kZXJJbm5lciA9IGZ1bmN0aW9uIHJlbmRlcklubmVyKG91dGVyVGhlbWUpIHtcbiAgICB2YXIgY29udGV4dCA9IHRoaXMuZ2V0Q29udGV4dCh0aGlzLnByb3BzLnRoZW1lLCBvdXRlclRoZW1lKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgVGhlbWVDb250ZXh0LlByb3ZpZGVyLFxuICAgICAgeyB2YWx1ZTogY29udGV4dCB9LFxuICAgICAgUmVhY3QuQ2hpbGRyZW4ub25seSh0aGlzLnByb3BzLmNoaWxkcmVuKVxuICAgICk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgdGhlbWUgZnJvbSB0aGUgcHJvcHMsIHN1cHBvcnRpbmcgYm90aCAob3V0ZXJUaGVtZSkgPT4ge31cbiAgICogYXMgd2VsbCBhcyBvYmplY3Qgbm90YXRpb25cbiAgICovXG5cblxuICBUaGVtZVByb3ZpZGVyLnByb3RvdHlwZS5nZXRUaGVtZSA9IGZ1bmN0aW9uIGdldFRoZW1lKHRoZW1lLCBvdXRlclRoZW1lKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24odGhlbWUpKSB7XG4gICAgICB2YXIgbWVyZ2VkVGhlbWUgPSB0aGVtZShvdXRlclRoZW1lKTtcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgKG1lcmdlZFRoZW1lID09PSBudWxsIHx8IEFycmF5LmlzQXJyYXkobWVyZ2VkVGhlbWUpIHx8ICh0eXBlb2YgbWVyZ2VkVGhlbWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKG1lcmdlZFRoZW1lKSkgIT09ICdvYmplY3QnKSkge1xuICAgICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDcpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbWVyZ2VkVGhlbWU7XG4gICAgfVxuXG4gICAgaWYgKHRoZW1lID09PSBudWxsIHx8IEFycmF5LmlzQXJyYXkodGhlbWUpIHx8ICh0eXBlb2YgdGhlbWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHRoZW1lKSkgIT09ICdvYmplY3QnKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDgpO1xuICAgIH1cblxuICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgb3V0ZXJUaGVtZSwgdGhlbWUpO1xuICB9O1xuXG4gIFRoZW1lUHJvdmlkZXIucHJvdG90eXBlLmdldENvbnRleHQgPSBmdW5jdGlvbiBnZXRDb250ZXh0KHRoZW1lLCBvdXRlclRoZW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VGhlbWUodGhlbWUsIG91dGVyVGhlbWUpO1xuICB9O1xuXG4gIHJldHVybiBUaGVtZVByb3ZpZGVyO1xufShDb21wb25lbnQpO1xuXG4vLyBcblxudmFyIENMT1NJTkdfVEFHX1IgPSAvXlxccyo8XFwvW2Etel0vaTtcblxudmFyIFNlcnZlclN0eWxlU2hlZXQgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNlcnZlclN0eWxlU2hlZXQoKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU2VydmVyU3R5bGVTaGVldCk7XG5cbiAgICAvKiBUaGUgbWFzdGVyIHNoZWV0IG1pZ2h0IGJlIHJlc2V0LCBzbyBrZWVwIGEgcmVmZXJlbmNlIGhlcmUgKi9cbiAgICB0aGlzLm1hc3RlclNoZWV0ID0gU3R5bGVTaGVldC5tYXN0ZXI7XG4gICAgdGhpcy5pbnN0YW5jZSA9IHRoaXMubWFzdGVyU2hlZXQuY2xvbmUoKTtcbiAgICB0aGlzLnNlYWxlZCA9IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIE1hcmsgdGhlIFNlcnZlclN0eWxlU2hlZXQgYXMgYmVpbmcgZnVsbHkgZW1pdHRlZCBhbmQgbWFudWFsbHkgR0MgaXQgZnJvbSB0aGVcbiAgICogU3R5bGVTaGVldCBzaW5nbGV0b24uXG4gICAqL1xuXG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuc2VhbCA9IGZ1bmN0aW9uIHNlYWwoKSB7XG4gICAgaWYgKCF0aGlzLnNlYWxlZCkge1xuICAgICAgLyogUmVtb3ZlIHNlYWxlZCBTdHlsZVNoZWV0cyBmcm9tIHRoZSBtYXN0ZXIgc2hlZXQgKi9cbiAgICAgIHZhciBpbmRleCA9IHRoaXMubWFzdGVyU2hlZXQuY2xvbmVzLmluZGV4T2YodGhpcy5pbnN0YW5jZSk7XG4gICAgICB0aGlzLm1hc3RlclNoZWV0LmNsb25lcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdGhpcy5zZWFsZWQgPSB0cnVlO1xuICAgIH1cbiAgfTtcblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5jb2xsZWN0U3R5bGVzID0gZnVuY3Rpb24gY29sbGVjdFN0eWxlcyhjaGlsZHJlbikge1xuICAgIGlmICh0aGlzLnNlYWxlZCkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigyKTtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFN0eWxlU2hlZXRNYW5hZ2VyLFxuICAgICAgeyBzaGVldDogdGhpcy5pbnN0YW5jZSB9LFxuICAgICAgY2hpbGRyZW5cbiAgICApO1xuICB9O1xuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLmdldFN0eWxlVGFncyA9IGZ1bmN0aW9uIGdldFN0eWxlVGFncygpIHtcbiAgICB0aGlzLnNlYWwoKTtcbiAgICByZXR1cm4gdGhpcy5pbnN0YW5jZS50b0hUTUwoKTtcbiAgfTtcblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5nZXRTdHlsZUVsZW1lbnQgPSBmdW5jdGlvbiBnZXRTdHlsZUVsZW1lbnQoKSB7XG4gICAgdGhpcy5zZWFsKCk7XG4gICAgcmV0dXJuIHRoaXMuaW5zdGFuY2UudG9SZWFjdEVsZW1lbnRzKCk7XG4gIH07XG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuaW50ZXJsZWF2ZVdpdGhOb2RlU3RyZWFtID0gZnVuY3Rpb24gaW50ZXJsZWF2ZVdpdGhOb2RlU3RyZWFtKHJlYWRhYmxlU3RyZWFtKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMyk7XG4gICAgfVxuXG4gICAgLyogdGhlIHRhZyBpbmRleCBrZWVwcyB0cmFjayBvZiB3aGljaCB0YWdzIGhhdmUgYWxyZWFkeSBiZWVuIGVtaXR0ZWQgKi9cbiAgICB2YXIgaW5zdGFuY2UgPSB0aGlzLmluc3RhbmNlO1xuXG4gICAgdmFyIGluc3RhbmNlVGFnSW5kZXggPSAwO1xuXG4gICAgdmFyIHN0cmVhbUF0dHIgPSBTQ19TVFJFQU1fQVRUUiArICc9XCJ0cnVlXCInO1xuXG4gICAgdmFyIHRyYW5zZm9ybWVyID0gbmV3IHN0cmVhbS5UcmFuc2Zvcm0oe1xuICAgICAgdHJhbnNmb3JtOiBmdW5jdGlvbiBhcHBlbmRTdHlsZUNodW5rcyhjaHVuaywgLyogZW5jb2RpbmcgKi9fLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgdGFncyA9IGluc3RhbmNlLnRhZ3M7XG5cbiAgICAgICAgdmFyIGh0bWwgPSAnJztcblxuICAgICAgICAvKiByZXRyaWV2ZSBodG1sIGZvciBlYWNoIG5ldyBzdHlsZSB0YWcgKi9cbiAgICAgICAgZm9yICg7IGluc3RhbmNlVGFnSW5kZXggPCB0YWdzLmxlbmd0aDsgaW5zdGFuY2VUYWdJbmRleCArPSAxKSB7XG4gICAgICAgICAgdmFyIHRhZyA9IHRhZ3NbaW5zdGFuY2VUYWdJbmRleF07XG4gICAgICAgICAgaHRtbCArPSB0YWcudG9IVE1MKHN0cmVhbUF0dHIpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogZm9yY2Ugb3VyIFN0eWxlU2hlZXRzIHRvIGVtaXQgZW50aXJlbHkgbmV3IHRhZ3MgKi9cbiAgICAgICAgaW5zdGFuY2Uuc2VhbEFsbFRhZ3MoKTtcblxuICAgICAgICB2YXIgcmVuZGVyZWRIdG1sID0gY2h1bmsudG9TdHJpbmcoKTtcblxuICAgICAgICAvKiBwcmVwZW5kIHN0eWxlIGh0bWwgdG8gY2h1bmssIHVubGVzcyB0aGUgc3RhcnQgb2YgdGhlIGNodW5rIGlzIGEgY2xvc2luZyB0YWcgaW4gd2hpY2ggY2FzZSBhcHBlbmQgcmlnaHQgYWZ0ZXIgdGhhdCAqL1xuICAgICAgICBpZiAoQ0xPU0lOR19UQUdfUi50ZXN0KHJlbmRlcmVkSHRtbCkpIHtcbiAgICAgICAgICB2YXIgZW5kT2ZDbG9zaW5nVGFnID0gcmVuZGVyZWRIdG1sLmluZGV4T2YoJz4nKTtcblxuICAgICAgICAgIHRoaXMucHVzaChyZW5kZXJlZEh0bWwuc2xpY2UoMCwgZW5kT2ZDbG9zaW5nVGFnICsgMSkgKyBodG1sICsgcmVuZGVyZWRIdG1sLnNsaWNlKGVuZE9mQ2xvc2luZ1RhZyArIDEpKTtcbiAgICAgICAgfSBlbHNlIHRoaXMucHVzaChodG1sICsgcmVuZGVyZWRIdG1sKTtcblxuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmVhZGFibGVTdHJlYW0ub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfdGhpcy5zZWFsKCk7XG4gICAgfSk7XG5cbiAgICByZWFkYWJsZVN0cmVhbS5vbignZXJyb3InLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICBfdGhpcy5zZWFsKCk7XG5cbiAgICAgIC8vIGZvcndhcmQgdGhlIGVycm9yIHRvIHRoZSB0cmFuc2Zvcm0gc3RyZWFtXG4gICAgICB0cmFuc2Zvcm1lci5lbWl0KCdlcnJvcicsIGVycik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVhZGFibGVTdHJlYW0ucGlwZSh0cmFuc2Zvcm1lcik7XG4gIH07XG5cbiAgcmV0dXJuIFNlcnZlclN0eWxlU2hlZXQ7XG59KCk7XG5cbi8vIFxuXG52YXIgU3R5bGVTaGVldENvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG52YXIgU3R5bGVTaGVldENvbnN1bWVyID0gU3R5bGVTaGVldENvbnRleHQuQ29uc3VtZXI7XG5cbnZhciBTdHlsZVNoZWV0TWFuYWdlciA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIGluaGVyaXRzKFN0eWxlU2hlZXRNYW5hZ2VyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdHlsZVNoZWV0TWFuYWdlcihwcm9wcykge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFN0eWxlU2hlZXRNYW5hZ2VyKTtcblxuICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICBfdGhpcy5nZXRDb250ZXh0ID0gbWVtb2l6ZShfdGhpcy5nZXRDb250ZXh0KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBTdHlsZVNoZWV0TWFuYWdlci5wcm90b3R5cGUuZ2V0Q29udGV4dCA9IGZ1bmN0aW9uIGdldENvbnRleHQoc2hlZXQsIHRhcmdldCkge1xuICAgIGlmIChzaGVldCkge1xuICAgICAgcmV0dXJuIHNoZWV0O1xuICAgIH0gZWxzZSBpZiAodGFyZ2V0KSB7XG4gICAgICByZXR1cm4gbmV3IFN0eWxlU2hlZXQodGFyZ2V0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig0KTtcbiAgICB9XG4gIH07XG5cbiAgU3R5bGVTaGVldE1hbmFnZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIHNoZWV0ID0gX3Byb3BzLnNoZWV0LFxuICAgICAgICB0YXJnZXQgPSBfcHJvcHMudGFyZ2V0O1xuXG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFN0eWxlU2hlZXRDb250ZXh0LlByb3ZpZGVyLFxuICAgICAgeyB2YWx1ZTogdGhpcy5nZXRDb250ZXh0KHNoZWV0LCB0YXJnZXQpIH0sXG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbikgOiBjaGlsZHJlblxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIFN0eWxlU2hlZXRNYW5hZ2VyO1xufShDb21wb25lbnQpO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gU3R5bGVTaGVldE1hbmFnZXIucHJvcFR5cGVzID0ge1xuICBzaGVldDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmluc3RhbmNlT2YoU3R5bGVTaGVldCksIFByb3BUeXBlcy5pbnN0YW5jZU9mKFNlcnZlclN0eWxlU2hlZXQpXSksXG5cbiAgdGFyZ2V0OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGFwcGVuZENoaWxkOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gIH0pXG59IDogdm9pZCAwO1xuXG4vLyBcblxudmFyIGlkZW50aWZpZXJzID0ge307XG5cbi8qIFdlIGRlcGVuZCBvbiBjb21wb25lbnRzIGhhdmluZyB1bmlxdWUgSURzICovXG5mdW5jdGlvbiBnZW5lcmF0ZUlkKF9Db21wb25lbnRTdHlsZSwgX2Rpc3BsYXlOYW1lLCBwYXJlbnRDb21wb25lbnRJZCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSB0eXBlb2YgX2Rpc3BsYXlOYW1lICE9PSAnc3RyaW5nJyA/ICdzYycgOiBlc2NhcGUoX2Rpc3BsYXlOYW1lKTtcblxuICAvKipcbiAgICogVGhpcyBlbnN1cmVzIHVuaXF1ZW5lc3MgaWYgdHdvIGNvbXBvbmVudHMgaGFwcGVuIHRvIHNoYXJlXG4gICAqIHRoZSBzYW1lIGRpc3BsYXlOYW1lLlxuICAgKi9cbiAgdmFyIG5yID0gKGlkZW50aWZpZXJzW2Rpc3BsYXlOYW1lXSB8fCAwKSArIDE7XG4gIGlkZW50aWZpZXJzW2Rpc3BsYXlOYW1lXSA9IG5yO1xuXG4gIHZhciBjb21wb25lbnRJZCA9IGRpc3BsYXlOYW1lICsgJy0nICsgX0NvbXBvbmVudFN0eWxlLmdlbmVyYXRlTmFtZShkaXNwbGF5TmFtZSArIG5yKTtcblxuICByZXR1cm4gcGFyZW50Q29tcG9uZW50SWQgPyBwYXJlbnRDb21wb25lbnRJZCArICctJyArIGNvbXBvbmVudElkIDogY29tcG9uZW50SWQ7XG59XG5cbi8vICRGbG93Rml4TWVcblxudmFyIFN0eWxlZENvbXBvbmVudCA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIGluaGVyaXRzKFN0eWxlZENvbXBvbmVudCwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3R5bGVkQ29tcG9uZW50KCkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFN0eWxlZENvbXBvbmVudCk7XG5cbiAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbCh0aGlzKSk7XG5cbiAgICBfdGhpcy5hdHRycyA9IHt9O1xuXG4gICAgX3RoaXMucmVuZGVyT3V0ZXIgPSBfdGhpcy5yZW5kZXJPdXRlci5iaW5kKF90aGlzKTtcbiAgICBfdGhpcy5yZW5kZXJJbm5lciA9IF90aGlzLnJlbmRlcklubmVyLmJpbmQoX3RoaXMpO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIF90aGlzLndhcm5Jbm5lclJlZiA9IG9uY2UoZnVuY3Rpb24gKGRpc3BsYXlOYW1lKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ1RoZSBcImlubmVyUmVmXCIgQVBJIGhhcyBiZWVuIHJlbW92ZWQgaW4gc3R5bGVkLWNvbXBvbmVudHMgdjQgaW4gZmF2b3Igb2YgUmVhY3QgMTYgcmVmIGZvcndhcmRpbmcsIHVzZSBcInJlZlwiIGluc3RlYWQgbGlrZSBhIHR5cGljYWwgY29tcG9uZW50LiBcImlubmVyUmVmXCIgd2FzIGRldGVjdGVkIG9uIGNvbXBvbmVudCBcIicgKyBkaXNwbGF5TmFtZSArICdcIi4nKVxuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICAgIF90aGlzLndhcm5BdHRyc0ZuT2JqZWN0S2V5RGVwcmVjYXRlZCA9IG9uY2UoZnVuY3Rpb24gKGtleSwgZGlzcGxheU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgIGNvbnNvbGUud2FybignRnVuY3Rpb25zIGFzIG9iamVjdC1mb3JtIGF0dHJzKHt9KSBrZXlzIGFyZSBub3cgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIHZlcnNpb24gb2Ygc3R5bGVkLWNvbXBvbmVudHMuIFN3aXRjaCB0byB0aGUgbmV3IGF0dHJzKHByb3BzID0+ICh7fSkpIHN5bnRheCBpbnN0ZWFkIGZvciBlYXNpZXIgYW5kIG1vcmUgcG93ZXJmdWwgY29tcG9zaXRpb24uIFRoZSBhdHRycyBrZXkgaW4gcXVlc3Rpb24gaXMgXCInICsga2V5ICsgJ1wiIG9uIGNvbXBvbmVudCBcIicgKyBkaXNwbGF5TmFtZSArICdcIi4nLCAnXFxuICcgKyBuZXcgRXJyb3IoKS5zdGFjaylcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy53YXJuTm9uU3R5bGVkQ29tcG9uZW50QXR0cnNPYmplY3RLZXkgPSBvbmNlKGZ1bmN0aW9uIChrZXksIGRpc3BsYXlOYW1lKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ0l0IGxvb2tzIGxpa2UgeW91XFwndmUgdXNlZCBhIG5vbiBzdHlsZWQtY29tcG9uZW50IGFzIHRoZSB2YWx1ZSBmb3IgdGhlIFwiJyArIGtleSArICdcIiBwcm9wIGluIGFuIG9iamVjdC1mb3JtIGF0dHJzIGNvbnN0cnVjdG9yIG9mIFwiJyArIGRpc3BsYXlOYW1lICsgJ1wiLlxcbicgKyAnWW91IHNob3VsZCB1c2UgdGhlIG5ldyBmdW5jdGlvbi1mb3JtIGF0dHJzIGNvbnN0cnVjdG9yIHdoaWNoIGF2b2lkcyB0aGlzIGlzc3VlOiBhdHRycyhwcm9wcyA9PiAoeyB5b3VyU3R1ZmYgfSkpXFxuJyArIFwiVG8gY29udGludWUgdXNpbmcgdGhlIGRlcHJlY2F0ZWQgb2JqZWN0IHN5bnRheCwgeW91J2xsIG5lZWQgdG8gd3JhcCB5b3VyIGNvbXBvbmVudCBwcm9wIGluIGEgZnVuY3Rpb24gdG8gbWFrZSBpdCBhdmFpbGFibGUgaW5zaWRlIHRoZSBzdHlsZWQgY29tcG9uZW50ICh5b3UnbGwgc3RpbGwgZ2V0IHRoZSBkZXByZWNhdGlvbiB3YXJuaW5nIHRob3VnaC4pXFxuXCIgKyAoJ0ZvciBleGFtcGxlLCB7ICcgKyBrZXkgKyAnOiAoKSA9PiBJbm5lckNvbXBvbmVudCB9IGluc3RlYWQgb2YgeyAnICsga2V5ICsgJzogSW5uZXJDb21wb25lbnQgfScpKVxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIFN0eWxlZENvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgU3R5bGVTaGVldENvbnN1bWVyLFxuICAgICAgbnVsbCxcbiAgICAgIHRoaXMucmVuZGVyT3V0ZXJcbiAgICApO1xuICB9O1xuXG4gIFN0eWxlZENvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyT3V0ZXIgPSBmdW5jdGlvbiByZW5kZXJPdXRlcigpIHtcbiAgICB2YXIgc3R5bGVTaGVldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogU3R5bGVTaGVldC5tYXN0ZXI7XG5cbiAgICB0aGlzLnN0eWxlU2hlZXQgPSBzdHlsZVNoZWV0O1xuXG4gICAgLy8gTm8gbmVlZCB0byBzdWJzY3JpYmUgYSBzdGF0aWMgY29tcG9uZW50IHRvIHRoZW1lIGNoYW5nZXMsIGl0IHdvbid0IGNoYW5nZSBhbnl0aGluZ1xuICAgIGlmICh0aGlzLnByb3BzLmZvcndhcmRlZENvbXBvbmVudC5jb21wb25lbnRTdHlsZS5pc1N0YXRpYykgcmV0dXJuIHRoaXMucmVuZGVySW5uZXIoKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgVGhlbWVDb25zdW1lcixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLnJlbmRlcklubmVyXG4gICAgKTtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLnJlbmRlcklubmVyID0gZnVuY3Rpb24gcmVuZGVySW5uZXIodGhlbWUpIHtcbiAgICB2YXIgX3Byb3BzJGZvcndhcmRlZENvbXBvID0gdGhpcy5wcm9wcy5mb3J3YXJkZWRDb21wb25lbnQsXG4gICAgICAgIGNvbXBvbmVudFN0eWxlID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLmNvbXBvbmVudFN0eWxlLFxuICAgICAgICBkZWZhdWx0UHJvcHMgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uZGVmYXVsdFByb3BzLFxuICAgICAgICBkaXNwbGF5TmFtZSA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby5kaXNwbGF5TmFtZSxcbiAgICAgICAgZm9sZGVkQ29tcG9uZW50SWRzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLmZvbGRlZENvbXBvbmVudElkcyxcbiAgICAgICAgc3R5bGVkQ29tcG9uZW50SWQgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uc3R5bGVkQ29tcG9uZW50SWQsXG4gICAgICAgIHRhcmdldCA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby50YXJnZXQ7XG5cblxuICAgIHZhciBnZW5lcmF0ZWRDbGFzc05hbWUgPSB2b2lkIDA7XG4gICAgaWYgKGNvbXBvbmVudFN0eWxlLmlzU3RhdGljKSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc05hbWUgPSB0aGlzLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKEVNUFRZX09CSkVDVCwgdGhpcy5wcm9wcyk7XG4gICAgfSBlbHNlIGlmICh0aGVtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc05hbWUgPSB0aGlzLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGRldGVybWluZVRoZW1lKHRoaXMucHJvcHMsIHRoZW1lLCBkZWZhdWx0UHJvcHMpLCB0aGlzLnByb3BzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuZXJhdGVkQ2xhc3NOYW1lID0gdGhpcy5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyh0aGlzLnByb3BzLnRoZW1lIHx8IEVNUFRZX09CSkVDVCwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgdmFyIGVsZW1lbnRUb0JlQ3JlYXRlZCA9IHRoaXMucHJvcHMuYXMgfHwgdGhpcy5hdHRycy5hcyB8fCB0YXJnZXQ7XG4gICAgdmFyIGlzVGFyZ2V0VGFnID0gaXNUYWcoZWxlbWVudFRvQmVDcmVhdGVkKTtcblxuICAgIHZhciBwcm9wc0ZvckVsZW1lbnQgPSB7fTtcbiAgICB2YXIgY29tcHV0ZWRQcm9wcyA9IF9leHRlbmRzKHt9LCB0aGlzLmF0dHJzLCB0aGlzLnByb3BzKTtcblxuICAgIHZhciBrZXkgPSB2b2lkIDA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAoa2V5IGluIGNvbXB1dGVkUHJvcHMpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGtleSA9PT0gJ2lubmVyUmVmJyAmJiBpc1RhcmdldFRhZykge1xuICAgICAgICB0aGlzLndhcm5Jbm5lclJlZihkaXNwbGF5TmFtZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChrZXkgPT09ICdmb3J3YXJkZWRDb21wb25lbnQnIHx8IGtleSA9PT0gJ2FzJykge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnZm9yd2FyZGVkUmVmJykgcHJvcHNGb3JFbGVtZW50LnJlZiA9IGNvbXB1dGVkUHJvcHNba2V5XTtlbHNlIGlmICghaXNUYXJnZXRUYWcgfHwgdmFsaWRBdHRyKGtleSkpIHtcbiAgICAgICAgLy8gRG9uJ3QgcGFzcyB0aHJvdWdoIG5vbiBIVE1MIHRhZ3MgdGhyb3VnaCB0byBIVE1MIGVsZW1lbnRzXG4gICAgICAgIHByb3BzRm9yRWxlbWVudFtrZXldID0gY29tcHV0ZWRQcm9wc1trZXldO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLnN0eWxlICYmIHRoaXMuYXR0cnMuc3R5bGUpIHtcbiAgICAgIHByb3BzRm9yRWxlbWVudC5zdHlsZSA9IF9leHRlbmRzKHt9LCB0aGlzLmF0dHJzLnN0eWxlLCB0aGlzLnByb3BzLnN0eWxlKTtcbiAgICB9XG5cbiAgICBwcm9wc0ZvckVsZW1lbnQuY2xhc3NOYW1lID0gQXJyYXkucHJvdG90eXBlLmNvbmNhdChmb2xkZWRDb21wb25lbnRJZHMsIHRoaXMucHJvcHMuY2xhc3NOYW1lLCBzdHlsZWRDb21wb25lbnRJZCwgdGhpcy5hdHRycy5jbGFzc05hbWUsIGdlbmVyYXRlZENsYXNzTmFtZSkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJyAnKTtcblxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KGVsZW1lbnRUb0JlQ3JlYXRlZCwgcHJvcHNGb3JFbGVtZW50KTtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLmJ1aWxkRXhlY3V0aW9uQ29udGV4dCA9IGZ1bmN0aW9uIGJ1aWxkRXhlY3V0aW9uQ29udGV4dCh0aGVtZSwgcHJvcHMsIGF0dHJzKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgY29udGV4dCA9IF9leHRlbmRzKHt9LCBwcm9wcywgeyB0aGVtZTogdGhlbWUgfSk7XG5cbiAgICBpZiAoIWF0dHJzLmxlbmd0aCkgcmV0dXJuIGNvbnRleHQ7XG5cbiAgICB0aGlzLmF0dHJzID0ge307XG5cbiAgICBhdHRycy5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyRGVmKSB7XG4gICAgICB2YXIgcmVzb2x2ZWRBdHRyRGVmID0gYXR0ckRlZjtcbiAgICAgIHZhciBhdHRyRGVmV2FzRm4gPSBmYWxzZTtcbiAgICAgIHZhciBhdHRyID0gdm9pZCAwO1xuICAgICAgdmFyIGtleSA9IHZvaWQgMDtcblxuICAgICAgaWYgKGlzRnVuY3Rpb24ocmVzb2x2ZWRBdHRyRGVmKSkge1xuICAgICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAgIHJlc29sdmVkQXR0ckRlZiA9IHJlc29sdmVkQXR0ckRlZihjb250ZXh0KTtcbiAgICAgICAgYXR0ckRlZldhc0ZuID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLyogZXNsaW50LWRpc2FibGUgZ3VhcmQtZm9yLWluICovXG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBmb3IgKGtleSBpbiByZXNvbHZlZEF0dHJEZWYpIHtcbiAgICAgICAgYXR0ciA9IHJlc29sdmVkQXR0ckRlZltrZXldO1xuXG4gICAgICAgIGlmICghYXR0ckRlZldhc0ZuKSB7XG4gICAgICAgICAgaWYgKGlzRnVuY3Rpb24oYXR0cikgJiYgIWlzRGVyaXZlZFJlYWN0Q29tcG9uZW50KGF0dHIpICYmICFpc1N0eWxlZENvbXBvbmVudChhdHRyKSkge1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgX3RoaXMyLndhcm5BdHRyc0ZuT2JqZWN0S2V5RGVwcmVjYXRlZChrZXksIHByb3BzLmZvcndhcmRlZENvbXBvbmVudC5kaXNwbGF5TmFtZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGF0dHIgPSBhdHRyKGNvbnRleHQpO1xuXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChhdHRyKSkge1xuICAgICAgICAgICAgICBfdGhpczIud2Fybk5vblN0eWxlZENvbXBvbmVudEF0dHJzT2JqZWN0S2V5KGtleSwgcHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpczIuYXR0cnNba2V5XSA9IGF0dHI7XG4gICAgICAgIGNvbnRleHRba2V5XSA9IGF0dHI7XG4gICAgICB9XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlICovXG4gICAgfSk7XG5cbiAgICByZXR1cm4gY29udGV4dDtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzID0gZnVuY3Rpb24gZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXModGhlbWUsIHByb3BzKSB7XG4gICAgdmFyIF9wcm9wcyRmb3J3YXJkZWRDb21wbzIgPSBwcm9wcy5mb3J3YXJkZWRDb21wb25lbnQsXG4gICAgICAgIGF0dHJzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvMi5hdHRycyxcbiAgICAgICAgY29tcG9uZW50U3R5bGUgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yLmNvbXBvbmVudFN0eWxlLFxuICAgICAgICB3YXJuVG9vTWFueUNsYXNzZXMgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yLndhcm5Ub29NYW55Q2xhc3NlcztcblxuICAgIC8vIHN0YXRpY2FsbHkgc3R5bGVkLWNvbXBvbmVudHMgZG9uJ3QgbmVlZCB0byBidWlsZCBhbiBleGVjdXRpb24gY29udGV4dCBvYmplY3QsXG4gICAgLy8gYW5kIHNob3VsZG4ndCBiZSBpbmNyZWFzaW5nIHRoZSBudW1iZXIgb2YgY2xhc3MgbmFtZXNcblxuICAgIGlmIChjb21wb25lbnRTdHlsZS5pc1N0YXRpYyAmJiAhYXR0cnMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gY29tcG9uZW50U3R5bGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoRU1QVFlfT0JKRUNULCB0aGlzLnN0eWxlU2hlZXQpO1xuICAgIH1cblxuICAgIHZhciBjbGFzc05hbWUgPSBjb21wb25lbnRTdHlsZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyh0aGlzLmJ1aWxkRXhlY3V0aW9uQ29udGV4dCh0aGVtZSwgcHJvcHMsIGF0dHJzKSwgdGhpcy5zdHlsZVNoZWV0KTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm5Ub29NYW55Q2xhc3Nlcykgd2FyblRvb01hbnlDbGFzc2VzKGNsYXNzTmFtZSk7XG5cbiAgICByZXR1cm4gY2xhc3NOYW1lO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZWRDb21wb25lbnQ7XG59KENvbXBvbmVudCk7XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlZENvbXBvbmVudCh0YXJnZXQsIG9wdGlvbnMsIHJ1bGVzKSB7XG4gIHZhciBpc1RhcmdldFN0eWxlZENvbXAgPSBpc1N0eWxlZENvbXBvbmVudCh0YXJnZXQpO1xuICB2YXIgaXNDbGFzcyA9ICFpc1RhZyh0YXJnZXQpO1xuXG4gIHZhciBfb3B0aW9ucyRkaXNwbGF5TmFtZSA9IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgICBkaXNwbGF5TmFtZSA9IF9vcHRpb25zJGRpc3BsYXlOYW1lID09PSB1bmRlZmluZWQgPyBnZW5lcmF0ZURpc3BsYXlOYW1lKHRhcmdldCkgOiBfb3B0aW9ucyRkaXNwbGF5TmFtZSxcbiAgICAgIF9vcHRpb25zJGNvbXBvbmVudElkID0gb3B0aW9ucy5jb21wb25lbnRJZCxcbiAgICAgIGNvbXBvbmVudElkID0gX29wdGlvbnMkY29tcG9uZW50SWQgPT09IHVuZGVmaW5lZCA/IGdlbmVyYXRlSWQoQ29tcG9uZW50U3R5bGUsIG9wdGlvbnMuZGlzcGxheU5hbWUsIG9wdGlvbnMucGFyZW50Q29tcG9uZW50SWQpIDogX29wdGlvbnMkY29tcG9uZW50SWQsXG4gICAgICBfb3B0aW9ucyRQYXJlbnRDb21wb24gPSBvcHRpb25zLlBhcmVudENvbXBvbmVudCxcbiAgICAgIFBhcmVudENvbXBvbmVudCA9IF9vcHRpb25zJFBhcmVudENvbXBvbiA9PT0gdW5kZWZpbmVkID8gU3R5bGVkQ29tcG9uZW50IDogX29wdGlvbnMkUGFyZW50Q29tcG9uLFxuICAgICAgX29wdGlvbnMkYXR0cnMgPSBvcHRpb25zLmF0dHJzLFxuICAgICAgYXR0cnMgPSBfb3B0aW9ucyRhdHRycyA9PT0gdW5kZWZpbmVkID8gRU1QVFlfQVJSQVkgOiBfb3B0aW9ucyRhdHRycztcblxuXG4gIHZhciBzdHlsZWRDb21wb25lbnRJZCA9IG9wdGlvbnMuZGlzcGxheU5hbWUgJiYgb3B0aW9ucy5jb21wb25lbnRJZCA/IGVzY2FwZShvcHRpb25zLmRpc3BsYXlOYW1lKSArICctJyArIG9wdGlvbnMuY29tcG9uZW50SWQgOiBvcHRpb25zLmNvbXBvbmVudElkIHx8IGNvbXBvbmVudElkO1xuXG4gIC8vIGZvbGQgdGhlIHVuZGVybHlpbmcgU3R5bGVkQ29tcG9uZW50IGF0dHJzIHVwIChpbXBsaWNpdCBleHRlbmQpXG4gIHZhciBmaW5hbEF0dHJzID1cbiAgLy8gJEZsb3dGaXhNZVxuICBpc1RhcmdldFN0eWxlZENvbXAgJiYgdGFyZ2V0LmF0dHJzID8gQXJyYXkucHJvdG90eXBlLmNvbmNhdCh0YXJnZXQuYXR0cnMsIGF0dHJzKS5maWx0ZXIoQm9vbGVhbikgOiBhdHRycztcblxuICB2YXIgY29tcG9uZW50U3R5bGUgPSBuZXcgQ29tcG9uZW50U3R5bGUoaXNUYXJnZXRTdHlsZWRDb21wID8gLy8gZm9sZCB0aGUgdW5kZXJseWluZyBTdHlsZWRDb21wb25lbnQgcnVsZXMgdXAgKGltcGxpY2l0IGV4dGVuZClcbiAgLy8gJEZsb3dGaXhNZVxuICB0YXJnZXQuY29tcG9uZW50U3R5bGUucnVsZXMuY29uY2F0KHJ1bGVzKSA6IHJ1bGVzLCBmaW5hbEF0dHJzLCBzdHlsZWRDb21wb25lbnRJZCk7XG5cbiAgLyoqXG4gICAqIGZvcndhcmRSZWYgY3JlYXRlcyBhIG5ldyBpbnRlcmltIGNvbXBvbmVudCwgd2hpY2ggd2UnbGwgdGFrZSBhZHZhbnRhZ2Ugb2ZcbiAgICogaW5zdGVhZCBvZiBleHRlbmRpbmcgUGFyZW50Q29tcG9uZW50IHRvIGNyZWF0ZSBfYW5vdGhlcl8gaW50ZXJpbSBjbGFzc1xuICAgKi9cbiAgdmFyIFdyYXBwZWRTdHlsZWRDb21wb25lbnQgPSB2b2lkIDA7XG4gIHZhciBmb3J3YXJkUmVmID0gZnVuY3Rpb24gZm9yd2FyZFJlZihwcm9wcywgcmVmKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGFyZW50Q29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgZm9yd2FyZGVkQ29tcG9uZW50OiBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LCBmb3J3YXJkZWRSZWY6IHJlZiB9KSk7XG4gIH07XG4gIGZvcndhcmRSZWYuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudCA9IFJlYWN0LmZvcndhcmRSZWYoZm9yd2FyZFJlZik7XG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuYXR0cnMgPSBmaW5hbEF0dHJzO1xuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuY29tcG9uZW50U3R5bGUgPSBjb21wb25lbnRTdHlsZTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuZm9sZGVkQ29tcG9uZW50SWRzID0gaXNUYXJnZXRTdHlsZWRDb21wID8gLy8gJEZsb3dGaXhNZVxuICBBcnJheS5wcm90b3R5cGUuY29uY2F0KHRhcmdldC5mb2xkZWRDb21wb25lbnRJZHMsIHRhcmdldC5zdHlsZWRDb21wb25lbnRJZCkgOiBFTVBUWV9BUlJBWTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuc3R5bGVkQ29tcG9uZW50SWQgPSBzdHlsZWRDb21wb25lbnRJZDtcblxuICAvLyBmb2xkIHRoZSB1bmRlcmx5aW5nIFN0eWxlZENvbXBvbmVudCB0YXJnZXQgdXAgc2luY2Ugd2UgZm9sZGVkIHRoZSBzdHlsZXNcbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnRhcmdldCA9IGlzVGFyZ2V0U3R5bGVkQ29tcCA/IHRhcmdldC50YXJnZXQgOiB0YXJnZXQ7XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LndpdGhDb21wb25lbnQgPSBmdW5jdGlvbiB3aXRoQ29tcG9uZW50KHRhZykge1xuICAgIHZhciBwcmV2aW91c0NvbXBvbmVudElkID0gb3B0aW9ucy5jb21wb25lbnRJZCxcbiAgICAgICAgb3B0aW9uc1RvQ29weSA9IG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9wdGlvbnMsIFsnY29tcG9uZW50SWQnXSk7XG5cblxuICAgIHZhciBuZXdDb21wb25lbnRJZCA9IHByZXZpb3VzQ29tcG9uZW50SWQgJiYgcHJldmlvdXNDb21wb25lbnRJZCArICctJyArIChpc1RhZyh0YWcpID8gdGFnIDogZXNjYXBlKGdldENvbXBvbmVudE5hbWUodGFnKSkpO1xuXG4gICAgdmFyIG5ld09wdGlvbnMgPSBfZXh0ZW5kcyh7fSwgb3B0aW9uc1RvQ29weSwge1xuICAgICAgYXR0cnM6IGZpbmFsQXR0cnMsXG4gICAgICBjb21wb25lbnRJZDogbmV3Q29tcG9uZW50SWQsXG4gICAgICBQYXJlbnRDb21wb25lbnQ6IFBhcmVudENvbXBvbmVudFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNyZWF0ZVN0eWxlZENvbXBvbmVudCh0YWcsIG5ld09wdGlvbnMsIHJ1bGVzKTtcbiAgfTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50Lndhcm5Ub29NYW55Q2xhc3NlcyA9IGNyZWF0ZVdhcm5Ub29NYW55Q2xhc3NlcyhkaXNwbGF5TmFtZSk7XG4gIH1cblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICcuJyArIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuc3R5bGVkQ29tcG9uZW50SWQ7XG4gIH07XG5cbiAgaWYgKGlzQ2xhc3MpIHtcbiAgICBob2lzdE5vblJlYWN0U3RhdGljcyhXcmFwcGVkU3R5bGVkQ29tcG9uZW50LCB0YXJnZXQsIHtcbiAgICAgIC8vIGFsbCBTQy1zcGVjaWZpYyB0aGluZ3Mgc2hvdWxkIG5vdCBiZSBob2lzdGVkXG4gICAgICBhdHRyczogdHJ1ZSxcbiAgICAgIGNvbXBvbmVudFN0eWxlOiB0cnVlLFxuICAgICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgICBmb2xkZWRDb21wb25lbnRJZHM6IHRydWUsXG4gICAgICBzdHlsZWRDb21wb25lbnRJZDogdHJ1ZSxcbiAgICAgIHRhcmdldDogdHJ1ZSxcbiAgICAgIHdpdGhDb21wb25lbnQ6IHRydWVcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBXcmFwcGVkU3R5bGVkQ29tcG9uZW50O1xufVxuXG4vLyBcbi8vIFRoYW5rcyB0byBSZWFjdERPTUZhY3RvcmllcyBmb3IgdGhpcyBoYW5keSBsaXN0IVxuXG52YXIgZG9tRWxlbWVudHMgPSBbJ2EnLCAnYWJicicsICdhZGRyZXNzJywgJ2FyZWEnLCAnYXJ0aWNsZScsICdhc2lkZScsICdhdWRpbycsICdiJywgJ2Jhc2UnLCAnYmRpJywgJ2JkbycsICdiaWcnLCAnYmxvY2txdW90ZScsICdib2R5JywgJ2JyJywgJ2J1dHRvbicsICdjYW52YXMnLCAnY2FwdGlvbicsICdjaXRlJywgJ2NvZGUnLCAnY29sJywgJ2NvbGdyb3VwJywgJ2RhdGEnLCAnZGF0YWxpc3QnLCAnZGQnLCAnZGVsJywgJ2RldGFpbHMnLCAnZGZuJywgJ2RpYWxvZycsICdkaXYnLCAnZGwnLCAnZHQnLCAnZW0nLCAnZW1iZWQnLCAnZmllbGRzZXQnLCAnZmlnY2FwdGlvbicsICdmaWd1cmUnLCAnZm9vdGVyJywgJ2Zvcm0nLCAnaDEnLCAnaDInLCAnaDMnLCAnaDQnLCAnaDUnLCAnaDYnLCAnaGVhZCcsICdoZWFkZXInLCAnaGdyb3VwJywgJ2hyJywgJ2h0bWwnLCAnaScsICdpZnJhbWUnLCAnaW1nJywgJ2lucHV0JywgJ2lucycsICdrYmQnLCAna2V5Z2VuJywgJ2xhYmVsJywgJ2xlZ2VuZCcsICdsaScsICdsaW5rJywgJ21haW4nLCAnbWFwJywgJ21hcmsnLCAnbWFycXVlZScsICdtZW51JywgJ21lbnVpdGVtJywgJ21ldGEnLCAnbWV0ZXInLCAnbmF2JywgJ25vc2NyaXB0JywgJ29iamVjdCcsICdvbCcsICdvcHRncm91cCcsICdvcHRpb24nLCAnb3V0cHV0JywgJ3AnLCAncGFyYW0nLCAncGljdHVyZScsICdwcmUnLCAncHJvZ3Jlc3MnLCAncScsICdycCcsICdydCcsICdydWJ5JywgJ3MnLCAnc2FtcCcsICdzY3JpcHQnLCAnc2VjdGlvbicsICdzZWxlY3QnLCAnc21hbGwnLCAnc291cmNlJywgJ3NwYW4nLCAnc3Ryb25nJywgJ3N0eWxlJywgJ3N1YicsICdzdW1tYXJ5JywgJ3N1cCcsICd0YWJsZScsICd0Ym9keScsICd0ZCcsICd0ZXh0YXJlYScsICd0Zm9vdCcsICd0aCcsICd0aGVhZCcsICd0aW1lJywgJ3RpdGxlJywgJ3RyJywgJ3RyYWNrJywgJ3UnLCAndWwnLCAndmFyJywgJ3ZpZGVvJywgJ3dicicsXG5cbi8vIFNWR1xuJ2NpcmNsZScsICdjbGlwUGF0aCcsICdkZWZzJywgJ2VsbGlwc2UnLCAnZm9yZWlnbk9iamVjdCcsICdnJywgJ2ltYWdlJywgJ2xpbmUnLCAnbGluZWFyR3JhZGllbnQnLCAnbWFya2VyJywgJ21hc2snLCAncGF0aCcsICdwYXR0ZXJuJywgJ3BvbHlnb24nLCAncG9seWxpbmUnLCAncmFkaWFsR3JhZGllbnQnLCAncmVjdCcsICdzdG9wJywgJ3N2ZycsICd0ZXh0JywgJ3RzcGFuJ107XG5cbi8vIFxuXG52YXIgc3R5bGVkID0gZnVuY3Rpb24gc3R5bGVkKHRhZykge1xuICByZXR1cm4gY29uc3RydWN0V2l0aE9wdGlvbnMoY3JlYXRlU3R5bGVkQ29tcG9uZW50LCB0YWcpO1xufTtcblxuLy8gU2hvcnRoYW5kcyBmb3IgYWxsIHZhbGlkIEhUTUwgRWxlbWVudHNcbmRvbUVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKGRvbUVsZW1lbnQpIHtcbiAgc3R5bGVkW2RvbUVsZW1lbnRdID0gc3R5bGVkKGRvbUVsZW1lbnQpO1xufSk7XG5cbi8vIFxuXG52YXIgR2xvYmFsU3R5bGUgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEdsb2JhbFN0eWxlKHJ1bGVzLCBjb21wb25lbnRJZCkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIEdsb2JhbFN0eWxlKTtcblxuICAgIHRoaXMucnVsZXMgPSBydWxlcztcbiAgICB0aGlzLmNvbXBvbmVudElkID0gY29tcG9uZW50SWQ7XG4gICAgdGhpcy5pc1N0YXRpYyA9IGlzU3RhdGljUnVsZXMocnVsZXMsIEVNUFRZX0FSUkFZKTtcblxuICAgIGlmICghU3R5bGVTaGVldC5tYXN0ZXIuaGFzSWQoY29tcG9uZW50SWQpKSB7XG4gICAgICBTdHlsZVNoZWV0Lm1hc3Rlci5kZWZlcnJlZEluamVjdChjb21wb25lbnRJZCwgW10pO1xuICAgIH1cbiAgfVxuXG4gIEdsb2JhbFN0eWxlLnByb3RvdHlwZS5jcmVhdGVTdHlsZXMgPSBmdW5jdGlvbiBjcmVhdGVTdHlsZXMoZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCkge1xuICAgIHZhciBmbGF0Q1NTID0gZmxhdHRlbih0aGlzLnJ1bGVzLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICB2YXIgY3NzID0gc3RyaW5naWZ5UnVsZXMoZmxhdENTUywgJycpO1xuXG4gICAgc3R5bGVTaGVldC5pbmplY3QodGhpcy5jb21wb25lbnRJZCwgY3NzKTtcbiAgfTtcblxuICBHbG9iYWxTdHlsZS5wcm90b3R5cGUucmVtb3ZlU3R5bGVzID0gZnVuY3Rpb24gcmVtb3ZlU3R5bGVzKHN0eWxlU2hlZXQpIHtcbiAgICB2YXIgY29tcG9uZW50SWQgPSB0aGlzLmNvbXBvbmVudElkO1xuXG4gICAgaWYgKHN0eWxlU2hlZXQuaGFzSWQoY29tcG9uZW50SWQpKSB7XG4gICAgICBzdHlsZVNoZWV0LnJlbW92ZShjb21wb25lbnRJZCk7XG4gICAgfVxuICB9O1xuXG4gIC8vIFRPRE86IG92ZXJ3cml0ZSBpbi1wbGFjZSBpbnN0ZWFkIG9mIHJlbW92ZStjcmVhdGU/XG5cblxuICBHbG9iYWxTdHlsZS5wcm90b3R5cGUucmVuZGVyU3R5bGVzID0gZnVuY3Rpb24gcmVuZGVyU3R5bGVzKGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpIHtcbiAgICB0aGlzLnJlbW92ZVN0eWxlcyhzdHlsZVNoZWV0KTtcbiAgICB0aGlzLmNyZWF0ZVN0eWxlcyhleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgfTtcblxuICByZXR1cm4gR2xvYmFsU3R5bGU7XG59KCk7XG5cbi8vIFxuXG4vLyBwbGFjZSBvdXIgY2FjaGUgaW50byBzaGFyZWQgY29udGV4dCBzbyBpdCdsbCBwZXJzaXN0IGJldHdlZW4gSE1Sc1xuaWYgKElTX0JST1dTRVIpIHtcbiAgd2luZG93LnNjQ0dTSE1SQ2FjaGUgPSB7fTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlR2xvYmFsU3R5bGUoc3RyaW5ncykge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgaW50ZXJwb2xhdGlvbnMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgdmFyIHJ1bGVzID0gY3NzLmFwcGx5KHVuZGVmaW5lZCwgW3N0cmluZ3NdLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpO1xuICB2YXIgaWQgPSAnc2MtZ2xvYmFsLScgKyBtdXJtdXJoYXNoKEpTT04uc3RyaW5naWZ5KHJ1bGVzKSk7XG4gIHZhciBzdHlsZSA9IG5ldyBHbG9iYWxTdHlsZShydWxlcywgaWQpO1xuXG4gIHZhciBHbG9iYWxTdHlsZUNvbXBvbmVudCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gICAgaW5oZXJpdHMoR2xvYmFsU3R5bGVDb21wb25lbnQsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gR2xvYmFsU3R5bGVDb21wb25lbnQocHJvcHMpIHtcbiAgICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIEdsb2JhbFN0eWxlQ29tcG9uZW50KTtcblxuICAgICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgICAgdmFyIF90aGlzJGNvbnN0cnVjdG9yID0gX3RoaXMuY29uc3RydWN0b3IsXG4gICAgICAgICAgZ2xvYmFsU3R5bGUgPSBfdGhpcyRjb25zdHJ1Y3Rvci5nbG9iYWxTdHlsZSxcbiAgICAgICAgICBzdHlsZWRDb21wb25lbnRJZCA9IF90aGlzJGNvbnN0cnVjdG9yLnN0eWxlZENvbXBvbmVudElkO1xuXG5cbiAgICAgIGlmIChJU19CUk9XU0VSKSB7XG4gICAgICAgIHdpbmRvdy5zY0NHU0hNUkNhY2hlW3N0eWxlZENvbXBvbmVudElkXSA9ICh3aW5kb3cuc2NDR1NITVJDYWNoZVtzdHlsZWRDb21wb25lbnRJZF0gfHwgMCkgKyAxO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFRoaXMgZml4ZXMgSE1SIGNvbXBhdGliaWxpdHkuIERvbid0IGFzayBtZSB3aHksIGJ1dCB0aGlzIGNvbWJpbmF0aW9uIG9mXG4gICAgICAgKiBjYWNoaW5nIHRoZSBjbG9zdXJlIHZhcmlhYmxlcyB2aWEgc3RhdGljcyBhbmQgdGhlbiBwZXJzaXN0aW5nIHRoZSBzdGF0aWNzIGluXG4gICAgICAgKiBzdGF0ZSB3b3JrcyBhY3Jvc3MgSE1SIHdoZXJlIG5vIG90aGVyIGNvbWJpbmF0aW9uIGRpZC4gwq9cXF8o44OEKV8vwq9cbiAgICAgICAqL1xuICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgIGdsb2JhbFN0eWxlOiBnbG9iYWxTdHlsZSxcbiAgICAgICAgc3R5bGVkQ29tcG9uZW50SWQ6IHN0eWxlZENvbXBvbmVudElkXG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIEdsb2JhbFN0eWxlQ29tcG9uZW50LnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHdpbmRvdy5zY0NHU0hNUkNhY2hlW3RoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWRdKSB7XG4gICAgICAgIHdpbmRvdy5zY0NHU0hNUkNhY2hlW3RoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWRdIC09IDE7XG4gICAgICB9XG4gICAgICAvKipcbiAgICAgICAqIERlcGVuZGluZyBvbiB0aGUgb3JkZXIgXCJyZW5kZXJcIiBpcyBjYWxsZWQgdGhpcyBjYW4gY2F1c2UgdGhlIHN0eWxlcyB0byBiZSBsb3N0XG4gICAgICAgKiB1bnRpbCB0aGUgbmV4dCByZW5kZXIgcGFzcyBvZiB0aGUgcmVtYWluaW5nIGluc3RhbmNlLCB3aGljaCBtYXlcbiAgICAgICAqIG5vdCBiZSBpbW1lZGlhdGUuXG4gICAgICAgKi9cbiAgICAgIGlmICh3aW5kb3cuc2NDR1NITVJDYWNoZVt0aGlzLnN0YXRlLnN0eWxlZENvbXBvbmVudElkXSA9PT0gMCkge1xuICAgICAgICB0aGlzLnN0YXRlLmdsb2JhbFN0eWxlLnJlbW92ZVN0eWxlcyh0aGlzLnN0eWxlU2hlZXQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBHbG9iYWxTdHlsZUNvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIFJlYWN0LkNoaWxkcmVuLmNvdW50KHRoaXMucHJvcHMuY2hpbGRyZW4pKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUud2FybignVGhlIGdsb2JhbCBzdHlsZSBjb21wb25lbnQgJyArIHRoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWQgKyAnIHdhcyBnaXZlbiBjaGlsZCBKU1guIGNyZWF0ZUdsb2JhbFN0eWxlIGRvZXMgbm90IHJlbmRlciBjaGlsZHJlbi4nKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFN0eWxlU2hlZXRDb25zdW1lcixcbiAgICAgICAgbnVsbCxcbiAgICAgICAgZnVuY3Rpb24gKHN0eWxlU2hlZXQpIHtcbiAgICAgICAgICBfdGhpczIuc3R5bGVTaGVldCA9IHN0eWxlU2hlZXQgfHwgU3R5bGVTaGVldC5tYXN0ZXI7XG5cbiAgICAgICAgICB2YXIgZ2xvYmFsU3R5bGUgPSBfdGhpczIuc3RhdGUuZ2xvYmFsU3R5bGU7XG5cblxuICAgICAgICAgIGlmIChnbG9iYWxTdHlsZS5pc1N0YXRpYykge1xuICAgICAgICAgICAgZ2xvYmFsU3R5bGUucmVuZGVyU3R5bGVzKFNUQVRJQ19FWEVDVVRJT05fQ09OVEVYVCwgX3RoaXMyLnN0eWxlU2hlZXQpO1xuXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgIFRoZW1lQ29uc3VtZXIsXG4gICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgIGZ1bmN0aW9uICh0aGVtZSkge1xuICAgICAgICAgICAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICAgICAgICAgICB2YXIgZGVmYXVsdFByb3BzID0gX3RoaXMyLmNvbnN0cnVjdG9yLmRlZmF1bHRQcm9wcztcblxuXG4gICAgICAgICAgICAgICAgdmFyIGNvbnRleHQgPSBfZXh0ZW5kcyh7fSwgX3RoaXMyLnByb3BzKTtcblxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhlbWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICBjb250ZXh0LnRoZW1lID0gZGV0ZXJtaW5lVGhlbWUoX3RoaXMyLnByb3BzLCB0aGVtZSwgZGVmYXVsdFByb3BzKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBnbG9iYWxTdHlsZS5yZW5kZXJTdHlsZXMoY29udGV4dCwgX3RoaXMyLnN0eWxlU2hlZXQpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICApO1xuICAgIH07XG5cbiAgICByZXR1cm4gR2xvYmFsU3R5bGVDb21wb25lbnQ7XG4gIH0oUmVhY3QuQ29tcG9uZW50KTtcblxuICBHbG9iYWxTdHlsZUNvbXBvbmVudC5nbG9iYWxTdHlsZSA9IHN0eWxlO1xuICBHbG9iYWxTdHlsZUNvbXBvbmVudC5zdHlsZWRDb21wb25lbnRJZCA9IGlkO1xuXG5cbiAgcmV0dXJuIEdsb2JhbFN0eWxlQ29tcG9uZW50O1xufVxuXG4vLyBcblxudmFyIHJlcGxhY2VXaGl0ZXNwYWNlID0gZnVuY3Rpb24gcmVwbGFjZVdoaXRlc3BhY2Uoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXFxzfFxcXFxuL2csICcnKTtcbn07XG5cbmZ1bmN0aW9uIGtleWZyYW1lcyhzdHJpbmdzKSB7XG4gIC8qIFdhcm5pbmcgaWYgeW91J3ZlIHVzZWQga2V5ZnJhbWVzIG9uIFJlYWN0IE5hdGl2ZSAqL1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS53YXJuKCdga2V5ZnJhbWVzYCBjYW5ub3QgYmUgdXNlZCBvbiBSZWFjdE5hdGl2ZSwgb25seSBvbiB0aGUgd2ViLiBUbyBkbyBhbmltYXRpb24gaW4gUmVhY3ROYXRpdmUgcGxlYXNlIHVzZSBBbmltYXRlZC4nKTtcbiAgfVxuXG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgcnVsZXMgPSBjc3MuYXBwbHkodW5kZWZpbmVkLCBbc3RyaW5nc10uY29uY2F0KGludGVycG9sYXRpb25zKSk7XG5cbiAgdmFyIG5hbWUgPSBnZW5lcmF0ZUFscGhhYmV0aWNOYW1lKG11cm11cmhhc2gocmVwbGFjZVdoaXRlc3BhY2UoSlNPTi5zdHJpbmdpZnkocnVsZXMpKSkpO1xuXG4gIHJldHVybiBuZXcgS2V5ZnJhbWVzKG5hbWUsIHN0cmluZ2lmeVJ1bGVzKHJ1bGVzLCBuYW1lLCAnQGtleWZyYW1lcycpKTtcbn1cblxuLy8gXG5cbnZhciB3aXRoVGhlbWUgPSAoZnVuY3Rpb24gKENvbXBvbmVudCQkMSkge1xuICB2YXIgV2l0aFRoZW1lID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAocHJvcHMsIHJlZikge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgVGhlbWVDb25zdW1lcixcbiAgICAgIG51bGwsXG4gICAgICBmdW5jdGlvbiAodGhlbWUpIHtcbiAgICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgICB2YXIgZGVmYXVsdFByb3BzID0gQ29tcG9uZW50JCQxLmRlZmF1bHRQcm9wcztcblxuICAgICAgICB2YXIgdGhlbWVQcm9wID0gZGV0ZXJtaW5lVGhlbWUocHJvcHMsIHRoZW1lLCBkZWZhdWx0UHJvcHMpO1xuXG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHRoZW1lUHJvcCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ1t3aXRoVGhlbWVdIFlvdSBhcmUgbm90IHVzaW5nIGEgVGhlbWVQcm92aWRlciBub3IgcGFzc2luZyBhIHRoZW1lIHByb3Agb3IgYSB0aGVtZSBpbiBkZWZhdWx0UHJvcHMgaW4gY29tcG9uZW50IGNsYXNzIFwiJyArIGdldENvbXBvbmVudE5hbWUoQ29tcG9uZW50JCQxKSArICdcIicpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50JCQxLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgdGhlbWU6IHRoZW1lUHJvcCwgcmVmOiByZWYgfSkpO1xuICAgICAgfVxuICAgICk7XG4gIH0pO1xuXG4gIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKFdpdGhUaGVtZSwgQ29tcG9uZW50JCQxKTtcblxuICBXaXRoVGhlbWUuZGlzcGxheU5hbWUgPSAnV2l0aFRoZW1lKCcgKyBnZXRDb21wb25lbnROYW1lKENvbXBvbmVudCQkMSkgKyAnKSc7XG5cbiAgcmV0dXJuIFdpdGhUaGVtZTtcbn0pO1xuXG4vLyBcblxuLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBfX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfSEFVTlRFRF9CWV9TUE9PS1lfR0hPU1RTID0ge1xuICBTdHlsZVNoZWV0OiBTdHlsZVNoZWV0XG59O1xuXG4vLyBcblxuLyogV2FybmluZyBpZiB5b3UndmUgaW1wb3J0ZWQgdGhpcyBmaWxlIG9uIFJlYWN0IE5hdGl2ZSAqL1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS53YXJuKFwiSXQgbG9va3MgbGlrZSB5b3UndmUgaW1wb3J0ZWQgJ3N0eWxlZC1jb21wb25lbnRzJyBvbiBSZWFjdCBOYXRpdmUuXFxuXCIgKyBcIlBlcmhhcHMgeW91J3JlIGxvb2tpbmcgdG8gaW1wb3J0ICdzdHlsZWQtY29tcG9uZW50cy9uYXRpdmUnP1xcblwiICsgJ1JlYWQgbW9yZSBhYm91dCB0aGlzIGF0IGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2Jhc2ljcyNyZWFjdC1uYXRpdmUnKTtcbn1cblxuLyogV2FybmluZyBpZiB0aGVyZSBhcmUgc2V2ZXJhbCBpbnN0YW5jZXMgb2Ygc3R5bGVkLWNvbXBvbmVudHMgKi9cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAndGVzdCcgJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG5hdmlnYXRvci51c2VyQWdlbnQgPT09ICdzdHJpbmcnICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignTm9kZS5qcycpID09PSAtMSAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ2pzZG9tJykgPT09IC0xKSB7XG4gIHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSA9IHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSB8fCAwO1xuXG4gIGlmICh3aW5kb3dbJ19fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fJ10gPT09IDEpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgdGhlcmUgYXJlIHNldmVyYWwgaW5zdGFuY2VzIG9mICdzdHlsZWQtY29tcG9uZW50cycgaW5pdGlhbGl6ZWQgaW4gdGhpcyBhcHBsaWNhdGlvbi4gXCIgKyAnVGhpcyBtYXkgY2F1c2UgZHluYW1pYyBzdHlsZXMgbm90IHJlbmRlcmluZyBwcm9wZXJseSwgZXJyb3JzIGhhcHBlbmluZyBkdXJpbmcgcmVoeWRyYXRpb24gcHJvY2VzcyAnICsgJ2FuZCBtYWtlcyB5b3VyIGFwcGxpY2F0aW9uIGJpZ2dlciB3aXRob3V0IGEgZ29vZCByZWFzb24uXFxuXFxuJyArICdTZWUgaHR0cHM6Ly9zLWMuc2gvMkJBWHplZCBmb3IgbW9yZSBpbmZvLicpO1xuICB9XG5cbiAgd2luZG93WydfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfXyddICs9IDE7XG59XG5cbi8vXG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxlZDtcbmV4cG9ydCB7IGNyZWF0ZUdsb2JhbFN0eWxlLCBjc3MsIGlzU3R5bGVkQ29tcG9uZW50LCBrZXlmcmFtZXMsIFNlcnZlclN0eWxlU2hlZXQsIFN0eWxlU2hlZXRDb25zdW1lciwgU3R5bGVTaGVldENvbnRleHQsIFN0eWxlU2hlZXRNYW5hZ2VyLCBUaGVtZUNvbnN1bWVyLCBUaGVtZUNvbnRleHQsIFRoZW1lUHJvdmlkZXIsIHdpdGhUaGVtZSwgX19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0hBVU5URURfQllfU1BPT0tZX0dIT1NUUyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGVkLWNvbXBvbmVudHMuYnJvd3Nlci5lc20uanMubWFwXG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJmdW5jdGlvbiBhcmVJbnB1dHNFcXVhbChuZXdJbnB1dHMsIGxhc3RJbnB1dHMpIHtcbiAgaWYgKG5ld0lucHV0cy5sZW5ndGggIT09IGxhc3RJbnB1dHMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZXdJbnB1dHMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAobmV3SW5wdXRzW2ldICE9PSBsYXN0SW5wdXRzW2ldKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIGluZGV4IChyZXN1bHRGbiwgaXNFcXVhbCkge1xuICBpZiAoaXNFcXVhbCA9PT0gdm9pZCAwKSB7XG4gICAgaXNFcXVhbCA9IGFyZUlucHV0c0VxdWFsO1xuICB9XG5cbiAgdmFyIGxhc3RUaGlzO1xuICB2YXIgbGFzdEFyZ3MgPSBbXTtcbiAgdmFyIGxhc3RSZXN1bHQ7XG4gIHZhciBjYWxsZWRPbmNlID0gZmFsc2U7XG5cbiAgdmFyIHJlc3VsdCA9IGZ1bmN0aW9uIHJlc3VsdCgpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbmV3QXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIG5ld0FyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgaWYgKGNhbGxlZE9uY2UgJiYgbGFzdFRoaXMgPT09IHRoaXMgJiYgaXNFcXVhbChuZXdBcmdzLCBsYXN0QXJncykpIHtcbiAgICAgIHJldHVybiBsYXN0UmVzdWx0O1xuICAgIH1cblxuICAgIGxhc3RSZXN1bHQgPSByZXN1bHRGbi5hcHBseSh0aGlzLCBuZXdBcmdzKTtcbiAgICBjYWxsZWRPbmNlID0gdHJ1ZTtcbiAgICBsYXN0VGhpcyA9IHRoaXM7XG4gICAgbGFzdEFyZ3MgPSBuZXdBcmdzO1xuICAgIHJldHVybiBsYXN0UmVzdWx0O1xuICB9O1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICBcImRlZmF1bHRcIjogb2JqXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdDsiLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iLCJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gc3R5bGU7XG5cbnZhciBfY2FtZWxpemVTdHlsZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3V0aWwvY2FtZWxpemVTdHlsZVwiKSk7XG5cbnZhciBfaHlwaGVuYXRlU3R5bGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlsL2h5cGhlbmF0ZVN0eWxlXCIpKTtcblxudmFyIF9nZXRDb21wdXRlZFN0eWxlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vZ2V0Q29tcHV0ZWRTdHlsZVwiKSk7XG5cbnZhciBfcmVtb3ZlU3R5bGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3JlbW92ZVN0eWxlXCIpKTtcblxudmFyIF9wcm9wZXJ0aWVzID0gcmVxdWlyZShcIi4uL3RyYW5zaXRpb24vcHJvcGVydGllc1wiKTtcblxudmFyIF9pc1RyYW5zZm9ybSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3RyYW5zaXRpb24vaXNUcmFuc2Zvcm1cIikpO1xuXG5mdW5jdGlvbiBzdHlsZShub2RlLCBwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgdmFyIGNzcyA9ICcnO1xuICB2YXIgdHJhbnNmb3JtcyA9ICcnO1xuICB2YXIgcHJvcHMgPSBwcm9wZXJ0eTtcblxuICBpZiAodHlwZW9mIHByb3BlcnR5ID09PSAnc3RyaW5nJykge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gbm9kZS5zdHlsZVsoMCwgX2NhbWVsaXplU3R5bGUuZGVmYXVsdCkocHJvcGVydHkpXSB8fCAoMCwgX2dldENvbXB1dGVkU3R5bGUyLmRlZmF1bHQpKG5vZGUpLmdldFByb3BlcnR5VmFsdWUoKDAsIF9oeXBoZW5hdGVTdHlsZS5kZWZhdWx0KShwcm9wZXJ0eSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAocHJvcHMgPSB7fSlbcHJvcGVydHldID0gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMocHJvcHMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciB2YWx1ZSA9IHByb3BzW2tleV07XG5cbiAgICBpZiAoIXZhbHVlICYmIHZhbHVlICE9PSAwKSB7XG4gICAgICAoMCwgX3JlbW92ZVN0eWxlLmRlZmF1bHQpKG5vZGUsICgwLCBfaHlwaGVuYXRlU3R5bGUuZGVmYXVsdCkoa2V5KSk7XG4gICAgfSBlbHNlIGlmICgoMCwgX2lzVHJhbnNmb3JtLmRlZmF1bHQpKGtleSkpIHtcbiAgICAgIHRyYW5zZm9ybXMgKz0ga2V5ICsgXCIoXCIgKyB2YWx1ZSArIFwiKSBcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgY3NzICs9ICgwLCBfaHlwaGVuYXRlU3R5bGUuZGVmYXVsdCkoa2V5KSArIFwiOiBcIiArIHZhbHVlICsgXCI7XCI7XG4gICAgfVxuICB9KTtcblxuICBpZiAodHJhbnNmb3Jtcykge1xuICAgIGNzcyArPSBfcHJvcGVydGllcy50cmFuc2Zvcm0gKyBcIjogXCIgKyB0cmFuc2Zvcm1zICsgXCI7XCI7XG4gIH1cblxuICBub2RlLnN0eWxlLmNzc1RleHQgKz0gJzsnICsgY3NzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNhbWVsaXplO1xudmFyIHJIeXBoZW4gPSAvLSguKS9nO1xuXG5mdW5jdGlvbiBjYW1lbGl6ZShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKHJIeXBoZW4sIGZ1bmN0aW9uIChfLCBjaHIpIHtcbiAgICByZXR1cm4gY2hyLnRvVXBwZXJDYXNlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsInZhciBub3cgPSByZXF1aXJlKCdwZXJmb3JtYW5jZS1ub3cnKVxuICAsIHJvb3QgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHdpbmRvd1xuICAsIHZlbmRvcnMgPSBbJ21veicsICd3ZWJraXQnXVxuICAsIHN1ZmZpeCA9ICdBbmltYXRpb25GcmFtZSdcbiAgLCByYWYgPSByb290WydyZXF1ZXN0JyArIHN1ZmZpeF1cbiAgLCBjYWYgPSByb290WydjYW5jZWwnICsgc3VmZml4XSB8fCByb290WydjYW5jZWxSZXF1ZXN0JyArIHN1ZmZpeF1cblxuZm9yKHZhciBpID0gMDsgIXJhZiAmJiBpIDwgdmVuZG9ycy5sZW5ndGg7IGkrKykge1xuICByYWYgPSByb290W3ZlbmRvcnNbaV0gKyAnUmVxdWVzdCcgKyBzdWZmaXhdXG4gIGNhZiA9IHJvb3RbdmVuZG9yc1tpXSArICdDYW5jZWwnICsgc3VmZml4XVxuICAgICAgfHwgcm9vdFt2ZW5kb3JzW2ldICsgJ0NhbmNlbFJlcXVlc3QnICsgc3VmZml4XVxufVxuXG4vLyBTb21lIHZlcnNpb25zIG9mIEZGIGhhdmUgckFGIGJ1dCBub3QgY0FGXG5pZighcmFmIHx8ICFjYWYpIHtcbiAgdmFyIGxhc3QgPSAwXG4gICAgLCBpZCA9IDBcbiAgICAsIHF1ZXVlID0gW11cbiAgICAsIGZyYW1lRHVyYXRpb24gPSAxMDAwIC8gNjBcblxuICByYWYgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgIGlmKHF1ZXVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdmFyIF9ub3cgPSBub3coKVxuICAgICAgICAsIG5leHQgPSBNYXRoLm1heCgwLCBmcmFtZUR1cmF0aW9uIC0gKF9ub3cgLSBsYXN0KSlcbiAgICAgIGxhc3QgPSBuZXh0ICsgX25vd1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGNwID0gcXVldWUuc2xpY2UoMClcbiAgICAgICAgLy8gQ2xlYXIgcXVldWUgaGVyZSB0byBwcmV2ZW50XG4gICAgICAgIC8vIGNhbGxiYWNrcyBmcm9tIGFwcGVuZGluZyBsaXN0ZW5lcnNcbiAgICAgICAgLy8gdG8gdGhlIGN1cnJlbnQgZnJhbWUncyBxdWV1ZVxuICAgICAgICBxdWV1ZS5sZW5ndGggPSAwXG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBjcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmKCFjcFtpXS5jYW5jZWxsZWQpIHtcbiAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgY3BbaV0uY2FsbGJhY2sobGFzdClcbiAgICAgICAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0aHJvdyBlIH0sIDApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBNYXRoLnJvdW5kKG5leHQpKVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKHtcbiAgICAgIGhhbmRsZTogKytpZCxcbiAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgIGNhbmNlbGxlZDogZmFsc2VcbiAgICB9KVxuICAgIHJldHVybiBpZFxuICB9XG5cbiAgY2FmID0gZnVuY3Rpb24oaGFuZGxlKSB7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHF1ZXVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZihxdWV1ZVtpXS5oYW5kbGUgPT09IGhhbmRsZSkge1xuICAgICAgICBxdWV1ZVtpXS5jYW5jZWxsZWQgPSB0cnVlXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZm4pIHtcbiAgLy8gV3JhcCBpbiBhIG5ldyBmdW5jdGlvbiB0byBwcmV2ZW50XG4gIC8vIGBjYW5jZWxgIHBvdGVudGlhbGx5IGJlaW5nIGFzc2lnbmVkXG4gIC8vIHRvIHRoZSBuYXRpdmUgckFGIGZ1bmN0aW9uXG4gIHJldHVybiByYWYuY2FsbChyb290LCBmbilcbn1cbm1vZHVsZS5leHBvcnRzLmNhbmNlbCA9IGZ1bmN0aW9uKCkge1xuICBjYWYuYXBwbHkocm9vdCwgYXJndW1lbnRzKVxufVxubW9kdWxlLmV4cG9ydHMucG9seWZpbGwgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgaWYgKCFvYmplY3QpIHtcbiAgICBvYmplY3QgPSByb290O1xuICB9XG4gIG9iamVjdC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSByYWZcbiAgb2JqZWN0LmNhbmNlbEFuaW1hdGlvbkZyYW1lID0gY2FmXG59XG4iLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuXHR2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgc2l6ZXJTdHlsZSA9IHtcblx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdHRvcDogMCxcblx0bGVmdDogMCxcblx0dmlzaWJpbGl0eTogJ2hpZGRlbicsXG5cdGhlaWdodDogMCxcblx0b3ZlcmZsb3c6ICdzY3JvbGwnLFxuXHR3aGl0ZVNwYWNlOiAncHJlJ1xufTtcblxudmFyIElOUFVUX1BST1BTX0JMQUNLTElTVCA9IFsnZXh0cmFXaWR0aCcsICdpbmplY3RTdHlsZXMnLCAnaW5wdXRDbGFzc05hbWUnLCAnaW5wdXRSZWYnLCAnaW5wdXRTdHlsZScsICdtaW5XaWR0aCcsICdvbkF1dG9zaXplJywgJ3BsYWNlaG9sZGVySXNNaW5XaWR0aCddO1xuXG52YXIgY2xlYW5JbnB1dFByb3BzID0gZnVuY3Rpb24gY2xlYW5JbnB1dFByb3BzKGlucHV0UHJvcHMpIHtcblx0SU5QVVRfUFJPUFNfQkxBQ0tMSVNULmZvckVhY2goZnVuY3Rpb24gKGZpZWxkKSB7XG5cdFx0cmV0dXJuIGRlbGV0ZSBpbnB1dFByb3BzW2ZpZWxkXTtcblx0fSk7XG5cdHJldHVybiBpbnB1dFByb3BzO1xufTtcblxudmFyIGNvcHlTdHlsZXMgPSBmdW5jdGlvbiBjb3B5U3R5bGVzKHN0eWxlcywgbm9kZSkge1xuXHRub2RlLnN0eWxlLmZvbnRTaXplID0gc3R5bGVzLmZvbnRTaXplO1xuXHRub2RlLnN0eWxlLmZvbnRGYW1pbHkgPSBzdHlsZXMuZm9udEZhbWlseTtcblx0bm9kZS5zdHlsZS5mb250V2VpZ2h0ID0gc3R5bGVzLmZvbnRXZWlnaHQ7XG5cdG5vZGUuc3R5bGUuZm9udFN0eWxlID0gc3R5bGVzLmZvbnRTdHlsZTtcblx0bm9kZS5zdHlsZS5sZXR0ZXJTcGFjaW5nID0gc3R5bGVzLmxldHRlclNwYWNpbmc7XG5cdG5vZGUuc3R5bGUudGV4dFRyYW5zZm9ybSA9IHN0eWxlcy50ZXh0VHJhbnNmb3JtO1xufTtcblxudmFyIGlzSUUgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cubmF2aWdhdG9yID8gL01TSUUgfFRyaWRlbnRcXC98RWRnZVxcLy8udGVzdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCkgOiBmYWxzZTtcblxudmFyIGdlbmVyYXRlSWQgPSBmdW5jdGlvbiBnZW5lcmF0ZUlkKCkge1xuXHQvLyB3ZSBvbmx5IG5lZWQgYW4gYXV0by1nZW5lcmF0ZWQgSUQgZm9yIHN0eWxlc2hlZXQgaW5qZWN0aW9uLCB3aGljaCBpcyBvbmx5XG5cdC8vIHVzZWQgZm9yIElFLiBzbyBpZiB0aGUgYnJvd3NlciBpcyBub3QgSUUsIHRoaXMgc2hvdWxkIHJldHVybiB1bmRlZmluZWQuXG5cdHJldHVybiBpc0lFID8gJ18nICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDEyKSA6IHVuZGVmaW5lZDtcbn07XG5cbnZhciBBdXRvc2l6ZUlucHV0ID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcblx0X2luaGVyaXRzKEF1dG9zaXplSW5wdXQsIF9Db21wb25lbnQpO1xuXG5cdGZ1bmN0aW9uIEF1dG9zaXplSW5wdXQocHJvcHMpIHtcblx0XHRfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXV0b3NpemVJbnB1dCk7XG5cblx0XHR2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoQXV0b3NpemVJbnB1dC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEF1dG9zaXplSW5wdXQpKS5jYWxsKHRoaXMsIHByb3BzKSk7XG5cblx0XHRfdGhpcy5pbnB1dFJlZiA9IGZ1bmN0aW9uIChlbCkge1xuXHRcdFx0X3RoaXMuaW5wdXQgPSBlbDtcblx0XHRcdGlmICh0eXBlb2YgX3RoaXMucHJvcHMuaW5wdXRSZWYgPT09ICdmdW5jdGlvbicpIHtcblx0XHRcdFx0X3RoaXMucHJvcHMuaW5wdXRSZWYoZWwpO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHRfdGhpcy5wbGFjZUhvbGRlclNpemVyUmVmID0gZnVuY3Rpb24gKGVsKSB7XG5cdFx0XHRfdGhpcy5wbGFjZUhvbGRlclNpemVyID0gZWw7XG5cdFx0fTtcblxuXHRcdF90aGlzLnNpemVyUmVmID0gZnVuY3Rpb24gKGVsKSB7XG5cdFx0XHRfdGhpcy5zaXplciA9IGVsO1xuXHRcdH07XG5cblx0XHRfdGhpcy5zdGF0ZSA9IHtcblx0XHRcdGlucHV0V2lkdGg6IHByb3BzLm1pbldpZHRoLFxuXHRcdFx0aW5wdXRJZDogcHJvcHMuaWQgfHwgZ2VuZXJhdGVJZCgpXG5cdFx0fTtcblx0XHRyZXR1cm4gX3RoaXM7XG5cdH1cblxuXHRfY3JlYXRlQ2xhc3MoQXV0b3NpemVJbnB1dCwgW3tcblx0XHRrZXk6ICdjb21wb25lbnREaWRNb3VudCcsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuXHRcdFx0dGhpcy5tb3VudGVkID0gdHJ1ZTtcblx0XHRcdHRoaXMuY29weUlucHV0U3R5bGVzKCk7XG5cdFx0XHR0aGlzLnVwZGF0ZUlucHV0V2lkdGgoKTtcblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcblx0XHRcdHZhciBpZCA9IG5leHRQcm9wcy5pZDtcblxuXHRcdFx0aWYgKGlkICE9PSB0aGlzLnByb3BzLmlkKSB7XG5cdFx0XHRcdHRoaXMuc2V0U3RhdGUoeyBpbnB1dElkOiBpZCB8fCBnZW5lcmF0ZUlkKCkgfSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAnY29tcG9uZW50RGlkVXBkYXRlJyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcywgcHJldlN0YXRlKSB7XG5cdFx0XHRpZiAocHJldlN0YXRlLmlucHV0V2lkdGggIT09IHRoaXMuc3RhdGUuaW5wdXRXaWR0aCkge1xuXHRcdFx0XHRpZiAodHlwZW9mIHRoaXMucHJvcHMub25BdXRvc2l6ZSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHRcdHRoaXMucHJvcHMub25BdXRvc2l6ZSh0aGlzLnN0YXRlLmlucHV0V2lkdGgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHR0aGlzLnVwZGF0ZUlucHV0V2lkdGgoKTtcblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdjb21wb25lbnRXaWxsVW5tb3VudCcsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuXHRcdFx0dGhpcy5tb3VudGVkID0gZmFsc2U7XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAnY29weUlucHV0U3R5bGVzJyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gY29weUlucHV0U3R5bGVzKCkge1xuXHRcdFx0aWYgKCF0aGlzLm1vdW50ZWQgfHwgIXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdHZhciBpbnB1dFN0eWxlcyA9IHRoaXMuaW5wdXQgJiYgd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5pbnB1dCk7XG5cdFx0XHRpZiAoIWlucHV0U3R5bGVzKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGNvcHlTdHlsZXMoaW5wdXRTdHlsZXMsIHRoaXMuc2l6ZXIpO1xuXHRcdFx0aWYgKHRoaXMucGxhY2VIb2xkZXJTaXplcikge1xuXHRcdFx0XHRjb3B5U3R5bGVzKGlucHV0U3R5bGVzLCB0aGlzLnBsYWNlSG9sZGVyU2l6ZXIpO1xuXHRcdFx0fVxuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ3VwZGF0ZUlucHV0V2lkdGgnLFxuXHRcdHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVJbnB1dFdpZHRoKCkge1xuXHRcdFx0aWYgKCF0aGlzLm1vdW50ZWQgfHwgIXRoaXMuc2l6ZXIgfHwgdHlwZW9mIHRoaXMuc2l6ZXIuc2Nyb2xsV2lkdGggPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdHZhciBuZXdJbnB1dFdpZHRoID0gdm9pZCAwO1xuXHRcdFx0aWYgKHRoaXMucHJvcHMucGxhY2Vob2xkZXIgJiYgKCF0aGlzLnByb3BzLnZhbHVlIHx8IHRoaXMucHJvcHMudmFsdWUgJiYgdGhpcy5wcm9wcy5wbGFjZWhvbGRlcklzTWluV2lkdGgpKSB7XG5cdFx0XHRcdG5ld0lucHV0V2lkdGggPSBNYXRoLm1heCh0aGlzLnNpemVyLnNjcm9sbFdpZHRoLCB0aGlzLnBsYWNlSG9sZGVyU2l6ZXIuc2Nyb2xsV2lkdGgpICsgMjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG5ld0lucHV0V2lkdGggPSB0aGlzLnNpemVyLnNjcm9sbFdpZHRoICsgMjtcblx0XHRcdH1cblx0XHRcdC8vIGFkZCBleHRyYVdpZHRoIHRvIHRoZSBkZXRlY3RlZCB3aWR0aC4gZm9yIG51bWJlciB0eXBlcywgdGhpcyBkZWZhdWx0cyB0byAxNiB0byBhbGxvdyBmb3IgdGhlIHN0ZXBwZXIgVUlcblx0XHRcdHZhciBleHRyYVdpZHRoID0gdGhpcy5wcm9wcy50eXBlID09PSAnbnVtYmVyJyAmJiB0aGlzLnByb3BzLmV4dHJhV2lkdGggPT09IHVuZGVmaW5lZCA/IDE2IDogcGFyc2VJbnQodGhpcy5wcm9wcy5leHRyYVdpZHRoKSB8fCAwO1xuXHRcdFx0bmV3SW5wdXRXaWR0aCArPSBleHRyYVdpZHRoO1xuXHRcdFx0aWYgKG5ld0lucHV0V2lkdGggPCB0aGlzLnByb3BzLm1pbldpZHRoKSB7XG5cdFx0XHRcdG5ld0lucHV0V2lkdGggPSB0aGlzLnByb3BzLm1pbldpZHRoO1xuXHRcdFx0fVxuXHRcdFx0aWYgKG5ld0lucHV0V2lkdGggIT09IHRoaXMuc3RhdGUuaW5wdXRXaWR0aCkge1xuXHRcdFx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdFx0XHRpbnB1dFdpZHRoOiBuZXdJbnB1dFdpZHRoXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ2dldElucHV0Jyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gZ2V0SW5wdXQoKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5pbnB1dDtcblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdmb2N1cycsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIGZvY3VzKCkge1xuXHRcdFx0dGhpcy5pbnB1dC5mb2N1cygpO1xuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ2JsdXInLFxuXHRcdHZhbHVlOiBmdW5jdGlvbiBibHVyKCkge1xuXHRcdFx0dGhpcy5pbnB1dC5ibHVyKCk7XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAnc2VsZWN0Jyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gc2VsZWN0KCkge1xuXHRcdFx0dGhpcy5pbnB1dC5zZWxlY3QoKTtcblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdyZW5kZXJTdHlsZXMnLFxuXHRcdHZhbHVlOiBmdW5jdGlvbiByZW5kZXJTdHlsZXMoKSB7XG5cdFx0XHQvLyB0aGlzIG1ldGhvZCBpbmplY3RzIHN0eWxlcyB0byBoaWRlIElFJ3MgY2xlYXIgaW5kaWNhdG9yLCB3aGljaCBtZXNzZXNcblx0XHRcdC8vIHdpdGggaW5wdXQgc2l6ZSBkZXRlY3Rpb24uIHRoZSBzdHlsZXNoZWV0IGlzIG9ubHkgaW5qZWN0ZWQgd2hlbiB0aGVcblx0XHRcdC8vIGJyb3dzZXIgaXMgSUUsIGFuZCBjYW4gYWxzbyBiZSBkaXNhYmxlZCBieSB0aGUgYGluamVjdFN0eWxlc2AgcHJvcC5cblx0XHRcdHZhciBpbmplY3RTdHlsZXMgPSB0aGlzLnByb3BzLmluamVjdFN0eWxlcztcblxuXHRcdFx0cmV0dXJuIGlzSUUgJiYgaW5qZWN0U3R5bGVzID8gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJywgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuXHRcdFx0XHRcdF9faHRtbDogJ2lucHV0IycgKyB0aGlzLnN0YXRlLmlucHV0SWQgKyAnOjotbXMtY2xlYXIge2Rpc3BsYXk6IG5vbmU7fSdcblx0XHRcdFx0fSB9KSA6IG51bGw7XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAncmVuZGVyJyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuXHRcdFx0dmFyIHNpemVyVmFsdWUgPSBbdGhpcy5wcm9wcy5kZWZhdWx0VmFsdWUsIHRoaXMucHJvcHMudmFsdWUsICcnXS5yZWR1Y2UoZnVuY3Rpb24gKHByZXZpb3VzVmFsdWUsIGN1cnJlbnRWYWx1ZSkge1xuXHRcdFx0XHRpZiAocHJldmlvdXNWYWx1ZSAhPT0gbnVsbCAmJiBwcmV2aW91c1ZhbHVlICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRyZXR1cm4gcHJldmlvdXNWYWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gY3VycmVudFZhbHVlO1xuXHRcdFx0fSk7XG5cblx0XHRcdHZhciB3cmFwcGVyU3R5bGUgPSBfZXh0ZW5kcyh7fSwgdGhpcy5wcm9wcy5zdHlsZSk7XG5cdFx0XHRpZiAoIXdyYXBwZXJTdHlsZS5kaXNwbGF5KSB3cmFwcGVyU3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xuXG5cdFx0XHR2YXIgaW5wdXRTdHlsZSA9IF9leHRlbmRzKHtcblx0XHRcdFx0Ym94U2l6aW5nOiAnY29udGVudC1ib3gnLFxuXHRcdFx0XHR3aWR0aDogdGhpcy5zdGF0ZS5pbnB1dFdpZHRoICsgJ3B4J1xuXHRcdFx0fSwgdGhpcy5wcm9wcy5pbnB1dFN0eWxlKTtcblxuXHRcdFx0dmFyIGlucHV0UHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXModGhpcy5wcm9wcywgW10pO1xuXG5cdFx0XHRjbGVhbklucHV0UHJvcHMoaW5wdXRQcm9wcyk7XG5cdFx0XHRpbnB1dFByb3BzLmNsYXNzTmFtZSA9IHRoaXMucHJvcHMuaW5wdXRDbGFzc05hbWU7XG5cdFx0XHRpbnB1dFByb3BzLmlkID0gdGhpcy5zdGF0ZS5pbnB1dElkO1xuXHRcdFx0aW5wdXRQcm9wcy5zdHlsZSA9IGlucHV0U3R5bGU7XG5cblx0XHRcdHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0J2RpdicsXG5cdFx0XHRcdHsgY2xhc3NOYW1lOiB0aGlzLnByb3BzLmNsYXNzTmFtZSwgc3R5bGU6IHdyYXBwZXJTdHlsZSB9LFxuXHRcdFx0XHR0aGlzLnJlbmRlclN0eWxlcygpLFxuXHRcdFx0XHRfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCgnaW5wdXQnLCBfZXh0ZW5kcyh7fSwgaW5wdXRQcm9wcywgeyByZWY6IHRoaXMuaW5wdXRSZWYgfSkpLFxuXHRcdFx0XHRfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0XHQnZGl2Jyxcblx0XHRcdFx0XHR7IHJlZjogdGhpcy5zaXplclJlZiwgc3R5bGU6IHNpemVyU3R5bGUgfSxcblx0XHRcdFx0XHRzaXplclZhbHVlXG5cdFx0XHRcdCksXG5cdFx0XHRcdHRoaXMucHJvcHMucGxhY2Vob2xkZXIgPyBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0XHQnZGl2Jyxcblx0XHRcdFx0XHR7IHJlZjogdGhpcy5wbGFjZUhvbGRlclNpemVyUmVmLCBzdHlsZTogc2l6ZXJTdHlsZSB9LFxuXHRcdFx0XHRcdHRoaXMucHJvcHMucGxhY2Vob2xkZXJcblx0XHRcdFx0KSA6IG51bGxcblx0XHRcdCk7XG5cdFx0fVxuXHR9XSk7XG5cblx0cmV0dXJuIEF1dG9zaXplSW5wdXQ7XG59KF9yZWFjdC5Db21wb25lbnQpO1xuXG5BdXRvc2l6ZUlucHV0LnByb3BUeXBlcyA9IHtcblx0Y2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgLy8gY2xhc3NOYW1lIGZvciB0aGUgb3V0ZXIgZWxlbWVudFxuXHRkZWZhdWx0VmFsdWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYW55LCAvLyBkZWZhdWx0IGZpZWxkIHZhbHVlXG5cdGV4dHJhV2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFsvLyBhZGRpdGlvbmFsIHdpZHRoIGZvciBpbnB1dCBlbGVtZW50XG5cdF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLCBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ10pLFxuXHRpZDogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIC8vIGlkIHRvIHVzZSBmb3IgdGhlIGlucHV0LCBjYW4gYmUgc2V0IGZvciBjb25zaXN0ZW50IHNuYXBzaG90c1xuXHRpbmplY3RTdHlsZXM6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCwgLy8gaW5qZWN0IHRoZSBjdXN0b20gc3R5bGVzaGVldCB0byBoaWRlIGNsZWFyIFVJLCBkZWZhdWx0cyB0byB0cnVlXG5cdGlucHV0Q2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgLy8gY2xhc3NOYW1lIGZvciB0aGUgaW5wdXQgZWxlbWVudFxuXHRpbnB1dFJlZjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLCAvLyByZWYgY2FsbGJhY2sgZm9yIHRoZSBpbnB1dCBlbGVtZW50XG5cdGlucHV0U3R5bGU6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LCAvLyBjc3Mgc3R5bGVzIGZvciB0aGUgaW5wdXQgZWxlbWVudFxuXHRtaW5XaWR0aDogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoWy8vIG1pbmltdW0gd2lkdGggZm9yIGlucHV0IGVsZW1lbnRcblx0X3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXIsIF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXSksXG5cdG9uQXV0b3NpemU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYywgLy8gb25BdXRvc2l6ZSBoYW5kbGVyOiBmdW5jdGlvbihuZXdXaWR0aCkge31cblx0b25DaGFuZ2U6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYywgLy8gb25DaGFuZ2UgaGFuZGxlcjogZnVuY3Rpb24oZXZlbnQpIHt9XG5cdHBsYWNlaG9sZGVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgLy8gcGxhY2Vob2xkZXIgdGV4dFxuXHRwbGFjZWhvbGRlcklzTWluV2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCwgLy8gZG9uJ3QgY29sbGFwc2Ugc2l6ZSB0byBsZXNzIHRoYW4gdGhlIHBsYWNlaG9sZGVyXG5cdHN0eWxlOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCwgLy8gY3NzIHN0eWxlcyBmb3IgdGhlIG91dGVyIGVsZW1lbnRcblx0dmFsdWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYW55IC8vIGZpZWxkIHZhbHVlXG59O1xuQXV0b3NpemVJbnB1dC5kZWZhdWx0UHJvcHMgPSB7XG5cdG1pbldpZHRoOiAxLFxuXHRpbmplY3RTdHlsZXM6IHRydWVcbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IEF1dG9zaXplSW5wdXQ7IiwiIWZ1bmN0aW9uKGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUobnVsbCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShlKG51bGwpKTp3aW5kb3cuc3R5bGlzPWUobnVsbCl9KGZ1bmN0aW9uIGUoYSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9L15cXDArL2csYz0vW1xcMFxcclxcZl0vZyxzPS86ICovZyx0PS96b298Z3JhLyxpPS8oWyw6IF0pKHRyYW5zZm9ybSkvZyxmPS8sK1xccyooPyFbXihdKlspXSkvZyxuPS8gK1xccyooPyFbXihdKlspXSkvZyxsPS8gKltcXDBdICovZyxvPS8sXFxyKz8vZyxoPS8oW1xcdFxcclxcbiBdKSpcXGY/Ji9nLHU9LzpnbG9iYWxcXCgoKD86W15cXChcXClcXFtcXF1dKnxcXFsuKlxcXXxcXChbXlxcKFxcKV0qXFwpKSopXFwpL2csZD0vXFxXKy9nLGI9L0Aoa1xcdyspXFxzKihcXFMqKVxccyovLHA9Lzo6KHBsYWNlKS9nLGs9LzoocmVhZC1vbmx5KS9nLGc9L1xccysoPz1be1xcXTs9Oj5dKS9nLEE9LyhbW309Oj5dKVxccysvZyxDPS8oXFx7W157XSs/KTsoPz1cXH0pL2csdz0vXFxzezIsfS9nLHY9LyhbXlxcKF0pKDorKSAqL2csbT0vW3N2aF1cXHcrLVt0YmxyXXsyfS8seD0vXFwoXFxzKiguKilcXHMqXFwpL2csJD0vKFtcXHNcXFNdKj8pOy9nLHk9Ly1zZWxmfGZsZXgtL2csTz0vW15dKj8oOltycF1bZWxdYVtcXHctXSspW15dKi8saj0vc3RyZXRjaHw6XFxzKlxcdytcXC0oPzpjb250ZXxhdmFpbCkvLHo9LyhbXi1dKShpbWFnZS1zZXRcXCgpLyxOPVwiLXdlYmtpdC1cIixTPVwiLW1vei1cIixGPVwiLW1zLVwiLFc9NTkscT0xMjUsQj0xMjMsRD00MCxFPTQxLEc9OTEsSD05MyxJPTEwLEo9MTMsSz05LEw9NjQsTT0zMixQPTM4LFE9NDUsUj05NSxUPTQyLFU9NDQsVj01OCxYPTM5LFk9MzQsWj00NyxfPTYyLGVlPTQzLGFlPTEyNixyZT0wLGNlPTEyLHNlPTExLHRlPTEwNyxpZT0xMDksZmU9MTE1LG5lPTExMixsZT0xMTEsb2U9MTA1LGhlPTk5LHVlPTEwMCxkZT0xMTIsYmU9MSxwZT0xLGtlPTAsZ2U9MSxBZT0xLENlPTEsd2U9MCx2ZT0wLG1lPTAseGU9W10sJGU9W10seWU9MCxPZT1udWxsLGplPS0yLHplPS0xLE5lPTAsU2U9MSxGZT0yLFdlPTMscWU9MCxCZT0xLERlPVwiXCIsRWU9XCJcIixHZT1cIlwiO2Z1bmN0aW9uIEhlKGUsYSxzLHQsaSl7Zm9yKHZhciBmLG4sbz0wLGg9MCx1PTAsZD0wLGc9MCxBPTAsQz0wLHc9MCxtPTAsJD0wLHk9MCxPPTAsaj0wLHo9MCxSPTAsd2U9MCwkZT0wLE9lPTAsamU9MCx6ZT1zLmxlbmd0aCxKZT16ZS0xLFJlPVwiXCIsVGU9XCJcIixVZT1cIlwiLFZlPVwiXCIsWGU9XCJcIixZZT1cIlwiO1I8emU7KXtpZihDPXMuY2hhckNvZGVBdChSKSxSPT09SmUpaWYoaCtkK3UrbyE9PTApe2lmKDAhPT1oKUM9aD09PVo/STpaO2Q9dT1vPTAsemUrKyxKZSsrfWlmKGgrZCt1K289PT0wKXtpZihSPT09SmUpe2lmKHdlPjApVGU9VGUucmVwbGFjZShjLFwiXCIpO2lmKFRlLnRyaW0oKS5sZW5ndGg+MCl7c3dpdGNoKEMpe2Nhc2UgTTpjYXNlIEs6Y2FzZSBXOmNhc2UgSjpjYXNlIEk6YnJlYWs7ZGVmYXVsdDpUZSs9cy5jaGFyQXQoUil9Qz1XfX1pZigxPT09JGUpc3dpdGNoKEMpe2Nhc2UgQjpjYXNlIHE6Y2FzZSBXOmNhc2UgWTpjYXNlIFg6Y2FzZSBEOmNhc2UgRTpjYXNlIFU6JGU9MDtjYXNlIEs6Y2FzZSBKOmNhc2UgSTpjYXNlIE06YnJlYWs7ZGVmYXVsdDpmb3IoJGU9MCxqZT1SLGc9QyxSLS0sQz1XO2plPHplOylzd2l0Y2gocy5jaGFyQ29kZUF0KGplKyspKXtjYXNlIEk6Y2FzZSBKOmNhc2UgVzorK1IsQz1nLGplPXplO2JyZWFrO2Nhc2UgVjppZih3ZT4wKSsrUixDPWc7Y2FzZSBCOmplPXplfX1zd2l0Y2goQyl7Y2FzZSBCOmZvcihnPShUZT1UZS50cmltKCkpLmNoYXJDb2RlQXQoMCkseT0xLGplPSsrUjtSPHplOyl7c3dpdGNoKEM9cy5jaGFyQ29kZUF0KFIpKXtjYXNlIEI6eSsrO2JyZWFrO2Nhc2UgcTp5LS07YnJlYWs7Y2FzZSBaOnN3aXRjaChBPXMuY2hhckNvZGVBdChSKzEpKXtjYXNlIFQ6Y2FzZSBaOlI9UWUoQSxSLEplLHMpfWJyZWFrO2Nhc2UgRzpDKys7Y2FzZSBEOkMrKztjYXNlIFk6Y2FzZSBYOmZvcig7UisrPEplJiZzLmNoYXJDb2RlQXQoUikhPT1DOyk7fWlmKDA9PT15KWJyZWFrO1IrK31pZihVZT1zLnN1YnN0cmluZyhqZSxSKSxnPT09cmUpZz0oVGU9VGUucmVwbGFjZShyLFwiXCIpLnRyaW0oKSkuY2hhckNvZGVBdCgwKTtzd2l0Y2goZyl7Y2FzZSBMOmlmKHdlPjApVGU9VGUucmVwbGFjZShjLFwiXCIpO3N3aXRjaChBPVRlLmNoYXJDb2RlQXQoMSkpe2Nhc2UgdWU6Y2FzZSBpZTpjYXNlIGZlOmNhc2UgUTpmPWE7YnJlYWs7ZGVmYXVsdDpmPXhlfWlmKGplPShVZT1IZShhLGYsVWUsQSxpKzEpKS5sZW5ndGgsbWU+MCYmMD09PWplKWplPVRlLmxlbmd0aDtpZih5ZT4wKWlmKGY9SWUoeGUsVGUsT2UpLG49UGUoV2UsVWUsZixhLHBlLGJlLGplLEEsaSx0KSxUZT1mLmpvaW4oXCJcIiksdm9pZCAwIT09bilpZigwPT09KGplPShVZT1uLnRyaW0oKSkubGVuZ3RoKSlBPTAsVWU9XCJcIjtpZihqZT4wKXN3aXRjaChBKXtjYXNlIGZlOlRlPVRlLnJlcGxhY2UoeCxNZSk7Y2FzZSB1ZTpjYXNlIGllOmNhc2UgUTpVZT1UZStcIntcIitVZStcIn1cIjticmVhaztjYXNlIHRlOmlmKFVlPShUZT1UZS5yZXBsYWNlKGIsXCIkMSAkMlwiKyhCZT4wP0RlOlwiXCIpKSkrXCJ7XCIrVWUrXCJ9XCIsMT09PUFlfHwyPT09QWUmJkxlKFwiQFwiK1VlLDMpKVVlPVwiQFwiK04rVWUrXCJAXCIrVWU7ZWxzZSBVZT1cIkBcIitVZTticmVhaztkZWZhdWx0OmlmKFVlPVRlK1VlLHQ9PT1kZSlWZSs9VWUsVWU9XCJcIn1lbHNlIFVlPVwiXCI7YnJlYWs7ZGVmYXVsdDpVZT1IZShhLEllKGEsVGUsT2UpLFVlLHQsaSsxKX1YZSs9VWUsTz0wLCRlPTAsej0wLHdlPTAsT2U9MCxqPTAsVGU9XCJcIixVZT1cIlwiLEM9cy5jaGFyQ29kZUF0KCsrUik7YnJlYWs7Y2FzZSBxOmNhc2UgVzppZigoamU9KFRlPSh3ZT4wP1RlLnJlcGxhY2UoYyxcIlwiKTpUZSkudHJpbSgpKS5sZW5ndGgpPjEpe2lmKDA9PT16KWlmKChnPVRlLmNoYXJDb2RlQXQoMCkpPT09UXx8Zz45NiYmZzwxMjMpamU9KFRlPVRlLnJlcGxhY2UoXCIgXCIsXCI6XCIpKS5sZW5ndGg7aWYoeWU+MClpZih2b2lkIDAhPT0obj1QZShTZSxUZSxhLGUscGUsYmUsVmUubGVuZ3RoLHQsaSx0KSkpaWYoMD09PShqZT0oVGU9bi50cmltKCkpLmxlbmd0aCkpVGU9XCJcXDBcXDBcIjtzd2l0Y2goZz1UZS5jaGFyQ29kZUF0KDApLEE9VGUuY2hhckNvZGVBdCgxKSxnKXtjYXNlIHJlOmJyZWFrO2Nhc2UgTDppZihBPT09b2V8fEE9PT1oZSl7WWUrPVRlK3MuY2hhckF0KFIpO2JyZWFrfWRlZmF1bHQ6aWYoVGUuY2hhckNvZGVBdChqZS0xKT09PVYpYnJlYWs7VmUrPUtlKFRlLGcsQSxUZS5jaGFyQ29kZUF0KDIpKX19Tz0wLCRlPTAsej0wLHdlPTAsT2U9MCxUZT1cIlwiLEM9cy5jaGFyQ29kZUF0KCsrUil9fXN3aXRjaChDKXtjYXNlIEo6Y2FzZSBJOmlmKGgrZCt1K28rdmU9PT0wKXN3aXRjaCgkKXtjYXNlIEU6Y2FzZSBYOmNhc2UgWTpjYXNlIEw6Y2FzZSBhZTpjYXNlIF86Y2FzZSBUOmNhc2UgZWU6Y2FzZSBaOmNhc2UgUTpjYXNlIFY6Y2FzZSBVOmNhc2UgVzpjYXNlIEI6Y2FzZSBxOmJyZWFrO2RlZmF1bHQ6aWYoej4wKSRlPTF9aWYoaD09PVopaD0wO2Vsc2UgaWYoZ2UrTz09PTAmJnQhPT10ZSYmVGUubGVuZ3RoPjApd2U9MSxUZSs9XCJcXDBcIjtpZih5ZSpxZT4wKVBlKE5lLFRlLGEsZSxwZSxiZSxWZS5sZW5ndGgsdCxpLHQpO2JlPTEscGUrKzticmVhaztjYXNlIFc6Y2FzZSBxOmlmKGgrZCt1K289PT0wKXtiZSsrO2JyZWFrfWRlZmF1bHQ6c3dpdGNoKGJlKyssUmU9cy5jaGFyQXQoUiksQyl7Y2FzZSBLOmNhc2UgTTppZihkK28raD09PTApc3dpdGNoKHcpe2Nhc2UgVTpjYXNlIFY6Y2FzZSBLOmNhc2UgTTpSZT1cIlwiO2JyZWFrO2RlZmF1bHQ6aWYoQyE9PU0pUmU9XCIgXCJ9YnJlYWs7Y2FzZSByZTpSZT1cIlxcXFwwXCI7YnJlYWs7Y2FzZSBjZTpSZT1cIlxcXFxmXCI7YnJlYWs7Y2FzZSBzZTpSZT1cIlxcXFx2XCI7YnJlYWs7Y2FzZSBQOmlmKGQraCtvPT09MCYmZ2U+MClPZT0xLHdlPTEsUmU9XCJcXGZcIitSZTticmVhaztjYXNlIDEwODppZihkK2grbytrZT09PTAmJno+MClzd2l0Y2goUi16KXtjYXNlIDI6aWYodz09PW5lJiZzLmNoYXJDb2RlQXQoUi0zKT09PVYpa2U9dztjYXNlIDg6aWYobT09PWxlKWtlPW19YnJlYWs7Y2FzZSBWOmlmKGQraCtvPT09MCl6PVI7YnJlYWs7Y2FzZSBVOmlmKGgrdStkK289PT0wKXdlPTEsUmUrPVwiXFxyXCI7YnJlYWs7Y2FzZSBZOmNhc2UgWDppZigwPT09aClkPWQ9PT1DPzA6MD09PWQ/QzpkO2JyZWFrO2Nhc2UgRzppZihkK2grdT09PTApbysrO2JyZWFrO2Nhc2UgSDppZihkK2grdT09PTApby0tO2JyZWFrO2Nhc2UgRTppZihkK2grbz09PTApdS0tO2JyZWFrO2Nhc2UgRDppZihkK2grbz09PTApe2lmKDA9PT1PKXN3aXRjaCgyKncrMyptKXtjYXNlIDUzMzpicmVhaztkZWZhdWx0Onk9MCxPPTF9dSsrfWJyZWFrO2Nhc2UgTDppZihoK3UrZCtvK3oraj09PTApaj0xO2JyZWFrO2Nhc2UgVDpjYXNlIFo6aWYoZCtvK3U+MClicmVhaztzd2l0Y2goaCl7Y2FzZSAwOnN3aXRjaCgyKkMrMypzLmNoYXJDb2RlQXQoUisxKSl7Y2FzZSAyMzU6aD1aO2JyZWFrO2Nhc2UgMjIwOmplPVIsaD1UfWJyZWFrO2Nhc2UgVDppZihDPT09WiYmdz09PVQmJmplKzIhPT1SKXtpZigzMz09PXMuY2hhckNvZGVBdChqZSsyKSlWZSs9cy5zdWJzdHJpbmcoamUsUisxKTtSZT1cIlwiLGg9MH19fWlmKDA9PT1oKXtpZihnZStkK28raj09PTAmJnQhPT10ZSYmQyE9PVcpc3dpdGNoKEMpe2Nhc2UgVTpjYXNlIGFlOmNhc2UgXzpjYXNlIGVlOmNhc2UgRTpjYXNlIEQ6aWYoMD09PU8pe3N3aXRjaCh3KXtjYXNlIEs6Y2FzZSBNOmNhc2UgSTpjYXNlIEo6UmUrPVwiXFwwXCI7YnJlYWs7ZGVmYXVsdDpSZT1cIlxcMFwiK1JlKyhDPT09VT9cIlwiOlwiXFwwXCIpfXdlPTF9ZWxzZSBzd2l0Y2goQyl7Y2FzZSBEOmlmKHorNz09PVImJjEwOD09PXcpej0wO089Kyt5O2JyZWFrO2Nhc2UgRTppZigwPT0oTz0tLXkpKXdlPTEsUmUrPVwiXFwwXCJ9YnJlYWs7Y2FzZSBLOmNhc2UgTTpzd2l0Y2godyl7Y2FzZSByZTpjYXNlIEI6Y2FzZSBxOmNhc2UgVzpjYXNlIFU6Y2FzZSBjZTpjYXNlIEs6Y2FzZSBNOmNhc2UgSTpjYXNlIEo6YnJlYWs7ZGVmYXVsdDppZigwPT09Tyl3ZT0xLFJlKz1cIlxcMFwifX1pZihUZSs9UmUsQyE9PU0mJkMhPT1LKSQ9Q319bT13LHc9QyxSKyt9aWYoamU9VmUubGVuZ3RoLG1lPjApaWYoMD09PWplJiYwPT09WGUubGVuZ3RoJiYwPT09YVswXS5sZW5ndGg9PWZhbHNlKWlmKHQhPT1pZXx8MT09PWEubGVuZ3RoJiYoZ2U+MD9FZTpHZSk9PT1hWzBdKWplPWEuam9pbihcIixcIikubGVuZ3RoKzI7aWYoamU+MCl7aWYoZj0wPT09Z2UmJnQhPT10ZT9mdW5jdGlvbihlKXtmb3IodmFyIGEscixzPTAsdD1lLmxlbmd0aCxpPUFycmF5KHQpO3M8dDsrK3Mpe2Zvcih2YXIgZj1lW3NdLnNwbGl0KGwpLG49XCJcIixvPTAsaD0wLHU9MCxkPTAsYj1mLmxlbmd0aDtvPGI7KytvKXtpZigwPT09KGg9KHI9ZltvXSkubGVuZ3RoKSYmYj4xKWNvbnRpbnVlO2lmKHU9bi5jaGFyQ29kZUF0KG4ubGVuZ3RoLTEpLGQ9ci5jaGFyQ29kZUF0KDApLGE9XCJcIiwwIT09bylzd2l0Y2godSl7Y2FzZSBUOmNhc2UgYWU6Y2FzZSBfOmNhc2UgZWU6Y2FzZSBNOmNhc2UgRDpicmVhaztkZWZhdWx0OmE9XCIgXCJ9c3dpdGNoKGQpe2Nhc2UgUDpyPWErRWU7Y2FzZSBhZTpjYXNlIF86Y2FzZSBlZTpjYXNlIE06Y2FzZSBFOmNhc2UgRDpicmVhaztjYXNlIEc6cj1hK3IrRWU7YnJlYWs7Y2FzZSBWOnN3aXRjaCgyKnIuY2hhckNvZGVBdCgxKSszKnIuY2hhckNvZGVBdCgyKSl7Y2FzZSA1MzA6aWYoQ2U+MCl7cj1hK3Iuc3Vic3RyaW5nKDgsaC0xKTticmVha31kZWZhdWx0OmlmKG88MXx8ZltvLTFdLmxlbmd0aDwxKXI9YStFZStyfWJyZWFrO2Nhc2UgVTphPVwiXCI7ZGVmYXVsdDppZihoPjEmJnIuaW5kZXhPZihcIjpcIik+MClyPWErci5yZXBsYWNlKHYsXCIkMVwiK0VlK1wiJDJcIik7ZWxzZSByPWErcitFZX1uKz1yfWlbc109bi5yZXBsYWNlKGMsXCJcIikudHJpbSgpfXJldHVybiBpfShhKTphLHllPjApaWYodm9pZCAwIT09KG49UGUoRmUsVmUsZixlLHBlLGJlLGplLHQsaSx0KSkmJjA9PT0oVmU9bikubGVuZ3RoKXJldHVybiBZZStWZStYZTtpZihWZT1mLmpvaW4oXCIsXCIpK1wie1wiK1ZlK1wifVwiLEFlKmtlIT0wKXtpZigyPT09QWUmJiFMZShWZSwyKSlrZT0wO3N3aXRjaChrZSl7Y2FzZSBsZTpWZT1WZS5yZXBsYWNlKGssXCI6XCIrUytcIiQxXCIpK1ZlO2JyZWFrO2Nhc2UgbmU6VmU9VmUucmVwbGFjZShwLFwiOjpcIitOK1wiaW5wdXQtJDFcIikrVmUucmVwbGFjZShwLFwiOjpcIitTK1wiJDFcIikrVmUucmVwbGFjZShwLFwiOlwiK0YrXCJpbnB1dC0kMVwiKStWZX1rZT0wfX1yZXR1cm4gWWUrVmUrWGV9ZnVuY3Rpb24gSWUoZSxhLHIpe3ZhciBjPWEudHJpbSgpLnNwbGl0KG8pLHM9Yyx0PWMubGVuZ3RoLGk9ZS5sZW5ndGg7c3dpdGNoKGkpe2Nhc2UgMDpjYXNlIDE6Zm9yKHZhciBmPTAsbj0wPT09aT9cIlwiOmVbMF0rXCIgXCI7Zjx0OysrZilzW2ZdPUplKG4sc1tmXSxyLGkpLnRyaW0oKTticmVhaztkZWZhdWx0OmY9MDt2YXIgbD0wO2ZvcihzPVtdO2Y8dDsrK2YpZm9yKHZhciBoPTA7aDxpOysraClzW2wrK109SmUoZVtoXStcIiBcIixjW2ZdLHIsaSkudHJpbSgpfXJldHVybiBzfWZ1bmN0aW9uIEplKGUsYSxyLGMpe3ZhciBzPWEsdD1zLmNoYXJDb2RlQXQoMCk7aWYodDwzMyl0PShzPXMudHJpbSgpKS5jaGFyQ29kZUF0KDApO3N3aXRjaCh0KXtjYXNlIFA6c3dpdGNoKGdlK2Mpe2Nhc2UgMDpjYXNlIDE6aWYoMD09PWUudHJpbSgpLmxlbmd0aClicmVhaztkZWZhdWx0OnJldHVybiBzLnJlcGxhY2UoaCxcIiQxXCIrZS50cmltKCkpfWJyZWFrO2Nhc2UgVjpzd2l0Y2gocy5jaGFyQ29kZUF0KDEpKXtjYXNlIDEwMzppZihDZT4wJiZnZT4wKXJldHVybiBzLnJlcGxhY2UodSxcIiQxXCIpLnJlcGxhY2UoaCxcIiQxXCIrR2UpO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIGUudHJpbSgpK3MucmVwbGFjZShoLFwiJDFcIitlLnRyaW0oKSl9ZGVmYXVsdDppZihyKmdlPjAmJnMuaW5kZXhPZihcIlxcZlwiKT4wKXJldHVybiBzLnJlcGxhY2UoaCwoZS5jaGFyQ29kZUF0KDApPT09Vj9cIlwiOlwiJDFcIikrZS50cmltKCkpfXJldHVybiBlK3N9ZnVuY3Rpb24gS2UoZSxhLHIsYyl7dmFyIGwsbz0wLGg9ZStcIjtcIix1PTIqYSszKnIrNCpjO2lmKDk0ND09PXUpcmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciBhPWUubGVuZ3RoLHI9ZS5pbmRleE9mKFwiOlwiLDkpKzEsYz1lLnN1YnN0cmluZygwLHIpLnRyaW0oKSxzPWUuc3Vic3RyaW5nKHIsYS0xKS50cmltKCk7c3dpdGNoKGUuY2hhckNvZGVBdCg5KSpCZSl7Y2FzZSAwOmJyZWFrO2Nhc2UgUTppZigxMTAhPT1lLmNoYXJDb2RlQXQoMTApKWJyZWFrO2RlZmF1bHQ6Zm9yKHZhciB0PXMuc3BsaXQoKHM9XCJcIixmKSksaT0wLHI9MCxhPXQubGVuZ3RoO2k8YTtyPTAsKytpKXtmb3IodmFyIGw9dFtpXSxvPWwuc3BsaXQobik7bD1vW3JdOyl7dmFyIGg9bC5jaGFyQ29kZUF0KDApO2lmKDE9PT1CZSYmKGg+TCYmaDw5MHx8aD45NiYmaDwxMjN8fGg9PT1SfHxoPT09USYmbC5jaGFyQ29kZUF0KDEpIT09USkpc3dpdGNoKGlzTmFOKHBhcnNlRmxvYXQobCkpKygtMSE9PWwuaW5kZXhPZihcIihcIikpKXtjYXNlIDE6c3dpdGNoKGwpe2Nhc2VcImluZmluaXRlXCI6Y2FzZVwiYWx0ZXJuYXRlXCI6Y2FzZVwiYmFja3dhcmRzXCI6Y2FzZVwicnVubmluZ1wiOmNhc2VcIm5vcm1hbFwiOmNhc2VcImZvcndhcmRzXCI6Y2FzZVwiYm90aFwiOmNhc2VcIm5vbmVcIjpjYXNlXCJsaW5lYXJcIjpjYXNlXCJlYXNlXCI6Y2FzZVwiZWFzZS1pblwiOmNhc2VcImVhc2Utb3V0XCI6Y2FzZVwiZWFzZS1pbi1vdXRcIjpjYXNlXCJwYXVzZWRcIjpjYXNlXCJyZXZlcnNlXCI6Y2FzZVwiYWx0ZXJuYXRlLXJldmVyc2VcIjpjYXNlXCJpbmhlcml0XCI6Y2FzZVwiaW5pdGlhbFwiOmNhc2VcInVuc2V0XCI6Y2FzZVwic3RlcC1zdGFydFwiOmNhc2VcInN0ZXAtZW5kXCI6YnJlYWs7ZGVmYXVsdDpsKz1EZX19b1tyKytdPWx9cys9KDA9PT1pP1wiXCI6XCIsXCIpK28uam9pbihcIiBcIil9fWlmKHM9YytzK1wiO1wiLDE9PT1BZXx8Mj09PUFlJiZMZShzLDEpKXJldHVybiBOK3MrcztyZXR1cm4gc30oaCk7ZWxzZSBpZigwPT09QWV8fDI9PT1BZSYmIUxlKGgsMSkpcmV0dXJuIGg7c3dpdGNoKHUpe2Nhc2UgMTAxNTpyZXR1cm4gOTc9PT1oLmNoYXJDb2RlQXQoMTApP04raCtoOmg7Y2FzZSA5NTE6cmV0dXJuIDExNj09PWguY2hhckNvZGVBdCgzKT9OK2graDpoO2Nhc2UgOTYzOnJldHVybiAxMTA9PT1oLmNoYXJDb2RlQXQoNSk/TitoK2g6aDtjYXNlIDEwMDk6aWYoMTAwIT09aC5jaGFyQ29kZUF0KDQpKWJyZWFrO2Nhc2UgOTY5OmNhc2UgOTQyOnJldHVybiBOK2graDtjYXNlIDk3ODpyZXR1cm4gTitoK1MraCtoO2Nhc2UgMTAxOTpjYXNlIDk4MzpyZXR1cm4gTitoK1MraCtGK2graDtjYXNlIDg4MzppZihoLmNoYXJDb2RlQXQoOCk9PT1RKXJldHVybiBOK2graDtpZihoLmluZGV4T2YoXCJpbWFnZS1zZXQoXCIsMTEpPjApcmV0dXJuIGgucmVwbGFjZSh6LFwiJDFcIitOK1wiJDJcIikraDtyZXR1cm4gaDtjYXNlIDkzMjppZihoLmNoYXJDb2RlQXQoNCk9PT1RKXN3aXRjaChoLmNoYXJDb2RlQXQoNSkpe2Nhc2UgMTAzOnJldHVybiBOK1wiYm94LVwiK2gucmVwbGFjZShcIi1ncm93XCIsXCJcIikrTitoK0YraC5yZXBsYWNlKFwiZ3Jvd1wiLFwicG9zaXRpdmVcIikraDtjYXNlIDExNTpyZXR1cm4gTitoK0YraC5yZXBsYWNlKFwic2hyaW5rXCIsXCJuZWdhdGl2ZVwiKStoO2Nhc2UgOTg6cmV0dXJuIE4raCtGK2gucmVwbGFjZShcImJhc2lzXCIsXCJwcmVmZXJyZWQtc2l6ZVwiKStofXJldHVybiBOK2grRitoK2g7Y2FzZSA5NjQ6cmV0dXJuIE4raCtGK1wiZmxleC1cIitoK2g7Y2FzZSAxMDIzOmlmKDk5IT09aC5jaGFyQ29kZUF0KDgpKWJyZWFrO3JldHVybiBsPWguc3Vic3RyaW5nKGguaW5kZXhPZihcIjpcIiwxNSkpLnJlcGxhY2UoXCJmbGV4LVwiLFwiXCIpLnJlcGxhY2UoXCJzcGFjZS1iZXR3ZWVuXCIsXCJqdXN0aWZ5XCIpLE4rXCJib3gtcGFja1wiK2wrTitoK0YrXCJmbGV4LXBhY2tcIitsK2g7Y2FzZSAxMDA1OnJldHVybiB0LnRlc3QoaCk/aC5yZXBsYWNlKHMsXCI6XCIrTikraC5yZXBsYWNlKHMsXCI6XCIrUykraDpoO2Nhc2UgMWUzOnN3aXRjaChvPShsPWguc3Vic3RyaW5nKDEzKS50cmltKCkpLmluZGV4T2YoXCItXCIpKzEsbC5jaGFyQ29kZUF0KDApK2wuY2hhckNvZGVBdChvKSl7Y2FzZSAyMjY6bD1oLnJlcGxhY2UobSxcInRiXCIpO2JyZWFrO2Nhc2UgMjMyOmw9aC5yZXBsYWNlKG0sXCJ0Yi1ybFwiKTticmVhaztjYXNlIDIyMDpsPWgucmVwbGFjZShtLFwibHJcIik7YnJlYWs7ZGVmYXVsdDpyZXR1cm4gaH1yZXR1cm4gTitoK0YrbCtoO2Nhc2UgMTAxNzppZigtMT09PWguaW5kZXhPZihcInN0aWNreVwiLDkpKXJldHVybiBoO2Nhc2UgOTc1OnN3aXRjaChvPShoPWUpLmxlbmd0aC0xMCx1PShsPSgzMz09PWguY2hhckNvZGVBdChvKT9oLnN1YnN0cmluZygwLG8pOmgpLnN1YnN0cmluZyhlLmluZGV4T2YoXCI6XCIsNykrMSkudHJpbSgpKS5jaGFyQ29kZUF0KDApKygwfGwuY2hhckNvZGVBdCg3KSkpe2Nhc2UgMjAzOmlmKGwuY2hhckNvZGVBdCg4KTwxMTEpYnJlYWs7Y2FzZSAxMTU6aD1oLnJlcGxhY2UobCxOK2wpK1wiO1wiK2g7YnJlYWs7Y2FzZSAyMDc6Y2FzZSAxMDI6aD1oLnJlcGxhY2UobCxOKyh1PjEwMj9cImlubGluZS1cIjpcIlwiKStcImJveFwiKStcIjtcIitoLnJlcGxhY2UobCxOK2wpK1wiO1wiK2gucmVwbGFjZShsLEYrbCtcImJveFwiKStcIjtcIitofXJldHVybiBoK1wiO1wiO2Nhc2UgOTM4OmlmKGguY2hhckNvZGVBdCg1KT09PVEpc3dpdGNoKGguY2hhckNvZGVBdCg2KSl7Y2FzZSAxMDU6cmV0dXJuIGw9aC5yZXBsYWNlKFwiLWl0ZW1zXCIsXCJcIiksTitoK04rXCJib3gtXCIrbCtGK1wiZmxleC1cIitsK2g7Y2FzZSAxMTU6cmV0dXJuIE4raCtGK1wiZmxleC1pdGVtLVwiK2gucmVwbGFjZSh5LFwiXCIpK2g7ZGVmYXVsdDpyZXR1cm4gTitoK0YrXCJmbGV4LWxpbmUtcGFja1wiK2gucmVwbGFjZShcImFsaWduLWNvbnRlbnRcIixcIlwiKS5yZXBsYWNlKHksXCJcIikraH1icmVhaztjYXNlIDk3MzpjYXNlIDk4OTppZihoLmNoYXJDb2RlQXQoMykhPT1RfHwxMjI9PT1oLmNoYXJDb2RlQXQoNCkpYnJlYWs7Y2FzZSA5MzE6Y2FzZSA5NTM6aWYodHJ1ZT09PWoudGVzdChlKSlpZigxMTU9PT0obD1lLnN1YnN0cmluZyhlLmluZGV4T2YoXCI6XCIpKzEpKS5jaGFyQ29kZUF0KDApKXJldHVybiBLZShlLnJlcGxhY2UoXCJzdHJldGNoXCIsXCJmaWxsLWF2YWlsYWJsZVwiKSxhLHIsYykucmVwbGFjZShcIjpmaWxsLWF2YWlsYWJsZVwiLFwiOnN0cmV0Y2hcIik7ZWxzZSByZXR1cm4gaC5yZXBsYWNlKGwsTitsKStoLnJlcGxhY2UobCxTK2wucmVwbGFjZShcImZpbGwtXCIsXCJcIikpK2g7YnJlYWs7Y2FzZSA5NjI6aWYoaD1OK2grKDEwMj09PWguY2hhckNvZGVBdCg1KT9GK2g6XCJcIikraCxyK2M9PT0yMTEmJjEwNT09PWguY2hhckNvZGVBdCgxMykmJmguaW5kZXhPZihcInRyYW5zZm9ybVwiLDEwKT4wKXJldHVybiBoLnN1YnN0cmluZygwLGguaW5kZXhPZihcIjtcIiwyNykrMSkucmVwbGFjZShpLFwiJDFcIitOK1wiJDJcIikraH1yZXR1cm4gaH1mdW5jdGlvbiBMZShlLGEpe3ZhciByPWUuaW5kZXhPZigxPT09YT9cIjpcIjpcIntcIiksYz1lLnN1YnN0cmluZygwLDMhPT1hP3I6MTApLHM9ZS5zdWJzdHJpbmcocisxLGUubGVuZ3RoLTEpO3JldHVybiBPZSgyIT09YT9jOmMucmVwbGFjZShPLFwiJDFcIikscyxhKX1mdW5jdGlvbiBNZShlLGEpe3ZhciByPUtlKGEsYS5jaGFyQ29kZUF0KDApLGEuY2hhckNvZGVBdCgxKSxhLmNoYXJDb2RlQXQoMikpO3JldHVybiByIT09YStcIjtcIj9yLnJlcGxhY2UoJCxcIiBvciAoJDEpXCIpLnN1YnN0cmluZyg0KTpcIihcIithK1wiKVwifWZ1bmN0aW9uIFBlKGUsYSxyLGMscyx0LGksZixuLGwpe2Zvcih2YXIgbyxoPTAsdT1hO2g8eWU7KytoKXN3aXRjaChvPSRlW2hdLmNhbGwoVGUsZSx1LHIsYyxzLHQsaSxmLG4sbCkpe2Nhc2Ugdm9pZCAwOmNhc2UgZmFsc2U6Y2FzZSB0cnVlOmNhc2UgbnVsbDpicmVhaztkZWZhdWx0OnU9b31pZih1IT09YSlyZXR1cm4gdX1mdW5jdGlvbiBRZShlLGEscixjKXtmb3IodmFyIHM9YSsxO3M8cjsrK3Mpc3dpdGNoKGMuY2hhckNvZGVBdChzKSl7Y2FzZSBaOmlmKGU9PT1UKWlmKGMuY2hhckNvZGVBdChzLTEpPT09VCYmYSsyIT09cylyZXR1cm4gcysxO2JyZWFrO2Nhc2UgSTppZihlPT09WilyZXR1cm4gcysxfXJldHVybiBzfWZ1bmN0aW9uIFJlKGUpe2Zvcih2YXIgYSBpbiBlKXt2YXIgcj1lW2FdO3N3aXRjaChhKXtjYXNlXCJrZXlmcmFtZVwiOkJlPTB8cjticmVhaztjYXNlXCJnbG9iYWxcIjpDZT0wfHI7YnJlYWs7Y2FzZVwiY2FzY2FkZVwiOmdlPTB8cjticmVhaztjYXNlXCJjb21wcmVzc1wiOndlPTB8cjticmVhaztjYXNlXCJzZW1pY29sb25cIjp2ZT0wfHI7YnJlYWs7Y2FzZVwicHJlc2VydmVcIjptZT0wfHI7YnJlYWs7Y2FzZVwicHJlZml4XCI6aWYoT2U9bnVsbCwhcilBZT0wO2Vsc2UgaWYoXCJmdW5jdGlvblwiIT10eXBlb2YgcilBZT0xO2Vsc2UgQWU9MixPZT1yfX1yZXR1cm4gUmV9ZnVuY3Rpb24gVGUoYSxyKXtpZih2b2lkIDAhPT10aGlzJiZ0aGlzLmNvbnN0cnVjdG9yPT09VGUpcmV0dXJuIGUoYSk7dmFyIHM9YSx0PXMuY2hhckNvZGVBdCgwKTtpZih0PDMzKXQ9KHM9cy50cmltKCkpLmNoYXJDb2RlQXQoMCk7aWYoQmU+MClEZT1zLnJlcGxhY2UoZCx0PT09Rz9cIlwiOlwiLVwiKTtpZih0PTEsMT09PWdlKUdlPXM7ZWxzZSBFZT1zO3ZhciBpLGY9W0dlXTtpZih5ZT4wKWlmKHZvaWQgMCE9PShpPVBlKHplLHIsZixmLHBlLGJlLDAsMCwwLDApKSYmXCJzdHJpbmdcIj09dHlwZW9mIGkpcj1pO3ZhciBuPUhlKHhlLGYsciwwLDApO2lmKHllPjApaWYodm9pZCAwIT09KGk9UGUoamUsbixmLGYscGUsYmUsbi5sZW5ndGgsMCwwLDApKSYmXCJzdHJpbmdcIiE9dHlwZW9mKG49aSkpdD0wO3JldHVybiBEZT1cIlwiLEdlPVwiXCIsRWU9XCJcIixrZT0wLHBlPTEsYmU9MSx3ZSp0PT0wP246bi5yZXBsYWNlKGMsXCJcIikucmVwbGFjZShnLFwiXCIpLnJlcGxhY2UoQSxcIiQxXCIpLnJlcGxhY2UoQyxcIiQxXCIpLnJlcGxhY2UodyxcIiBcIil9aWYoVGUudXNlPWZ1bmN0aW9uIGUoYSl7c3dpdGNoKGEpe2Nhc2Ugdm9pZCAwOmNhc2UgbnVsbDp5ZT0kZS5sZW5ndGg9MDticmVhaztkZWZhdWx0OmlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGEpJGVbeWUrK109YTtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBhKWZvcih2YXIgcj0wLGM9YS5sZW5ndGg7cjxjOysrcillKGFbcl0pO2Vsc2UgcWU9MHwhIWF9cmV0dXJuIGV9LFRlLnNldD1SZSx2b2lkIDAhPT1hKVJlKGEpO3JldHVybiBUZX0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGlzLm1pbi5qcy5tYXAiLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNhbWVsaXplU3R5bGVOYW1lO1xuXG52YXIgX2NhbWVsaXplID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9jYW1lbGl6ZVwiKSk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi8yYWViOGEyYTZiZWIwMDYxN2E0MjE3ZjdmODI4NDkyNGZhMmFkODE5L3NyYy92ZW5kb3IvY29yZS9jYW1lbGl6ZVN0eWxlTmFtZS5qc1xuICovXG52YXIgbXNQYXR0ZXJuID0gL14tbXMtLztcblxuZnVuY3Rpb24gY2FtZWxpemVTdHlsZU5hbWUoc3RyaW5nKSB7XG4gIHJldHVybiAoMCwgX2NhbWVsaXplLmRlZmF1bHQpKHN0cmluZy5yZXBsYWNlKG1zUGF0dGVybiwgJ21zLScpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLmFuaW1hdGlvbkVuZCA9IGV4cG9ydHMuYW5pbWF0aW9uRGVsYXkgPSBleHBvcnRzLmFuaW1hdGlvblRpbWluZyA9IGV4cG9ydHMuYW5pbWF0aW9uRHVyYXRpb24gPSBleHBvcnRzLmFuaW1hdGlvbk5hbWUgPSBleHBvcnRzLnRyYW5zaXRpb25FbmQgPSBleHBvcnRzLnRyYW5zaXRpb25EdXJhdGlvbiA9IGV4cG9ydHMudHJhbnNpdGlvbkRlbGF5ID0gZXhwb3J0cy50cmFuc2l0aW9uVGltaW5nID0gZXhwb3J0cy50cmFuc2l0aW9uUHJvcGVydHkgPSBleHBvcnRzLnRyYW5zZm9ybSA9IHZvaWQgMDtcblxudmFyIF9pbkRPTSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3V0aWwvaW5ET01cIikpO1xuXG52YXIgdHJhbnNmb3JtID0gJ3RyYW5zZm9ybSc7XG5leHBvcnRzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybTtcbnZhciBwcmVmaXgsIHRyYW5zaXRpb25FbmQsIGFuaW1hdGlvbkVuZDtcbmV4cG9ydHMuYW5pbWF0aW9uRW5kID0gYW5pbWF0aW9uRW5kO1xuZXhwb3J0cy50cmFuc2l0aW9uRW5kID0gdHJhbnNpdGlvbkVuZDtcbnZhciB0cmFuc2l0aW9uUHJvcGVydHksIHRyYW5zaXRpb25EdXJhdGlvbiwgdHJhbnNpdGlvblRpbWluZywgdHJhbnNpdGlvbkRlbGF5O1xuZXhwb3J0cy50cmFuc2l0aW9uRGVsYXkgPSB0cmFuc2l0aW9uRGVsYXk7XG5leHBvcnRzLnRyYW5zaXRpb25UaW1pbmcgPSB0cmFuc2l0aW9uVGltaW5nO1xuZXhwb3J0cy50cmFuc2l0aW9uRHVyYXRpb24gPSB0cmFuc2l0aW9uRHVyYXRpb247XG5leHBvcnRzLnRyYW5zaXRpb25Qcm9wZXJ0eSA9IHRyYW5zaXRpb25Qcm9wZXJ0eTtcbnZhciBhbmltYXRpb25OYW1lLCBhbmltYXRpb25EdXJhdGlvbiwgYW5pbWF0aW9uVGltaW5nLCBhbmltYXRpb25EZWxheTtcbmV4cG9ydHMuYW5pbWF0aW9uRGVsYXkgPSBhbmltYXRpb25EZWxheTtcbmV4cG9ydHMuYW5pbWF0aW9uVGltaW5nID0gYW5pbWF0aW9uVGltaW5nO1xuZXhwb3J0cy5hbmltYXRpb25EdXJhdGlvbiA9IGFuaW1hdGlvbkR1cmF0aW9uO1xuZXhwb3J0cy5hbmltYXRpb25OYW1lID0gYW5pbWF0aW9uTmFtZTtcblxuaWYgKF9pbkRPTS5kZWZhdWx0KSB7XG4gIHZhciBfZ2V0VHJhbnNpdGlvblByb3BlcnQgPSBnZXRUcmFuc2l0aW9uUHJvcGVydGllcygpO1xuXG4gIHByZWZpeCA9IF9nZXRUcmFuc2l0aW9uUHJvcGVydC5wcmVmaXg7XG4gIGV4cG9ydHMudHJhbnNpdGlvbkVuZCA9IHRyYW5zaXRpb25FbmQgPSBfZ2V0VHJhbnNpdGlvblByb3BlcnQudHJhbnNpdGlvbkVuZDtcbiAgZXhwb3J0cy5hbmltYXRpb25FbmQgPSBhbmltYXRpb25FbmQgPSBfZ2V0VHJhbnNpdGlvblByb3BlcnQuYW5pbWF0aW9uRW5kO1xuICBleHBvcnRzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybSA9IHByZWZpeCArIFwiLVwiICsgdHJhbnNmb3JtO1xuICBleHBvcnRzLnRyYW5zaXRpb25Qcm9wZXJ0eSA9IHRyYW5zaXRpb25Qcm9wZXJ0eSA9IHByZWZpeCArIFwiLXRyYW5zaXRpb24tcHJvcGVydHlcIjtcbiAgZXhwb3J0cy50cmFuc2l0aW9uRHVyYXRpb24gPSB0cmFuc2l0aW9uRHVyYXRpb24gPSBwcmVmaXggKyBcIi10cmFuc2l0aW9uLWR1cmF0aW9uXCI7XG4gIGV4cG9ydHMudHJhbnNpdGlvbkRlbGF5ID0gdHJhbnNpdGlvbkRlbGF5ID0gcHJlZml4ICsgXCItdHJhbnNpdGlvbi1kZWxheVwiO1xuICBleHBvcnRzLnRyYW5zaXRpb25UaW1pbmcgPSB0cmFuc2l0aW9uVGltaW5nID0gcHJlZml4ICsgXCItdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb25cIjtcbiAgZXhwb3J0cy5hbmltYXRpb25OYW1lID0gYW5pbWF0aW9uTmFtZSA9IHByZWZpeCArIFwiLWFuaW1hdGlvbi1uYW1lXCI7XG4gIGV4cG9ydHMuYW5pbWF0aW9uRHVyYXRpb24gPSBhbmltYXRpb25EdXJhdGlvbiA9IHByZWZpeCArIFwiLWFuaW1hdGlvbi1kdXJhdGlvblwiO1xuICBleHBvcnRzLmFuaW1hdGlvblRpbWluZyA9IGFuaW1hdGlvblRpbWluZyA9IHByZWZpeCArIFwiLWFuaW1hdGlvbi1kZWxheVwiO1xuICBleHBvcnRzLmFuaW1hdGlvbkRlbGF5ID0gYW5pbWF0aW9uRGVsYXkgPSBwcmVmaXggKyBcIi1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uXCI7XG59XG5cbnZhciBfZGVmYXVsdCA9IHtcbiAgdHJhbnNmb3JtOiB0cmFuc2Zvcm0sXG4gIGVuZDogdHJhbnNpdGlvbkVuZCxcbiAgcHJvcGVydHk6IHRyYW5zaXRpb25Qcm9wZXJ0eSxcbiAgdGltaW5nOiB0cmFuc2l0aW9uVGltaW5nLFxuICBkZWxheTogdHJhbnNpdGlvbkRlbGF5LFxuICBkdXJhdGlvbjogdHJhbnNpdGlvbkR1cmF0aW9uXG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5cbmZ1bmN0aW9uIGdldFRyYW5zaXRpb25Qcm9wZXJ0aWVzKCkge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKS5zdHlsZTtcbiAgdmFyIHZlbmRvck1hcCA9IHtcbiAgICBPOiBmdW5jdGlvbiBPKGUpIHtcbiAgICAgIHJldHVybiBcIm9cIiArIGUudG9Mb3dlckNhc2UoKTtcbiAgICB9LFxuICAgIE1vejogZnVuY3Rpb24gTW96KGUpIHtcbiAgICAgIHJldHVybiBlLnRvTG93ZXJDYXNlKCk7XG4gICAgfSxcbiAgICBXZWJraXQ6IGZ1bmN0aW9uIFdlYmtpdChlKSB7XG4gICAgICByZXR1cm4gXCJ3ZWJraXRcIiArIGU7XG4gICAgfSxcbiAgICBtczogZnVuY3Rpb24gbXMoZSkge1xuICAgICAgcmV0dXJuIFwiTVNcIiArIGU7XG4gICAgfVxuICB9O1xuICB2YXIgdmVuZG9ycyA9IE9iamVjdC5rZXlzKHZlbmRvck1hcCk7XG4gIHZhciB0cmFuc2l0aW9uRW5kLCBhbmltYXRpb25FbmQ7XG4gIHZhciBwcmVmaXggPSAnJztcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHZlbmRvcnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdmVuZG9yID0gdmVuZG9yc1tpXTtcblxuICAgIGlmICh2ZW5kb3IgKyBcIlRyYW5zaXRpb25Qcm9wZXJ0eVwiIGluIHN0eWxlKSB7XG4gICAgICBwcmVmaXggPSBcIi1cIiArIHZlbmRvci50b0xvd2VyQ2FzZSgpO1xuICAgICAgdHJhbnNpdGlvbkVuZCA9IHZlbmRvck1hcFt2ZW5kb3JdKCdUcmFuc2l0aW9uRW5kJyk7XG4gICAgICBhbmltYXRpb25FbmQgPSB2ZW5kb3JNYXBbdmVuZG9yXSgnQW5pbWF0aW9uRW5kJyk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBpZiAoIXRyYW5zaXRpb25FbmQgJiYgJ3RyYW5zaXRpb25Qcm9wZXJ0eScgaW4gc3R5bGUpIHRyYW5zaXRpb25FbmQgPSAndHJhbnNpdGlvbmVuZCc7XG4gIGlmICghYW5pbWF0aW9uRW5kICYmICdhbmltYXRpb25OYW1lJyBpbiBzdHlsZSkgYW5pbWF0aW9uRW5kID0gJ2FuaW1hdGlvbmVuZCc7XG4gIHN0eWxlID0gbnVsbDtcbiAgcmV0dXJuIHtcbiAgICBhbmltYXRpb25FbmQ6IGFuaW1hdGlvbkVuZCxcbiAgICB0cmFuc2l0aW9uRW5kOiB0cmFuc2l0aW9uRW5kLFxuICAgIHByZWZpeDogcHJlZml4XG4gIH07XG59IiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyU0MC9naSwgJ0AnKS5cbiAgICByZXBsYWNlKC8lM0EvZ2ksICc6JykuXG4gICAgcmVwbGFjZSgvJTI0L2csICckJykuXG4gICAgcmVwbGFjZSgvJTJDL2dpLCAnLCcpLlxuICAgIHJlcGxhY2UoLyUyMC9nLCAnKycpLlxuICAgIHJlcGxhY2UoLyU1Qi9naSwgJ1snKS5cbiAgICByZXBsYWNlKC8lNUQvZ2ksICddJyk7XG59XG5cbi8qKlxuICogQnVpbGQgYSBVUkwgYnkgYXBwZW5kaW5nIHBhcmFtcyB0byB0aGUgZW5kXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgYmFzZSBvZiB0aGUgdXJsIChlLmcuLCBodHRwOi8vd3d3Lmdvb2dsZS5jb20pXG4gKiBAcGFyYW0ge29iamVjdH0gW3BhcmFtc10gVGhlIHBhcmFtcyB0byBiZSBhcHBlbmRlZFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGZvcm1hdHRlZCB1cmxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBidWlsZFVSTCh1cmwsIHBhcmFtcywgcGFyYW1zU2VyaWFsaXplcikge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgaWYgKCFwYXJhbXMpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdmFyIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIGlmIChwYXJhbXNTZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtc1NlcmlhbGl6ZXIocGFyYW1zKTtcbiAgfSBlbHNlIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMpKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtcy50b1N0cmluZygpO1xuICB9IGVsc2Uge1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuXG4gICAgdXRpbHMuZm9yRWFjaChwYXJhbXMsIGZ1bmN0aW9uIHNlcmlhbGl6ZSh2YWwsIGtleSkge1xuICAgICAgaWYgKHZhbCA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh1dGlscy5pc0FycmF5KHZhbCkpIHtcbiAgICAgICAga2V5ID0ga2V5ICsgJ1tdJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbCA9IFt2YWxdO1xuICAgICAgfVxuXG4gICAgICB1dGlscy5mb3JFYWNoKHZhbCwgZnVuY3Rpb24gcGFyc2VWYWx1ZSh2KSB7XG4gICAgICAgIGlmICh1dGlscy5pc0RhdGUodikpIHtcbiAgICAgICAgICB2ID0gdi50b0lTT1N0cmluZygpO1xuICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmlzT2JqZWN0KHYpKSB7XG4gICAgICAgICAgdiA9IEpTT04uc3RyaW5naWZ5KHYpO1xuICAgICAgICB9XG4gICAgICAgIHBhcnRzLnB1c2goZW5jb2RlKGtleSkgKyAnPScgKyBlbmNvZGUodikpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFydHMuam9pbignJicpO1xuICB9XG5cbiAgaWYgKHNlcmlhbGl6ZWRQYXJhbXMpIHtcbiAgICB2YXIgaGFzaG1hcmtJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gICAgaWYgKGhhc2htYXJrSW5kZXggIT09IC0xKSB7XG4gICAgICB1cmwgPSB1cmwuc2xpY2UoMCwgaGFzaG1hcmtJbmRleCk7XG4gICAgfVxuXG4gICAgdXJsICs9ICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICc/JyA6ICcmJykgKyBzZXJpYWxpemVkUGFyYW1zO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNDYW5jZWwodmFsdWUpIHtcbiAgcmV0dXJuICEhKHZhbHVlICYmIHZhbHVlLl9fQ0FOQ0VMX18pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIG5vcm1hbGl6ZUhlYWRlck5hbWUgPSByZXF1aXJlKCcuL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZScpO1xuXG52YXIgREVGQVVMVF9DT05URU5UX1RZUEUgPSB7XG4gICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xufTtcblxuZnVuY3Rpb24gc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsIHZhbHVlKSB7XG4gIGlmICghdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVycykgJiYgdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVyc1snQ29udGVudC1UeXBlJ10pKSB7XG4gICAgaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSB2YWx1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0QWRhcHRlcigpIHtcbiAgdmFyIGFkYXB0ZXI7XG4gIC8vIE9ubHkgTm9kZS5KUyBoYXMgYSBwcm9jZXNzIHZhcmlhYmxlIHRoYXQgaXMgb2YgW1tDbGFzc11dIHByb2Nlc3NcbiAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocHJvY2VzcykgPT09ICdbb2JqZWN0IHByb2Nlc3NdJykge1xuICAgIC8vIEZvciBub2RlIHVzZSBIVFRQIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy9odHRwJyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBicm93c2VycyB1c2UgWEhSIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy94aHInKTtcbiAgfVxuICByZXR1cm4gYWRhcHRlcjtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuICBhZGFwdGVyOiBnZXREZWZhdWx0QWRhcHRlcigpLFxuXG4gIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXF1ZXN0KGRhdGEsIGhlYWRlcnMpIHtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdBY2NlcHQnKTtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdDb250ZW50LVR5cGUnKTtcbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIHRyYW5zZm9ybVJlc3BvbnNlOiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVzcG9uc2UoZGF0YSkge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgfSBjYXRjaCAoZSkgeyAvKiBJZ25vcmUgKi8gfVxuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG5cbiAgdmFsaWRhdGVTdGF0dXM6IGZ1bmN0aW9uIHZhbGlkYXRlU3RhdHVzKHN0YXR1cykge1xuICAgIHJldHVybiBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMDtcbiAgfVxufTtcblxuZGVmYXVsdHMuaGVhZGVycyA9IHtcbiAgY29tbW9uOiB7XG4gICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyonXG4gIH1cbn07XG5cbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0ge307XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0gdXRpbHMubWVyZ2UoREVGQVVMVF9DT05URU5UX1RZUEUpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdHM7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBwYXJzZUhlYWRlcnMgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvcGFyc2VIZWFkZXJzJyk7XG52YXIgaXNVUkxTYW1lT3JpZ2luID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbicpO1xudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi4vY29yZS9jcmVhdGVFcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHhockFkYXB0ZXIoY29uZmlnKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiBkaXNwYXRjaFhoclJlcXVlc3QocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIHJlcXVlc3REYXRhID0gY29uZmlnLmRhdGE7XG4gICAgdmFyIHJlcXVlc3RIZWFkZXJzID0gY29uZmlnLmhlYWRlcnM7XG5cbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShyZXF1ZXN0RGF0YSkpIHtcbiAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1snQ29udGVudC1UeXBlJ107IC8vIExldCB0aGUgYnJvd3NlciBzZXQgaXRcbiAgICB9XG5cbiAgICB2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXG4gICAgLy8gSFRUUCBiYXNpYyBhdXRoZW50aWNhdGlvblxuICAgIGlmIChjb25maWcuYXV0aCkge1xuICAgICAgdmFyIHVzZXJuYW1lID0gY29uZmlnLmF1dGgudXNlcm5hbWUgfHwgJyc7XG4gICAgICB2YXIgcGFzc3dvcmQgPSBjb25maWcuYXV0aC5wYXNzd29yZCB8fCAnJztcbiAgICAgIHJlcXVlc3RIZWFkZXJzLkF1dGhvcml6YXRpb24gPSAnQmFzaWMgJyArIGJ0b2EodXNlcm5hbWUgKyAnOicgKyBwYXNzd29yZCk7XG4gICAgfVxuXG4gICAgcmVxdWVzdC5vcGVuKGNvbmZpZy5tZXRob2QudG9VcHBlckNhc2UoKSwgYnVpbGRVUkwoY29uZmlnLnVybCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLCB0cnVlKTtcblxuICAgIC8vIFNldCB0aGUgcmVxdWVzdCB0aW1lb3V0IGluIE1TXG4gICAgcmVxdWVzdC50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG5cbiAgICAvLyBMaXN0ZW4gZm9yIHJlYWR5IHN0YXRlXG4gICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVMb2FkKCkge1xuICAgICAgaWYgKCFyZXF1ZXN0IHx8IHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSByZXF1ZXN0IGVycm9yZWQgb3V0IGFuZCB3ZSBkaWRuJ3QgZ2V0IGEgcmVzcG9uc2UsIHRoaXMgd2lsbCBiZVxuICAgICAgLy8gaGFuZGxlZCBieSBvbmVycm9yIGluc3RlYWRcbiAgICAgIC8vIFdpdGggb25lIGV4Y2VwdGlvbjogcmVxdWVzdCB0aGF0IHVzaW5nIGZpbGU6IHByb3RvY29sLCBtb3N0IGJyb3dzZXJzXG4gICAgICAvLyB3aWxsIHJldHVybiBzdGF0dXMgYXMgMCBldmVuIHRob3VnaCBpdCdzIGEgc3VjY2Vzc2Z1bCByZXF1ZXN0XG4gICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDAgJiYgIShyZXF1ZXN0LnJlc3BvbnNlVVJMICYmIHJlcXVlc3QucmVzcG9uc2VVUkwuaW5kZXhPZignZmlsZTonKSA9PT0gMCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBQcmVwYXJlIHRoZSByZXNwb25zZVxuICAgICAgdmFyIHJlc3BvbnNlSGVhZGVycyA9ICdnZXRBbGxSZXNwb25zZUhlYWRlcnMnIGluIHJlcXVlc3QgPyBwYXJzZUhlYWRlcnMocmVxdWVzdC5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSkgOiBudWxsO1xuICAgICAgdmFyIHJlc3BvbnNlRGF0YSA9ICFjb25maWcucmVzcG9uc2VUeXBlIHx8IGNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICd0ZXh0JyA/IHJlcXVlc3QucmVzcG9uc2VUZXh0IDogcmVxdWVzdC5yZXNwb25zZTtcbiAgICAgIHZhciByZXNwb25zZSA9IHtcbiAgICAgICAgZGF0YTogcmVzcG9uc2VEYXRhLFxuICAgICAgICBzdGF0dXM6IHJlcXVlc3Quc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXF1ZXN0LnN0YXR1c1RleHQsXG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcbiAgICAgICAgY29uZmlnOiBjb25maWcsXG4gICAgICAgIHJlcXVlc3Q6IHJlcXVlc3RcbiAgICAgIH07XG5cbiAgICAgIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSBicm93c2VyIHJlcXVlc3QgY2FuY2VsbGF0aW9uIChhcyBvcHBvc2VkIHRvIGEgbWFudWFsIGNhbmNlbGxhdGlvbilcbiAgICByZXF1ZXN0Lm9uYWJvcnQgPSBmdW5jdGlvbiBoYW5kbGVBYm9ydCgpIHtcbiAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignUmVxdWVzdCBhYm9ydGVkJywgY29uZmlnLCAnRUNPTk5BQk9SVEVEJywgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGxvdyBsZXZlbCBuZXR3b3JrIGVycm9yc1xuICAgIHJlcXVlc3Qub25lcnJvciA9IGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkge1xuICAgICAgLy8gUmVhbCBlcnJvcnMgYXJlIGhpZGRlbiBmcm9tIHVzIGJ5IHRoZSBicm93c2VyXG4gICAgICAvLyBvbmVycm9yIHNob3VsZCBvbmx5IGZpcmUgaWYgaXQncyBhIG5ldHdvcmsgZXJyb3JcbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignTmV0d29yayBFcnJvcicsIGNvbmZpZywgbnVsbCwgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIHRpbWVvdXRcbiAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7XG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IoJ3RpbWVvdXQgb2YgJyArIGNvbmZpZy50aW1lb3V0ICsgJ21zIGV4Y2VlZGVkJywgY29uZmlnLCAnRUNPTk5BQk9SVEVEJyxcbiAgICAgICAgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gQWRkIHhzcmYgaGVhZGVyXG4gICAgLy8gVGhpcyBpcyBvbmx5IGRvbmUgaWYgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnQuXG4gICAgLy8gU3BlY2lmaWNhbGx5IG5vdCBpZiB3ZSdyZSBpbiBhIHdlYiB3b3JrZXIsIG9yIHJlYWN0LW5hdGl2ZS5cbiAgICBpZiAodXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSkge1xuICAgICAgdmFyIGNvb2tpZXMgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvY29va2llcycpO1xuXG4gICAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAgIHZhciB4c3JmVmFsdWUgPSAoY29uZmlnLndpdGhDcmVkZW50aWFscyB8fCBpc1VSTFNhbWVPcmlnaW4oY29uZmlnLnVybCkpICYmIGNvbmZpZy54c3JmQ29va2llTmFtZSA/XG4gICAgICAgIGNvb2tpZXMucmVhZChjb25maWcueHNyZkNvb2tpZU5hbWUpIDpcbiAgICAgICAgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoeHNyZlZhbHVlKSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzW2NvbmZpZy54c3JmSGVhZGVyTmFtZV0gPSB4c3JmVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIGhlYWRlcnMgdG8gdGhlIHJlcXVlc3RcbiAgICBpZiAoJ3NldFJlcXVlc3RIZWFkZXInIGluIHJlcXVlc3QpIHtcbiAgICAgIHV0aWxzLmZvckVhY2gocmVxdWVzdEhlYWRlcnMsIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIodmFsLCBrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0RGF0YSA9PT0gJ3VuZGVmaW5lZCcgJiYga2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgLy8gUmVtb3ZlIENvbnRlbnQtVHlwZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1trZXldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE90aGVyd2lzZSBhZGQgaGVhZGVyIHRvIHRoZSByZXF1ZXN0XG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhDcmVkZW50aWFscyB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmIChjb25maWcud2l0aENyZWRlbnRpYWxzKSB7XG4gICAgICByZXF1ZXN0LndpdGhDcmVkZW50aWFscyA9IHRydWU7XG4gICAgfVxuXG4gICAgLy8gQWRkIHJlc3BvbnNlVHlwZSB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmIChjb25maWcucmVzcG9uc2VUeXBlKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXF1ZXN0LnJlc3BvbnNlVHlwZSA9IGNvbmZpZy5yZXNwb25zZVR5cGU7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIEV4cGVjdGVkIERPTUV4Y2VwdGlvbiB0aHJvd24gYnkgYnJvd3NlcnMgbm90IGNvbXBhdGlibGUgWE1MSHR0cFJlcXVlc3QgTGV2ZWwgMi5cbiAgICAgICAgLy8gQnV0LCB0aGlzIGNhbiBiZSBzdXBwcmVzc2VkIGZvciAnanNvbicgdHlwZSBhcyBpdCBjYW4gYmUgcGFyc2VkIGJ5IGRlZmF1bHQgJ3RyYW5zZm9ybVJlc3BvbnNlJyBmdW5jdGlvbi5cbiAgICAgICAgaWYgKGNvbmZpZy5yZXNwb25zZVR5cGUgIT09ICdqc29uJykge1xuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgcHJvZ3Jlc3MgaWYgbmVlZGVkXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25Eb3dubG9hZFByb2dyZXNzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgLy8gTm90IGFsbCBicm93c2VycyBzdXBwb3J0IHVwbG9hZCBldmVudHNcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5vblVwbG9hZFByb2dyZXNzID09PSAnZnVuY3Rpb24nICYmIHJlcXVlc3QudXBsb2FkKSB7XG4gICAgICByZXF1ZXN0LnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vblVwbG9hZFByb2dyZXNzKTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgICAvLyBIYW5kbGUgY2FuY2VsbGF0aW9uXG4gICAgICBjb25maWcuY2FuY2VsVG9rZW4ucHJvbWlzZS50aGVuKGZ1bmN0aW9uIG9uQ2FuY2VsZWQoY2FuY2VsKSB7XG4gICAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3QuYWJvcnQoKTtcbiAgICAgICAgcmVqZWN0KGNhbmNlbCk7XG4gICAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAocmVxdWVzdERhdGEgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmVxdWVzdERhdGEgPSBudWxsO1xuICAgIH1cblxuICAgIC8vIFNlbmQgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LnNlbmQocmVxdWVzdERhdGEpO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBlbmhhbmNlRXJyb3IgPSByZXF1aXJlKCcuL2VuaGFuY2VFcnJvcicpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSwgY29uZmlnLCBlcnJvciBjb2RlLCByZXF1ZXN0IGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVFcnJvcihtZXNzYWdlLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIHZhciBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgcmV0dXJuIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG4vKipcbiAqIENvbmZpZy1zcGVjaWZpYyBtZXJnZS1mdW5jdGlvbiB3aGljaCBjcmVhdGVzIGEgbmV3IGNvbmZpZy1vYmplY3RcbiAqIGJ5IG1lcmdpbmcgdHdvIGNvbmZpZ3VyYXRpb24gb2JqZWN0cyB0b2dldGhlci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMVxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzJcbiAqIEByZXR1cm5zIHtPYmplY3R9IE5ldyBvYmplY3QgcmVzdWx0aW5nIGZyb20gbWVyZ2luZyBjb25maWcyIHRvIGNvbmZpZzFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtZXJnZUNvbmZpZyhjb25maWcxLCBjb25maWcyKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBjb25maWcyID0gY29uZmlnMiB8fCB7fTtcbiAgdmFyIGNvbmZpZyA9IHt9O1xuXG4gIHV0aWxzLmZvckVhY2goWyd1cmwnLCAnbWV0aG9kJywgJ3BhcmFtcycsICdkYXRhJ10sIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIocHJvcCkge1xuICAgIGlmICh0eXBlb2YgY29uZmlnMltwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzJbcHJvcF07XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKFsnaGVhZGVycycsICdhdXRoJywgJ3Byb3h5J10sIGZ1bmN0aW9uIG1lcmdlRGVlcFByb3BlcnRpZXMocHJvcCkge1xuICAgIGlmICh1dGlscy5pc09iamVjdChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gdXRpbHMuZGVlcE1lcmdlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGNvbmZpZzJbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBjb25maWcyW3Byb3BdO1xuICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IHV0aWxzLmRlZXBNZXJnZShjb25maWcxW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb25maWcxW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMVtwcm9wXTtcbiAgICB9XG4gIH0pO1xuXG4gIHV0aWxzLmZvckVhY2goW1xuICAgICdiYXNlVVJMJywgJ3RyYW5zZm9ybVJlcXVlc3QnLCAndHJhbnNmb3JtUmVzcG9uc2UnLCAncGFyYW1zU2VyaWFsaXplcicsXG4gICAgJ3RpbWVvdXQnLCAnd2l0aENyZWRlbnRpYWxzJywgJ2FkYXB0ZXInLCAncmVzcG9uc2VUeXBlJywgJ3hzcmZDb29raWVOYW1lJyxcbiAgICAneHNyZkhlYWRlck5hbWUnLCAnb25VcGxvYWRQcm9ncmVzcycsICdvbkRvd25sb2FkUHJvZ3Jlc3MnLCAnbWF4Q29udGVudExlbmd0aCcsXG4gICAgJ3ZhbGlkYXRlU3RhdHVzJywgJ21heFJlZGlyZWN0cycsICdodHRwQWdlbnQnLCAnaHR0cHNBZ2VudCcsICdjYW5jZWxUb2tlbicsXG4gICAgJ3NvY2tldFBhdGgnXG4gIF0sIGZ1bmN0aW9uIGRlZmF1bHRUb0NvbmZpZzIocHJvcCkge1xuICAgIGlmICh0eXBlb2YgY29uZmlnMltwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzJbcHJvcF07XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgY29uZmlnMVtwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzFbcHJvcF07XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBBIGBDYW5jZWxgIGlzIGFuIG9iamVjdCB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9wZXJhdGlvbiBpcyBjYW5jZWxlZC5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7c3RyaW5nPX0gbWVzc2FnZSBUaGUgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsKG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbn1cblxuQ2FuY2VsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gJ0NhbmNlbCcgKyAodGhpcy5tZXNzYWdlID8gJzogJyArIHRoaXMubWVzc2FnZSA6ICcnKTtcbn07XG5cbkNhbmNlbC5wcm90b3R5cGUuX19DQU5DRUxfXyA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuICdAbWVkaWEgJyArIGl0ZW1bMl0gKyAneycgKyBjb250ZW50ICsgJ30nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IG1vZHVsZXNbaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9ICcoJyArIGl0ZW1bMl0gKyAnKSBhbmQgKCcgKyBtZWRpYVF1ZXJ5ICsgJyknO1xuICAgICAgICB9XG5cbiAgICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuICByZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufSIsIid1c2Ugc3RyaWN0JztcbmNvbnN0IHN0cmljdFVyaUVuY29kZSA9IHJlcXVpcmUoJ3N0cmljdC11cmktZW5jb2RlJyk7XG5jb25zdCBkZWNvZGVDb21wb25lbnQgPSByZXF1aXJlKCdkZWNvZGUtdXJpLWNvbXBvbmVudCcpO1xuY29uc3Qgc3BsaXRPbkZpcnN0ID0gcmVxdWlyZSgnc3BsaXQtb24tZmlyc3QnKTtcblxuZnVuY3Rpb24gZW5jb2RlckZvckFycmF5Rm9ybWF0KG9wdGlvbnMpIHtcblx0c3dpdGNoIChvcHRpb25zLmFycmF5Rm9ybWF0KSB7XG5cdFx0Y2FzZSAnaW5kZXgnOlxuXHRcdFx0cmV0dXJuIGtleSA9PiAocmVzdWx0LCB2YWx1ZSkgPT4ge1xuXHRcdFx0XHRjb25zdCBpbmRleCA9IHJlc3VsdC5sZW5ndGg7XG5cdFx0XHRcdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHJldHVybiBbLi4ucmVzdWx0LCBbZW5jb2RlKGtleSwgb3B0aW9ucyksICdbJywgaW5kZXgsICddJ10uam9pbignJyldO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFtcblx0XHRcdFx0XHQuLi5yZXN1bHQsXG5cdFx0XHRcdFx0W2VuY29kZShrZXksIG9wdGlvbnMpLCAnWycsIGVuY29kZShpbmRleCwgb3B0aW9ucyksICddPScsIGVuY29kZSh2YWx1ZSwgb3B0aW9ucyldLmpvaW4oJycpXG5cdFx0XHRcdF07XG5cdFx0XHR9O1xuXG5cdFx0Y2FzZSAnYnJhY2tldCc6XG5cdFx0XHRyZXR1cm4ga2V5ID0+IChyZXN1bHQsIHZhbHVlKSA9PiB7XG5cdFx0XHRcdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHJldHVybiBbLi4ucmVzdWx0LCBbZW5jb2RlKGtleSwgb3B0aW9ucyksICdbXSddLmpvaW4oJycpXTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBbLi4ucmVzdWx0LCBbZW5jb2RlKGtleSwgb3B0aW9ucyksICdbXT0nLCBlbmNvZGUodmFsdWUsIG9wdGlvbnMpXS5qb2luKCcnKV07XG5cdFx0XHR9O1xuXG5cdFx0Y2FzZSAnY29tbWEnOlxuXHRcdFx0cmV0dXJuIGtleSA9PiAocmVzdWx0LCB2YWx1ZSwgaW5kZXgpID0+IHtcblx0XHRcdFx0aWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChpbmRleCA9PT0gMCkge1xuXHRcdFx0XHRcdHJldHVybiBbW2VuY29kZShrZXksIG9wdGlvbnMpLCAnPScsIGVuY29kZSh2YWx1ZSwgb3B0aW9ucyldLmpvaW4oJycpXTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBbW3Jlc3VsdCwgZW5jb2RlKHZhbHVlLCBvcHRpb25zKV0uam9pbignLCcpXTtcblx0XHRcdH07XG5cblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIGtleSA9PiAocmVzdWx0LCB2YWx1ZSkgPT4ge1xuXHRcdFx0XHRpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAodmFsdWUgPT09IG51bGwpIHtcblx0XHRcdFx0XHRyZXR1cm4gWy4uLnJlc3VsdCwgZW5jb2RlKGtleSwgb3B0aW9ucyldO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFsuLi5yZXN1bHQsIFtlbmNvZGUoa2V5LCBvcHRpb25zKSwgJz0nLCBlbmNvZGUodmFsdWUsIG9wdGlvbnMpXS5qb2luKCcnKV07XG5cdFx0XHR9O1xuXHR9XG59XG5cbmZ1bmN0aW9uIHBhcnNlckZvckFycmF5Rm9ybWF0KG9wdGlvbnMpIHtcblx0bGV0IHJlc3VsdDtcblxuXHRzd2l0Y2ggKG9wdGlvbnMuYXJyYXlGb3JtYXQpIHtcblx0XHRjYXNlICdpbmRleCc6XG5cdFx0XHRyZXR1cm4gKGtleSwgdmFsdWUsIGFjY3VtdWxhdG9yKSA9PiB7XG5cdFx0XHRcdHJlc3VsdCA9IC9cXFsoXFxkKilcXF0kLy5leGVjKGtleSk7XG5cblx0XHRcdFx0a2V5ID0ga2V5LnJlcGxhY2UoL1xcW1xcZCpcXF0kLywgJycpO1xuXG5cdFx0XHRcdGlmICghcmVzdWx0KSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IHZhbHVlO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChhY2N1bXVsYXRvcltrZXldID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0ge307XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRhY2N1bXVsYXRvcltrZXldW3Jlc3VsdFsxXV0gPSB2YWx1ZTtcblx0XHRcdH07XG5cblx0XHRjYXNlICdicmFja2V0Jzpcblx0XHRcdHJldHVybiAoa2V5LCB2YWx1ZSwgYWNjdW11bGF0b3IpID0+IHtcblx0XHRcdFx0cmVzdWx0ID0gLyhcXFtcXF0pJC8uZXhlYyhrZXkpO1xuXHRcdFx0XHRrZXkgPSBrZXkucmVwbGFjZSgvXFxbXFxdJC8sICcnKTtcblxuXHRcdFx0XHRpZiAoIXJlc3VsdCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSB2YWx1ZTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoYWNjdW11bGF0b3Jba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFt2YWx1ZV07XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFtdLmNvbmNhdChhY2N1bXVsYXRvcltrZXldLCB2YWx1ZSk7XG5cdFx0XHR9O1xuXG5cdFx0Y2FzZSAnY29tbWEnOlxuXHRcdFx0cmV0dXJuIChrZXksIHZhbHVlLCBhY2N1bXVsYXRvcikgPT4ge1xuXHRcdFx0XHRjb25zdCBpc0FycmF5ID0gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5zcGxpdCgnJykuaW5kZXhPZignLCcpID4gLTE7XG5cdFx0XHRcdGNvbnN0IG5ld1ZhbHVlID0gaXNBcnJheSA/IHZhbHVlLnNwbGl0KCcsJykgOiB2YWx1ZTtcblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IG5ld1ZhbHVlO1xuXHRcdFx0fTtcblxuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4gKGtleSwgdmFsdWUsIGFjY3VtdWxhdG9yKSA9PiB7XG5cdFx0XHRcdGlmIChhY2N1bXVsYXRvcltrZXldID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gdmFsdWU7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFtdLmNvbmNhdChhY2N1bXVsYXRvcltrZXldLCB2YWx1ZSk7XG5cdFx0XHR9O1xuXHR9XG59XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWx1ZSwgb3B0aW9ucykge1xuXHRpZiAob3B0aW9ucy5lbmNvZGUpIHtcblx0XHRyZXR1cm4gb3B0aW9ucy5zdHJpY3QgPyBzdHJpY3RVcmlFbmNvZGUodmFsdWUpIDogZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKTtcblx0fVxuXG5cdHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gZGVjb2RlKHZhbHVlLCBvcHRpb25zKSB7XG5cdGlmIChvcHRpb25zLmRlY29kZSkge1xuXHRcdHJldHVybiBkZWNvZGVDb21wb25lbnQodmFsdWUpO1xuXHR9XG5cblx0cmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBrZXlzU29ydGVyKGlucHV0KSB7XG5cdGlmIChBcnJheS5pc0FycmF5KGlucHV0KSkge1xuXHRcdHJldHVybiBpbnB1dC5zb3J0KCk7XG5cdH1cblxuXHRpZiAodHlwZW9mIGlucHV0ID09PSAnb2JqZWN0Jykge1xuXHRcdHJldHVybiBrZXlzU29ydGVyKE9iamVjdC5rZXlzKGlucHV0KSlcblx0XHRcdC5zb3J0KChhLCBiKSA9PiBOdW1iZXIoYSkgLSBOdW1iZXIoYikpXG5cdFx0XHQubWFwKGtleSA9PiBpbnB1dFtrZXldKTtcblx0fVxuXG5cdHJldHVybiBpbnB1dDtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlSGFzaChpbnB1dCkge1xuXHRjb25zdCBoYXNoU3RhcnQgPSBpbnB1dC5pbmRleE9mKCcjJyk7XG5cdGlmIChoYXNoU3RhcnQgIT09IC0xKSB7XG5cdFx0aW5wdXQgPSBpbnB1dC5zbGljZSgwLCBoYXNoU3RhcnQpO1xuXHR9XG5cblx0cmV0dXJuIGlucHV0O1xufVxuXG5mdW5jdGlvbiBleHRyYWN0KGlucHV0KSB7XG5cdGlucHV0ID0gcmVtb3ZlSGFzaChpbnB1dCk7XG5cdGNvbnN0IHF1ZXJ5U3RhcnQgPSBpbnB1dC5pbmRleE9mKCc/Jyk7XG5cdGlmIChxdWVyeVN0YXJ0ID09PSAtMSkge1xuXHRcdHJldHVybiAnJztcblx0fVxuXG5cdHJldHVybiBpbnB1dC5zbGljZShxdWVyeVN0YXJ0ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHBhcnNlKGlucHV0LCBvcHRpb25zKSB7XG5cdG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcblx0XHRkZWNvZGU6IHRydWUsXG5cdFx0c29ydDogdHJ1ZSxcblx0XHRhcnJheUZvcm1hdDogJ25vbmUnXG5cdH0sIG9wdGlvbnMpO1xuXG5cdGNvbnN0IGZvcm1hdHRlciA9IHBhcnNlckZvckFycmF5Rm9ybWF0KG9wdGlvbnMpO1xuXG5cdC8vIENyZWF0ZSBhbiBvYmplY3Qgd2l0aCBubyBwcm90b3R5cGVcblx0Y29uc3QgcmV0ID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuXHRpZiAodHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJykge1xuXHRcdHJldHVybiByZXQ7XG5cdH1cblxuXHRpbnB1dCA9IGlucHV0LnRyaW0oKS5yZXBsYWNlKC9eWz8jJl0vLCAnJyk7XG5cblx0aWYgKCFpbnB1dCkge1xuXHRcdHJldHVybiByZXQ7XG5cdH1cblxuXHRmb3IgKGNvbnN0IHBhcmFtIG9mIGlucHV0LnNwbGl0KCcmJykpIHtcblx0XHRsZXQgW2tleSwgdmFsdWVdID0gc3BsaXRPbkZpcnN0KHBhcmFtLnJlcGxhY2UoL1xcKy9nLCAnICcpLCAnPScpO1xuXG5cdFx0Ly8gTWlzc2luZyBgPWAgc2hvdWxkIGJlIGBudWxsYDpcblx0XHQvLyBodHRwOi8vdzMub3JnL1RSLzIwMTIvV0QtdXJsLTIwMTIwNTI0LyNjb2xsZWN0LXVybC1wYXJhbWV0ZXJzXG5cdFx0dmFsdWUgPSB2YWx1ZSA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGRlY29kZSh2YWx1ZSwgb3B0aW9ucyk7XG5cblx0XHRmb3JtYXR0ZXIoZGVjb2RlKGtleSwgb3B0aW9ucyksIHZhbHVlLCByZXQpO1xuXHR9XG5cblx0aWYgKG9wdGlvbnMuc29ydCA9PT0gZmFsc2UpIHtcblx0XHRyZXR1cm4gcmV0O1xuXHR9XG5cblx0cmV0dXJuIChvcHRpb25zLnNvcnQgPT09IHRydWUgPyBPYmplY3Qua2V5cyhyZXQpLnNvcnQoKSA6IE9iamVjdC5rZXlzKHJldCkuc29ydChvcHRpb25zLnNvcnQpKS5yZWR1Y2UoKHJlc3VsdCwga2V5KSA9PiB7XG5cdFx0Y29uc3QgdmFsdWUgPSByZXRba2V5XTtcblx0XHRpZiAoQm9vbGVhbih2YWx1ZSkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcblx0XHRcdC8vIFNvcnQgb2JqZWN0IGtleXMsIG5vdCB2YWx1ZXNcblx0XHRcdHJlc3VsdFtrZXldID0ga2V5c1NvcnRlcih2YWx1ZSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlc3VsdFtrZXldID0gdmFsdWU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fSwgT2JqZWN0LmNyZWF0ZShudWxsKSk7XG59XG5cbmV4cG9ydHMuZXh0cmFjdCA9IGV4dHJhY3Q7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5cbmV4cG9ydHMuc3RyaW5naWZ5ID0gKG9iamVjdCwgb3B0aW9ucykgPT4ge1xuXHRpZiAoIW9iamVjdCkge1xuXHRcdHJldHVybiAnJztcblx0fVxuXG5cdG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcblx0XHRlbmNvZGU6IHRydWUsXG5cdFx0c3RyaWN0OiB0cnVlLFxuXHRcdGFycmF5Rm9ybWF0OiAnbm9uZSdcblx0fSwgb3B0aW9ucyk7XG5cblx0Y29uc3QgZm9ybWF0dGVyID0gZW5jb2RlckZvckFycmF5Rm9ybWF0KG9wdGlvbnMpO1xuXHRjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTtcblxuXHRpZiAob3B0aW9ucy5zb3J0ICE9PSBmYWxzZSkge1xuXHRcdGtleXMuc29ydChvcHRpb25zLnNvcnQpO1xuXHR9XG5cblx0cmV0dXJuIGtleXMubWFwKGtleSA9PiB7XG5cdFx0Y29uc3QgdmFsdWUgPSBvYmplY3Rba2V5XTtcblxuXHRcdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gJyc7XG5cdFx0fVxuXG5cdFx0aWYgKHZhbHVlID09PSBudWxsKSB7XG5cdFx0XHRyZXR1cm4gZW5jb2RlKGtleSwgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWVcblx0XHRcdFx0LnJlZHVjZShmb3JtYXR0ZXIoa2V5KSwgW10pXG5cdFx0XHRcdC5qb2luKCcmJyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVuY29kZShrZXksIG9wdGlvbnMpICsgJz0nICsgZW5jb2RlKHZhbHVlLCBvcHRpb25zKTtcblx0fSkuZmlsdGVyKHggPT4geC5sZW5ndGggPiAwKS5qb2luKCcmJyk7XG59O1xuXG5leHBvcnRzLnBhcnNlVXJsID0gKGlucHV0LCBvcHRpb25zKSA9PiB7XG5cdHJldHVybiB7XG5cdFx0dXJsOiByZW1vdmVIYXNoKGlucHV0KS5zcGxpdCgnPycpWzBdIHx8ICcnLFxuXHRcdHF1ZXJ5OiBwYXJzZShleHRyYWN0KGlucHV0KSwgb3B0aW9ucylcblx0fTtcbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZvcndhcmRSZWY7XG5cbnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGZvcndhcmRSZWYocmVuZGVyRm4sIF90ZW1wKSB7XG4gIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBwcm9wVHlwZXMgPSBfcmVmLnByb3BUeXBlcyxcbiAgICAgIGRlZmF1bHRQcm9wcyA9IF9yZWYuZGVmYXVsdFByb3BzLFxuICAgICAgX3JlZiRhbGxvd0ZhbGxiYWNrID0gX3JlZi5hbGxvd0ZhbGxiYWNrLFxuICAgICAgYWxsb3dGYWxsYmFjayA9IF9yZWYkYWxsb3dGYWxsYmFjayA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJGFsbG93RmFsbGJhY2ssXG4gICAgICBfcmVmJGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZSxcbiAgICAgIGRpc3BsYXlOYW1lID0gX3JlZiRkaXNwbGF5TmFtZSA9PT0gdm9pZCAwID8gcmVuZGVyRm4ubmFtZSB8fCByZW5kZXJGbi5kaXNwbGF5TmFtZSA6IF9yZWYkZGlzcGxheU5hbWU7XG5cbiAgdmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcihwcm9wcywgcmVmKSB7XG4gICAgcmV0dXJuIHJlbmRlckZuKHByb3BzLCByZWYpO1xuICB9O1xuXG4gIHJldHVybiBPYmplY3QuYXNzaWduKF9yZWFjdC5kZWZhdWx0LmZvcndhcmRSZWYgfHwgIWFsbG93RmFsbGJhY2sgPyBfcmVhY3QuZGVmYXVsdC5mb3J3YXJkUmVmKHJlbmRlcikgOiBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICByZXR1cm4gcmVuZGVyKHByb3BzLCBudWxsKTtcbiAgfSwge1xuICAgIGRpc3BsYXlOYW1lOiBkaXNwbGF5TmFtZSxcbiAgICBwcm9wVHlwZXM6IHByb3BUeXBlcyxcbiAgICBkZWZhdWx0UHJvcHM6IGRlZmF1bHRQcm9wc1xuICB9KTtcbn0iLCIoZnVuY3Rpb24gKGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gKG1vZHVsZVsnZXhwb3J0cyddID0gZmFjdG9yeSgpKSA6XG5cdFx0dHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmVbJ2FtZCddID8gZGVmaW5lKGZhY3RvcnkoKSkgOlxuXHRcdFx0KHdpbmRvd1snc3R5bGlzUnVsZVNoZWV0J10gPSBmYWN0b3J5KCkpXG59KGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCdcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluc2VydFJ1bGUpIHtcblx0XHR2YXIgZGVsaW1pdGVyID0gJy8qfCovJ1xuXHRcdHZhciBuZWVkbGUgPSBkZWxpbWl0ZXIrJ30nXG5cblx0XHRmdW5jdGlvbiB0b1NoZWV0IChibG9jaykge1xuXHRcdFx0aWYgKGJsb2NrKVxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGluc2VydFJ1bGUoYmxvY2sgKyAnfScpXG5cdFx0XHRcdH0gY2F0Y2ggKGUpIHt9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uIHJ1bGVTaGVldCAoY29udGV4dCwgY29udGVudCwgc2VsZWN0b3JzLCBwYXJlbnRzLCBsaW5lLCBjb2x1bW4sIGxlbmd0aCwgbnMsIGRlcHRoLCBhdCkge1xuXHRcdFx0c3dpdGNoIChjb250ZXh0KSB7XG5cdFx0XHRcdC8vIHByb3BlcnR5XG5cdFx0XHRcdGNhc2UgMTpcblx0XHRcdFx0XHQvLyBAaW1wb3J0XG5cdFx0XHRcdFx0aWYgKGRlcHRoID09PSAwICYmIGNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gNjQpXG5cdFx0XHRcdFx0XHRyZXR1cm4gaW5zZXJ0UnVsZShjb250ZW50Kyc7JyksICcnXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gc2VsZWN0b3Jcblx0XHRcdFx0Y2FzZSAyOlxuXHRcdFx0XHRcdGlmIChucyA9PT0gMClcblx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgZGVsaW1pdGVyXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gYXQtcnVsZVxuXHRcdFx0XHRjYXNlIDM6XG5cdFx0XHRcdFx0c3dpdGNoIChucykge1xuXHRcdFx0XHRcdFx0Ly8gQGZvbnQtZmFjZSwgQHBhZ2Vcblx0XHRcdFx0XHRcdGNhc2UgMTAyOlxuXHRcdFx0XHRcdFx0Y2FzZSAxMTI6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbnNlcnRSdWxlKHNlbGVjdG9yc1swXStjb250ZW50KSwgJydcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgKGF0ID09PSAwID8gZGVsaW1pdGVyIDogJycpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRjYXNlIC0yOlxuXHRcdFx0XHRcdGNvbnRlbnQuc3BsaXQobmVlZGxlKS5mb3JFYWNoKHRvU2hlZXQpXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KSlcbiIsImltcG9ydCBtZW1vaXplIGZyb20gJ0BlbW90aW9uL21lbW9pemUnO1xuXG52YXIgcmVhY3RQcm9wc1JlZ2V4ID0gL14oKGNoaWxkcmVufGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfGtleXxyZWZ8YXV0b0ZvY3VzfGRlZmF1bHRWYWx1ZXxkZWZhdWx0Q2hlY2tlZHxpbm5lckhUTUx8c3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nfHN1cHByZXNzSHlkcmF0aW9uV2FybmluZ3x2YWx1ZUxpbmt8YWNjZXB0fGFjY2VwdENoYXJzZXR8YWNjZXNzS2V5fGFjdGlvbnxhbGxvd3xhbGxvd1VzZXJNZWRpYXxhbGxvd1BheW1lbnRSZXF1ZXN0fGFsbG93RnVsbFNjcmVlbnxhbGxvd1RyYW5zcGFyZW5jeXxhbHR8YXN5bmN8YXV0b0NvbXBsZXRlfGF1dG9QbGF5fGNhcHR1cmV8Y2VsbFBhZGRpbmd8Y2VsbFNwYWNpbmd8Y2hhbGxlbmdlfGNoYXJTZXR8Y2hlY2tlZHxjaXRlfGNsYXNzSUR8Y2xhc3NOYW1lfGNvbHN8Y29sU3Bhbnxjb250ZW50fGNvbnRlbnRFZGl0YWJsZXxjb250ZXh0TWVudXxjb250cm9sc3xjb250cm9sc0xpc3R8Y29vcmRzfGNyb3NzT3JpZ2lufGRhdGF8ZGF0ZVRpbWV8ZGVmYXVsdHxkZWZlcnxkaXJ8ZGlzYWJsZWR8ZG93bmxvYWR8ZHJhZ2dhYmxlfGVuY1R5cGV8Zm9ybXxmb3JtQWN0aW9ufGZvcm1FbmNUeXBlfGZvcm1NZXRob2R8Zm9ybU5vVmFsaWRhdGV8Zm9ybVRhcmdldHxmcmFtZUJvcmRlcnxoZWFkZXJzfGhlaWdodHxoaWRkZW58aGlnaHxocmVmfGhyZWZMYW5nfGh0bWxGb3J8aHR0cEVxdWl2fGlkfGlucHV0TW9kZXxpbnRlZ3JpdHl8aXN8a2V5UGFyYW1zfGtleVR5cGV8a2luZHxsYWJlbHxsYW5nfGxpc3R8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHlwZXx1c2VNYXB8dmFsdWV8d2lkdGh8d21vZGV8d3JhcHxhYm91dHxkYXRhdHlwZXxpbmxpc3R8cHJlZml4fHByb3BlcnR5fHJlc291cmNlfHR5cGVvZnx2b2NhYnxhdXRvQ2FwaXRhbGl6ZXxhdXRvQ29ycmVjdHxhdXRvU2F2ZXxjb2xvcnxpdGVtUHJvcHxpdGVtU2NvcGV8aXRlbVR5cGV8aXRlbUlEfGl0ZW1SZWZ8cmVzdWx0c3xzZWN1cml0eXx1bnNlbGVjdGFibGV8YWNjZW50SGVpZ2h0fGFjY3VtdWxhdGV8YWRkaXRpdmV8YWxpZ25tZW50QmFzZWxpbmV8YWxsb3dSZW9yZGVyfGFscGhhYmV0aWN8YW1wbGl0dWRlfGFyYWJpY0Zvcm18YXNjZW50fGF0dHJpYnV0ZU5hbWV8YXR0cmlidXRlVHlwZXxhdXRvUmV2ZXJzZXxhemltdXRofGJhc2VGcmVxdWVuY3l8YmFzZWxpbmVTaGlmdHxiYXNlUHJvZmlsZXxiYm94fGJlZ2lufGJpYXN8Ynl8Y2FsY01vZGV8Y2FwSGVpZ2h0fGNsaXB8Y2xpcFBhdGhVbml0c3xjbGlwUGF0aHxjbGlwUnVsZXxjb2xvckludGVycG9sYXRpb258Y29sb3JJbnRlcnBvbGF0aW9uRmlsdGVyc3xjb2xvclByb2ZpbGV8Y29sb3JSZW5kZXJpbmd8Y29udGVudFNjcmlwdFR5cGV8Y29udGVudFN0eWxlVHlwZXxjdXJzb3J8Y3h8Y3l8ZHxkZWNlbGVyYXRlfGRlc2NlbnR8ZGlmZnVzZUNvbnN0YW50fGRpcmVjdGlvbnxkaXNwbGF5fGRpdmlzb3J8ZG9taW5hbnRCYXNlbGluZXxkdXJ8ZHh8ZHl8ZWRnZU1vZGV8ZWxldmF0aW9ufGVuYWJsZUJhY2tncm91bmR8ZW5kfGV4cG9uZW50fGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWR8ZmlsbHxmaWxsT3BhY2l0eXxmaWxsUnVsZXxmaWx0ZXJ8ZmlsdGVyUmVzfGZpbHRlclVuaXRzfGZsb29kQ29sb3J8Zmxvb2RPcGFjaXR5fGZvY3VzYWJsZXxmb250RmFtaWx5fGZvbnRTaXplfGZvbnRTaXplQWRqdXN0fGZvbnRTdHJldGNofGZvbnRTdHlsZXxmb250VmFyaWFudHxmb250V2VpZ2h0fGZvcm1hdHxmcm9tfGZyfGZ4fGZ5fGcxfGcyfGdseXBoTmFtZXxnbHlwaE9yaWVudGF0aW9uSG9yaXpvbnRhbHxnbHlwaE9yaWVudGF0aW9uVmVydGljYWx8Z2x5cGhSZWZ8Z3JhZGllbnRUcmFuc2Zvcm18Z3JhZGllbnRVbml0c3xoYW5naW5nfGhvcml6QWR2WHxob3Jpek9yaWdpblh8aWRlb2dyYXBoaWN8aW1hZ2VSZW5kZXJpbmd8aW58aW4yfGludGVyY2VwdHxrfGsxfGsyfGszfGs0fGtlcm5lbE1hdHJpeHxrZXJuZWxVbml0TGVuZ3RofGtlcm5pbmd8a2V5UG9pbnRzfGtleVNwbGluZXN8a2V5VGltZXN8bGVuZ3RoQWRqdXN0fGxldHRlclNwYWNpbmd8bGlnaHRpbmdDb2xvcnxsaW1pdGluZ0NvbmVBbmdsZXxsb2NhbHxtYXJrZXJFbmR8bWFya2VyTWlkfG1hcmtlclN0YXJ0fG1hcmtlckhlaWdodHxtYXJrZXJVbml0c3xtYXJrZXJXaWR0aHxtYXNrfG1hc2tDb250ZW50VW5pdHN8bWFza1VuaXRzfG1hdGhlbWF0aWNhbHxtb2RlfG51bU9jdGF2ZXN8b2Zmc2V0fG9wYWNpdHl8b3BlcmF0b3J8b3JkZXJ8b3JpZW50fG9yaWVudGF0aW9ufG9yaWdpbnxvdmVyZmxvd3xvdmVybGluZVBvc2l0aW9ufG92ZXJsaW5lVGhpY2tuZXNzfHBhbm9zZTF8cGFpbnRPcmRlcnxwYXRoTGVuZ3RofHBhdHRlcm5Db250ZW50VW5pdHN8cGF0dGVyblRyYW5zZm9ybXxwYXR0ZXJuVW5pdHN8cG9pbnRlckV2ZW50c3xwb2ludHN8cG9pbnRzQXRYfHBvaW50c0F0WXxwb2ludHNBdFp8cHJlc2VydmVBbHBoYXxwcmVzZXJ2ZUFzcGVjdFJhdGlvfHByaW1pdGl2ZVVuaXRzfHJ8cmFkaXVzfHJlZlh8cmVmWXxyZW5kZXJpbmdJbnRlbnR8cmVwZWF0Q291bnR8cmVwZWF0RHVyfHJlcXVpcmVkRXh0ZW5zaW9uc3xyZXF1aXJlZEZlYXR1cmVzfHJlc3RhcnR8cmVzdWx0fHJvdGF0ZXxyeHxyeXxzY2FsZXxzZWVkfHNoYXBlUmVuZGVyaW5nfHNsb3BlfHNwYWNpbmd8c3BlY3VsYXJDb25zdGFudHxzcGVjdWxhckV4cG9uZW50fHNwZWVkfHNwcmVhZE1ldGhvZHxzdGFydE9mZnNldHxzdGREZXZpYXRpb258c3RlbWh8c3RlbXZ8c3RpdGNoVGlsZXN8c3RvcENvbG9yfHN0b3BPcGFjaXR5fHN0cmlrZXRocm91Z2hQb3NpdGlvbnxzdHJpa2V0aHJvdWdoVGhpY2tuZXNzfHN0cmluZ3xzdHJva2V8c3Ryb2tlRGFzaGFycmF5fHN0cm9rZURhc2hvZmZzZXR8c3Ryb2tlTGluZWNhcHxzdHJva2VMaW5lam9pbnxzdHJva2VNaXRlcmxpbWl0fHN0cm9rZU9wYWNpdHl8c3Ryb2tlV2lkdGh8c3VyZmFjZVNjYWxlfHN5c3RlbUxhbmd1YWdlfHRhYmxlVmFsdWVzfHRhcmdldFh8dGFyZ2V0WXx0ZXh0QW5jaG9yfHRleHREZWNvcmF0aW9ufHRleHRSZW5kZXJpbmd8dGV4dExlbmd0aHx0b3x0cmFuc2Zvcm18dTF8dTJ8dW5kZXJsaW5lUG9zaXRpb258dW5kZXJsaW5lVGhpY2tuZXNzfHVuaWNvZGV8dW5pY29kZUJpZGl8dW5pY29kZVJhbmdlfHVuaXRzUGVyRW18dkFscGhhYmV0aWN8dkhhbmdpbmd8dklkZW9ncmFwaGljfHZNYXRoZW1hdGljYWx8dmFsdWVzfHZlY3RvckVmZmVjdHx2ZXJzaW9ufHZlcnRBZHZZfHZlcnRPcmlnaW5YfHZlcnRPcmlnaW5ZfHZpZXdCb3h8dmlld1RhcmdldHx2aXNpYmlsaXR5fHdpZHRoc3x3b3JkU3BhY2luZ3x3cml0aW5nTW9kZXx4fHhIZWlnaHR8eDF8eDJ8eENoYW5uZWxTZWxlY3Rvcnx4bGlua0FjdHVhdGV8eGxpbmtBcmNyb2xlfHhsaW5rSHJlZnx4bGlua1JvbGV8eGxpbmtTaG93fHhsaW5rVGl0bGV8eGxpbmtUeXBlfHhtbEJhc2V8eG1sbnN8eG1sbnNYbGlua3x4bWxMYW5nfHhtbFNwYWNlfHl8eTF8eTJ8eUNoYW5uZWxTZWxlY3Rvcnx6fHpvb21BbmRQYW58Zm9yfGNsYXNzfGF1dG9mb2N1cyl8KChbRGRdW0FhXVtUdF1bQWFdfFtBYV1bUnJdW0lpXVtBYV18eCktLiopKSQvOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViZmVlNjhhNGNkN2U2MDA5ZWY2MWQyM1xuXG52YXIgaW5kZXggPSBtZW1vaXplKGZ1bmN0aW9uIChwcm9wKSB7XG4gIHJldHVybiByZWFjdFByb3BzUmVnZXgudGVzdChwcm9wKSB8fCBwcm9wLmNoYXJDb2RlQXQoMCkgPT09IDExMVxuICAvKiBvICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgxKSA9PT0gMTEwXG4gIC8qIG4gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDIpIDwgOTE7XG59XG4vKiBaKzEgKi9cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1bmNvbnRyb2xsYWJsZTtcblxudmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInJlYWN0XCIpKTtcblxudmFyIF9pbnZhcmlhbnQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJpbnZhcmlhbnRcIikpO1xuXG52YXIgVXRpbHMgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi91dGlsc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307IGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyByZXR1cm4gbmV3T2JqOyB9IH1cblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IHt9OyB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IHZhciBrZXksIGk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZUtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTsgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuZnVuY3Rpb24gdW5jb250cm9sbGFibGUoQ29tcG9uZW50LCBjb250cm9sbGVkVmFsdWVzLCBtZXRob2RzKSB7XG4gIGlmIChtZXRob2RzID09PSB2b2lkIDApIHtcbiAgICBtZXRob2RzID0gW107XG4gIH1cblxuICB2YXIgZGlzcGxheU5hbWUgPSBDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG4gIHZhciBjYW5BY2NlcHRSZWYgPSBVdGlscy5jYW5BY2NlcHRSZWYoQ29tcG9uZW50KTtcbiAgdmFyIGNvbnRyb2xsZWRQcm9wcyA9IE9iamVjdC5rZXlzKGNvbnRyb2xsZWRWYWx1ZXMpO1xuICB2YXIgUFJPUFNfVE9fT01JVCA9IGNvbnRyb2xsZWRQcm9wcy5tYXAoVXRpbHMuZGVmYXVsdEtleSk7XG4gICEoY2FuQWNjZXB0UmVmIHx8ICFtZXRob2RzLmxlbmd0aCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyAoMCwgX2ludmFyaWFudC5kZWZhdWx0KShmYWxzZSwgJ1t1bmNvbnRyb2xsYWJsZV0gc3RhdGVsZXNzIGZ1bmN0aW9uIGNvbXBvbmVudHMgY2Fubm90IHBhc3MgdGhyb3VnaCBtZXRob2RzICcgKyAnYmVjYXVzZSB0aGV5IGhhdmUgbm8gYXNzb2NpYXRlZCBpbnN0YW5jZXMuIENoZWNrIGNvbXBvbmVudDogJyArIGRpc3BsYXlOYW1lICsgJywgJyArICdhdHRlbXB0aW5nIHRvIHBhc3MgdGhyb3VnaCBtZXRob2RzOiAnICsgbWV0aG9kcy5qb2luKCcsICcpKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG5cbiAgdmFyIFVuY29udHJvbGxlZENvbXBvbmVudCA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHNMb29zZShVbmNvbnRyb2xsZWRDb21wb25lbnQsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gVW5jb250cm9sbGVkQ29tcG9uZW50KCkge1xuICAgICAgdmFyIF90aGlzO1xuXG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICAgIF90aGlzLmhhbmRsZXJzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgIGNvbnRyb2xsZWRQcm9wcy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wTmFtZSkge1xuICAgICAgICB2YXIgaGFuZGxlck5hbWUgPSBjb250cm9sbGVkVmFsdWVzW3Byb3BOYW1lXTtcblxuICAgICAgICB2YXIgaGFuZGxlQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKF90aGlzLnByb3BzW2hhbmRsZXJOYW1lXSkge1xuICAgICAgICAgICAgdmFyIF90aGlzJHByb3BzO1xuXG4gICAgICAgICAgICBfdGhpcy5fbm90aWZ5aW5nID0gdHJ1ZTtcblxuICAgICAgICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yID4gMSA/IF9sZW4yIC0gMSA6IDApLCBfa2V5MiA9IDE7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgICAgICAgYXJnc1tfa2V5MiAtIDFdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgKF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMpW2hhbmRsZXJOYW1lXS5hcHBseShfdGhpcyRwcm9wcywgW3ZhbHVlXS5jb25jYXQoYXJncykpO1xuXG4gICAgICAgICAgICBfdGhpcy5fbm90aWZ5aW5nID0gZmFsc2U7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3RoaXMuX3ZhbHVlc1twcm9wTmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgICBpZiAoIV90aGlzLnVubW91bnRlZCkgX3RoaXMuZm9yY2VVcGRhdGUoKTtcbiAgICAgICAgfTtcblxuICAgICAgICBfdGhpcy5oYW5kbGVyc1toYW5kbGVyTmFtZV0gPSBoYW5kbGVDaGFuZ2U7XG4gICAgICB9KTtcbiAgICAgIGlmIChtZXRob2RzLmxlbmd0aCkgX3RoaXMuYXR0YWNoUmVmID0gZnVuY3Rpb24gKHJlZikge1xuICAgICAgICBfdGhpcy5pbm5lciA9IHJlZjtcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFVuY29udHJvbGxlZENvbXBvbmVudC5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8uc2hvdWxkQ29tcG9uZW50VXBkYXRlID0gZnVuY3Rpb24gc2hvdWxkQ29tcG9uZW50VXBkYXRlKCkge1xuICAgICAgLy9sZXQgdGhlIGZvcmNlVXBkYXRlIHRyaWdnZXIgdGhlIHVwZGF0ZVxuICAgICAgcmV0dXJuICF0aGlzLl9ub3RpZnlpbmc7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIHByb3BzID0gdGhpcy5wcm9wcztcbiAgICAgIHRoaXMuX3ZhbHVlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICBjb250cm9sbGVkUHJvcHMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIF90aGlzMi5fdmFsdWVzW2tleV0gPSBwcm9wc1tVdGlscy5kZWZhdWx0S2V5KGtleSldO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgcHJvcHMgPSB0aGlzLnByb3BzO1xuICAgICAgY29udHJvbGxlZFByb3BzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgYSBwcm9wIHN3aXRjaGVzIGZyb20gY29udHJvbGxlZCB0byBVbmNvbnRyb2xsZWRcbiAgICAgICAgICogcmVzZXQgaXRzIHZhbHVlIHRvIHRoZSBkZWZhdWx0VmFsdWVcbiAgICAgICAgICovXG4gICAgICAgIGlmICghVXRpbHMuaXNQcm9wKG5leHRQcm9wcywga2V5KSAmJiBVdGlscy5pc1Byb3AocHJvcHMsIGtleSkpIHtcbiAgICAgICAgICBfdGhpczMuX3ZhbHVlc1trZXldID0gbmV4dFByb3BzW1V0aWxzLmRlZmF1bHRLZXkoa2V5KV07XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIHRoaXMudW5tb3VudGVkID0gdHJ1ZTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBpbm5lclJlZiA9IF90aGlzJHByb3BzMi5pbm5lclJlZixcbiAgICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiaW5uZXJSZWZcIl0pO1xuXG4gICAgICBQUk9QU19UT19PTUlULmZvckVhY2goZnVuY3Rpb24gKHByb3ApIHtcbiAgICAgICAgZGVsZXRlIHByb3BzW3Byb3BdO1xuICAgICAgfSk7XG4gICAgICB2YXIgbmV3UHJvcHMgPSB7fTtcbiAgICAgIGNvbnRyb2xsZWRQcm9wcy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wTmFtZSkge1xuICAgICAgICB2YXIgcHJvcFZhbHVlID0gX3RoaXM0LnByb3BzW3Byb3BOYW1lXTtcbiAgICAgICAgbmV3UHJvcHNbcHJvcE5hbWVdID0gcHJvcFZhbHVlICE9PSB1bmRlZmluZWQgPyBwcm9wVmFsdWUgOiBfdGhpczQuX3ZhbHVlc1twcm9wTmFtZV07XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHByb3BzLCBuZXdQcm9wcywgdGhpcy5oYW5kbGVycywge1xuICAgICAgICByZWY6IGlubmVyUmVmIHx8IHRoaXMuYXR0YWNoUmVmXG4gICAgICB9KSk7XG4gICAgfTtcblxuICAgIHJldHVybiBVbmNvbnRyb2xsZWRDb21wb25lbnQ7XG4gIH0oX3JlYWN0LmRlZmF1bHQuQ29tcG9uZW50KTtcblxuICBVbmNvbnRyb2xsZWRDb21wb25lbnQuZGlzcGxheU5hbWUgPSBcIlVuY29udHJvbGxlZChcIiArIGRpc3BsYXlOYW1lICsgXCIpXCI7XG4gIFVuY29udHJvbGxlZENvbXBvbmVudC5wcm9wVHlwZXMgPSBfZXh0ZW5kcyh7XG4gICAgaW5uZXJSZWY6IGZ1bmN0aW9uIGlubmVyUmVmKCkge31cbiAgfSwgVXRpbHMudW5jb250cm9sbGVkUHJvcFR5cGVzKGNvbnRyb2xsZWRWYWx1ZXMsIGRpc3BsYXlOYW1lKSk7XG4gIG1ldGhvZHMuZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kKSB7XG4gICAgVW5jb250cm9sbGVkQ29tcG9uZW50LnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24gJHByb3hpZWRNZXRob2QoKSB7XG4gICAgICB2YXIgX3RoaXMkaW5uZXI7XG5cbiAgICAgIHJldHVybiAoX3RoaXMkaW5uZXIgPSB0aGlzLmlubmVyKVttZXRob2RdLmFwcGx5KF90aGlzJGlubmVyLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0pO1xuICB2YXIgV3JhcHBlZENvbXBvbmVudCA9IFVuY29udHJvbGxlZENvbXBvbmVudDtcblxuICBpZiAoX3JlYWN0LmRlZmF1bHQuZm9yd2FyZFJlZikge1xuICAgIFdyYXBwZWRDb21wb25lbnQgPSBfcmVhY3QuZGVmYXVsdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChVbmNvbnRyb2xsZWRDb21wb25lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICBpbm5lclJlZjogcmVmXG4gICAgICB9KSk7XG4gICAgfSk7XG4gICAgV3JhcHBlZENvbXBvbmVudC5wcm9wVHlwZXMgPSBVbmNvbnRyb2xsZWRDb21wb25lbnQucHJvcFR5cGVzO1xuICB9XG5cbiAgV3JhcHBlZENvbXBvbmVudC5Db250cm9sbGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuICAvKipcbiAgICogdXNlZnVsIHdoZW4gd3JhcHBpbmcgYSBDb21wb25lbnQgYW5kIHlvdSB3YW50IHRvIGNvbnRyb2xcbiAgICogZXZlcnl0aGluZ1xuICAgKi9cblxuICBXcmFwcGVkQ29tcG9uZW50LmRlZmVyQ29udHJvbFRvID0gZnVuY3Rpb24gKG5ld0NvbXBvbmVudCwgYWRkaXRpb25zLCBuZXh0TWV0aG9kcykge1xuICAgIGlmIChhZGRpdGlvbnMgPT09IHZvaWQgMCkge1xuICAgICAgYWRkaXRpb25zID0ge307XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuY29udHJvbGxhYmxlKG5ld0NvbXBvbmVudCwgX2V4dGVuZHMoe30sIGNvbnRyb2xsZWRWYWx1ZXMsIGFkZGl0aW9ucyksIG5leHRNZXRob2RzKTtcbiAgfTtcblxuICByZXR1cm4gV3JhcHBlZENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZUV2ZW50Q2FsbGJhY2s7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5cbnZhciBfdXNlQ29tbWl0dGVkUmVmID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VDb21taXR0ZWRSZWZcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiB1c2VFdmVudENhbGxiYWNrKGZuKSB7XG4gIHZhciByZWYgPSAoMCwgX3VzZUNvbW1pdHRlZFJlZi5kZWZhdWx0KShmbik7XG4gIHJldHVybiAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHJlZi5jdXJyZW50ICYmIHJlZi5jdXJyZW50LmFwcGx5KHJlZiwgYXJndW1lbnRzKTtcbiAgfSwgW3JlZl0pO1xufSIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9wcm9wZXJ0aWVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9wcm9wZXJ0aWVzXCIpKTtcblxudmFyIF9zdHlsZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3N0eWxlXCIpKTtcblxuZnVuY3Rpb24gb25FbmQobm9kZSwgaGFuZGxlciwgZHVyYXRpb24pIHtcbiAgdmFyIGZha2VFdmVudCA9IHtcbiAgICB0YXJnZXQ6IG5vZGUsXG4gICAgY3VycmVudFRhcmdldDogbm9kZVxuICB9LFxuICAgICAgYmFja3VwO1xuICBpZiAoIV9wcm9wZXJ0aWVzLmRlZmF1bHQuZW5kKSBkdXJhdGlvbiA9IDA7ZWxzZSBpZiAoZHVyYXRpb24gPT0gbnVsbCkgZHVyYXRpb24gPSBwYXJzZUR1cmF0aW9uKG5vZGUpIHx8IDA7XG5cbiAgaWYgKF9wcm9wZXJ0aWVzLmRlZmF1bHQuZW5kKSB7XG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKF9wcm9wZXJ0aWVzLmRlZmF1bHQuZW5kLCBkb25lLCBmYWxzZSk7XG4gICAgYmFja3VwID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gZG9uZShmYWtlRXZlbnQpO1xuICAgIH0sIChkdXJhdGlvbiB8fCAxMDApICogMS41KTtcbiAgfSBlbHNlIHNldFRpbWVvdXQoZG9uZS5iaW5kKG51bGwsIGZha2VFdmVudCksIDApO1xuXG4gIGZ1bmN0aW9uIGRvbmUoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQudGFyZ2V0ICE9PSBldmVudC5jdXJyZW50VGFyZ2V0KSByZXR1cm47XG4gICAgY2xlYXJUaW1lb3V0KGJhY2t1cCk7XG4gICAgZXZlbnQudGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoX3Byb3BlcnRpZXMuZGVmYXVsdC5lbmQsIGRvbmUpO1xuICAgIGhhbmRsZXIuY2FsbCh0aGlzKTtcbiAgfVxufVxuXG5vbkVuZC5fcGFyc2VEdXJhdGlvbiA9IHBhcnNlRHVyYXRpb247XG52YXIgX2RlZmF1bHQgPSBvbkVuZDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuXG5mdW5jdGlvbiBwYXJzZUR1cmF0aW9uKG5vZGUpIHtcbiAgdmFyIHN0ciA9ICgwLCBfc3R5bGUuZGVmYXVsdCkobm9kZSwgX3Byb3BlcnRpZXMuZGVmYXVsdC5kdXJhdGlvbiksXG4gICAgICBtdWx0ID0gc3RyLmluZGV4T2YoJ21zJykgPT09IC0xID8gMTAwMCA6IDE7XG4gIHJldHVybiBwYXJzZUZsb2F0KHN0cikgKiBtdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX2ltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbXBsZW1lbnRhdGlvbicpO1xuXG52YXIgX2ltcGxlbWVudGF0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ltcGxlbWVudGF0aW9uKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUNvbnRleHQgfHwgX2ltcGxlbWVudGF0aW9uMi5kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgICBjb250ZXh0VHlwZXM6IHRydWUsXG4gICAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gICAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICAgIG1peGluczogdHJ1ZSxcbiAgICBwcm9wVHlwZXM6IHRydWUsXG4gICAgdHlwZTogdHJ1ZVxufTtcblxudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gICAgbmFtZTogdHJ1ZSxcbiAgICBsZW5ndGg6IHRydWUsXG4gICAgcHJvdG90eXBlOiB0cnVlLFxuICAgIGNhbGxlcjogdHJ1ZSxcbiAgICBjYWxsZWU6IHRydWUsXG4gICAgYXJndW1lbnRzOiB0cnVlLFxuICAgIGFyaXR5OiB0cnVlXG59O1xuXG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgICAnJCR0eXBlb2YnOiB0cnVlLFxuICAgIHJlbmRlcjogdHJ1ZSxcbiAgICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlXG59O1xuXG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAgICckJHR5cGVvZic6IHRydWUsXG4gICAgY29tcGFyZTogdHJ1ZSxcbiAgICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlLFxuICAgIHR5cGU6IHRydWVcbn07XG5cbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tSZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcbiAgICBpZiAoUmVhY3RJcy5pc01lbW8oY29tcG9uZW50KSkge1xuICAgICAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICAgIH1cbiAgICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcblxuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICAgIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgICAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuXG4gICAgICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuICAgICAgICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xuICAgICAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgICAgICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL2F4aW9zJyk7IiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGFhPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxiYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGNhKGEsYixkLGMsZSxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2QsYyxlLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWQrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/QihcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2soSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBkYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixkLGMpe2lmKFAubGVuZ3RoKXt2YXIgZT1QLnBvcCgpO2UucmVzdWx0PWE7ZS5rZXlQcmVmaXg9YjtlLmZ1bmM9ZDtlLmNvbnRleHQ9YztlLmNvdW50PTA7cmV0dXJuIGV9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZT1hLm5leHQoKSkuZG9uZTspZT1lLnZhbHVlLGY9YitUKGUsaCsrKSxnKz1TKGUsZixkLGMpO2Vsc2VcIm9iamVjdFwiPT09ZSYmKGQ9XCJcIithLEIoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmQsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGQpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixkKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBlYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBmYShhLGIsZCl7dmFyIGM9YS5yZXN1bHQsZT1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsYyxkLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWRhKGEsZSsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrZCkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsZCxjLGUpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGMsZSk7VShhLGZhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtudWxsPT09YT9CKFwiMzIxXCIpOnZvaWQgMDtyZXR1cm4gYX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1YoYSxjLG51bGwsYixkKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZCk7VShhLGVhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpiYSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjphYSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9LHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlRWZmZWN0KGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxcbmIsZCl7cmV0dXJuIFcoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixkKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe30sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGQpfSx1c2VSZWY6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VSZWYoYSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZCl7bnVsbD09PWF8fHZvaWQgMD09PWE/QihcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZT1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO2lmKG51bGwhPVxuYil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuOC42XCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRPd25lcjpKLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bYyxkLGUsZixnLGhdLGs9MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW2srK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiB4KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsZD0wO2Q8YjtkKyspYys9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7YmEoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixjKX1hYT92b2lkIDA6eChcIjIyN1wiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgsbCl7dmFyIGs9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsayl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX1cbnZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxsKXtkYT0hMTtlYT1udWxsO2NhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGwpe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBrPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB4KFwiMTk4XCIpLGs9dm9pZCAwO2ZhfHwoZmE9ITAsaGE9ayl9fXZhciBsYT1udWxsLG1hPXt9O1xuZnVuY3Rpb24gbmEoKXtpZihsYSlmb3IodmFyIGEgaW4gbWEpe3ZhciBiPW1hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDp4KFwiOTZcIixhKTtpZighb2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6eChcIjk3XCIsYSk7b2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtwYS5oYXNPd25Qcm9wZXJ0eShoKT94KFwiOTlcIixoKTp2b2lkIDA7cGFbaF09Zjt2YXIgbD1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGwpe2ZvcihlIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShlKSYmcWEobFtlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6eChcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHFhKGEsYixjKXtyYVthXT94KFwiMTAwXCIsYSk6dm9pZCAwO3JhW2FdPWI7c2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgb2E9W10scGE9e30scmE9e30sc2E9e30sdGE9bnVsbCx1YT1udWxsLHZhPW51bGw7ZnVuY3Rpb24gd2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXZhKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24geGEoYSxiKXtudWxsPT1iP3goXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24geWEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIHphPW51bGw7ZnVuY3Rpb24gQWEoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXdhKGEsYltkXSxjW2RdKTtlbHNlIGImJndhKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1cbnZhciBCYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXtsYT94KFwiMTAxXCIpOnZvaWQgMDtsYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtuYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP3goXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfX07XG5mdW5jdGlvbiBDYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXRhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBEYShhKXtudWxsIT09YSYmKHphPXhhKHphLGEpKTthPXphO3phPW51bGw7aWYoYSYmKHlhKGEsQWEpLHphP3goXCI5NVwiKTp2b2lkIDAsZmEpKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO312YXIgRWE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksRmE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitFYSxHYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0VhO2Z1bmN0aW9uIEhhKGEpe2lmKGFbRmFdKXJldHVybiBhW0ZhXTtmb3IoOyFhW0ZhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0ZhXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIElhKGEpe2E9YVtGYV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIEphKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt4KFwiMzNcIil9ZnVuY3Rpb24gS2EoYSl7cmV0dXJuIGFbR2FdfHxudWxsfWZ1bmN0aW9uIExhKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gTWEoYSxiLGMpe2lmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIE5hKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TGEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU1hKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspTWEoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gT2EoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBQYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJk9hKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFFhKGEpe3lhKGEsTmEpfXZhciBSYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFNhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRhPXthbmltYXRpb25lbmQ6U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFVhPXt9LFZhPXt9O1xuUmEmJihWYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdhKGEpe2lmKFVhW2FdKXJldHVybiBVYVthXTtpZighVGFbYV0pcmV0dXJuIGE7dmFyIGI9VGFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmEpcmV0dXJuIFVhW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGE9V2EoXCJhbmltYXRpb25lbmRcIiksWWE9V2EoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmE9V2EoXCJhbmltYXRpb25zdGFydFwiKSwkYT1XYShcInRyYW5zaXRpb25lbmRcIiksYWI9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJiPW51bGwsY2I9bnVsbCxkYj1udWxsO1xuZnVuY3Rpb24gZWIoKXtpZihkYilyZXR1cm4gZGI7dmFyIGEsYj1jYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBkYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGZiKCl7cmV0dXJuITB9ZnVuY3Rpb24gZ2IoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHkoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2ZiOmdiO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Z2I7cmV0dXJuIHRoaXN9XG5uKHkucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9ZmIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9ZmIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9ZmJ9LGlzUGVyc2lzdGVudDpnYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1nYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3kuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xueS5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtoYihjKTtyZXR1cm4gY307aGIoeSk7ZnVuY3Rpb24gaWIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gamIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOngoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gaGIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9aWI7YS5yZWxlYXNlPWpifXZhciBrYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbGI9eS5leHRlbmQoe2RhdGE6bnVsbH0pLG1iPVs5LDEzLDI3LDMyXSxuYj1SYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csb2I9bnVsbDtSYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYob2I9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBwYj1SYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIW9iLHFiPVJhJiYoIW5ifHxvYiYmODxvYiYmMTE+PW9iKSxyYj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxzYj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSx0Yj0hMTtcbmZ1bmN0aW9uIHViKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09bWIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB2YihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciB3Yj0hMTtmdW5jdGlvbiB4YihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gdmIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3RiPSEwO3JldHVybiByYjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1yYiYmdGI/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24geWIoYSxiKXtpZih3YilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhbmImJnViKGEsYik/KGE9ZWIoKSxkYj1jYj1iYj1udWxsLHdiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBxYiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgemI9e2V2ZW50VHlwZXM6c2IsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKG5iKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9c2IuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9c2IuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPXNiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSB3Yj91YihhLGMpJiYoZT1zYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPXNiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHFiJiZcImtvXCIhPT1jLmxvY2FsZSYmKHdifHxlIT09c2IuY29tcG9zaXRpb25TdGFydD9lPT09c2IuY29tcG9zaXRpb25FbmQmJndiJiYoZj1lYigpKTooYmI9ZCxjYj1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCx3Yj1cbiEwKSksZT1rYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj12YihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksUWEoZSksZj1lKTpmPW51bGw7KGE9cGI/eGIoYSxjKTp5YihhLGMpKT8oYj1sYi5nZXRQb29sZWQoc2IuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFFhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEFiPW51bGwsQmI9bnVsbCxDYj1udWxsO2Z1bmN0aW9uIERiKGEpe2lmKGE9dWEoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBYj94KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj10YShhLnN0YXRlTm9kZSk7QWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBFYihhKXtCYj9DYj9DYi5wdXNoKGEpOkNiPVthXTpCYj1hfWZ1bmN0aW9uIEZiKCl7aWYoQmIpe3ZhciBhPUJiLGI9Q2I7Q2I9QmI9bnVsbDtEYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspRGIoYlthXSl9fVxuZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBJYigpe312YXIgSmI9ITE7ZnVuY3Rpb24gS2IoYSxiKXtpZihKYilyZXR1cm4gYShiKTtKYj0hMDt0cnl7cmV0dXJuIEdiKGEsYil9ZmluYWxseXtpZihKYj0hMSxudWxsIT09QmJ8fG51bGwhPT1DYilJYigpLEZiKCl9fXZhciBMYj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBNYihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIUxiW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIE5iKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBPYihhKXtpZighUmEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gUGIoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFFiKGEpe3ZhciBiPVBiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBSYihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9UWIoYSkpfWZ1bmN0aW9uIFNiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1QYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfXZhciBUYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtUYi5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtcbnZhciBVYj0vXiguKilbXFxcXFxcL10vLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixWYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLFdiPXo/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixYYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxZYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxaYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCwkYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxhYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGJjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxjYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixkYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxlYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsZmM9ej9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixnYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gaGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWdjJiZhW2djXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gaWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBiYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBYYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBXYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgWmI6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgWWI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBkYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGFjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgJGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBjYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgZWM6cmV0dXJuIGljKGEudHlwZSk7Y2FzZSBmYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIGljKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIGpjKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1pYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1pYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFViLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIga2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGxjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbWM9e30sbmM9e307XG5mdW5jdGlvbiBvYyhhKXtpZihsYy5jYWxsKG5jLGEpKXJldHVybiEwO2lmKGxjLmNhbGwobWMsYSkpcmV0dXJuITE7aWYoa2MudGVzdChhKSlyZXR1cm4gbmNbYV09ITA7bWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBxYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxwYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEMoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciByYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLFxuc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5mdW5jdGlvbiB0YyhhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChxYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/b2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHVjKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB2YyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiB3YyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIHhjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIHljKGEsYil7eGMoYSxiKTt2YXIgYz11YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT96YyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZ6YyhhLGIudHlwZSx1YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEFjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIHpjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgQmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gQ2MoYSxiLGMpe2E9eS5nZXRQb29sZWQoQmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtFYihjKTtRYShhKTtyZXR1cm4gYX12YXIgRGM9bnVsbCxFYz1udWxsO2Z1bmN0aW9uIEZjKGEpe0RhKGEpfVxuZnVuY3Rpb24gR2MoYSl7dmFyIGI9SmEoYSk7aWYoU2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gSGMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgSWM9ITE7UmEmJihJYz1PYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBKYygpe0RjJiYoRGMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpLEVjPURjPW51bGwpfWZ1bmN0aW9uIEtjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZHYyhFYykmJihhPUNjKEVjLGEsTmIoYSkpLEtiKEZjLGEpKX1mdW5jdGlvbiBMYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oSmMoKSxEYz1iLEVjPWMsRGMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpKTpcImJsdXJcIj09PWEmJkpjKCl9ZnVuY3Rpb24gTWMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gR2MoRWMpfVxuZnVuY3Rpb24gTmMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBHYyhiKX1mdW5jdGlvbiBPYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBHYyhiKX1cbnZhciBQYz17ZXZlbnRUeXBlczpCYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkljLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9KYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9SGM6TWIoZSk/SWM/Zj1PYzooZj1NYyxnPUxjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1OYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gQ2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZ6YyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxRYz15LmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksUmM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gU2MoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1SY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFRjKCl7cmV0dXJuIFNjfVxudmFyIFVjPTAsVmM9MCxXYz0hMSxYYz0hMSxZYz1RYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9VWM7VWM9YS5zY3JlZW5YO3JldHVybiBXYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFdjPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9VmM7VmM9YS5zY3JlZW5ZO3JldHVybiBYYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFhjPSEwLDApfX0pLFpjPVljLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSwkYz17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sYWQ9e2V2ZW50VHlwZXM6JGMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SGEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxsPXZvaWQgMCxrPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPVljLGg9JGMubW91c2VMZWF2ZSxsPSRjLm1vdXNlRW50ZXIsaz1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPVpjLGg9JGMucG9pbnRlckxlYXZlLGw9JGMucG9pbnRlckVudGVyLGs9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkphKGYpO2U9bnVsbD09Yj9lOkphKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWsrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChsLGIsYyxkKTtjLnR5cGU9aytcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2s9MDtmb3IoZz1iO2c7Zz1MYShnKSlrKys7Zz0wO2ZvcihsPWU7bDtsPUxhKGwpKWcrKztmb3IoOzA8ay1nOyliPUxhKGIpLGstLTtmb3IoOzA8Zy1rOyllPUxhKGUpLGctLTtmb3IoO2stLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPUxhKGIpO2U9TGEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2s9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TGEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtrPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztmLnB1c2goZCk7ZD1MYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKU9hKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KU9hKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX07ZnVuY3Rpb24gYmQoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBjZD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gZGQoYSxiKXtpZihiZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWNkLmNhbGwoYixjW2RdKXx8IWJkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gZWQoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gZmQoYSl7MiE9PWVkKGEpP3goXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gZ2QoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9ZWQoYSksMz09PWI/eChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gZmQoZSksYTtpZihnPT09ZClyZXR1cm4gZmQoZSksYjtnPWcuc2libGluZ314KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6eChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3goXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz94KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhkKGEpe2E9Z2QoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgaWQ9eS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLGpkPXkuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksa2Q9UWMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBsZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBtZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sbmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LG9kPVFjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1tZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1sZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/bmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2xkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2xkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSkscGQ9WWMuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPVFjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjfSkscmQ9eS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksc2Q9WWMuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx0ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtYYSxcImFuaW1hdGlvbkVuZFwiXSxbWWEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW1phLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbJGEsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSx1ZD17fSx2ZD17fTtmdW5jdGlvbiB3ZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O3VkW2FdPWI7dmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCEwKX0pO3RkLmZvckVhY2goZnVuY3Rpb24oYSl7d2QoYSwhMSl9KTtcbnZhciB4ZD17ZXZlbnRUeXBlczp1ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1sZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9b2Q7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPWtkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9WWM7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnBkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9cWQ7YnJlYWs7Y2FzZSBYYTpjYXNlIFlhOmNhc2UgWmE6YT1pZDticmVhaztjYXNlICRhOmE9cmQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9UWM7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT1zZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPWpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9WmM7YnJlYWs7ZGVmYXVsdDphPXl9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtRYShiKTtyZXR1cm4gYn19LHlkPXhkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbnpkPVtdO2Z1bmN0aW9uIEFkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUhhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPU5iKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPG9hLmxlbmd0aDtoKyspe3ZhciBsPW9hW2hdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXhhKGcsbCkpfURhKGcpfX12YXIgQmQ9ITA7XG5mdW5jdGlvbiBFKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KHlkKGEpP0NkOkRkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gRWQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBDZChhLGIpe0hiKERkLGEsYil9XG5mdW5jdGlvbiBEZChhLGIpe2lmKEJkKXt2YXIgYz1OYihiKTtjPUhhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09ZWQoYyl8fChjPW51bGwpO2lmKHpkLmxlbmd0aCl7dmFyIGQ9emQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7S2IoQWQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD56ZC5sZW5ndGgmJnpkLnB1c2goYSl9fX12YXIgRmQ9e30sR2Q9MCxIZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBJZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxIZCl8fChhW0hkXT1HZCsrLEZkW2FbSGRdXT17fSk7cmV0dXJuIEZkW2FbSGRdXX1mdW5jdGlvbiBKZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gS2QoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGQoYSxiKXt2YXIgYz1LZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZChjKX19ZnVuY3Rpb24gTWQoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZCgpe2Zvcih2YXIgYT13aW5kb3csYj1KZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1KZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gUGQoKXt2YXIgYT1OZCgpO2lmKE9kKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBiPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntiPShiPWEub3duZXJEb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgYz1iLmdldFNlbGVjdGlvbiYmYi5nZXRTZWxlY3Rpb24oKTtpZihjJiYwIT09Yy5yYW5nZUNvdW50KXtiPWMuYW5jaG9yTm9kZTt2YXIgZD1jLmFuY2hvck9mZnNldCxlPWMuZm9jdXNOb2RlO2M9Yy5mb2N1c09mZnNldDt0cnl7Yi5ub2RlVHlwZSxlLm5vZGVUeXBlfWNhdGNoKEEpe2I9bnVsbDticmVhayBhfXZhciBmPTAsZz0tMSxoPS0xLGw9MCxrPTAsbT1hLHA9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB0Ozspe20hPT1ifHwwIT09ZCYmMyE9PW0ubm9kZVR5cGV8fChnPWYrZCk7bSE9PWV8fDAhPT1jJiYzIT09bS5ub2RlVHlwZXx8KGg9ZitjKTszPT09bS5ub2RlVHlwZSYmKGYrPW0ubm9kZVZhbHVlLmxlbmd0aCk7XG5pZihudWxsPT09KHQ9bS5maXJzdENoaWxkKSlicmVhaztwPW07bT10fWZvcig7Oyl7aWYobT09PWEpYnJlYWsgYjtwPT09YiYmKytsPT09ZCYmKGc9Zik7cD09PWUmJisraz09PWMmJihoPWYpO2lmKG51bGwhPT0odD1tLm5leHRTaWJsaW5nKSlicmVhazttPXA7cD1tLnBhcmVudE5vZGV9bT10fWI9LTE9PT1nfHwtMT09PWg/bnVsbDp7c3RhcnQ6ZyxlbmQ6aH19ZWxzZSBiPW51bGx9Yj1ifHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBiPW51bGw7cmV0dXJue2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Yn19XG5mdW5jdGlvbiBRZChhKXt2YXIgYj1OZCgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmMmJmMub3duZXJEb2N1bWVudCYmTWQoYy5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYobnVsbCE9PWQmJk9kKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYoYT0oYj1jLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93LGEuZ2V0U2VsZWN0aW9uKXthPWEuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Yy50ZXh0Q29udGVudC5sZW5ndGgsZj1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/ZjpNYXRoLm1pbihkLmVuZCxlKTshYS5leHRlbmQmJmY+ZCYmKGU9ZCxkPWYsZj1lKTtlPUxkKGMsZik7dmFyIGc9TGQoYyxcbmQpO2UmJmcmJigxIT09YS5yYW5nZUNvdW50fHxhLmFuY2hvck5vZGUhPT1lLm5vZGV8fGEuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGEuZm9jdXNOb2RlIT09Zy5ub2RlfHxhLmZvY3VzT2Zmc2V0IT09Zy5vZmZzZXQpJiYoYj1iLmNyZWF0ZVJhbmdlKCksYi5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpLGEucmVtb3ZlQWxsUmFuZ2VzKCksZj5kPyhhLmFkZFJhbmdlKGIpLGEuZXh0ZW5kKGcubm9kZSxnLm9mZnNldCkpOihiLnNldEVuZChnLm5vZGUsZy5vZmZzZXQpLGEuYWRkUmFuZ2UoYikpKX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5mb2N1cyYmYy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX1cbnZhciBSZD1SYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFNkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxUZD1udWxsLFVkPW51bGwsVmQ9bnVsbCxXZD0hMTtcbmZ1bmN0aW9uIFhkKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoV2R8fG51bGw9PVRkfHxUZCE9PUpkKGMpKXJldHVybiBudWxsO2M9VGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmT2QoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gVmQmJmRkKFZkLGMpP251bGw6KFZkPWMsYT15LmdldFBvb2xlZChTZC5zZWxlY3QsVWQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1UZCxRYShhKSxhKX1cbnZhciBZZD17ZXZlbnRUeXBlczpTZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1JZChlKTtmPXNhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/SmEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihNYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlUZD1lLFVkPWIsVmQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOlZkPVVkPVRkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOldkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gV2Q9ITEsWGQoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBYZChjLGQpfXJldHVybiBudWxsfX07QmEuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt0YT1LYTt1YT1JYTt2YT1KYTtCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOnhkLEVudGVyTGVhdmVFdmVudFBsdWdpbjphZCxDaGFuZ2VFdmVudFBsdWdpbjpQYyxTZWxlY3RFdmVudFBsdWdpbjpZZCxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnpifSk7ZnVuY3Rpb24gWmQoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkZChhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPVpkKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBhZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrdWMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGJlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD94KFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGNlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/eChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOngoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnVjKGMpfX1cbmZ1bmN0aW9uIGRlKGEsYil7dmFyIGM9dWMoYi52YWx1ZSksZD11YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGVlKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBmZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBnZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIGhlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9nZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBpZT12b2lkIDAsamU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09ZmUuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7aWU9aWV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9aWUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24ga2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBsZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxtZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMobGUpLmZvckVhY2goZnVuY3Rpb24oYSl7bWUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtsZVtiXT1sZVthXX0pfSk7ZnVuY3Rpb24gbmUoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGxlLmhhc093blByb3BlcnR5KGEpJiZsZVthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBvZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1uZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBwZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gcWUoYSxiKXtiJiYocGVbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/eChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp4KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT94KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gcmUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24gc2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9SWQoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6RWQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkVkKFwiZm9jdXNcIixhKTtFZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6T2IoZSkmJkVkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFiLmluZGV4T2YoZSkmJkUoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24gdGUoKXt9dmFyIHVlPW51bGwsdmU9bnVsbDtcbmZ1bmN0aW9uIHdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiB4ZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgeWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsemU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEFlPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxCZT1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrO1xuZnVuY3Rpb24gQ2UoYSxiLGMsZCxlKXthW0dhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZ4YyhhLGUpO3JlKGMsZCk7ZD1yZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP29lKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9qZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/a2UoYSxoKTp0YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWMoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpkZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2FlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9hZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTphZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gRGUoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBFZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgRmU9W10sR2U9LTE7ZnVuY3Rpb24gRihhKXswPkdlfHwoYS5jdXJyZW50PUZlW0dlXSxGZVtHZV09bnVsbCxHZS0tKX1mdW5jdGlvbiBHKGEsYil7R2UrKztGZVtHZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBIZT17fSxIPXtjdXJyZW50OkhlfSxJPXtjdXJyZW50OiExfSxJZT1IZTtcbmZ1bmN0aW9uIEplKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gSGU7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gSihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEtlKGEpe0YoSSxhKTtGKEgsYSl9ZnVuY3Rpb24gTGUoYSl7RihJLGEpO0YoSCxhKX1cbmZ1bmN0aW9uIE1lKGEsYixjKXtILmN1cnJlbnQhPT1IZT94KFwiMTY4XCIpOnZvaWQgMDtHKEgsYixhKTtHKEksYyxhKX1mdW5jdGlvbiBOZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp4KFwiMTA4XCIsaWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxIZTtJZT1ILmN1cnJlbnQ7RyhILGIsYSk7RyhJLEkuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFBlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp4KFwiMTY5XCIpO2M/KGI9TmUoYSxiLEllKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsRihJLGEpLEYoSCxhKSxHKEgsYixhKSk6RihJLGEpO0coSSxjLGEpfXZhciBRZT1udWxsLFJlPW51bGw7ZnVuY3Rpb24gU2UoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFRlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1FlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtSZT1TZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gVWUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmNvbnRleHREZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gSyhhLGIsYyxkKXtyZXR1cm4gbmV3IFVlKGEsYixjLGQpfVxuZnVuY3Rpb24gVmUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBXZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gVmUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWNjKXJldHVybiAxMTtpZihhPT09ZWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gWGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1LKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBZZShhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpVmUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgWGI6cmV0dXJuIFplKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgYmM6cmV0dXJuICRlKGMsZXwzLGYsYik7Y2FzZSBZYjpyZXR1cm4gJGUoYyxlfDIsZixiKTtjYXNlIFpiOnJldHVybiBhPUsoMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1aYixhLnR5cGU9WmIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBkYzpyZXR1cm4gYT1LKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWRjLGEudHlwZT1kYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgJGI6Zz0xMDticmVhayBhO2Nhc2UgYWM6Zz05O2JyZWFrIGE7Y2FzZSBjYzpnPTExO2JyZWFrIGE7Y2FzZSBlYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGZjOmc9MTY7ZD1udWxsO2JyZWFrIGF9eChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPUsoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBaZShhLGIsYyxkKXthPUsoNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uICRlKGEsYixjLGQpe2E9Syg4LGEsZCxiKTtiPTA9PT0oYiYxKT9ZYjpiYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGFmKGEsYixjKXthPUsoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gYmYoYSxiLGMpe2I9Syg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBjZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGVmKGEsYil7YS5kaWRFcnJvcj0hMTtpZigwPT09YilhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MDtlbHNle2I8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEubGF0ZXN0UGVuZGluZ1RpbWU7MCE9PWMmJihjPmI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9MDphLmVhcmxpZXN0UGVuZGluZ1RpbWU+YiYmKGEuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lKSk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTswPT09Yz9jZihhLGIpOmI8YS5sYXRlc3RTdXNwZW5kZWRUaW1lPyhhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wLGNmKGEsYikpOlxuYj5jJiZjZihhLGIpfWRmKDAsYSl9ZnVuY3Rpb24gZmYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGdmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifWZ1bmN0aW9uIGRmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gTChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGhmKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDphLl9zdGF0dXM9MDtiPWEuX2N0b3I7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KTtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGEuX3Jlc3VsdDtjYXNlIDI6dGhyb3cgYS5fcmVzdWx0O31hLl9yZXN1bHQ9Yjt0aHJvdyBiO319dmFyIGpmPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24ga2YoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgdGY9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1lZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1sZigpO2Q9bWYoZCxhKTt2YXIgZT1uZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7b2YoKTtwZihhLGUpO3FmKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UudGFnPXJmO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9bGYoKTtjPW1mKGMsYSk7dmFyIGQ9bmYoYyk7ZC50YWc9XG5zZjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7b2YoKTtwZihhLGQpO3FmKGEsYyl9fTtmdW5jdGlvbiB1ZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFkZChjLGQpfHwhZGQoZSxmKTohMH1cbmZ1bmN0aW9uIHZmKGEsYixjKXt2YXIgZD0hMSxlPUhlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU0oZik6KGU9SihiKT9JZTpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9KZShhLGUpOkhlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9dGY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gd2YoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24geGYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1qZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PU0oZik6KGY9SihiKT9JZTpILmN1cnJlbnQsZS5jb250ZXh0PUplKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihrZihhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZ0Zi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJih5ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHpmPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBBZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/eChcIjMwOVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6eChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09amYmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/eChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOngoXCIyOTBcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIEJmKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ4KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBDZihhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPVhlKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9YWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPUFmKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1ZZShjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1BZihhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWJmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVplKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1hZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYz1ZZShiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1BZihhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgV2I6cmV0dXJuIGI9YmYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHpmKGIpfHxcbmhjKGIpKXJldHVybiBiPVplKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO0JmKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PVhiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTpsKGEsYixjLGQpOm51bGw7Y2FzZSBXYjpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbH1pZih6ZihjKXx8aGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO0JmKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1YYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmwoYixhLGQsZSk7Y2FzZSBXYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKX1pZih6ZihkKXx8aGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO0JmKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwscT1nLHU9Zz0wLEI9bnVsbDtudWxsIT09cSYmdTxoLmxlbmd0aDt1Kyspe3EuaW5kZXg+dT8oQj1xLHE9bnVsbCk6Qj1xLnNpYmxpbmc7dmFyIHc9dChlLHEsaFt1XSxrKTtpZihudWxsPT09dyl7bnVsbD09PXEmJihxPUIpO2JyZWFrfWEmJlxucSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHcsZyx1KTtudWxsPT09bT9sPXc6bS5zaWJsaW5nPXc7bT13O3E9Qn1pZih1PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoO3U8aC5sZW5ndGg7dSsrKWlmKHE9cChlLGhbdV0saykpZz1mKHEsZyx1KSxudWxsPT09bT9sPXE6bS5zaWJsaW5nPXEsbT1xO3JldHVybiBsfWZvcihxPWQoZSxxKTt1PGgubGVuZ3RoO3UrKylpZihCPUEocSxlLHUsaFt1XSxrKSlhJiZudWxsIT09Qi5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT1CLmtleT91OkIua2V5KSxnPWYoQixnLHUpLG51bGw9PT1tP2w9QjptLnNpYmxpbmc9QixtPUI7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBSKGUsZyxoLGspe3ZhciBsPWhjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBsP3goXCIxNTBcIik6dm9pZCAwO2g9bC5jYWxsKGgpO251bGw9PWg/eChcIjE1MVwiKTp2b2lkIDA7XG5mb3IodmFyIG09bD1udWxsLHE9Zyx1PWc9MCxCPW51bGwsdz1oLm5leHQoKTtudWxsIT09cSYmIXcuZG9uZTt1Kyssdz1oLm5leHQoKSl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdj10KGUscSx3LnZhbHVlLGspO2lmKG51bGw9PT12KXtxfHwocT1CKTticmVha31hJiZxJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodixnLHUpO251bGw9PT1tP2w9djptLnNpYmxpbmc9djttPXY7cT1CfWlmKHcuZG9uZSlyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PXAoZSx3LnZhbHVlLGspLG51bGwhPT13JiYoZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTtyZXR1cm4gbH1mb3IocT1kKGUscSk7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PUEocSxlLHUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGEmJm51bGwhPT13LmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PXcua2V5P3U6XG53LmtleSksZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1YYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBWYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PVhiOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PVhiP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1BZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxuay5zaWJsaW5nfWYudHlwZT09PVhiPyhkPVplKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1ZZShmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1BZihhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgV2I6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1iZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cblwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9YWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoemYoZikpcmV0dXJuIHYoYSxkLGYsaCk7aWYoaGMoZikpcmV0dXJuIFIoYSxkLGYsaCk7bCYmQmYoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDpoPWEudHlwZSx4KFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgRGY9Q2YoITApLEVmPUNmKCExKSxGZj17fSxOPXtjdXJyZW50OkZmfSxHZj17Y3VycmVudDpGZn0sSGY9e2N1cnJlbnQ6RmZ9O2Z1bmN0aW9uIElmKGEpe2E9PT1GZj94KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpmKGEsYil7RyhIZixiLGEpO0coR2YsYSxhKTtHKE4sRmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6aGUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPWhlKGIsYyl9RihOLGEpO0coTixiLGEpfWZ1bmN0aW9uIEtmKGEpe0YoTixhKTtGKEdmLGEpO0YoSGYsYSl9ZnVuY3Rpb24gTGYoYSl7SWYoSGYuY3VycmVudCk7dmFyIGI9SWYoTi5jdXJyZW50KTt2YXIgYz1oZShiLGEudHlwZSk7YiE9PWMmJihHKEdmLGEsYSksRyhOLGMsYSkpfWZ1bmN0aW9uIE1mKGEpe0dmLmN1cnJlbnQ9PT1hJiYoRihOLGEpLEYoR2YsYSkpfVxudmFyIE5mPTAsT2Y9MixQZj00LFFmPTgsUmY9MTYsU2Y9MzIsVGY9NjQsVWY9MTI4LFZmPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsV2Y9MCxYZj1udWxsLE89bnVsbCxQPW51bGwsWWY9bnVsbCxRPW51bGwsWmY9bnVsbCwkZj0wLGFnPW51bGwsYmc9MCxjZz0hMSxkZz1udWxsLGVnPTA7ZnVuY3Rpb24gZmcoKXt4KFwiMzIxXCIpfWZ1bmN0aW9uIGdnKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIWJkKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBoZyhhLGIsYyxkLGUsZil7V2Y9ZjtYZj1iO1A9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7VmYuY3VycmVudD1udWxsPT09UD9pZzpqZztiPWMoZCxlKTtpZihjZyl7ZG8gY2c9ITEsZWcrPTEsUD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbCxaZj1ZZixhZz1RPU89bnVsbCxWZi5jdXJyZW50PWpnLGI9YyhkLGUpO3doaWxlKGNnKTtkZz1udWxsO2VnPTB9VmYuY3VycmVudD1rZzthPVhmO2EubWVtb2l6ZWRTdGF0ZT1ZZjthLmV4cGlyYXRpb25UaW1lPSRmO2EudXBkYXRlUXVldWU9YWc7YS5lZmZlY3RUYWd8PWJnO2E9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2E/eChcIjMwMFwiKTp2b2lkIDA7cmV0dXJuIGJ9ZnVuY3Rpb24gbGcoKXtWZi5jdXJyZW50PWtnO1dmPTA7WmY9UT1ZZj1QPU89WGY9bnVsbDskZj0wO2FnPW51bGw7Ymc9MDtjZz0hMTtkZz1udWxsO2VnPTB9XG5mdW5jdGlvbiBtZygpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UT9ZZj1RPWE6UT1RLm5leHQ9YTtyZXR1cm4gUX1mdW5jdGlvbiBuZygpe2lmKG51bGwhPT1aZilRPVpmLFpmPVEubmV4dCxPPVAsUD1udWxsIT09Tz9PLm5leHQ6bnVsbDtlbHNle251bGw9PT1QP3goXCIzMTBcIik6dm9pZCAwO089UDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtRPW51bGw9PT1RP1lmPWE6US5uZXh0PWE7UD1PLm5leHR9cmV0dXJuIFF9ZnVuY3Rpb24gb2coYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBwZyhhKXt2YXIgYj1uZygpLGM9Yi5xdWV1ZTtudWxsPT09Yz94KFwiMzExXCIpOnZvaWQgMDtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTtpZigwPGVnKXt2YXIgZD1jLmRpc3BhdGNoO2lmKG51bGwhPT1kZyl7dmFyIGU9ZGcuZ2V0KGMpO2lmKHZvaWQgMCE9PWUpe2RnLmRlbGV0ZShjKTt2YXIgZj1iLm1lbW9pemVkU3RhdGU7ZG8gZj1hKGYsZS5hY3Rpb24pLGU9ZS5uZXh0O3doaWxlKG51bGwhPT1lKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPT09Yy5sYXN0JiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mO3JldHVybltmLGRdfX1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGRdfWQ9Yy5sYXN0O3ZhciBnPWIuYmFzZVVwZGF0ZTtmPWIuYmFzZVN0YXRlO251bGwhPT1nPyhudWxsIT09ZCYmKGQubmV4dD1udWxsKSxkPWcubmV4dCk6ZD1udWxsIT09ZD9kLm5leHQ6bnVsbDtpZihudWxsIT09XG5kKXt2YXIgaD1lPW51bGwsbD1kLGs9ITE7ZG97dmFyIG09bC5leHBpcmF0aW9uVGltZTttPFdmPyhrfHwoaz0hMCxoPWcsZT1mKSxtPiRmJiYoJGY9bSkpOmY9bC5lYWdlclJlZHVjZXI9PT1hP2wuZWFnZXJTdGF0ZTphKGYsbC5hY3Rpb24pO2c9bDtsPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWQpO2t8fChoPWcsZT1mKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPWg7Yi5iYXNlU3RhdGU9ZTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHJnKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09YWc/KGFnPXtsYXN0RWZmZWN0Om51bGx9LGFnLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPWFnLmxhc3RFZmZlY3QsbnVsbD09PWI/YWcubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsYWcubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gc2coYSxiLGMsZCl7dmFyIGU9bWcoKTtiZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB0ZyhhLGIsYyxkKXt2YXIgZT1uZygpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJmdnKGQsZy5kZXBzKSl7cmcoTmYsYyxmLGQpO3JldHVybn19Ymd8PWE7ZS5tZW1vaXplZFN0YXRlPXJnKGIsYyxmLGQpfWZ1bmN0aW9uIHVnKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gdmcoKXt9XG5mdW5jdGlvbiB3ZyhhLGIsYyl7MjU+ZWc/dm9pZCAwOngoXCIzMDFcIik7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PVhmfHxudWxsIT09ZCYmZD09PVhmKWlmKGNnPSEwLGE9e2V4cGlyYXRpb25UaW1lOldmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LG51bGw9PT1kZyYmKGRnPW5ldyBNYXApLGM9ZGcuZ2V0KGIpLHZvaWQgMD09PWMpZGcuc2V0KGIsYSk7ZWxzZXtmb3IoYj1jO251bGwhPT1iLm5leHQ7KWI9Yi5uZXh0O2IubmV4dD1hfWVsc2V7b2YoKTt2YXIgZT1sZigpO2U9bWYoZSxhKTt2YXIgZj17ZXhwaXJhdGlvblRpbWU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmKGYubmV4dD1oKTtnLm5leHQ9Zn1iLmxhc3Q9ZjtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1cbmR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGw9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWQobCxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1rO2lmKGJkKGssbCkpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31xZihhLGUpfX1cbnZhciBrZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmZyx1c2VDb250ZXh0OmZnLHVzZUVmZmVjdDpmZyx1c2VJbXBlcmF0aXZlSGFuZGxlOmZnLHVzZUxheW91dEVmZmVjdDpmZyx1c2VNZW1vOmZnLHVzZVJlZHVjZXI6ZmcsdXNlUmVmOmZnLHVzZVN0YXRlOmZnLHVzZURlYnVnVmFsdWU6Zmd9LGlnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7bWcoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHNnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg0LFBmfFNmLGEsYil9LFxudXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW1nKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW1nKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9d2cuYmluZChudWxsLFhmLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1tZygpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXt2YXIgYj1tZygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsXG5sYXN0UmVuZGVyZWRSZWR1Y2VyOm9nLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlRGVidWdWYWx1ZTp2Z30samc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6TSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGcoNTE2LFVmfFRmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB0Zyg0LFBmfFNmLHVnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxcbmIpe3JldHVybiB0Zyg0LFBmfFNmLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6cGcsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIG5nKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHBnKG9nLGEpfSx1c2VEZWJ1Z1ZhbHVlOnZnfSx4Zz1udWxsLHlnPW51bGwsemc9ITE7XG5mdW5jdGlvbiBBZyhhLGIpe3ZhciBjPUsoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBCZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gQ2coYSl7aWYoemcpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUJnKGEsYikpe2I9RGUoYyk7aWYoIWJ8fCFCZyhhLGIpKXthLmVmZmVjdFRhZ3w9Mjt6Zz0hMTt4Zz1hO3JldHVybn1BZyh4ZyxjKX14Zz1hO3lnPUVlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsemc9ITEseGc9YX19ZnVuY3Rpb24gRGcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxOCE9PWEudGFnOylhPWEucmV0dXJuO3hnPWF9ZnVuY3Rpb24gRWcoYSl7aWYoYSE9PXhnKXJldHVybiExO2lmKCF6ZylyZXR1cm4gRGcoYSksemc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiF4ZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9eWc7YjspQWcoYSxiKSxiPURlKGIpO0RnKGEpO3lnPXhnP0RlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIEZnKCl7eWc9eGc9bnVsbDt6Zz0hMX1cbnZhciBHZz1UYi5SZWFjdEN1cnJlbnRPd25lcixxZz0hMTtmdW5jdGlvbiBTKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/RWYoYixudWxsLGMsZCk6RGYoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gSGcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0lnKGIsZSk7ZD1oZyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFxZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLEpnKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtTKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFWZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxMZyhhLGIsZyxkLGUsZik7YT1ZZShjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmRkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIEpnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVhlKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBMZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZkZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihxZz0hMSxlPGYpP0pnKGEsYixmKTpNZyhhLGIsYyxkLGYpfWZ1bmN0aW9uIE5nKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gTWcoYSxiLGMsZCxlKXt2YXIgZj1KKGMpP0llOkguY3VycmVudDtmPUplKGIsZik7SWcoYixlKTtjPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBPZyhhLGIsYyxkLGUpe2lmKEooYykpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtJZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksdmYoYixjLGQsZSkseGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZ3ZihiLGcsZCxrKTtQZz0hMTt2YXIgdD1iLm1lbW9pemVkU3RhdGU7bD1nLnN0YXRlPXQ7dmFyIEE9Yi51cGRhdGVRdWV1ZTtudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksbD1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx0IT09bHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSxsPWIubWVtb2l6ZWRTdGF0ZSksKGg9UGd8fHVmKGIsYyxoLGQsdCxsLGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWwpLGcucHJvcHM9ZCxnLnN0YXRlPWwsZy5jb250ZXh0PWssZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOkwoYi50eXBlLGgpLGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09XG50eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspLFBnPSExLGw9Yi5tZW1vaXplZFN0YXRlLHQ9Zy5zdGF0ZT1sLEE9Yi51cGRhdGVRdWV1ZSxudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksdD1iLm1lbW9pemVkU3RhdGUpLGghPT1kfHxsIT09dHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSx0PWIubWVtb2l6ZWRTdGF0ZSksKG09UGd8fHVmKGIsYyxoLGQsbCx0LGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx0LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1cbnQpLGcucHJvcHM9ZCxnLnN0YXRlPXQsZy5jb250ZXh0PWssZD1tKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIFFnKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIFFnKGEsYixjLGQsZSxmKXtOZyhhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmUGUoYixjLCExKSxKZyhhLGIsZik7ZD1iLnN0YXRlTm9kZTtHZy5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1EZihiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPURmKGIsbnVsbCxoLGYpKTpTKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJlBlKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9NZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZNZShhLGIuY29udGV4dCwhMSk7SmYoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gU2coYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9Yi5tZW1vaXplZFN0YXRlO2lmKDA9PT0oYi5lZmZlY3RUYWcmNjQpKXtmPW51bGw7dmFyIGc9ITF9ZWxzZSBmPXt0aW1lZE91dEF0Om51bGwhPT1mP2YudGltZWRPdXRBdDowfSxnPSEwLGIuZWZmZWN0VGFnJj0tNjU7aWYobnVsbD09PWEpaWYoZyl7dmFyIGg9ZS5mYWxsYmFjazthPVplKG51bGwsZCwwLG51bGwpOzA9PT0oYi5tb2RlJjEpJiYoYS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCk7ZD1aZShoLGQsYyxudWxsKTthLnNpYmxpbmc9ZDtjPWE7Yy5yZXR1cm49ZC5yZXR1cm49Yn1lbHNlIGM9ZD1FZihiLG51bGwsZS5jaGlsZHJlbixjKTtlbHNlIG51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxoPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1YZShkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09XG5iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1kLmNoaWxkJiYoZS5jaGlsZD1nKSksZD1lLnNpYmxpbmc9WGUoaCxjLGguZXhwaXJhdGlvblRpbWUpLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpjPWQ9RGYoYixkLmNoaWxkLGUuY2hpbGRyZW4sYykpOihoPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9WmUobnVsbCxkLDAsbnVsbCksZS5jaGlsZD1oLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1lLnNpYmxpbmc9WmUoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1EZihiLGgsZS5jaGlsZHJlbixjKSksYi5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGU7Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gSmcoYSxiLGMpe251bGwhPT1hJiYoYi5jb250ZXh0RGVwZW5kZW5jaWVzPWEuY29udGV4dERlcGVuZGVuY2llcyk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3goXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBUZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8SS5jdXJyZW50KXFnPSEwO2Vsc2V7aWYoZDxjKXtxZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpSZyhiKTtGZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6SihiLnR5cGUpJiZPZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOlVnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiBTZyhhLGIsYyk7Yj1KZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gSmcoYSxiLGMpfX1lbHNlIHFnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPVxuYi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1KZShiLEguY3VycmVudCk7SWcoYixjKTtlPWhnKG51bGwsYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7bGcoKTtpZihKKGQpKXt2YXIgZj0hMDtPZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYma2YoYixkLGcsYSk7ZS51cGRhdGVyPXRmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7eGYoYixkLGEsYyk7Yj1RZyhudWxsLGIsZCwhMCxmLFxuYyl9ZWxzZSBiLnRhZz0wLFMobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9aGYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1XZShhKTtmPUwoYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9TWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz1PZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1IZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1LZyhudWxsLGIsYSxMKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6eChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksTWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsXG5lPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLE9nKGEsYixkLGUsYyk7Y2FzZSAzOlJnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD94KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpRmcoKSxiPUpnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKXlnPUVlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLHhnPWIsZT16Zz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPUVmKGIsbnVsbCxkLGMpKTooUyhhLGIsZCxjKSxGZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBMZihiKSxudWxsPT09YSYmQ2coYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLFxuZz1lLmNoaWxkcmVuLHhlKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZ4ZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxOZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUyhhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmQ2coYiksbnVsbDtjYXNlIDEzOnJldHVybiBTZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1EZihiLG51bGwsZCxjKTpTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLEhnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtVZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9YmQoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUkuY3VycmVudCl7Yj1KZyhhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgbD1oLmNvbnRleHREZXBlbmRlbmNpZXM7aWYobnVsbCE9PWwpe2c9aC5jaGlsZDtmb3IodmFyIGs9bC5maXJzdDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQmJjAhPT1cbihrLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYoaz1uZihjKSxrLnRhZz1zZixwZihoLGspKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2s9aC5hbHRlcm5hdGU7bnVsbCE9PWsmJmsuZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7az1jO2Zvcih2YXIgbT1oLnJldHVybjtudWxsIT09bTspe3ZhciBwPW0uYWx0ZXJuYXRlO2lmKG0uY2hpbGRFeHBpcmF0aW9uVGltZTxrKW0uY2hpbGRFeHBpcmF0aW9uVGltZT1rLG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8ayYmKHAuY2hpbGRFeHBpcmF0aW9uVGltZT1rKTtlbHNlIGlmKG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8aylwLmNoaWxkRXhwaXJhdGlvblRpbWU9aztlbHNlIGJyZWFrO209bS5yZXR1cm59bC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTticmVha31rPWsubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP1xubnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9fVMoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sSWcoYixjKSxlPU0oZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPUwoZSxiLnBlbmRpbmdQcm9wcyksZj1MKGUudHlwZSxmKSxLZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gTGcoYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09XG5kP2U6TChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEooZCk/KGE9ITAsT2UoYikpOmE9ITEsSWcoYixjKSx2ZihiLGQsZSxjKSx4ZihiLGQsZSxjKSxRZyhudWxsLGIsZCwhMCxhLGMpfXgoXCIxNTZcIil9dmFyIFZnPXtjdXJyZW50Om51bGx9LFdnPW51bGwsWGc9bnVsbCxZZz1udWxsO2Z1bmN0aW9uIFVnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0coVmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIFpnKGEpe3ZhciBiPVZnLmN1cnJlbnQ7RihWZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIElnKGEsYil7V2c9YTtZZz1YZz1udWxsO3ZhciBjPWEuY29udGV4dERlcGVuZGVuY2llcztudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZT49YiYmKHFnPSEwKTthLmNvbnRleHREZXBlbmRlbmNpZXM9bnVsbH1cbmZ1bmN0aW9uIE0oYSxiKXtpZihZZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpWWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PVhnPyhudWxsPT09V2c/eChcIjMwOFwiKTp2b2lkIDAsWGc9YixXZy5jb250ZXh0RGVwZW5kZW5jaWVzPXtmaXJzdDpiLGV4cGlyYXRpb25UaW1lOjB9KTpYZz1YZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgJGc9MCxyZj0xLHNmPTIsYWg9MyxQZz0hMTtmdW5jdGlvbiBiaChhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBjaChhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOiRnLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIGRoKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHBmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1iaChjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9Y2goZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9Y2goZCkpO251bGw9PT1lfHxkPT09ZT9kaChkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KGRoKGQsYiksZGgoZSxiKSk6KGRoKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gZWgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpOmZoKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gZmgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9Y2goYikpO3JldHVybiBifVxuZnVuY3Rpb24gZ2goYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSByZjpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgYWg6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAkZzphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2Ugc2Y6UGc9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB5ZihhLGIsYyxkLGUpe1BnPSExO2I9ZmgoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxsPWIuZmlyc3RVcGRhdGUsaz1mO251bGwhPT1sOyl7dmFyIG09bC5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1sLGY9ayksaDxtJiYoaD1tKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGwubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bDooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RFZmZlY3Q9bCkpKTtsPWwubmV4dH1tPW51bGw7Zm9yKGw9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1sOyl7dmFyIHA9bC5leHBpcmF0aW9uVGltZTtwPGU/KG51bGw9PT1tJiYobT1sLG51bGw9PT1nJiYoZj1rKSksaDxwJiYoaD1wKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1sOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bCkpKTtsPWwubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWspO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9a31cbmZ1bmN0aW9uIGhoKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTtpaChiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7aWgoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIGloKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIGpoKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6amMoYil9fWZ1bmN0aW9uIGtoKGEpe2EuZWZmZWN0VGFnfD00fXZhciBsaD12b2lkIDAsbWg9dm9pZCAwLG5oPXZvaWQgMCxvaD12b2lkIDA7bGg9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O21oPWZ1bmN0aW9uKCl7fTtcbm5oPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihOLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj12YyhnLGYpO2Q9dmMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPSRkKGcsZik7ZD0kZChnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWJlKGcsZik7ZD1iZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXRlKX1xZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGw9ZltjXTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgaz1kW2NdO2w9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZrIT09bCYmKG51bGwhPWt8fG51bGwhPWwpKWlmKFwic3R5bGVcIj09PWMpaWYobCl7Zm9yKGcgaW4gbCkhbC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmbFtnXSE9PWtbZ10mJihofHxcbihoPXt9KSxoW2ddPWtbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmbCE9PWsmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09Yz9sPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihyYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9ayYmc2UoZSxjKSxhfHxsPT09a3x8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGspKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZraChiKX19O29oPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZraChiKX07XG52YXIgcGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gcWgoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1qYyhjKSk7bnVsbCE9PWMmJmljKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJmljKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIHJoKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe3NoKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIHRoKGEsYixjKXtjPWMudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG97aWYoKGQudGFnJmEpIT09TmYpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWUmJmUoKX0oZC50YWcmYikhPT1OZiYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIHVoKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1uZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gdmgoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFJlJiZSZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYodm9pZCAwIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe3NoKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6cmgoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe3NoKGEsZil9YnJlYWs7Y2FzZSA1OnJoKGEpO2JyZWFrO2Nhc2UgNDp3aChhKX19XG5mdW5jdGlvbiB4aChhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIHloKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKHhoKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn14KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6eChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKGtlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHx4aChjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyZcbjIpY29udGludWUgYjtpZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9dGUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiB3aChhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz94KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYodmgoZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnKXtpZihudWxsIT09Yi5jaGlsZCl7ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYodmgoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gemgoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp0aChQZixRZixiKTticmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZDZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9bGYoKSkpO251bGwhPT1hJiZ1aChhLGQpO2M9XG5iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBwaCk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPUFoLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fXZhciBCaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBDaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDtjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7RGgoZCk7cWgoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBFaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09Rmg/Rmg9bmV3IFNldChbdGhpc10pOkZoLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7cWgoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBHaChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpKKGEudHlwZSkmJktlKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIEtmKGEpLExlKGEpLGI9YS5lZmZlY3RUYWcsMCE9PShiJjY0KT94KFwiMjg1XCIpOnZvaWQgMCxhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGE7Y2FzZSA1OnJldHVybiBNZihhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGI9YS5lZmZlY3RUYWcsYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAxODpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gWmcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBIaD1UYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLEloPVRiLlJlYWN0Q3VycmVudE93bmVyLEpoPTEwNzM3NDE4MjIsS2g9ITEsVD1udWxsLExoPW51bGwsVT0wLE1oPS0xLE5oPSExLFY9bnVsbCxPaD0hMSxQaD1udWxsLFFoPW51bGwsUmg9bnVsbCxGaD1udWxsO2Z1bmN0aW9uIFNoKCl7aWYobnVsbCE9PVQpZm9yKHZhciBhPVQucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTticmVhaztjYXNlIDU6TWYoYik7YnJlYWs7Y2FzZSA0OktmKGIpO2JyZWFrO2Nhc2UgMTA6WmcoYil9YT1hLnJldHVybn1MaD1udWxsO1U9MDtNaD0tMTtOaD0hMTtUPW51bGx9XG5mdW5jdGlvbiBUaCgpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYT1WLmVmZmVjdFRhZzthJjE2JiZrZShWLnN0YXRlTm9kZSxcIlwiKTtpZihhJjEyOCl7dmFyIGI9Vi5hbHRlcm5hdGU7bnVsbCE9PWImJihiPWIucmVmLG51bGwhPT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihudWxsKTpiLmN1cnJlbnQ9bnVsbCkpfXN3aXRjaChhJjE0KXtjYXNlIDI6eWgoVik7Vi5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OnpoKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODphPVYsd2goYSksYS5yZXR1cm49bnVsbCxhLmNoaWxkPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsLGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFVoKCl7Zm9yKDtudWxsIT09Vjspe2lmKFYuZWZmZWN0VGFnJjI1NilhOnt2YXIgYT1WLmFsdGVybmF0ZSxiPVY7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKE9mLE5mLGIpO2JyZWFrIGE7Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6TChiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrIGE7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWsgYTtkZWZhdWx0OngoXCIxNjNcIil9fVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFZoKGEsYil7Zm9yKDtudWxsIT09Vjspe3ZhciBjPVYuZWZmZWN0VGFnO2lmKGMmMzYpe3ZhciBkPVYuYWx0ZXJuYXRlLGU9VixmPWI7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKFJmLFNmLGUpO2JyZWFrO2Nhc2UgMTp2YXIgZz1lLnN0YXRlTm9kZTtpZihlLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kKWcuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBoPWUuZWxlbWVudFR5cGU9PT1lLnR5cGU/ZC5tZW1vaXplZFByb3BzOkwoZS50eXBlLGQubWVtb2l6ZWRQcm9wcyk7Zy5jb21wb25lbnREaWRVcGRhdGUoaCxkLm1lbW9pemVkU3RhdGUsZy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9ZD1lLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiZoaChlLGQsZyxmKTticmVhaztjYXNlIDM6ZD1lLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1kKXtnPW51bGw7aWYobnVsbCE9PWUuY2hpbGQpc3dpdGNoKGUuY2hpbGQudGFnKXtjYXNlIDU6Zz1cbmUuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPWUuY2hpbGQuc3RhdGVOb2RlfWhoKGUsZCxnLGYpfWJyZWFrO2Nhc2UgNTpmPWUuc3RhdGVOb2RlO251bGw9PT1kJiZlLmVmZmVjdFRhZyY0JiZ3ZShlLnR5cGUsZS5tZW1vaXplZFByb3BzKSYmZi5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp4KFwiMTYzXCIpfX1jJjEyOCYmKGU9Vi5yZWYsbnVsbCE9PWUmJihmPVYuc3RhdGVOb2RlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlP2UoZik6ZS5jdXJyZW50PWYpKTtjJjUxMiYmKFBoPWEpO1Y9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFdoKGEsYil7Umg9UWg9UGg9bnVsbDt2YXIgYz1XO1c9ITA7ZG97aWYoYi5lZmZlY3RUYWcmNTEyKXt2YXIgZD0hMSxlPXZvaWQgMDt0cnl7dmFyIGY9Yjt0aChVZixOZixmKTt0aChOZixUZixmKX1jYXRjaChnKXtkPSEwLGU9Z31kJiZzaChiLGUpfWI9Yi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1iKTtXPWM7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpO1h8fFd8fFloKDEwNzM3NDE4MjMsITEpfWZ1bmN0aW9uIG9mKCl7bnVsbCE9PVFoJiZCZShRaCk7bnVsbCE9PVJoJiZSaCgpfVxuZnVuY3Rpb24gWmgoYSxiKXtPaD1LaD0hMDthLmN1cnJlbnQ9PT1iP3goXCIxNzdcIik6dm9pZCAwO3ZhciBjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3goXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZSxlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtlZihhLGU+ZD9lOmQpO0loLmN1cnJlbnQ9bnVsbDtkPXZvaWQgMDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3VlPUJkO3ZlPVBkKCk7QmQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7dmFyIGY9dm9pZCAwO3RyeXtVaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1mb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtcbmY9dm9pZCAwO3RyeXtUaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1RZCh2ZSk7dmU9bnVsbDtCZD0hIXVlO3VlPW51bGw7YS5jdXJyZW50PWI7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e1ZoKGEsYyl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWlmKG51bGwhPT1kJiZudWxsIT09UGgpe3ZhciBnPVdoLmJpbmQobnVsbCxhLGQpO1FoPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gQWUoZyl9KTtSaD1nfUtoPU9oPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBRZSYmUWUoYi5zdGF0ZU5vZGUpO2M9Yi5leHBpcmF0aW9uVGltZTtiPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtiPVxuYj5jP2I6YzswPT09YiYmKEZoPW51bGwpOyRoKGEsYil9XG5mdW5jdGlvbiBhaShhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7VD1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVU7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDM6S2YoYik7TGUoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpRWcoYiksYi5lZmZlY3RUYWcmPS0zO21oKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTt2YXIgaD1JZihIZi5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpbmgoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBsPUlmKE4uY3VycmVudCk7aWYoRWcoYikpe2c9YjtlPWcuc3RhdGVOb2RlO3ZhciBrPWcudHlwZSxtPWcubWVtb2l6ZWRQcm9wcyxwPWg7ZVtGYV09ZztlW0dhXT1tO2Y9dm9pZCAwO2g9aztzd2l0Y2goaCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihrPTA7azxhYi5sZW5ndGg7aysrKUUoYWJba10sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkUoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLGUpO0UoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixlKTtFKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpFKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MoZSxtKTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07RShcImludmFsaWRcIixlKTtzZShwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2UoZSxtKSxFKFwiaW52YWxpZFwiLGUpLHNlKHAsXCJvbkNoYW5nZVwiKX1xZShoLG0pO2s9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihsPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/ZS50ZXh0Q29udGVudCE9PWwmJihrPVtcImNoaWxkcmVuXCIsbF0pOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmZS50ZXh0Q29udGVudCE9PVwiXCIrbCYmKGs9W1wiY2hpbGRyZW5cIixcIlwiK2xdKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9bCYmc2UocCxmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlJiKGUpO0FjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIoZSk7ZWUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXRlKX1mPWs7Zy51cGRhdGVRdWV1ZT1mO2c9bnVsbCE9PWY/ITA6ITE7ZyYma2goYil9ZWxzZXttPWI7cD1mO2U9ZztrPTk9PT1oLm5vZGVUeXBlP2g6aC5vd25lckRvY3VtZW50O2w9PT1mZS5odG1sJiYobD1nZShwKSk7bD09PWZlLmh0bWw/XCJzY3JpcHRcIj09PXA/KGU9ay5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsaz1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZS5pcz9rPWsuY3JlYXRlRWxlbWVudChwLHtpczplLmlzfSk6KGs9ay5jcmVhdGVFbGVtZW50KHApLFwic2VsZWN0XCI9PT1wJiYocD1rLGUubXVsdGlwbGU/cC5tdWx0aXBsZT0hMDplLnNpemUmJihwLnNpemU9ZS5zaXplKSkpOms9ay5jcmVhdGVFbGVtZW50TlMobCxwKTtlPWs7ZVtGYV09bTtlW0dhXT1nO2xoKGUsYiwhMSwhMSk7cD1lO2s9ZjttPWc7dmFyIHQ9aCxBPXJlKGssbSk7c3dpdGNoKGspe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RShcImxvYWRcIixcbnApO2g9bTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWIubGVuZ3RoO2grKylFKGFiW2hdLHApO2g9bTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLHApO0UoXCJsb2FkXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RShcInJlc2V0XCIscCk7RShcInN1Ym1pdFwiLHApO2g9bTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixwKTtoPW07YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MocCxtKTtoPXZjKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9JGQocCxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6cC5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O2g9bih7fSxtLHt2YWx1ZTp2b2lkIDB9KTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShwLFxubSk7aD1iZShwLG0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXFlKGssaCk7bD12b2lkIDA7dmFyIHY9ayxSPXAsdT1oO2ZvcihsIGluIHUpaWYodS5oYXNPd25Qcm9wZXJ0eShsKSl7dmFyIHE9dVtsXTtcInN0eWxlXCI9PT1sP29lKFIscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8ocT1xP3EuX19odG1sOnZvaWQgMCxudWxsIT1xJiZqZShSLHEpKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCI9PT10eXBlb2YgcT8oXCJ0ZXh0YXJlYVwiIT09dnx8XCJcIiE9PXEpJiZrZShSLHEpOlwibnVtYmVyXCI9PT10eXBlb2YgcSYma2UoUixcIlwiK3EpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihyYS5oYXNPd25Qcm9wZXJ0eShsKT9udWxsIT1xJiZzZSh0LGwpOm51bGwhPXEmJnRjKFIsbCxxLEEpKX1zd2l0Y2goayl7Y2FzZSBcImlucHV0XCI6UmIocCk7XG5BYyhwLG0sITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlJiKHApO2VlKHAsbSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPW0udmFsdWUmJnAuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3VjKG0udmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6aD1wO2gubXVsdGlwbGU9ISFtLm11bHRpcGxlO3A9bS52YWx1ZTtudWxsIT1wP2FlKGgsISFtLm11bHRpcGxlLHAsITEpOm51bGwhPW0uZGVmYXVsdFZhbHVlJiZhZShoLCEhbS5tdWx0aXBsZSxtLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYocC5vbmNsaWNrPXRlKX0oZz13ZShmLGcpKSYma2goYik7Yi5zdGF0ZU5vZGU9ZX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMDticmVhaztjYXNlIDY6ZSYmbnVsbCE9Yi5zdGF0ZU5vZGU/b2goZSxiLGUubWVtb2l6ZWRQcm9wcyxnKTooXCJzdHJpbmdcIiE9PVxudHlwZW9mIGcmJihudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2NlwiKTp2b2lkIDApLGU9SWYoSGYuY3VycmVudCksSWYoTi5jdXJyZW50KSxFZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltGYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZraChiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tGYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7VD1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnfHxmKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6S2YoYik7bWgoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkooYi50eXBlKSYmS2UoYik7YnJlYWs7Y2FzZSAxODpicmVhaztkZWZhdWx0OngoXCIxNTZcIil9VD1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVQpcmV0dXJuIFQ7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmXG4oYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPUdoKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGJpKGEpe3ZhciBiPVRnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1haShhKSk7SWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gY2koYSxiKXtLaD94KFwiMjQzXCIpOnZvaWQgMDtvZigpO0toPSEwO3ZhciBjPUhoLmN1cnJlbnQ7SGguY3VycmVudD1rZzt2YXIgZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGQhPT1VfHxhIT09TGh8fG51bGw9PT1UKVNoKCksTGg9YSxVPWQsVD1YZShMaC5jdXJyZW50LG51bGwsVSksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZT0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1UJiYhZGkoKTspVD1iaShUKTtlbHNlIGZvcig7bnVsbCE9PVQ7KVQ9YmkoVCl9Y2F0Y2godSl7aWYoWWc9WGc9V2c9bnVsbCxsZygpLG51bGw9PT1UKWU9ITAsRGgodSk7ZWxzZXtudWxsPT09VD94KFwiMjcxXCIpOnZvaWQgMDt2YXIgZj1ULGc9Zi5yZXR1cm47aWYobnVsbD09PWcpZT0hMCxEaCh1KTtlbHNle2E6e3ZhciBoPWEsbD1nLGs9ZixtPXU7Zz1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PVxubSYmXCJvYmplY3RcIj09PXR5cGVvZiBtJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS50aGVuKXt2YXIgcD1tO209bDt2YXIgdD0tMSxBPS0xO2Rve2lmKDEzPT09bS50YWcpe3ZhciB2PW0uYWx0ZXJuYXRlO2lmKG51bGwhPT12JiYodj12Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXYpKXtBPTEwKigxMDczNzQxODIyLXYudGltZWRPdXRBdCk7YnJlYWt9dj1tLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHYpaWYoMD49dil0PTA7ZWxzZSBpZigtMT09PXR8fHY8dCl0PXZ9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1sO2Rve2lmKHY9MTM9PT1tLnRhZyl2PXZvaWQgMD09PW0ubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bS5tZW1vaXplZFN0YXRlO2lmKHYpe2w9bS51cGRhdGVRdWV1ZTtudWxsPT09bD8obD1uZXcgU2V0LGwuYWRkKHApLG0udXBkYXRlUXVldWU9bCk6bC5hZGQocCk7aWYoMD09PShtLm1vZGUmMSkpe20uZWZmZWN0VGFnfD1cbjY0O2suZWZmZWN0VGFnJj0tMTk1NzsxPT09ay50YWcmJihudWxsPT09ay5hbHRlcm5hdGU/ay50YWc9MTc6KGc9bmYoMTA3Mzc0MTgyMyksZy50YWc9c2YscGYoayxnKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9aDtsPWc7dmFyIFI9ay5waW5nQ2FjaGU7bnVsbD09PVI/KFI9ay5waW5nQ2FjaGU9bmV3IEJoLHY9bmV3IFNldCxSLnNldChwLHYpKToodj1SLmdldChwKSx2b2lkIDA9PT12JiYodj1uZXcgU2V0LFIuc2V0KHAsdikpKTt2LmhhcyhsKXx8KHYuYWRkKGwpLGs9ZWkuYmluZChudWxsLGsscCxsKSxwLnRoZW4oayxrKSk7LTE9PT10P2g9MTA3Mzc0MTgyMzooLTE9PT1BJiYoQT0xMCooMTA3Mzc0MTgyMi1nZihoLGcpKS01RTMpLGg9QSt0KTswPD1oJiZNaDxoJiYoTWg9aCk7bS5lZmZlY3RUYWd8PTIwNDg7bS5leHBpcmF0aW9uVGltZT1nO2JyZWFrIGF9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1FcnJvcigoaWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcblwiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIramMoaykpfU5oPSEwO209amgobSxrKTtoPWw7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aC5lZmZlY3RUYWd8PTIwNDg7aC5leHBpcmF0aW9uVGltZT1nO2c9Q2goaCxtLGcpO2VoKGgsZyk7YnJlYWsgYTtjYXNlIDE6aWYodD1tLEE9aC50eXBlLGs9aC5zdGF0ZU5vZGUsMD09PShoLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1rJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhrKSkpKXtoLmVmZmVjdFRhZ3w9MjA0ODtcbmguZXhwaXJhdGlvblRpbWU9ZztnPUVoKGgsdCxnKTtlaChoLGcpO2JyZWFrIGF9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpfVQ9YWkoZik7Y29udGludWV9fX1icmVha313aGlsZSgxKTtLaD0hMTtIaC5jdXJyZW50PWM7WWc9WGc9V2c9bnVsbDtsZygpO2lmKGUpTGg9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2UgaWYobnVsbCE9PVQpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2M9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09Yz94KFwiMjgxXCIpOnZvaWQgMDtMaD1udWxsO2lmKE5oKXtlPWEubGF0ZXN0UGVuZGluZ1RpbWU7Zj1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7Zz1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMCE9PWUmJmU8ZHx8MCE9PWYmJmY8ZHx8MCE9PWcmJmc8ZCl7ZmYoYSxkKTtmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLC0xKTtyZXR1cm59aWYoIWEuZGlkRXJyb3ImJmIpe2EuZGlkRXJyb3I9ITA7ZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWQ7XG5iPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztmaShhLGMsZCxiLC0xKTtyZXR1cm59fWImJi0xIT09TWg/KGZmKGEsZCksYj0xMCooMTA3Mzc0MTgyMi1nZihhLGQpKSxiPE1oJiYoTWg9YiksYj0xMCooMTA3Mzc0MTgyMi1sZigpKSxiPU1oLWIsZmkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWQsYS5maW5pc2hlZFdvcms9Yyl9fVxuZnVuY3Rpb24gc2goYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Rmh8fCFGaC5oYXMoZCkpKXthPWpoKGIsYSk7YT1FaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT1qaChiLGEpO2E9Q2goYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7cWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPWpoKGIsYSksYz1DaChhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxxZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIG1mKGEsYil7dmFyIGM9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCgpLGQ9dm9pZCAwO2lmKDA9PT0oYi5tb2RlJjEpKWQ9MTA3Mzc0MTgyMztlbHNlIGlmKEtoJiYhT2gpZD1VO2Vsc2V7c3dpdGNoKGMpe2Nhc2Ugci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eTpkPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eTpkPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX0xvd1ByaW9yaXR5OmNhc2Ugci51bnN0YWJsZV9JZGxlUHJpb3JpdHk6ZD0xO2JyZWFrO2RlZmF1bHQ6eChcIjMxM1wiKX1udWxsIT09TGgmJmQ9PT1VJiYtLWR9Yz09PXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkmJlxuKDA9PT1naXx8ZDxnaSkmJihnaT1kKTtyZXR1cm4gZH1mdW5jdGlvbiBlaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1MaCYmVT09PWMpTGg9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztkZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmWGgoYSxjKX19ZnVuY3Rpb24gQWgoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1sZigpO2I9bWYoYixhKTthPWhpKGEsYik7bnVsbCE9PWEmJihjZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmWGgoYSxiKSl9XG5mdW5jdGlvbiBoaShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gcWYoYSxiKXthPWhpKGEsYik7bnVsbCE9PWEmJighS2gmJjAhPT1VJiZiPlUmJlNoKCksY2YoYSxiKSxLaCYmIU9oJiZMaD09PWF8fFhoKGEsYS5leHBpcmF0aW9uVGltZSksaWk+amkmJihpaT0wLHgoXCIxODVcIikpKX1mdW5jdGlvbiBraShhLGIsYyxkLGUpe3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX12YXIgbGk9bnVsbCxZPW51bGwsbWk9MCxuaT12b2lkIDAsVz0hMSxvaT1udWxsLFo9MCxnaT0wLHBpPSExLHFpPW51bGwsWD0hMSxyaT0hMSxzaT1udWxsLHRpPXIudW5zdGFibGVfbm93KCksdWk9MTA3Mzc0MTgyMi0odGkvMTB8MCksdmk9dWksamk9NTAsaWk9MCx3aT1udWxsO2Z1bmN0aW9uIHhpKCl7dWk9MTA3Mzc0MTgyMi0oKHIudW5zdGFibGVfbm93KCktdGkpLzEwfDApfVxuZnVuY3Rpb24geWkoYSxiKXtpZigwIT09bWkpe2lmKGI8bWkpcmV0dXJuO251bGwhPT1uaSYmci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhuaSl9bWk9YjthPXIudW5zdGFibGVfbm93KCktdGk7bmk9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHppLHt0aW1lb3V0OjEwKigxMDczNzQxODIyLWIpLWF9KX1mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2EuZXhwaXJhdGlvblRpbWU9ZDswIT09ZXx8ZGkoKT8wPGUmJihhLnRpbWVvdXRIYW5kbGU9eWUoQWkuYmluZChudWxsLGEsYixjKSxlKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9Yil9ZnVuY3Rpb24gQWkoYSxiLGMpe2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWM7YS5maW5pc2hlZFdvcms9Yjt4aSgpO3ZpPXVpO0JpKGEsYyl9ZnVuY3Rpb24gJGgoYSxiKXthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1cbmZ1bmN0aW9uIGxmKCl7aWYoVylyZXR1cm4gdmk7Q2koKTtpZigwPT09Wnx8MT09PVopeGkoKSx2aT11aTtyZXR1cm4gdml9ZnVuY3Rpb24gWGgoYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1ZPyhsaT1ZPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooWT1ZLm5leHRTY2hlZHVsZWRSb290PWEsWS5uZXh0U2NoZWR1bGVkUm9vdD1saSkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7V3x8KFg/cmkmJihvaT1hLFo9MTA3Mzc0MTgyMyxEaShhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9ZaCgxMDczNzQxODIzLCExKTp5aShhLGIpKX1cbmZ1bmN0aW9uIENpKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVkpZm9yKHZhciBjPVksZD1saTtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09WT94KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7bGk9WT1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09bGkpbGk9ZT1kLm5leHRTY2hlZHVsZWRSb290LFkubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09WSl7WT1jO1kubmV4dFNjaGVkdWxlZFJvb3Q9bGk7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09WSlicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fW9pPWI7Wj1hfXZhciBFaT0hMTtmdW5jdGlvbiBkaSgpe3JldHVybiBFaT8hMDpyLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/RWk9ITA6ITF9ZnVuY3Rpb24gemkoKXt0cnl7aWYoIWRpKCkmJm51bGwhPT1saSl7eGkoKTt2YXIgYT1saTtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZ1aTw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249dWkpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09bGkpfVloKDAsITApfWZpbmFsbHl7RWk9ITF9fVxuZnVuY3Rpb24gWWgoYSxiKXtDaSgpO2lmKGIpZm9yKHhpKCksdmk9dWk7bnVsbCE9PW9pJiYwIT09WiYmYTw9WiYmIShFaSYmdWk+Wik7KURpKG9pLFosdWk+WiksQ2koKSx4aSgpLHZpPXVpO2Vsc2UgZm9yKDtudWxsIT09b2kmJjAhPT1aJiZhPD1aOylEaShvaSxaLCExKSxDaSgpO2ImJihtaT0wLG5pPW51bGwpOzAhPT1aJiZ5aShvaSxaKTtpaT0wO3dpPW51bGw7aWYobnVsbCE9PXNpKWZvcihhPXNpLHNpPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7cGl8fChwaT0hMCxxaT1kKX19aWYocGkpdGhyb3cgYT1xaSxxaT1udWxsLHBpPSExLGE7fWZ1bmN0aW9uIEJpKGEsYil7Vz94KFwiMjUzXCIpOnZvaWQgMDtvaT1hO1o9YjtEaShhLGIsITEpO1loKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gRGkoYSxiLGMpe1c/eChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9GaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLHplKGQpKSxjaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihkaSgpP2EuZmluaXNoZWRXb3JrPWQ6RmkoYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmRmkoYSxkLGIpKTtXPSExfVxuZnVuY3Rpb24gRmkoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09c2k/c2k9W2RdOnNpLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09d2k/aWkrKzood2k9YSxpaT0wKTtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7WmgoYSxiKX0pfWZ1bmN0aW9uIERoKGEpe251bGw9PT1vaT94KFwiMjQ2XCIpOnZvaWQgMDtvaS5leHBpcmF0aW9uVGltZT0wO3BpfHwocGk9ITAscWk9YSl9ZnVuY3Rpb24gR2koYSxiKXt2YXIgYz1YO1g9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFg9Yyl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEhpKGEsYil7aWYoWCYmIXJpKXtyaT0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtyaT0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gSWkoYSxiLGMpe1h8fFd8fDA9PT1naXx8KFloKGdpLCExKSxnaT0wKTt2YXIgZD1YO1g9ITA7dHJ5e3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjKX0pfWZpbmFsbHl7KFg9ZCl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEppKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWVkKGMpJiYxPT09Yy50YWc/dm9pZCAwOngoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoSihnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3goXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoSihoKSl7Yz1OZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1IZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1uZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5vZigpO3BmKGYsZSk7cWYoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBLaShhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1sZigpO2U9bWYoZixlKTtyZXR1cm4gSmkoYSxiLGMsZSxkKX1mdW5jdGlvbiBMaShhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIE1pKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6V2Isa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5BYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOnljKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1LYShkKTtlP3ZvaWQgMDp4KFwiOTBcIik7U2IoZCk7eWMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZhZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gTmkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWxmKCkrNTAwKS8yNXwwKSsxKTtiPj1KaCYmKGI9SmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Smg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfU5pLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOngoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBPaTtKaShhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5OaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5OaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6eChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD94KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO0JpKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O05pLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBPaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfU9pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5PaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIFBpKGEsYixjKXtiPUsoMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuUGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBPaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7S2koYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtQaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgT2k7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO0tpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307UGkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IE9pO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtLaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuUGkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IE5pKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gUWkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUdiPUdpO0hiPUlpO0liPWZ1bmN0aW9uKCl7V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApfTtcbmZ1bmN0aW9uIFJpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgUGkoYSwhMSxiKX1cbmZ1bmN0aW9uIFNpKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1MaShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPVJpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1IaShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gTGkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIFRpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIE1pKGEsYixudWxsLGMpfVxudmFyIFZpPXtjcmVhdGVQb3J0YWw6VGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj94KFwiMTg4XCIpOngoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9aGQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIFNpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtRaShjKT92b2lkIDA6eChcIjIwMFwiKTtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/XG54KFwiMzhcIik6dm9pZCAwO3JldHVybiBTaShhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtRaShhKT92b2lkIDA6eChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KEhpKGZ1bmN0aW9uKCl7U2kobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gVGkuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOkdpLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpJaSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtXP3goXCIxODdcIik6dm9pZCAwO3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGtpKGEsYil9ZmluYWxseXtYPWMsWWgoMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OlVpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1cblg7WD0hMDt0cnl7a2koYSl9ZmluYWxseXsoWD1iKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltJYSxKYSxLYSxCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscGEsUWEsZnVuY3Rpb24oYSl7eWEoYSxQYSl9LEViLEZiLERkLERhXX19O2Z1bmN0aW9uIFVpKGEsYil7UWkoYSk/dm9pZCAwOngoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBQaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX1cbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBUZShuKHt9LGEse292ZXJyaWRlUHJvcHM6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SGEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi44LjZcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgV2k9e2RlZmF1bHQ6Vml9LFhpPVdpJiZWaXx8V2k7bW9kdWxlLmV4cG9ydHM9WGkuZGVmYXVsdHx8WGk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjEzLjZcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZD1udWxsLGU9ITEsZz0zLGs9LTEsbD0tMSxtPSExLG49ITE7ZnVuY3Rpb24gcCgpe2lmKCFtKXt2YXIgYT1kLmV4cGlyYXRpb25UaW1lO24/cSgpOm49ITA7cih0LGEpfX1cbmZ1bmN0aW9uIHUoKXt2YXIgYT1kLGI9ZC5uZXh0O2lmKGQ9PT1iKWQ9bnVsbDtlbHNle3ZhciBjPWQucHJldmlvdXM7ZD1jLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbDtjPWEuY2FsbGJhY2s7Yj1hLmV4cGlyYXRpb25UaW1lO2E9YS5wcmlvcml0eUxldmVsO3ZhciBmPWcsUT1sO2c9YTtsPWI7dHJ5e3ZhciBoPWMoKX1maW5hbGx5e2c9ZixsPVF9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGgpaWYoaD17Y2FsbGJhY2s6aCxwcmlvcml0eUxldmVsOmEsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH0sbnVsbD09PWQpZD1oLm5leHQ9aC5wcmV2aW91cz1oO2Vsc2V7Yz1udWxsO2E9ZDtkb3tpZihhLmV4cGlyYXRpb25UaW1lPj1iKXtjPWE7YnJlYWt9YT1hLm5leHR9d2hpbGUoYSE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9aCxwKCkpO2I9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1oO2gubmV4dD1jO2gucHJldmlvdXM9XG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWQ/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZTtlPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09ZDspe3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoZC5leHBpcmF0aW9uVGltZTw9Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPD1jKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWQpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmIXcoKSl9fWZpbmFsbHl7bT0hMSxlPWIsbnVsbCE9PWQ/cCgpOm49ITEsdigpfX1cbnZhciB4PURhdGUseT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjYW5jZWxBbmltYXRpb25GcmFtZT9jYW5jZWxBbmltYXRpb25GcmFtZTp2b2lkIDAsQyxEO2Z1bmN0aW9uIEUoYSl7Qz1BKGZ1bmN0aW9uKGIpe3ooRCk7YShiKX0pO0Q9eShmdW5jdGlvbigpe0IoQyk7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sMTAwKX1cbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBGPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEYubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKX07dmFyIHIscSx3LEc9bnVsbDtcInVuZGVmaW5lZFwiIT09dHlwZW9mIHdpbmRvdz9HPXdpbmRvdzpcInVuZGVmaW5lZFwiIT09dHlwZW9mIGdsb2JhbCYmKEc9Z2xvYmFsKTtcbmlmKEcmJkcuX3NjaGVkTW9jayl7dmFyIEg9Ry5fc2NoZWRNb2NrO3I9SFswXTtxPUhbMV07dz1IWzJdO2V4cG9ydHMudW5zdGFibGVfbm93PUhbM119ZWxzZSBpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgST1udWxsLEo9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUkpdHJ5e0koYSl9ZmluYWxseXtJPW51bGx9fTtyPWZ1bmN0aW9uKGEpe251bGwhPT1JP3NldFRpbWVvdXQociwwLGEpOihJPWEsc2V0VGltZW91dChKLDAsITEpKX07cT1mdW5jdGlvbigpe0k9bnVsbH07dz1mdW5jdGlvbigpe3JldHVybiExfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIEImJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSk7dmFyIEs9bnVsbCxMPSExLE09LTEsTj0hMSxPPSExLFA9MCxSPTMzLFM9MzM7dz1mdW5jdGlvbigpe3JldHVybiBQPD1leHBvcnRzLnVuc3RhYmxlX25vdygpfTt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7TD0hMTt2YXIgYT1LLGI9TTtLPW51bGw7TT0tMTt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpLGY9ITE7aWYoMD49UC1jKWlmKC0xIT09YiYmYjw9YylmPSEwO2Vsc2V7Tnx8KE49ITAsRShWKSk7Sz1hO009YjtyZXR1cm59aWYobnVsbCE9PWEpe089ITA7dHJ5e2EoZil9ZmluYWxseXtPPSExfX19O1xudmFyIFY9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUspe0UoVik7dmFyIGI9YS1QK1M7YjxTJiZSPFM/KDg+YiYmKGI9OCksUz1iPFI/UjpiKTpSPWI7UD1hK1M7THx8KEw9ITAsVS5wb3N0TWVzc2FnZSh2b2lkIDApKX1lbHNlIE49ITF9O3I9ZnVuY3Rpb24oYSxiKXtLPWE7TT1iO098fDA+Yj9VLnBvc3RNZXNzYWdlKHZvaWQgMCk6Tnx8KE49ITAsRShWKSl9O3E9ZnVuY3Rpb24oKXtLPW51bGw7TD0hMTtNPS0xfX1leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtcbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9ZyxmPWs7Zz1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChnKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1nfXZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWMrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGcpe2Nhc2UgMTpiPWMrLTE7YnJlYWs7Y2FzZSAyOmI9YysyNTA7YnJlYWs7Y2FzZSA1OmI9YysxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWMrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1jKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6ZyxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09ZClkPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7Yz1udWxsO3ZhciBmPWQ7ZG97aWYoZi5leHBpcmF0aW9uVGltZT5iKXtjPWY7YnJlYWt9Zj1mLm5leHR9d2hpbGUoZiE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9YSxwKCkpO1xuYj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWE7YS5uZXh0PWM7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpZD1udWxsO2Vsc2V7YT09PWQmJihkPWIpO3ZhciBjPWEucHJldmlvdXM7Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1nO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2c9YyxrPWYsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gZ307XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWUmJihudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWQmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBkfTtcbiIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gc3RyID0+IGVuY29kZVVSSUNvbXBvbmVudChzdHIpLnJlcGxhY2UoL1shJygpKl0vZywgeCA9PiBgJSR7eC5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfWApO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRva2VuID0gJyVbYS1mMC05XXsyfSc7XG52YXIgc2luZ2xlTWF0Y2hlciA9IG5ldyBSZWdFeHAodG9rZW4sICdnaScpO1xudmFyIG11bHRpTWF0Y2hlciA9IG5ldyBSZWdFeHAoJygnICsgdG9rZW4gKyAnKSsnLCAnZ2knKTtcblxuZnVuY3Rpb24gZGVjb2RlQ29tcG9uZW50cyhjb21wb25lbnRzLCBzcGxpdCkge1xuXHR0cnkge1xuXHRcdC8vIFRyeSB0byBkZWNvZGUgdGhlIGVudGlyZSBzdHJpbmcgZmlyc3Rcblx0XHRyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGNvbXBvbmVudHMuam9pbignJykpO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBEbyBub3RoaW5nXG5cdH1cblxuXHRpZiAoY29tcG9uZW50cy5sZW5ndGggPT09IDEpIHtcblx0XHRyZXR1cm4gY29tcG9uZW50cztcblx0fVxuXG5cdHNwbGl0ID0gc3BsaXQgfHwgMTtcblxuXHQvLyBTcGxpdCB0aGUgYXJyYXkgaW4gMiBwYXJ0c1xuXHR2YXIgbGVmdCA9IGNvbXBvbmVudHMuc2xpY2UoMCwgc3BsaXQpO1xuXHR2YXIgcmlnaHQgPSBjb21wb25lbnRzLnNsaWNlKHNwbGl0KTtcblxuXHRyZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5jYWxsKFtdLCBkZWNvZGVDb21wb25lbnRzKGxlZnQpLCBkZWNvZGVDb21wb25lbnRzKHJpZ2h0KSk7XG59XG5cbmZ1bmN0aW9uIGRlY29kZShpbnB1dCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoaW5wdXQpO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHR2YXIgdG9rZW5zID0gaW5wdXQubWF0Y2goc2luZ2xlTWF0Y2hlcik7XG5cblx0XHRmb3IgKHZhciBpID0gMTsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aW5wdXQgPSBkZWNvZGVDb21wb25lbnRzKHRva2VucywgaSkuam9pbignJyk7XG5cblx0XHRcdHRva2VucyA9IGlucHV0Lm1hdGNoKHNpbmdsZU1hdGNoZXIpO1xuXHRcdH1cblxuXHRcdHJldHVybiBpbnB1dDtcblx0fVxufVxuXG5mdW5jdGlvbiBjdXN0b21EZWNvZGVVUklDb21wb25lbnQoaW5wdXQpIHtcblx0Ly8gS2VlcCB0cmFjayBvZiBhbGwgdGhlIHJlcGxhY2VtZW50cyBhbmQgcHJlZmlsbCB0aGUgbWFwIHdpdGggdGhlIGBCT01gXG5cdHZhciByZXBsYWNlTWFwID0ge1xuXHRcdCclRkUlRkYnOiAnXFx1RkZGRFxcdUZGRkQnLFxuXHRcdCclRkYlRkUnOiAnXFx1RkZGRFxcdUZGRkQnXG5cdH07XG5cblx0dmFyIG1hdGNoID0gbXVsdGlNYXRjaGVyLmV4ZWMoaW5wdXQpO1xuXHR3aGlsZSAobWF0Y2gpIHtcblx0XHR0cnkge1xuXHRcdFx0Ly8gRGVjb2RlIGFzIGJpZyBjaHVua3MgYXMgcG9zc2libGVcblx0XHRcdHJlcGxhY2VNYXBbbWF0Y2hbMF1dID0gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzBdKTtcblx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdHZhciByZXN1bHQgPSBkZWNvZGUobWF0Y2hbMF0pO1xuXG5cdFx0XHRpZiAocmVzdWx0ICE9PSBtYXRjaFswXSkge1xuXHRcdFx0XHRyZXBsYWNlTWFwW21hdGNoWzBdXSA9IHJlc3VsdDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRtYXRjaCA9IG11bHRpTWF0Y2hlci5leGVjKGlucHV0KTtcblx0fVxuXG5cdC8vIEFkZCBgJUMyYCBhdCB0aGUgZW5kIG9mIHRoZSBtYXAgdG8gbWFrZSBzdXJlIGl0IGRvZXMgbm90IHJlcGxhY2UgdGhlIGNvbWJpbmF0b3IgYmVmb3JlIGV2ZXJ5dGhpbmcgZWxzZVxuXHRyZXBsYWNlTWFwWyclQzInXSA9ICdcXHVGRkZEJztcblxuXHR2YXIgZW50cmllcyA9IE9iamVjdC5rZXlzKHJlcGxhY2VNYXApO1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgZW50cmllcy5sZW5ndGg7IGkrKykge1xuXHRcdC8vIFJlcGxhY2UgYWxsIGRlY29kZWQgY29tcG9uZW50c1xuXHRcdHZhciBrZXkgPSBlbnRyaWVzW2ldO1xuXHRcdGlucHV0ID0gaW5wdXQucmVwbGFjZShuZXcgUmVnRXhwKGtleSwgJ2cnKSwgcmVwbGFjZU1hcFtrZXldKTtcblx0fVxuXG5cdHJldHVybiBpbnB1dDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZW5jb2RlZFVSSSkge1xuXHRpZiAodHlwZW9mIGVuY29kZWRVUkkgIT09ICdzdHJpbmcnKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYGVuY29kZWRVUklgIHRvIGJlIG9mIHR5cGUgYHN0cmluZ2AsIGdvdCBgJyArIHR5cGVvZiBlbmNvZGVkVVJJICsgJ2AnKTtcblx0fVxuXG5cdHRyeSB7XG5cdFx0ZW5jb2RlZFVSSSA9IGVuY29kZWRVUkkucmVwbGFjZSgvXFwrL2csICcgJyk7XG5cblx0XHQvLyBUcnkgdGhlIGJ1aWx0IGluIGRlY29kZXIgZmlyc3Rcblx0XHRyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVuY29kZWRVUkkpO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBGYWxsYmFjayB0byBhIG1vcmUgYWR2YW5jZWQgZGVjb2RlclxuXHRcdHJldHVybiBjdXN0b21EZWNvZGVVUklDb21wb25lbnQoZW5jb2RlZFVSSSk7XG5cdH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gKHN0cmluZywgc2VwYXJhdG9yKSA9PiB7XG5cdGlmICghKHR5cGVvZiBzdHJpbmcgPT09ICdzdHJpbmcnICYmIHR5cGVvZiBzZXBhcmF0b3IgPT09ICdzdHJpbmcnKSkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIHRoZSBhcmd1bWVudHMgdG8gYmUgb2YgdHlwZSBgc3RyaW5nYCcpO1xuXHR9XG5cblx0aWYgKHNlcGFyYXRvciA9PT0gJycpIHtcblx0XHRyZXR1cm4gW3N0cmluZ107XG5cdH1cblxuXHRjb25zdCBzZXBhcmF0b3JJbmRleCA9IHN0cmluZy5pbmRleE9mKHNlcGFyYXRvcik7XG5cblx0aWYgKHNlcGFyYXRvckluZGV4ID09PSAtMSkge1xuXHRcdHJldHVybiBbc3RyaW5nXTtcblx0fVxuXG5cdHJldHVybiBbXG5cdFx0c3RyaW5nLnNsaWNlKDAsIHNlcGFyYXRvckluZGV4KSxcblx0XHRzdHJpbmcuc2xpY2Uoc2VwYXJhdG9ySW5kZXggKyBzZXBhcmF0b3IubGVuZ3RoKVxuXHRdO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIF9fREVWX18gPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nO1xuXG52YXIgd2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChfX0RFVl9fKSB7XG4gIHZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAxID8gbGVuIC0gMSA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDE7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMV0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KTtcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHByaW50V2FybmluZy5hcHBseShudWxsLCBbZm9ybWF0XS5jb25jYXQoYXJncykpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO1xudmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxyPWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTY7ZnVuY3Rpb24gdChhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIHI6Y2FzZSBxOmNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIHYoYSl7cmV0dXJuIHQoYSk9PT1tfWV4cG9ydHMudHlwZU9mPXQ7ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO1xuZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT1yO2V4cG9ydHMuTWVtbz1xO2V4cG9ydHMuUG9ydGFsPWQ7ZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PXF8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW4pfTtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpfHx0KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPXY7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWt9O1xuZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cn07ZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1xfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1mfTtcbmV4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXB9O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLnVuY29udHJvbGxlZFByb3BUeXBlcyA9IHVuY29udHJvbGxlZFByb3BUeXBlcztcbmV4cG9ydHMuaXNQcm9wID0gaXNQcm9wO1xuZXhwb3J0cy5kZWZhdWx0S2V5ID0gZGVmYXVsdEtleTtcbmV4cG9ydHMuY2FuQWNjZXB0UmVmID0gY2FuQWNjZXB0UmVmO1xuXG52YXIgX2ludmFyaWFudCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImludmFyaWFudFwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBub29wID0gZnVuY3Rpb24gbm9vcCgpIHt9O1xuXG5mdW5jdGlvbiByZWFkT25seVByb3BUeXBlKGhhbmRsZXIsIG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChwcm9wcywgcHJvcE5hbWUpIHtcbiAgICBpZiAocHJvcHNbcHJvcE5hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmICghcHJvcHNbaGFuZGxlcl0pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIllvdSBoYXZlIHByb3ZpZGVkIGEgYFwiICsgcHJvcE5hbWUgKyBcImAgcHJvcCB0byBgXCIgKyBuYW1lICsgXCJgIFwiICsgKFwid2l0aG91dCBhbiBgXCIgKyBoYW5kbGVyICsgXCJgIGhhbmRsZXIgcHJvcC4gVGhpcyB3aWxsIHJlbmRlciBhIHJlYWQtb25seSBmaWVsZC4gXCIpICsgKFwiSWYgdGhlIGZpZWxkIHNob3VsZCBiZSBtdXRhYmxlIHVzZSBgXCIgKyBkZWZhdWx0S2V5KHByb3BOYW1lKSArIFwiYC4gXCIpICsgKFwiT3RoZXJ3aXNlLCBzZXQgYFwiICsgaGFuZGxlciArIFwiYC5cIikpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gdW5jb250cm9sbGVkUHJvcFR5cGVzKGNvbnRyb2xsZWRWYWx1ZXMsIGRpc3BsYXlOYW1lKSB7XG4gIHZhciBwcm9wVHlwZXMgPSB7fTtcbiAgT2JqZWN0LmtleXMoY29udHJvbGxlZFZhbHVlcykuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICAgIC8vIGFkZCBkZWZhdWx0IHByb3BUeXBlcyBmb3IgZm9sa3MgdGhhdCB1c2UgcnVudGltZSBjaGVja3NcbiAgICBwcm9wVHlwZXNbZGVmYXVsdEtleShwcm9wKV0gPSBub29wO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHZhciBoYW5kbGVyID0gY29udHJvbGxlZFZhbHVlc1twcm9wXTtcbiAgICAgICEodHlwZW9mIGhhbmRsZXIgPT09ICdzdHJpbmcnICYmIGhhbmRsZXIudHJpbSgpLmxlbmd0aCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyAoMCwgX2ludmFyaWFudC5kZWZhdWx0KShmYWxzZSwgJ1VuY29udHJvbGxhYmxlIC0gWyVzXTogdGhlIHByb3AgYCVzYCBuZWVkcyBhIHZhbGlkIGhhbmRsZXIga2V5IG5hbWUgaW4gb3JkZXIgdG8gbWFrZSBpdCB1bmNvbnRyb2xsYWJsZScsIGRpc3BsYXlOYW1lLCBwcm9wKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICBwcm9wVHlwZXNbcHJvcF0gPSByZWFkT25seVByb3BUeXBlKGhhbmRsZXIsIGRpc3BsYXlOYW1lKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcHJvcFR5cGVzO1xufVxuXG5mdW5jdGlvbiBpc1Byb3AocHJvcHMsIHByb3ApIHtcbiAgcmV0dXJuIHByb3BzW3Byb3BdICE9PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRLZXkoa2V5KSB7XG4gIHJldHVybiAnZGVmYXVsdCcgKyBrZXkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBrZXkuc3Vic3RyKDEpO1xufVxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cblxuZnVuY3Rpb24gY2FuQWNjZXB0UmVmKGNvbXBvbmVudCkge1xuICByZXR1cm4gISFjb21wb25lbnQgJiYgKHR5cGVvZiBjb21wb25lbnQgIT09ICdmdW5jdGlvbicgfHwgY29tcG9uZW50LnByb3RvdHlwZSAmJiBjb21wb25lbnQucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQpO1xufSIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBgUmVmYCB3aG9zZSB2YWx1ZSBpcyB1cGRhdGVkIGluIGFuIGVmZmVjdCwgZW5zdXJpbmcgdGhlIG1vc3QgcmVjZW50XG4gKiB2YWx1ZSBpcyB0aGUgb25lIHJlbmRlcmVkIHdpdGguIEdlbmVyYWxseSBvbmx5IHJlcXVpcmVkIGZvciBDb25jdXJyZW50IG1vZGUgdXNhZ2VcbiAqIHdoZXJlIHByZXZpb3VzIHdvcmsgaW4gYHJlbmRlcigpYCBtYXkgYmUgZGlzY2FyZGVkIGJlZm9yIGJlaW5nIHVzZWQuXG4gKlxuICogVGhpcyBpcyBzYWZlIHRvIGFjY2VzcyBpbiBhbiBldmVudCBoYW5kbGVyLlxuICpcbiAqIEBwYXJhbSB2YWx1ZSBUaGUgYFJlZmAgdmFsdWVcbiAqL1xuZnVuY3Rpb24gdXNlQ29tbWl0dGVkUmVmKHZhbHVlKSB7XG4gIHZhciByZWYgPSAoMCwgX3JlYWN0LnVzZVJlZikodmFsdWUpO1xuICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkge1xuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gIH0sIFt2YWx1ZV0pO1xuICByZXR1cm4gcmVmO1xufVxuXG52YXIgX2RlZmF1bHQgPSB1c2VDb21taXR0ZWRSZWY7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBoeXBoZW5hdGVTdHlsZU5hbWU7XG5cbnZhciBfaHlwaGVuYXRlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9oeXBoZW5hdGVcIikpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvMmFlYjhhMmE2YmViMDA2MTdhNDIxN2Y3ZjgyODQ5MjRmYTJhZDgxOS9zcmMvdmVuZG9yL2NvcmUvaHlwaGVuYXRlU3R5bGVOYW1lLmpzXG4gKi9cbnZhciBtc1BhdHRlcm4gPSAvXm1zLS87XG5cbmZ1bmN0aW9uIGh5cGhlbmF0ZVN0eWxlTmFtZShzdHJpbmcpIHtcbiAgcmV0dXJuICgwLCBfaHlwaGVuYXRlLmRlZmF1bHQpKHN0cmluZykucmVwbGFjZShtc1BhdHRlcm4sICctbXMtJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBoeXBoZW5hdGU7XG52YXIgclVwcGVyID0gLyhbQS1aXSkvZztcblxuZnVuY3Rpb24gaHlwaGVuYXRlKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoclVwcGVyLCAnLSQxJykudG9Mb3dlckNhc2UoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZ2V0Q29tcHV0ZWRTdHlsZTtcblxudmFyIF9jYW1lbGl6ZVN0eWxlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vdXRpbC9jYW1lbGl6ZVN0eWxlXCIpKTtcblxudmFyIHJwb3NpdGlvbiA9IC9eKHRvcHxyaWdodHxib3R0b218bGVmdCkkLztcbnZhciBybnVtbm9ucHggPSAvXihbKy1dPyg/OlxcZCpcXC58KVxcZCsoPzpbZUVdWystXT9cXGQrfCkpKD8hcHgpW2EteiVdKyQvaTtcblxuZnVuY3Rpb24gX2dldENvbXB1dGVkU3R5bGUobm9kZSkge1xuICBpZiAoIW5vZGUpIHRocm93IG5ldyBUeXBlRXJyb3IoJ05vIEVsZW1lbnQgcGFzc2VkIHRvIGBnZXRDb21wdXRlZFN0eWxlKClgJyk7XG4gIHZhciBkb2MgPSBub2RlLm93bmVyRG9jdW1lbnQ7XG4gIHJldHVybiAnZGVmYXVsdFZpZXcnIGluIGRvYyA/IGRvYy5kZWZhdWx0Vmlldy5vcGVuZXIgPyBub2RlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBudWxsKSA6IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKG5vZGUsIG51bGwpIDoge1xuICAgIC8vaWUgOCBcIm1hZ2ljXCIgZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnkvYmxvYi8xLjExLXN0YWJsZS9zcmMvY3NzL2N1ckNTUy5qcyNMNzJcbiAgICBnZXRQcm9wZXJ0eVZhbHVlOiBmdW5jdGlvbiBnZXRQcm9wZXJ0eVZhbHVlKHByb3ApIHtcbiAgICAgIHZhciBzdHlsZSA9IG5vZGUuc3R5bGU7XG4gICAgICBwcm9wID0gKDAsIF9jYW1lbGl6ZVN0eWxlLmRlZmF1bHQpKHByb3ApO1xuICAgICAgaWYgKHByb3AgPT0gJ2Zsb2F0JykgcHJvcCA9ICdzdHlsZUZsb2F0JztcbiAgICAgIHZhciBjdXJyZW50ID0gbm9kZS5jdXJyZW50U3R5bGVbcHJvcF0gfHwgbnVsbDtcbiAgICAgIGlmIChjdXJyZW50ID09IG51bGwgJiYgc3R5bGUgJiYgc3R5bGVbcHJvcF0pIGN1cnJlbnQgPSBzdHlsZVtwcm9wXTtcblxuICAgICAgaWYgKHJudW1ub25weC50ZXN0KGN1cnJlbnQpICYmICFycG9zaXRpb24udGVzdChwcm9wKSkge1xuICAgICAgICAvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzXG4gICAgICAgIHZhciBsZWZ0ID0gc3R5bGUubGVmdDtcbiAgICAgICAgdmFyIHJ1blN0eWxlID0gbm9kZS5ydW50aW1lU3R5bGU7XG4gICAgICAgIHZhciByc0xlZnQgPSBydW5TdHlsZSAmJiBydW5TdHlsZS5sZWZ0OyAvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0XG5cbiAgICAgICAgaWYgKHJzTGVmdCkgcnVuU3R5bGUubGVmdCA9IG5vZGUuY3VycmVudFN0eWxlLmxlZnQ7XG4gICAgICAgIHN0eWxlLmxlZnQgPSBwcm9wID09PSAnZm9udFNpemUnID8gJzFlbScgOiBjdXJyZW50O1xuICAgICAgICBjdXJyZW50ID0gc3R5bGUucGl4ZWxMZWZ0ICsgJ3B4JzsgLy8gUmV2ZXJ0IHRoZSBjaGFuZ2VkIHZhbHVlc1xuXG4gICAgICAgIHN0eWxlLmxlZnQgPSBsZWZ0O1xuICAgICAgICBpZiAocnNMZWZ0KSBydW5TdHlsZS5sZWZ0ID0gcnNMZWZ0O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY3VycmVudDtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSByZW1vdmVTdHlsZTtcblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGUobm9kZSwga2V5KSB7XG4gIHJldHVybiAncmVtb3ZlUHJvcGVydHknIGluIG5vZGUuc3R5bGUgPyBub2RlLnN0eWxlLnJlbW92ZVByb3BlcnR5KGtleSkgOiBub2RlLnN0eWxlLnJlbW92ZUF0dHJpYnV0ZShrZXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX2RlZmF1bHQgPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBpc1RyYW5zZm9ybTtcbnZhciBzdXBwb3J0ZWRUcmFuc2Zvcm1zID0gL14oKHRyYW5zbGF0ZXxyb3RhdGV8c2NhbGUpKFh8WXxafDNkKT98bWF0cml4KDNkKT98cGVyc3BlY3RpdmV8c2tldyhYfFkpPykkL2k7XG5cbmZ1bmN0aW9uIGlzVHJhbnNmb3JtKHByb3BlcnR5KSB7XG4gIHJldHVybiAhIShwcm9wZXJ0eSAmJiBzdXBwb3J0ZWRUcmFuc2Zvcm1zLnRlc3QocHJvcGVydHkpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfZ3VkID0gcmVxdWlyZSgnZ3VkJyk7XG5cbnZhciBfZ3VkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2d1ZCk7XG5cbnZhciBfd2FybmluZyA9IHJlcXVpcmUoJ2ZianMvbGliL3dhcm5pbmcnKTtcblxudmFyIF93YXJuaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dhcm5pbmcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xuXG4vLyBJbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbC5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW1pdHRlcih2YWx1ZSkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24gb24oaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24gb2ZmKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuWzBdIDogY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWN0Q29udGV4dChkZWZhdWx0VmFsdWUsIGNhbGN1bGF0ZUNoYW5nZWRCaXRzKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcblxuICB2YXIgY29udGV4dFByb3AgPSAnX19jcmVhdGUtcmVhY3QtY29udGV4dC0nICsgKDAsIF9ndWQyLmRlZmF1bHQpKCkgKyAnX18nO1xuXG4gIHZhciBQcm92aWRlciA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFByb3ZpZGVyKTtcblxuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwuYXBwbHkoX0NvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgICB9XG5cbiAgICBQcm92aWRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xuICAgIH07XG5cbiAgICBQcm92aWRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy52YWx1ZSAhPT0gbmV4dFByb3BzLnZhbHVlKSB7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIGNoYW5nZWRCaXRzID0gdm9pZCAwO1xuXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSAwOyAvLyBObyBjaGFuZ2VcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IHR5cGVvZiBjYWxjdWxhdGVDaGFuZ2VkQml0cyA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGN1bGF0ZUNoYW5nZWRCaXRzKG9sZFZhbHVlLCBuZXdWYWx1ZSkgOiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQ7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICgwLCBfd2FybmluZzIuZGVmYXVsdCkoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICVzJywgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XG5cbiAgICAgICAgICBpZiAoY2hhbmdlZEJpdHMgIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFByb3ZpZGVyO1xuICB9KF9yZWFjdC5Db21wb25lbnQpO1xuXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgICBfaW5oZXJpdHMoQ29uc3VtZXIsIF9Db21wb25lbnQyKTtcblxuICAgIGZ1bmN0aW9uIENvbnN1bWVyKCkge1xuICAgICAgdmFyIF90ZW1wMiwgX3RoaXMyLCBfcmV0MjtcblxuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbnN1bWVyKTtcblxuICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3JldDIgPSAoX3RlbXAyID0gKF90aGlzMiA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQyLmNhbGwuYXBwbHkoX0NvbXBvbmVudDIsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMyKSwgX3RoaXMyLnN0YXRlID0ge1xuICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgIH0sIF90aGlzMi5vblVwZGF0ZSA9IGZ1bmN0aW9uIChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgICAgdmFyIG9ic2VydmVkQml0cyA9IF90aGlzMi5vYnNlcnZlZEJpdHMgfCAwO1xuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7IHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKSB9KTtcbiAgICAgICAgfVxuICAgICAgfSwgX3RlbXAyKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMyLCBfcmV0Mik7XG4gICAgfVxuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG5cbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIC8vIFN1YnNjcmliZSB0byBhbGwgY2hhbmdlcyBieSBkZWZhdWx0XG4gICAgICA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IHRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO1xuXG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCAvLyBTdWJzY3JpYmUgdG8gYWxsIGNoYW5nZXMgYnkgZGVmYXVsdFxuICAgICAgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0uZ2V0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIENvbnN1bWVyO1xuICB9KF9yZWFjdC5Db21wb25lbnQpO1xuXG4gIENvbnN1bWVyLmNvbnRleHRUeXBlcyA9IChfQ29uc3VtZXIkY29udGV4dFR5cGUgPSB7fSwgX0NvbnN1bWVyJGNvbnRleHRUeXBlW2NvbnRleHRQcm9wXSA9IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuXG5cbiAgcmV0dXJuIHtcbiAgICBQcm92aWRlcjogUHJvdmlkZXIsXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXG4gIH07XG59XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGNyZWF0ZVJlYWN0Q29udGV4dDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIi8vIEBmbG93XG4ndXNlIHN0cmljdCc7XG5cbnZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gZ2xvYmFsW2tleV0gPSAoZ2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCcuL2VtcHR5RnVuY3Rpb24nKTtcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBlbXB0eUZ1bmN0aW9uO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICsgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgIH0pO1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uIHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArICdtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5pbmRleE9mKCdGYWlsZWQgQ29tcG9zaXRlIHByb3BUeXBlOiAnKSA9PT0gMCkge1xuICAgICAgcmV0dXJuOyAvLyBJZ25vcmUgQ29tcG9zaXRlQ29tcG9uZW50IHByb3B0eXBlIGNoZWNrLlxuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuMiA+IDIgPyBfbGVuMiAtIDIgOiAwKSwgX2tleTIgPSAyOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTIgLSAyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHByaW50V2FybmluZy5hcHBseSh1bmRlZmluZWQsIFtmb3JtYXRdLmNvbmNhdChhcmdzKSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxuZnVuY3Rpb24gbWFrZUVtcHR5RnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGFyZztcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGFjY2VwdHMgYW5kIGRpc2NhcmRzIGlucHV0czsgaXQgaGFzIG5vIHNpZGUgZWZmZWN0cy4gVGhpcyBpc1xuICogcHJpbWFyaWx5IHVzZWZ1bCBpZGlvbWF0aWNhbGx5IGZvciBvdmVycmlkYWJsZSBmdW5jdGlvbiBlbmRwb2ludHMgd2hpY2hcbiAqIGFsd2F5cyBuZWVkIHRvIGJlIGNhbGxhYmxlLCBzaW5jZSBKUyBsYWNrcyBhIG51bGwtY2FsbCBpZGlvbSBhbGEgQ29jb2EuXG4gKi9cbnZhciBlbXB0eUZ1bmN0aW9uID0gZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9O1xuXG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zID0gbWFrZUVtcHR5RnVuY3Rpb247XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zRmFsc2UgPSBtYWtlRW1wdHlGdW5jdGlvbihmYWxzZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVHJ1ZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKHRydWUpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGwgPSBtYWtlRW1wdHlGdW5jdGlvbihudWxsKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUaGlzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcztcbn07XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zQXJndW1lbnQgPSBmdW5jdGlvbiAoYXJnKSB7XG4gIHJldHVybiBhcmc7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5RnVuY3Rpb247IiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjJcbihmdW5jdGlvbigpIHtcbiAgdmFyIGdldE5hbm9TZWNvbmRzLCBocnRpbWUsIGxvYWRUaW1lLCBtb2R1bGVMb2FkVGltZSwgbm9kZUxvYWRUaW1lLCB1cFRpbWU7XG5cbiAgaWYgKCh0eXBlb2YgcGVyZm9ybWFuY2UgIT09IFwidW5kZWZpbmVkXCIgJiYgcGVyZm9ybWFuY2UgIT09IG51bGwpICYmIHBlcmZvcm1hbmNlLm5vdykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgfTtcbiAgfSBlbHNlIGlmICgodHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiYgcHJvY2VzcyAhPT0gbnVsbCkgJiYgcHJvY2Vzcy5ocnRpbWUpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIChnZXROYW5vU2Vjb25kcygpIC0gbm9kZUxvYWRUaW1lKSAvIDFlNjtcbiAgICB9O1xuICAgIGhydGltZSA9IHByb2Nlc3MuaHJ0aW1lO1xuICAgIGdldE5hbm9TZWNvbmRzID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaHI7XG4gICAgICBociA9IGhydGltZSgpO1xuICAgICAgcmV0dXJuIGhyWzBdICogMWU5ICsgaHJbMV07XG4gICAgfTtcbiAgICBtb2R1bGVMb2FkVGltZSA9IGdldE5hbm9TZWNvbmRzKCk7XG4gICAgdXBUaW1lID0gcHJvY2Vzcy51cHRpbWUoKSAqIDFlOTtcbiAgICBub2RlTG9hZFRpbWUgPSBtb2R1bGVMb2FkVGltZSAtIHVwVGltZTtcbiAgfSBlbHNlIGlmIChEYXRlLm5vdykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gRGF0ZS5ub3coKSAtIGxvYWRUaW1lO1xuICAgIH07XG4gICAgbG9hZFRpbWUgPSBEYXRlLm5vdygpO1xuICB9IGVsc2Uge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoKS5nZXRUaW1lKCkgLSBsb2FkVGltZTtcbiAgICB9O1xuICAgIGxvYWRUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gIH1cblxufSkuY2FsbCh0aGlzKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGVyZm9ybWFuY2Utbm93LmpzLm1hcFxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuYXhpb3MuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhheGlvcy5kZWZhdWx0cywgaW5zdGFuY2VDb25maWcpKTtcbn07XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIiwiLyohXG4gKiBEZXRlcm1pbmUgaWYgYW4gb2JqZWN0IGlzIGEgQnVmZmVyXG4gKlxuICogQGF1dGhvciAgIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQnVmZmVyIChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5jb25zdHJ1Y3RvciAhPSBudWxsICYmXG4gICAgdHlwZW9mIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnN0YW5jZUNvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBBeGlvcyhpbnN0YW5jZUNvbmZpZykge1xuICB0aGlzLmRlZmF1bHRzID0gaW5zdGFuY2VDb25maWc7XG4gIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgIHJlcXVlc3Q6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKSxcbiAgICByZXNwb25zZTogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpXG4gIH07XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHNwZWNpZmljIGZvciB0aGlzIHJlcXVlc3QgKG1lcmdlZCB3aXRoIHRoaXMuZGVmYXVsdHMpXG4gKi9cbkF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIC8vIEFsbG93IGZvciBheGlvcygnZXhhbXBsZS91cmwnWywgY29uZmlnXSkgYSBsYSBmZXRjaCBBUElcbiAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uZmlnID0gYXJndW1lbnRzWzFdIHx8IHt9O1xuICAgIGNvbmZpZy51cmwgPSBhcmd1bWVudHNbMF07XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICB9XG5cbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgY29uZmlnLm1ldGhvZCA9IGNvbmZpZy5tZXRob2QgPyBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCkgOiAnZ2V0JztcblxuICAvLyBIb29rIHVwIGludGVyY2VwdG9ycyBtaWRkbGV3YXJlXG4gIHZhciBjaGFpbiA9IFtkaXNwYXRjaFJlcXVlc3QsIHVuZGVmaW5lZF07XG4gIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGNvbmZpZyk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uIHVuc2hpZnRSZXF1ZXN0SW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4udW5zaGlmdChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaChmdW5jdGlvbiBwdXNoUmVzcG9uc2VJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi5wdXNoKGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB3aGlsZSAoY2hhaW4ubGVuZ3RoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihjaGFpbi5zaGlmdCgpLCBjaGFpbi5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuQXhpb3MucHJvdG90eXBlLmdldFVyaSA9IGZ1bmN0aW9uIGdldFVyaShjb25maWcpIHtcbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGNvbmZpZy51cmwsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKS5yZXBsYWNlKC9eXFw/LywgJycpO1xufTtcblxuLy8gUHJvdmlkZSBhbGlhc2VzIGZvciBzdXBwb3J0ZWQgcmVxdWVzdCBtZXRob2RzXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ29wdGlvbnMnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QodXRpbHMubWVyZ2UoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBkYXRhLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KHV0aWxzLm1lcmdlKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybCxcbiAgICAgIGRhdGE6IGRhdGFcbiAgICB9KSk7XG4gIH07XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBBeGlvcztcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWRcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciB0cmFuc2Zvcm1EYXRhID0gcmVxdWlyZSgnLi90cmFuc2Zvcm1EYXRhJyk7XG52YXIgaXNDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvaXNDYW5jZWwnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG52YXIgaXNBYnNvbHV0ZVVSTCA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc0Fic29sdXRlVVJMJyk7XG52YXIgY29tYmluZVVSTHMgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvY29tYmluZVVSTHMnKTtcblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5mdW5jdGlvbiB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZykge1xuICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgY29uZmlnLmNhbmNlbFRva2VuLnRocm93SWZSZXF1ZXN0ZWQoKTtcbiAgfVxufVxuXG4vKipcbiAqIERpc3BhdGNoIGEgcmVxdWVzdCB0byB0aGUgc2VydmVyIHVzaW5nIHRoZSBjb25maWd1cmVkIGFkYXB0ZXIuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHRoYXQgaXMgdG8gYmUgdXNlZCBmb3IgdGhlIHJlcXVlc3RcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBUaGUgUHJvbWlzZSB0byBiZSBmdWxmaWxsZWRcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBkaXNwYXRjaFJlcXVlc3QoY29uZmlnKSB7XG4gIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAvLyBTdXBwb3J0IGJhc2VVUkwgY29uZmlnXG4gIGlmIChjb25maWcuYmFzZVVSTCAmJiAhaXNBYnNvbHV0ZVVSTChjb25maWcudXJsKSkge1xuICAgIGNvbmZpZy51cmwgPSBjb21iaW5lVVJMcyhjb25maWcuYmFzZVVSTCwgY29uZmlnLnVybCk7XG4gIH1cblxuICAvLyBFbnN1cmUgaGVhZGVycyBleGlzdFxuICBjb25maWcuaGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzIHx8IHt9O1xuXG4gIC8vIFRyYW5zZm9ybSByZXF1ZXN0IGRhdGFcbiAgY29uZmlnLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgIGNvbmZpZy5kYXRhLFxuICAgIGNvbmZpZy5oZWFkZXJzLFxuICAgIGNvbmZpZy50cmFuc2Zvcm1SZXF1ZXN0XG4gICk7XG5cbiAgLy8gRmxhdHRlbiBoZWFkZXJzXG4gIGNvbmZpZy5oZWFkZXJzID0gdXRpbHMubWVyZ2UoXG4gICAgY29uZmlnLmhlYWRlcnMuY29tbW9uIHx8IHt9LFxuICAgIGNvbmZpZy5oZWFkZXJzW2NvbmZpZy5tZXRob2RdIHx8IHt9LFxuICAgIGNvbmZpZy5oZWFkZXJzIHx8IHt9XG4gICk7XG5cbiAgdXRpbHMuZm9yRWFjaChcbiAgICBbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCcsICdwb3N0JywgJ3B1dCcsICdwYXRjaCcsICdjb21tb24nXSxcbiAgICBmdW5jdGlvbiBjbGVhbkhlYWRlckNvbmZpZyhtZXRob2QpIHtcbiAgICAgIGRlbGV0ZSBjb25maWcuaGVhZGVyc1ttZXRob2RdO1xuICAgIH1cbiAgKTtcblxuICB2YXIgYWRhcHRlciA9IGNvbmZpZy5hZGFwdGVyIHx8IGRlZmF1bHRzLmFkYXB0ZXI7XG5cbiAgcmV0dXJuIGFkYXB0ZXIoY29uZmlnKS50aGVuKGZ1bmN0aW9uIG9uQWRhcHRlclJlc29sdXRpb24ocmVzcG9uc2UpIHtcbiAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgIHJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgcmVzcG9uc2UuZGF0YSxcbiAgICAgIHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2VcbiAgICApO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBmdW5jdGlvbiBvbkFkYXB0ZXJSZWplY3Rpb24ocmVhc29uKSB7XG4gICAgaWYgKCFpc0NhbmNlbChyZWFzb24pKSB7XG4gICAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgICBpZiAocmVhc29uICYmIHJlYXNvbi5yZXNwb25zZSkge1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEoXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlYXNvbik7XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aGUgZGF0YSBmb3IgYSByZXF1ZXN0IG9yIGEgcmVzcG9uc2VcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IGRhdGEgVGhlIGRhdGEgdG8gYmUgdHJhbnNmb3JtZWRcbiAqIEBwYXJhbSB7QXJyYXl9IGhlYWRlcnMgVGhlIGhlYWRlcnMgZm9yIHRoZSByZXF1ZXN0IG9yIHJlc3BvbnNlXG4gKiBAcGFyYW0ge0FycmF5fEZ1bmN0aW9ufSBmbnMgQSBzaW5nbGUgZnVuY3Rpb24gb3IgQXJyYXkgb2YgZnVuY3Rpb25zXG4gKiBAcmV0dXJucyB7Kn0gVGhlIHJlc3VsdGluZyB0cmFuc2Zvcm1lZCBkYXRhXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdHJhbnNmb3JtRGF0YShkYXRhLCBoZWFkZXJzLCBmbnMpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIHV0aWxzLmZvckVhY2goZm5zLCBmdW5jdGlvbiB0cmFuc2Zvcm0oZm4pIHtcbiAgICBkYXRhID0gZm4oZGF0YSwgaGVhZGVycyk7XG4gIH0pO1xuXG4gIHJldHVybiBkYXRhO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVcGRhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGNvbmZpZywgZXJyb3IgY29kZSwgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yIFRoZSBlcnJvciB0byB1cGRhdGUuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBlcnJvci5jb25maWcgPSBjb25maWc7XG4gIGlmIChjb2RlKSB7XG4gICAgZXJyb3IuY29kZSA9IGNvZGU7XG4gIH1cblxuICBlcnJvci5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgZXJyb3IucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgZXJyb3IuaXNBeGlvc0Vycm9yID0gdHJ1ZTtcblxuICBlcnJvci50b0pTT04gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLy8gU3RhbmRhcmRcbiAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgIC8vIE1pY3Jvc29mdFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICBudW1iZXI6IHRoaXMubnVtYmVyLFxuICAgICAgLy8gTW96aWxsYVxuICAgICAgZmlsZU5hbWU6IHRoaXMuZmlsZU5hbWUsXG4gICAgICBsaW5lTnVtYmVyOiB0aGlzLmxpbmVOdW1iZXIsXG4gICAgICBjb2x1bW5OdW1iZXI6IHRoaXMuY29sdW1uTnVtYmVyLFxuICAgICAgc3RhY2s6IHRoaXMuc3RhY2ssXG4gICAgICAvLyBBeGlvc1xuICAgICAgY29uZmlnOiB0aGlzLmNvbmZpZyxcbiAgICAgIGNvZGU6IHRoaXMuY29kZVxuICAgIH07XG4gIH07XG4gIHJldHVybiBlcnJvcjtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuLy8gSGVhZGVycyB3aG9zZSBkdXBsaWNhdGVzIGFyZSBpZ25vcmVkIGJ5IG5vZGVcbi8vIGMuZi4gaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9odHRwLmh0bWwjaHR0cF9tZXNzYWdlX2hlYWRlcnNcbnZhciBpZ25vcmVEdXBsaWNhdGVPZiA9IFtcbiAgJ2FnZScsICdhdXRob3JpemF0aW9uJywgJ2NvbnRlbnQtbGVuZ3RoJywgJ2NvbnRlbnQtdHlwZScsICdldGFnJyxcbiAgJ2V4cGlyZXMnLCAnZnJvbScsICdob3N0JywgJ2lmLW1vZGlmaWVkLXNpbmNlJywgJ2lmLXVubW9kaWZpZWQtc2luY2UnLFxuICAnbGFzdC1tb2RpZmllZCcsICdsb2NhdGlvbicsICdtYXgtZm9yd2FyZHMnLCAncHJveHktYXV0aG9yaXphdGlvbicsXG4gICdyZWZlcmVyJywgJ3JldHJ5LWFmdGVyJywgJ3VzZXItYWdlbnQnXG5dO1xuXG4vKipcbiAqIFBhcnNlIGhlYWRlcnMgaW50byBhbiBvYmplY3RcbiAqXG4gKiBgYGBcbiAqIERhdGU6IFdlZCwgMjcgQXVnIDIwMTQgMDg6NTg6NDkgR01UXG4gKiBDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cbiAqIENvbm5lY3Rpb246IGtlZXAtYWxpdmVcbiAqIFRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaGVhZGVycyBIZWFkZXJzIG5lZWRpbmcgdG8gYmUgcGFyc2VkXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBIZWFkZXJzIHBhcnNlZCBpbnRvIGFuIG9iamVjdFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHBhcnNlSGVhZGVycyhoZWFkZXJzKSB7XG4gIHZhciBwYXJzZWQgPSB7fTtcbiAgdmFyIGtleTtcbiAgdmFyIHZhbDtcbiAgdmFyIGk7XG5cbiAgaWYgKCFoZWFkZXJzKSB7IHJldHVybiBwYXJzZWQ7IH1cblxuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMuc3BsaXQoJ1xcbicpLCBmdW5jdGlvbiBwYXJzZXIobGluZSkge1xuICAgIGkgPSBsaW5lLmluZGV4T2YoJzonKTtcbiAgICBrZXkgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKDAsIGkpKS50b0xvd2VyQ2FzZSgpO1xuICAgIHZhbCA9IHV0aWxzLnRyaW0obGluZS5zdWJzdHIoaSArIDEpKTtcblxuICAgIGlmIChrZXkpIHtcbiAgICAgIGlmIChwYXJzZWRba2V5XSAmJiBpZ25vcmVEdXBsaWNhdGVPZi5pbmRleE9mKGtleSkgPj0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoa2V5ID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgICAgcGFyc2VkW2tleV0gPSAocGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSA6IFtdKS5jb25jYXQoW3ZhbF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyc2VkW2tleV0gPSBwYXJzZWRba2V5XSA/IHBhcnNlZFtrZXldICsgJywgJyArIHZhbCA6IHZhbDtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBwYXJzZWQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgaGF2ZSBmdWxsIHN1cHBvcnQgb2YgdGhlIEFQSXMgbmVlZGVkIHRvIHRlc3RcbiAgLy8gd2hldGhlciB0aGUgcmVxdWVzdCBVUkwgaXMgb2YgdGhlIHNhbWUgb3JpZ2luIGFzIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHZhciBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgIHZhciB1cmxQYXJzaW5nTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgIHZhciBvcmlnaW5VUkw7XG5cbiAgICAgIC8qKlxuICAgICogUGFyc2UgYSBVUkwgdG8gZGlzY292ZXIgaXQncyBjb21wb25lbnRzXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgVVJMIHRvIGJlIHBhcnNlZFxuICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAqL1xuICAgICAgZnVuY3Rpb24gcmVzb2x2ZVVSTCh1cmwpIHtcbiAgICAgICAgdmFyIGhyZWYgPSB1cmw7XG5cbiAgICAgICAgaWYgKG1zaWUpIHtcbiAgICAgICAgLy8gSUUgbmVlZHMgYXR0cmlidXRlIHNldCB0d2ljZSB0byBub3JtYWxpemUgcHJvcGVydGllc1xuICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuICAgICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgICB9XG5cbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG5cbiAgICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhyZWY6IHVybFBhcnNpbmdOb2RlLmhyZWYsXG4gICAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0OiB1cmxQYXJzaW5nTm9kZS5ob3N0LFxuICAgICAgICAgIHNlYXJjaDogdXJsUGFyc2luZ05vZGUuc2VhcmNoID8gdXJsUGFyc2luZ05vZGUuc2VhcmNoLnJlcGxhY2UoL15cXD8vLCAnJykgOiAnJyxcbiAgICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3RuYW1lOiB1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxcbiAgICAgICAgICBwb3J0OiB1cmxQYXJzaW5nTm9kZS5wb3J0LFxuICAgICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDpcbiAgICAgICAgICAgICcvJyArIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIG9yaWdpblVSTCA9IHJlc29sdmVVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuXG4gICAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4ocmVxdWVzdFVSTCkge1xuICAgICAgICB2YXIgcGFyc2VkID0gKHV0aWxzLmlzU3RyaW5nKHJlcXVlc3RVUkwpKSA/IHJlc29sdmVVUkwocmVxdWVzdFVSTCkgOiByZXF1ZXN0VVJMO1xuICAgICAgICByZXR1cm4gKHBhcnNlZC5wcm90b2NvbCA9PT0gb3JpZ2luVVJMLnByb3RvY29sICYmXG4gICAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnZzICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGRcXCtcXC1cXC5dKjopP1xcL1xcLy9pLnRlc3QodXJsKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvKyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWwobWVzc2FnZSk7XG4gICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICovXG5DYW5jZWxUb2tlbi5zb3VyY2UgPSBmdW5jdGlvbiBzb3VyY2UoKSB7XG4gIHZhciBjYW5jZWw7XG4gIHZhciB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgY2FuY2VsID0gYztcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdG9rZW46IHRva2VuLFxuICAgIGNhbmNlbDogY2FuY2VsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbFRva2VuO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFN5bnRhY3RpYyBzdWdhciBmb3IgaW52b2tpbmcgYSBmdW5jdGlvbiBhbmQgZXhwYW5kaW5nIGFuIGFycmF5IGZvciBhcmd1bWVudHMuXG4gKlxuICogQ29tbW9uIHVzZSBjYXNlIHdvdWxkIGJlIHRvIHVzZSBgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5YC5cbiAqXG4gKiAgYGBganNcbiAqICBmdW5jdGlvbiBmKHgsIHksIHopIHt9XG4gKiAgdmFyIGFyZ3MgPSBbMSwgMiwgM107XG4gKiAgZi5hcHBseShudWxsLCBhcmdzKTtcbiAqICBgYGBcbiAqXG4gKiBXaXRoIGBzcHJlYWRgIHRoaXMgZXhhbXBsZSBjYW4gYmUgcmUtd3JpdHRlbi5cbiAqXG4gKiAgYGBganNcbiAqICBzcHJlYWQoZnVuY3Rpb24oeCwgeSwgeikge30pKFsxLCAyLCAzXSk7XG4gKiAgYGBgXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzcHJlYWQoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoYXJyKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFycik7XG4gIH07XG59O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4ubGVzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5sZXNzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gSW1wb3J0c1xuZXhwb3J0cy5pKHJlcXVpcmUoXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIWJvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzc1wiKSwgXCJcIik7XG5cbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmhlYWRlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2QzZDtcXG59XFxuYm9keSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbn1cXG5oMSxcXG5oMixcXG5oMyxcXG5oNCB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5zdmcge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB0ZXh0LWluZGVudDogMDtcXG59XFxuLm1haW5fY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4OiAxO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGZsZXgtZmxvdzogY29sdW1uO1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG59XFxuLm5vUmVjb3JkcyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleDogMTtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmZvb3RlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgcGFkZGluZzogMTVweCAzMHB4O1xcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNiOWI5Yjk7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xcbn1cXG4uZm9vdGVyIC5idG4ge1xcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxufVxcblwiLCBcIlwiXSk7XG5cbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKiFcXG4gKiBCb290c3RyYXAgdjQuMy4xIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKVxcbiAqIENvcHlyaWdodCAyMDExLTIwMTkgVGhlIEJvb3RzdHJhcCBBdXRob3JzXFxuICogQ29weXJpZ2h0IDIwMTEtMjAxOSBUd2l0dGVyLCBJbmMuXFxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcXG4gKi86cm9vdHstLWJsdWU6IzAwN2JmZjstLWluZGlnbzojNjYxMGYyOy0tcHVycGxlOiM2ZjQyYzE7LS1waW5rOiNlODNlOGM7LS1yZWQ6I2RjMzU0NTstLW9yYW5nZTojZmQ3ZTE0Oy0teWVsbG93OiNmZmMxMDc7LS1ncmVlbjojMjhhNzQ1Oy0tdGVhbDojMjBjOTk3Oy0tY3lhbjojMTdhMmI4Oy0td2hpdGU6I2ZmZjstLWdyYXk6IzZjNzU3ZDstLWdyYXktZGFyazojMzQzYTQwOy0tcHJpbWFyeTojMDA3YmZmOy0tc2Vjb25kYXJ5OiM2Yzc1N2Q7LS1zdWNjZXNzOiMyOGE3NDU7LS1pbmZvOiMxN2EyYjg7LS13YXJuaW5nOiNmZmMxMDc7LS1kYW5nZXI6I2RjMzU0NTstLWxpZ2h0OiNmOGY5ZmE7LS1kYXJrOiMzNDNhNDA7LS1icmVha3BvaW50LXhzOjA7LS1icmVha3BvaW50LXNtOjU3NnB4Oy0tYnJlYWtwb2ludC1tZDo3NjhweDstLWJyZWFrcG9pbnQtbGc6OTkycHg7LS1icmVha3BvaW50LXhsOjEyMDBweDstLWZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6LWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsXFxcIlNlZ29lIFVJXFxcIixSb2JvdG8sXFxcIkhlbHZldGljYSBOZXVlXFxcIixBcmlhbCxcXFwiTm90byBTYW5zXFxcIixzYW5zLXNlcmlmLFxcXCJBcHBsZSBDb2xvciBFbW9qaVxcXCIsXFxcIlNlZ29lIFVJIEVtb2ppXFxcIixcXFwiU2Vnb2UgVUkgU3ltYm9sXFxcIixcXFwiTm90byBDb2xvciBFbW9qaVxcXCI7LS1mb250LWZhbWlseS1tb25vc3BhY2U6U0ZNb25vLVJlZ3VsYXIsTWVubG8sTW9uYWNvLENvbnNvbGFzLFxcXCJMaWJlcmF0aW9uIE1vbm9cXFwiLFxcXCJDb3VyaWVyIE5ld1xcXCIsbW9ub3NwYWNlfSosOjphZnRlciw6OmJlZm9yZXtib3gtc2l6aW5nOmJvcmRlci1ib3h9aHRtbHtmb250LWZhbWlseTpzYW5zLXNlcmlmO2xpbmUtaGVpZ2h0OjEuMTU7LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OjEwMCU7LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOnRyYW5zcGFyZW50fWFydGljbGUsYXNpZGUsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWFpbixuYXYsc2VjdGlvbntkaXNwbGF5OmJsb2NrfWJvZHl7bWFyZ2luOjA7Zm9udC1mYW1pbHk6LWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsXFxcIlNlZ29lIFVJXFxcIixSb2JvdG8sXFxcIkhlbHZldGljYSBOZXVlXFxcIixBcmlhbCxcXFwiTm90byBTYW5zXFxcIixzYW5zLXNlcmlmLFxcXCJBcHBsZSBDb2xvciBFbW9qaVxcXCIsXFxcIlNlZ29lIFVJIEVtb2ppXFxcIixcXFwiU2Vnb2UgVUkgU3ltYm9sXFxcIixcXFwiTm90byBDb2xvciBFbW9qaVxcXCI7Zm9udC1zaXplOjFyZW07Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0OjEuNTtjb2xvcjojMjEyNTI5O3RleHQtYWxpZ246bGVmdDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9W3RhYmluZGV4PVxcXCItMVxcXCJdOmZvY3Vze291dGxpbmU6MCFpbXBvcnRhbnR9aHJ7Ym94LXNpemluZzpjb250ZW50LWJveDtoZWlnaHQ6MDtvdmVyZmxvdzp2aXNpYmxlfWgxLGgyLGgzLGg0LGg1LGg2e21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOi41cmVtfXB7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MXJlbX1hYmJyW2RhdGEtb3JpZ2luYWwtdGl0bGVdLGFiYnJbdGl0bGVde3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZDt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZDtjdXJzb3I6aGVscDtib3JkZXItYm90dG9tOjA7LXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6bm9uZTt0ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6bm9uZX1hZGRyZXNze21hcmdpbi1ib3R0b206MXJlbTtmb250LXN0eWxlOm5vcm1hbDtsaW5lLWhlaWdodDppbmhlcml0fWRsLG9sLHVse21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOjFyZW19b2wgb2wsb2wgdWwsdWwgb2wsdWwgdWx7bWFyZ2luLWJvdHRvbTowfWR0e2ZvbnQtd2VpZ2h0OjcwMH1kZHttYXJnaW4tYm90dG9tOi41cmVtO21hcmdpbi1sZWZ0OjB9YmxvY2txdW90ZXttYXJnaW46MCAwIDFyZW19YixzdHJvbmd7Zm9udC13ZWlnaHQ6Ym9sZGVyfXNtYWxse2ZvbnQtc2l6ZTo4MCV9c3ViLHN1cHtwb3NpdGlvbjpyZWxhdGl2ZTtmb250LXNpemU6NzUlO2xpbmUtaGVpZ2h0OjA7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9c3Vie2JvdHRvbTotLjI1ZW19c3Vwe3RvcDotLjVlbX1he2NvbG9yOiMwMDdiZmY7dGV4dC1kZWNvcmF0aW9uOm5vbmU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH1hOmhvdmVye2NvbG9yOiMwMDU2YjM7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX1hOm5vdChbaHJlZl0pOm5vdChbdGFiaW5kZXhdKXtjb2xvcjppbmhlcml0O3RleHQtZGVjb3JhdGlvbjpub25lfWE6bm90KFtocmVmXSk6bm90KFt0YWJpbmRleF0pOmZvY3VzLGE6bm90KFtocmVmXSk6bm90KFt0YWJpbmRleF0pOmhvdmVye2NvbG9yOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9YTpub3QoW2hyZWZdKTpub3QoW3RhYmluZGV4XSk6Zm9jdXN7b3V0bGluZTowfWNvZGUsa2JkLHByZSxzYW1we2ZvbnQtZmFtaWx5OlNGTW9uby1SZWd1bGFyLE1lbmxvLE1vbmFjbyxDb25zb2xhcyxcXFwiTGliZXJhdGlvbiBNb25vXFxcIixcXFwiQ291cmllciBOZXdcXFwiLG1vbm9zcGFjZTtmb250LXNpemU6MWVtfXByZXttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbToxcmVtO292ZXJmbG93OmF1dG99ZmlndXJle21hcmdpbjowIDAgMXJlbX1pbWd7dmVydGljYWwtYWxpZ246bWlkZGxlO2JvcmRlci1zdHlsZTpub25lfXN2Z3tvdmVyZmxvdzpoaWRkZW47dmVydGljYWwtYWxpZ246bWlkZGxlfXRhYmxle2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZX1jYXB0aW9ue3BhZGRpbmctdG9wOi43NXJlbTtwYWRkaW5nLWJvdHRvbTouNzVyZW07Y29sb3I6IzZjNzU3ZDt0ZXh0LWFsaWduOmxlZnQ7Y2FwdGlvbi1zaWRlOmJvdHRvbX10aHt0ZXh0LWFsaWduOmluaGVyaXR9bGFiZWx7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWJvdHRvbTouNXJlbX1idXR0b257Ym9yZGVyLXJhZGl1czowfWJ1dHRvbjpmb2N1c3tvdXRsaW5lOjFweCBkb3R0ZWQ7b3V0bGluZTo1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3J9YnV0dG9uLGlucHV0LG9wdGdyb3VwLHNlbGVjdCx0ZXh0YXJlYXttYXJnaW46MDtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0O2xpbmUtaGVpZ2h0OmluaGVyaXR9YnV0dG9uLGlucHV0e292ZXJmbG93OnZpc2libGV9YnV0dG9uLHNlbGVjdHt0ZXh0LXRyYW5zZm9ybTpub25lfXNlbGVjdHt3b3JkLXdyYXA6bm9ybWFsfVt0eXBlPWJ1dHRvbl0sW3R5cGU9cmVzZXRdLFt0eXBlPXN1Ym1pdF0sYnV0dG9uey13ZWJraXQtYXBwZWFyYW5jZTpidXR0b259W3R5cGU9YnV0dG9uXTpub3QoOmRpc2FibGVkKSxbdHlwZT1yZXNldF06bm90KDpkaXNhYmxlZCksW3R5cGU9c3VibWl0XTpub3QoOmRpc2FibGVkKSxidXR0b246bm90KDpkaXNhYmxlZCl7Y3Vyc29yOnBvaW50ZXJ9W3R5cGU9YnV0dG9uXTo6LW1vei1mb2N1cy1pbm5lcixbdHlwZT1yZXNldF06Oi1tb3otZm9jdXMtaW5uZXIsW3R5cGU9c3VibWl0XTo6LW1vei1mb2N1cy1pbm5lcixidXR0b246Oi1tb3otZm9jdXMtaW5uZXJ7cGFkZGluZzowO2JvcmRlci1zdHlsZTpub25lfWlucHV0W3R5cGU9Y2hlY2tib3hdLGlucHV0W3R5cGU9cmFkaW9de2JveC1zaXppbmc6Ym9yZGVyLWJveDtwYWRkaW5nOjB9aW5wdXRbdHlwZT1kYXRlXSxpbnB1dFt0eXBlPWRhdGV0aW1lLWxvY2FsXSxpbnB1dFt0eXBlPW1vbnRoXSxpbnB1dFt0eXBlPXRpbWVdey13ZWJraXQtYXBwZWFyYW5jZTpsaXN0Ym94fXRleHRhcmVhe292ZXJmbG93OmF1dG87cmVzaXplOnZlcnRpY2FsfWZpZWxkc2V0e21pbi13aWR0aDowO3BhZGRpbmc6MDttYXJnaW46MDtib3JkZXI6MH1sZWdlbmR7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO21heC13aWR0aDoxMDAlO3BhZGRpbmc6MDttYXJnaW4tYm90dG9tOi41cmVtO2ZvbnQtc2l6ZToxLjVyZW07bGluZS1oZWlnaHQ6aW5oZXJpdDtjb2xvcjppbmhlcml0O3doaXRlLXNwYWNlOm5vcm1hbH1wcm9ncmVzc3t2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1bdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b257aGVpZ2h0OmF1dG99W3R5cGU9c2VhcmNoXXtvdXRsaW5lLW9mZnNldDotMnB4Oy13ZWJraXQtYXBwZWFyYW5jZTpub25lfVt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9Ojotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbntmb250OmluaGVyaXQ7LXdlYmtpdC1hcHBlYXJhbmNlOmJ1dHRvbn1vdXRwdXR7ZGlzcGxheTppbmxpbmUtYmxvY2t9c3VtbWFyeXtkaXNwbGF5Omxpc3QtaXRlbTtjdXJzb3I6cG9pbnRlcn10ZW1wbGF0ZXtkaXNwbGF5Om5vbmV9W2hpZGRlbl17ZGlzcGxheTpub25lIWltcG9ydGFudH0uaDEsLmgyLC5oMywuaDQsLmg1LC5oNixoMSxoMixoMyxoNCxoNSxoNnttYXJnaW4tYm90dG9tOi41cmVtO2ZvbnQtd2VpZ2h0OjUwMDtsaW5lLWhlaWdodDoxLjJ9LmgxLGgxe2ZvbnQtc2l6ZToyLjVyZW19LmgyLGgye2ZvbnQtc2l6ZToycmVtfS5oMyxoM3tmb250LXNpemU6MS43NXJlbX0uaDQsaDR7Zm9udC1zaXplOjEuNXJlbX0uaDUsaDV7Zm9udC1zaXplOjEuMjVyZW19Lmg2LGg2e2ZvbnQtc2l6ZToxcmVtfS5sZWFke2ZvbnQtc2l6ZToxLjI1cmVtO2ZvbnQtd2VpZ2h0OjMwMH0uZGlzcGxheS0xe2ZvbnQtc2l6ZTo2cmVtO2ZvbnQtd2VpZ2h0OjMwMDtsaW5lLWhlaWdodDoxLjJ9LmRpc3BsYXktMntmb250LXNpemU6NS41cmVtO2ZvbnQtd2VpZ2h0OjMwMDtsaW5lLWhlaWdodDoxLjJ9LmRpc3BsYXktM3tmb250LXNpemU6NC41cmVtO2ZvbnQtd2VpZ2h0OjMwMDtsaW5lLWhlaWdodDoxLjJ9LmRpc3BsYXktNHtmb250LXNpemU6My41cmVtO2ZvbnQtd2VpZ2h0OjMwMDtsaW5lLWhlaWdodDoxLjJ9aHJ7bWFyZ2luLXRvcDoxcmVtO21hcmdpbi1ib3R0b206MXJlbTtib3JkZXI6MDtib3JkZXItdG9wOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xKX0uc21hbGwsc21hbGx7Zm9udC1zaXplOjgwJTtmb250LXdlaWdodDo0MDB9Lm1hcmssbWFya3twYWRkaW5nOi4yZW07YmFja2dyb3VuZC1jb2xvcjojZmNmOGUzfS5saXN0LXVuc3R5bGVke3BhZGRpbmctbGVmdDowO2xpc3Qtc3R5bGU6bm9uZX0ubGlzdC1pbmxpbmV7cGFkZGluZy1sZWZ0OjA7bGlzdC1zdHlsZTpub25lfS5saXN0LWlubGluZS1pdGVte2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5saXN0LWlubGluZS1pdGVtOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLXJpZ2h0Oi41cmVtfS5pbml0aWFsaXNte2ZvbnQtc2l6ZTo5MCU7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlfS5ibG9ja3F1b3Rle21hcmdpbi1ib3R0b206MXJlbTtmb250LXNpemU6MS4yNXJlbX0uYmxvY2txdW90ZS1mb290ZXJ7ZGlzcGxheTpibG9jaztmb250LXNpemU6ODAlO2NvbG9yOiM2Yzc1N2R9LmJsb2NrcXVvdGUtZm9vdGVyOjpiZWZvcmV7Y29udGVudDpcXFwiXFxcXDIwMTRcXFxcMDBBMFxcXCJ9LmltZy1mbHVpZHttYXgtd2lkdGg6MTAwJTtoZWlnaHQ6YXV0b30uaW1nLXRodW1ibmFpbHtwYWRkaW5nOi4yNXJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyOjFweCBzb2xpZCAjZGVlMmU2O2JvcmRlci1yYWRpdXM6LjI1cmVtO21heC13aWR0aDoxMDAlO2hlaWdodDphdXRvfS5maWd1cmV7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmZpZ3VyZS1pbWd7bWFyZ2luLWJvdHRvbTouNXJlbTtsaW5lLWhlaWdodDoxfS5maWd1cmUtY2FwdGlvbntmb250LXNpemU6OTAlO2NvbG9yOiM2Yzc1N2R9Y29kZXtmb250LXNpemU6ODcuNSU7Y29sb3I6I2U4M2U4Yzt3b3JkLWJyZWFrOmJyZWFrLXdvcmR9YT5jb2Rle2NvbG9yOmluaGVyaXR9a2Jke3BhZGRpbmc6LjJyZW0gLjRyZW07Zm9udC1zaXplOjg3LjUlO2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMjEyNTI5O2JvcmRlci1yYWRpdXM6LjJyZW19a2JkIGtiZHtwYWRkaW5nOjA7Zm9udC1zaXplOjEwMCU7Zm9udC13ZWlnaHQ6NzAwfXByZXtkaXNwbGF5OmJsb2NrO2ZvbnQtc2l6ZTo4Ny41JTtjb2xvcjojMjEyNTI5fXByZSBjb2Rle2ZvbnQtc2l6ZTppbmhlcml0O2NvbG9yOmluaGVyaXQ7d29yZC1icmVhazpub3JtYWx9LnByZS1zY3JvbGxhYmxle21heC1oZWlnaHQ6MzQwcHg7b3ZlcmZsb3cteTpzY3JvbGx9LmNvbnRhaW5lcnt3aWR0aDoxMDAlO3BhZGRpbmctcmlnaHQ6MTVweDtwYWRkaW5nLWxlZnQ6MTVweDttYXJnaW4tcmlnaHQ6YXV0bzttYXJnaW4tbGVmdDphdXRvfUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsuY29udGFpbmVye21heC13aWR0aDo1NDBweH19QG1lZGlhIChtaW4td2lkdGg6NzY4cHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjcyMHB4fX1AbWVkaWEgKG1pbi13aWR0aDo5OTJweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6OTYwcHh9fUBtZWRpYSAobWluLXdpZHRoOjEyMDBweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6MTE0MHB4fX0uY29udGFpbmVyLWZsdWlke3dpZHRoOjEwMCU7cGFkZGluZy1yaWdodDoxNXB4O3BhZGRpbmctbGVmdDoxNXB4O21hcmdpbi1yaWdodDphdXRvO21hcmdpbi1sZWZ0OmF1dG99LnJvd3tkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7bWFyZ2luLXJpZ2h0Oi0xNXB4O21hcmdpbi1sZWZ0Oi0xNXB4fS5uby1ndXR0ZXJze21hcmdpbi1yaWdodDowO21hcmdpbi1sZWZ0OjB9Lm5vLWd1dHRlcnM+LmNvbCwubm8tZ3V0dGVycz5bY2xhc3MqPWNvbC1de3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH0uY29sLC5jb2wtMSwuY29sLTEwLC5jb2wtMTEsLmNvbC0xMiwuY29sLTIsLmNvbC0zLC5jb2wtNCwuY29sLTUsLmNvbC02LC5jb2wtNywuY29sLTgsLmNvbC05LC5jb2wtYXV0bywuY29sLWxnLC5jb2wtbGctMSwuY29sLWxnLTEwLC5jb2wtbGctMTEsLmNvbC1sZy0xMiwuY29sLWxnLTIsLmNvbC1sZy0zLC5jb2wtbGctNCwuY29sLWxnLTUsLmNvbC1sZy02LC5jb2wtbGctNywuY29sLWxnLTgsLmNvbC1sZy05LC5jb2wtbGctYXV0bywuY29sLW1kLC5jb2wtbWQtMSwuY29sLW1kLTEwLC5jb2wtbWQtMTEsLmNvbC1tZC0xMiwuY29sLW1kLTIsLmNvbC1tZC0zLC5jb2wtbWQtNCwuY29sLW1kLTUsLmNvbC1tZC02LC5jb2wtbWQtNywuY29sLW1kLTgsLmNvbC1tZC05LC5jb2wtbWQtYXV0bywuY29sLXNtLC5jb2wtc20tMSwuY29sLXNtLTEwLC5jb2wtc20tMTEsLmNvbC1zbS0xMiwuY29sLXNtLTIsLmNvbC1zbS0zLC5jb2wtc20tNCwuY29sLXNtLTUsLmNvbC1zbS02LC5jb2wtc20tNywuY29sLXNtLTgsLmNvbC1zbS05LC5jb2wtc20tYXV0bywuY29sLXhsLC5jb2wteGwtMSwuY29sLXhsLTEwLC5jb2wteGwtMTEsLmNvbC14bC0xMiwuY29sLXhsLTIsLmNvbC14bC0zLC5jb2wteGwtNCwuY29sLXhsLTUsLmNvbC14bC02LC5jb2wteGwtNywuY29sLXhsLTgsLmNvbC14bC05LC5jb2wteGwtYXV0b3twb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctcmlnaHQ6MTVweDtwYWRkaW5nLWxlZnQ6MTVweH0uY29sey1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjA7ZmxleC1iYXNpczowOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7bWF4LXdpZHRoOjEwMCV9LmNvbC1hdXRvey1tcy1mbGV4OjAgMCBhdXRvO2ZsZXg6MCAwIGF1dG87d2lkdGg6YXV0bzttYXgtd2lkdGg6MTAwJX0uY29sLTF7LW1zLWZsZXg6MCAwIDguMzMzMzMzJTtmbGV4OjAgMCA4LjMzMzMzMyU7bWF4LXdpZHRoOjguMzMzMzMzJX0uY29sLTJ7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLTN7LW1zLWZsZXg6MCAwIDI1JTtmbGV4OjAgMCAyNSU7bWF4LXdpZHRoOjI1JX0uY29sLTR7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0uY29sLTV7LW1zLWZsZXg6MCAwIDQxLjY2NjY2NyU7ZmxleDowIDAgNDEuNjY2NjY3JTttYXgtd2lkdGg6NDEuNjY2NjY3JX0uY29sLTZ7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0uY29sLTd7LW1zLWZsZXg6MCAwIDU4LjMzMzMzMyU7ZmxleDowIDAgNTguMzMzMzMzJTttYXgtd2lkdGg6NTguMzMzMzMzJX0uY29sLTh7LW1zLWZsZXg6MCAwIDY2LjY2NjY2NyU7ZmxleDowIDAgNjYuNjY2NjY3JTttYXgtd2lkdGg6NjYuNjY2NjY3JX0uY29sLTl7LW1zLWZsZXg6MCAwIDc1JTtmbGV4OjAgMCA3NSU7bWF4LXdpZHRoOjc1JX0uY29sLTEwey1tcy1mbGV4OjAgMCA4My4zMzMzMzMlO2ZsZXg6MCAwIDgzLjMzMzMzMyU7bWF4LXdpZHRoOjgzLjMzMzMzMyV9LmNvbC0xMXstbXMtZmxleDowIDAgOTEuNjY2NjY3JTtmbGV4OjAgMCA5MS42NjY2NjclO21heC13aWR0aDo5MS42NjY2NjclfS5jb2wtMTJ7LW1zLWZsZXg6MCAwIDEwMCU7ZmxleDowIDAgMTAwJTttYXgtd2lkdGg6MTAwJX0ub3JkZXItZmlyc3R7LW1zLWZsZXgtb3JkZXI6LTE7b3JkZXI6LTF9Lm9yZGVyLWxhc3R7LW1zLWZsZXgtb3JkZXI6MTM7b3JkZXI6MTN9Lm9yZGVyLTB7LW1zLWZsZXgtb3JkZXI6MDtvcmRlcjowfS5vcmRlci0xey1tcy1mbGV4LW9yZGVyOjE7b3JkZXI6MX0ub3JkZXItMnstbXMtZmxleC1vcmRlcjoyO29yZGVyOjJ9Lm9yZGVyLTN7LW1zLWZsZXgtb3JkZXI6MztvcmRlcjozfS5vcmRlci00ey1tcy1mbGV4LW9yZGVyOjQ7b3JkZXI6NH0ub3JkZXItNXstbXMtZmxleC1vcmRlcjo1O29yZGVyOjV9Lm9yZGVyLTZ7LW1zLWZsZXgtb3JkZXI6NjtvcmRlcjo2fS5vcmRlci03ey1tcy1mbGV4LW9yZGVyOjc7b3JkZXI6N30ub3JkZXItOHstbXMtZmxleC1vcmRlcjo4O29yZGVyOjh9Lm9yZGVyLTl7LW1zLWZsZXgtb3JkZXI6OTtvcmRlcjo5fS5vcmRlci0xMHstbXMtZmxleC1vcmRlcjoxMDtvcmRlcjoxMH0ub3JkZXItMTF7LW1zLWZsZXgtb3JkZXI6MTE7b3JkZXI6MTF9Lm9yZGVyLTEyey1tcy1mbGV4LW9yZGVyOjEyO29yZGVyOjEyfS5vZmZzZXQtMXttYXJnaW4tbGVmdDo4LjMzMzMzMyV9Lm9mZnNldC0ye21hcmdpbi1sZWZ0OjE2LjY2NjY2NyV9Lm9mZnNldC0ze21hcmdpbi1sZWZ0OjI1JX0ub2Zmc2V0LTR7bWFyZ2luLWxlZnQ6MzMuMzMzMzMzJX0ub2Zmc2V0LTV7bWFyZ2luLWxlZnQ6NDEuNjY2NjY3JX0ub2Zmc2V0LTZ7bWFyZ2luLWxlZnQ6NTAlfS5vZmZzZXQtN3ttYXJnaW4tbGVmdDo1OC4zMzMzMzMlfS5vZmZzZXQtOHttYXJnaW4tbGVmdDo2Ni42NjY2NjclfS5vZmZzZXQtOXttYXJnaW4tbGVmdDo3NSV9Lm9mZnNldC0xMHttYXJnaW4tbGVmdDo4My4zMzMzMzMlfS5vZmZzZXQtMTF7bWFyZ2luLWxlZnQ6OTEuNjY2NjY3JX1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmNvbC1zbXstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTowO2ZsZXgtYmFzaXM6MDstbXMtZmxleC1wb3NpdGl2ZToxO2ZsZXgtZ3JvdzoxO21heC13aWR0aDoxMDAlfS5jb2wtc20tYXV0b3stbXMtZmxleDowIDAgYXV0bztmbGV4OjAgMCBhdXRvO3dpZHRoOmF1dG87bWF4LXdpZHRoOjEwMCV9LmNvbC1zbS0xey1tcy1mbGV4OjAgMCA4LjMzMzMzMyU7ZmxleDowIDAgOC4zMzMzMzMlO21heC13aWR0aDo4LjMzMzMzMyV9LmNvbC1zbS0yey1tcy1mbGV4OjAgMCAxNi42NjY2NjclO2ZsZXg6MCAwIDE2LjY2NjY2NyU7bWF4LXdpZHRoOjE2LjY2NjY2NyV9LmNvbC1zbS0zey1tcy1mbGV4OjAgMCAyNSU7ZmxleDowIDAgMjUlO21heC13aWR0aDoyNSV9LmNvbC1zbS00ey1tcy1mbGV4OjAgMCAzMy4zMzMzMzMlO2ZsZXg6MCAwIDMzLjMzMzMzMyU7bWF4LXdpZHRoOjMzLjMzMzMzMyV9LmNvbC1zbS01ey1tcy1mbGV4OjAgMCA0MS42NjY2NjclO2ZsZXg6MCAwIDQxLjY2NjY2NyU7bWF4LXdpZHRoOjQxLjY2NjY2NyV9LmNvbC1zbS02ey1tcy1mbGV4OjAgMCA1MCU7ZmxleDowIDAgNTAlO21heC13aWR0aDo1MCV9LmNvbC1zbS03ey1tcy1mbGV4OjAgMCA1OC4zMzMzMzMlO2ZsZXg6MCAwIDU4LjMzMzMzMyU7bWF4LXdpZHRoOjU4LjMzMzMzMyV9LmNvbC1zbS04ey1tcy1mbGV4OjAgMCA2Ni42NjY2NjclO2ZsZXg6MCAwIDY2LjY2NjY2NyU7bWF4LXdpZHRoOjY2LjY2NjY2NyV9LmNvbC1zbS05ey1tcy1mbGV4OjAgMCA3NSU7ZmxleDowIDAgNzUlO21heC13aWR0aDo3NSV9LmNvbC1zbS0xMHstbXMtZmxleDowIDAgODMuMzMzMzMzJTtmbGV4OjAgMCA4My4zMzMzMzMlO21heC13aWR0aDo4My4zMzMzMzMlfS5jb2wtc20tMTF7LW1zLWZsZXg6MCAwIDkxLjY2NjY2NyU7ZmxleDowIDAgOTEuNjY2NjY3JTttYXgtd2lkdGg6OTEuNjY2NjY3JX0uY29sLXNtLTEyey1tcy1mbGV4OjAgMCAxMDAlO2ZsZXg6MCAwIDEwMCU7bWF4LXdpZHRoOjEwMCV9Lm9yZGVyLXNtLWZpcnN0ey1tcy1mbGV4LW9yZGVyOi0xO29yZGVyOi0xfS5vcmRlci1zbS1sYXN0ey1tcy1mbGV4LW9yZGVyOjEzO29yZGVyOjEzfS5vcmRlci1zbS0wey1tcy1mbGV4LW9yZGVyOjA7b3JkZXI6MH0ub3JkZXItc20tMXstbXMtZmxleC1vcmRlcjoxO29yZGVyOjF9Lm9yZGVyLXNtLTJ7LW1zLWZsZXgtb3JkZXI6MjtvcmRlcjoyfS5vcmRlci1zbS0zey1tcy1mbGV4LW9yZGVyOjM7b3JkZXI6M30ub3JkZXItc20tNHstbXMtZmxleC1vcmRlcjo0O29yZGVyOjR9Lm9yZGVyLXNtLTV7LW1zLWZsZXgtb3JkZXI6NTtvcmRlcjo1fS5vcmRlci1zbS02ey1tcy1mbGV4LW9yZGVyOjY7b3JkZXI6Nn0ub3JkZXItc20tN3stbXMtZmxleC1vcmRlcjo3O29yZGVyOjd9Lm9yZGVyLXNtLTh7LW1zLWZsZXgtb3JkZXI6ODtvcmRlcjo4fS5vcmRlci1zbS05ey1tcy1mbGV4LW9yZGVyOjk7b3JkZXI6OX0ub3JkZXItc20tMTB7LW1zLWZsZXgtb3JkZXI6MTA7b3JkZXI6MTB9Lm9yZGVyLXNtLTExey1tcy1mbGV4LW9yZGVyOjExO29yZGVyOjExfS5vcmRlci1zbS0xMnstbXMtZmxleC1vcmRlcjoxMjtvcmRlcjoxMn0ub2Zmc2V0LXNtLTB7bWFyZ2luLWxlZnQ6MH0ub2Zmc2V0LXNtLTF7bWFyZ2luLWxlZnQ6OC4zMzMzMzMlfS5vZmZzZXQtc20tMnttYXJnaW4tbGVmdDoxNi42NjY2NjclfS5vZmZzZXQtc20tM3ttYXJnaW4tbGVmdDoyNSV9Lm9mZnNldC1zbS00e21hcmdpbi1sZWZ0OjMzLjMzMzMzMyV9Lm9mZnNldC1zbS01e21hcmdpbi1sZWZ0OjQxLjY2NjY2NyV9Lm9mZnNldC1zbS02e21hcmdpbi1sZWZ0OjUwJX0ub2Zmc2V0LXNtLTd7bWFyZ2luLWxlZnQ6NTguMzMzMzMzJX0ub2Zmc2V0LXNtLTh7bWFyZ2luLWxlZnQ6NjYuNjY2NjY3JX0ub2Zmc2V0LXNtLTl7bWFyZ2luLWxlZnQ6NzUlfS5vZmZzZXQtc20tMTB7bWFyZ2luLWxlZnQ6ODMuMzMzMzMzJX0ub2Zmc2V0LXNtLTExe21hcmdpbi1sZWZ0OjkxLjY2NjY2NyV9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsuY29sLW1key1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjA7ZmxleC1iYXNpczowOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7bWF4LXdpZHRoOjEwMCV9LmNvbC1tZC1hdXRvey1tcy1mbGV4OjAgMCBhdXRvO2ZsZXg6MCAwIGF1dG87d2lkdGg6YXV0bzttYXgtd2lkdGg6MTAwJX0uY29sLW1kLTF7LW1zLWZsZXg6MCAwIDguMzMzMzMzJTtmbGV4OjAgMCA4LjMzMzMzMyU7bWF4LXdpZHRoOjguMzMzMzMzJX0uY29sLW1kLTJ7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLW1kLTN7LW1zLWZsZXg6MCAwIDI1JTtmbGV4OjAgMCAyNSU7bWF4LXdpZHRoOjI1JX0uY29sLW1kLTR7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0uY29sLW1kLTV7LW1zLWZsZXg6MCAwIDQxLjY2NjY2NyU7ZmxleDowIDAgNDEuNjY2NjY3JTttYXgtd2lkdGg6NDEuNjY2NjY3JX0uY29sLW1kLTZ7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0uY29sLW1kLTd7LW1zLWZsZXg6MCAwIDU4LjMzMzMzMyU7ZmxleDowIDAgNTguMzMzMzMzJTttYXgtd2lkdGg6NTguMzMzMzMzJX0uY29sLW1kLTh7LW1zLWZsZXg6MCAwIDY2LjY2NjY2NyU7ZmxleDowIDAgNjYuNjY2NjY3JTttYXgtd2lkdGg6NjYuNjY2NjY3JX0uY29sLW1kLTl7LW1zLWZsZXg6MCAwIDc1JTtmbGV4OjAgMCA3NSU7bWF4LXdpZHRoOjc1JX0uY29sLW1kLTEwey1tcy1mbGV4OjAgMCA4My4zMzMzMzMlO2ZsZXg6MCAwIDgzLjMzMzMzMyU7bWF4LXdpZHRoOjgzLjMzMzMzMyV9LmNvbC1tZC0xMXstbXMtZmxleDowIDAgOTEuNjY2NjY3JTtmbGV4OjAgMCA5MS42NjY2NjclO21heC13aWR0aDo5MS42NjY2NjclfS5jb2wtbWQtMTJ7LW1zLWZsZXg6MCAwIDEwMCU7ZmxleDowIDAgMTAwJTttYXgtd2lkdGg6MTAwJX0ub3JkZXItbWQtZmlyc3R7LW1zLWZsZXgtb3JkZXI6LTE7b3JkZXI6LTF9Lm9yZGVyLW1kLWxhc3R7LW1zLWZsZXgtb3JkZXI6MTM7b3JkZXI6MTN9Lm9yZGVyLW1kLTB7LW1zLWZsZXgtb3JkZXI6MDtvcmRlcjowfS5vcmRlci1tZC0xey1tcy1mbGV4LW9yZGVyOjE7b3JkZXI6MX0ub3JkZXItbWQtMnstbXMtZmxleC1vcmRlcjoyO29yZGVyOjJ9Lm9yZGVyLW1kLTN7LW1zLWZsZXgtb3JkZXI6MztvcmRlcjozfS5vcmRlci1tZC00ey1tcy1mbGV4LW9yZGVyOjQ7b3JkZXI6NH0ub3JkZXItbWQtNXstbXMtZmxleC1vcmRlcjo1O29yZGVyOjV9Lm9yZGVyLW1kLTZ7LW1zLWZsZXgtb3JkZXI6NjtvcmRlcjo2fS5vcmRlci1tZC03ey1tcy1mbGV4LW9yZGVyOjc7b3JkZXI6N30ub3JkZXItbWQtOHstbXMtZmxleC1vcmRlcjo4O29yZGVyOjh9Lm9yZGVyLW1kLTl7LW1zLWZsZXgtb3JkZXI6OTtvcmRlcjo5fS5vcmRlci1tZC0xMHstbXMtZmxleC1vcmRlcjoxMDtvcmRlcjoxMH0ub3JkZXItbWQtMTF7LW1zLWZsZXgtb3JkZXI6MTE7b3JkZXI6MTF9Lm9yZGVyLW1kLTEyey1tcy1mbGV4LW9yZGVyOjEyO29yZGVyOjEyfS5vZmZzZXQtbWQtMHttYXJnaW4tbGVmdDowfS5vZmZzZXQtbWQtMXttYXJnaW4tbGVmdDo4LjMzMzMzMyV9Lm9mZnNldC1tZC0ye21hcmdpbi1sZWZ0OjE2LjY2NjY2NyV9Lm9mZnNldC1tZC0ze21hcmdpbi1sZWZ0OjI1JX0ub2Zmc2V0LW1kLTR7bWFyZ2luLWxlZnQ6MzMuMzMzMzMzJX0ub2Zmc2V0LW1kLTV7bWFyZ2luLWxlZnQ6NDEuNjY2NjY3JX0ub2Zmc2V0LW1kLTZ7bWFyZ2luLWxlZnQ6NTAlfS5vZmZzZXQtbWQtN3ttYXJnaW4tbGVmdDo1OC4zMzMzMzMlfS5vZmZzZXQtbWQtOHttYXJnaW4tbGVmdDo2Ni42NjY2NjclfS5vZmZzZXQtbWQtOXttYXJnaW4tbGVmdDo3NSV9Lm9mZnNldC1tZC0xMHttYXJnaW4tbGVmdDo4My4zMzMzMzMlfS5vZmZzZXQtbWQtMTF7bWFyZ2luLWxlZnQ6OTEuNjY2NjY3JX19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey5jb2wtbGd7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTttYXgtd2lkdGg6MTAwJX0uY29sLWxnLWF1dG97LW1zLWZsZXg6MCAwIGF1dG87ZmxleDowIDAgYXV0bzt3aWR0aDphdXRvO21heC13aWR0aDoxMDAlfS5jb2wtbGctMXstbXMtZmxleDowIDAgOC4zMzMzMzMlO2ZsZXg6MCAwIDguMzMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMzMlfS5jb2wtbGctMnstbXMtZmxleDowIDAgMTYuNjY2NjY3JTtmbGV4OjAgMCAxNi42NjY2NjclO21heC13aWR0aDoxNi42NjY2NjclfS5jb2wtbGctM3stbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5jb2wtbGctNHstbXMtZmxleDowIDAgMzMuMzMzMzMzJTtmbGV4OjAgMCAzMy4zMzMzMzMlO21heC13aWR0aDozMy4zMzMzMzMlfS5jb2wtbGctNXstbXMtZmxleDowIDAgNDEuNjY2NjY3JTtmbGV4OjAgMCA0MS42NjY2NjclO21heC13aWR0aDo0MS42NjY2NjclfS5jb2wtbGctNnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5jb2wtbGctN3stbXMtZmxleDowIDAgNTguMzMzMzMzJTtmbGV4OjAgMCA1OC4zMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMzMlfS5jb2wtbGctOHstbXMtZmxleDowIDAgNjYuNjY2NjY3JTtmbGV4OjAgMCA2Ni42NjY2NjclO21heC13aWR0aDo2Ni42NjY2NjclfS5jb2wtbGctOXstbXMtZmxleDowIDAgNzUlO2ZsZXg6MCAwIDc1JTttYXgtd2lkdGg6NzUlfS5jb2wtbGctMTB7LW1zLWZsZXg6MCAwIDgzLjMzMzMzMyU7ZmxleDowIDAgODMuMzMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMzJX0uY29sLWxnLTExey1tcy1mbGV4OjAgMCA5MS42NjY2NjclO2ZsZXg6MCAwIDkxLjY2NjY2NyU7bWF4LXdpZHRoOjkxLjY2NjY2NyV9LmNvbC1sZy0xMnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5vcmRlci1sZy1maXJzdHstbXMtZmxleC1vcmRlcjotMTtvcmRlcjotMX0ub3JkZXItbGctbGFzdHstbXMtZmxleC1vcmRlcjoxMztvcmRlcjoxM30ub3JkZXItbGctMHstbXMtZmxleC1vcmRlcjowO29yZGVyOjB9Lm9yZGVyLWxnLTF7LW1zLWZsZXgtb3JkZXI6MTtvcmRlcjoxfS5vcmRlci1sZy0yey1tcy1mbGV4LW9yZGVyOjI7b3JkZXI6Mn0ub3JkZXItbGctM3stbXMtZmxleC1vcmRlcjozO29yZGVyOjN9Lm9yZGVyLWxnLTR7LW1zLWZsZXgtb3JkZXI6NDtvcmRlcjo0fS5vcmRlci1sZy01ey1tcy1mbGV4LW9yZGVyOjU7b3JkZXI6NX0ub3JkZXItbGctNnstbXMtZmxleC1vcmRlcjo2O29yZGVyOjZ9Lm9yZGVyLWxnLTd7LW1zLWZsZXgtb3JkZXI6NztvcmRlcjo3fS5vcmRlci1sZy04ey1tcy1mbGV4LW9yZGVyOjg7b3JkZXI6OH0ub3JkZXItbGctOXstbXMtZmxleC1vcmRlcjo5O29yZGVyOjl9Lm9yZGVyLWxnLTEwey1tcy1mbGV4LW9yZGVyOjEwO29yZGVyOjEwfS5vcmRlci1sZy0xMXstbXMtZmxleC1vcmRlcjoxMTtvcmRlcjoxMX0ub3JkZXItbGctMTJ7LW1zLWZsZXgtb3JkZXI6MTI7b3JkZXI6MTJ9Lm9mZnNldC1sZy0we21hcmdpbi1sZWZ0OjB9Lm9mZnNldC1sZy0xe21hcmdpbi1sZWZ0OjguMzMzMzMzJX0ub2Zmc2V0LWxnLTJ7bWFyZ2luLWxlZnQ6MTYuNjY2NjY3JX0ub2Zmc2V0LWxnLTN7bWFyZ2luLWxlZnQ6MjUlfS5vZmZzZXQtbGctNHttYXJnaW4tbGVmdDozMy4zMzMzMzMlfS5vZmZzZXQtbGctNXttYXJnaW4tbGVmdDo0MS42NjY2NjclfS5vZmZzZXQtbGctNnttYXJnaW4tbGVmdDo1MCV9Lm9mZnNldC1sZy03e21hcmdpbi1sZWZ0OjU4LjMzMzMzMyV9Lm9mZnNldC1sZy04e21hcmdpbi1sZWZ0OjY2LjY2NjY2NyV9Lm9mZnNldC1sZy05e21hcmdpbi1sZWZ0Ojc1JX0ub2Zmc2V0LWxnLTEwe21hcmdpbi1sZWZ0OjgzLjMzMzMzMyV9Lm9mZnNldC1sZy0xMXttYXJnaW4tbGVmdDo5MS42NjY2NjclfX1AbWVkaWEgKG1pbi13aWR0aDoxMjAwcHgpey5jb2wteGx7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTttYXgtd2lkdGg6MTAwJX0uY29sLXhsLWF1dG97LW1zLWZsZXg6MCAwIGF1dG87ZmxleDowIDAgYXV0bzt3aWR0aDphdXRvO21heC13aWR0aDoxMDAlfS5jb2wteGwtMXstbXMtZmxleDowIDAgOC4zMzMzMzMlO2ZsZXg6MCAwIDguMzMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMzMlfS5jb2wteGwtMnstbXMtZmxleDowIDAgMTYuNjY2NjY3JTtmbGV4OjAgMCAxNi42NjY2NjclO21heC13aWR0aDoxNi42NjY2NjclfS5jb2wteGwtM3stbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5jb2wteGwtNHstbXMtZmxleDowIDAgMzMuMzMzMzMzJTtmbGV4OjAgMCAzMy4zMzMzMzMlO21heC13aWR0aDozMy4zMzMzMzMlfS5jb2wteGwtNXstbXMtZmxleDowIDAgNDEuNjY2NjY3JTtmbGV4OjAgMCA0MS42NjY2NjclO21heC13aWR0aDo0MS42NjY2NjclfS5jb2wteGwtNnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5jb2wteGwtN3stbXMtZmxleDowIDAgNTguMzMzMzMzJTtmbGV4OjAgMCA1OC4zMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMzMlfS5jb2wteGwtOHstbXMtZmxleDowIDAgNjYuNjY2NjY3JTtmbGV4OjAgMCA2Ni42NjY2NjclO21heC13aWR0aDo2Ni42NjY2NjclfS5jb2wteGwtOXstbXMtZmxleDowIDAgNzUlO2ZsZXg6MCAwIDc1JTttYXgtd2lkdGg6NzUlfS5jb2wteGwtMTB7LW1zLWZsZXg6MCAwIDgzLjMzMzMzMyU7ZmxleDowIDAgODMuMzMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMzJX0uY29sLXhsLTExey1tcy1mbGV4OjAgMCA5MS42NjY2NjclO2ZsZXg6MCAwIDkxLjY2NjY2NyU7bWF4LXdpZHRoOjkxLjY2NjY2NyV9LmNvbC14bC0xMnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5vcmRlci14bC1maXJzdHstbXMtZmxleC1vcmRlcjotMTtvcmRlcjotMX0ub3JkZXIteGwtbGFzdHstbXMtZmxleC1vcmRlcjoxMztvcmRlcjoxM30ub3JkZXIteGwtMHstbXMtZmxleC1vcmRlcjowO29yZGVyOjB9Lm9yZGVyLXhsLTF7LW1zLWZsZXgtb3JkZXI6MTtvcmRlcjoxfS5vcmRlci14bC0yey1tcy1mbGV4LW9yZGVyOjI7b3JkZXI6Mn0ub3JkZXIteGwtM3stbXMtZmxleC1vcmRlcjozO29yZGVyOjN9Lm9yZGVyLXhsLTR7LW1zLWZsZXgtb3JkZXI6NDtvcmRlcjo0fS5vcmRlci14bC01ey1tcy1mbGV4LW9yZGVyOjU7b3JkZXI6NX0ub3JkZXIteGwtNnstbXMtZmxleC1vcmRlcjo2O29yZGVyOjZ9Lm9yZGVyLXhsLTd7LW1zLWZsZXgtb3JkZXI6NztvcmRlcjo3fS5vcmRlci14bC04ey1tcy1mbGV4LW9yZGVyOjg7b3JkZXI6OH0ub3JkZXIteGwtOXstbXMtZmxleC1vcmRlcjo5O29yZGVyOjl9Lm9yZGVyLXhsLTEwey1tcy1mbGV4LW9yZGVyOjEwO29yZGVyOjEwfS5vcmRlci14bC0xMXstbXMtZmxleC1vcmRlcjoxMTtvcmRlcjoxMX0ub3JkZXIteGwtMTJ7LW1zLWZsZXgtb3JkZXI6MTI7b3JkZXI6MTJ9Lm9mZnNldC14bC0we21hcmdpbi1sZWZ0OjB9Lm9mZnNldC14bC0xe21hcmdpbi1sZWZ0OjguMzMzMzMzJX0ub2Zmc2V0LXhsLTJ7bWFyZ2luLWxlZnQ6MTYuNjY2NjY3JX0ub2Zmc2V0LXhsLTN7bWFyZ2luLWxlZnQ6MjUlfS5vZmZzZXQteGwtNHttYXJnaW4tbGVmdDozMy4zMzMzMzMlfS5vZmZzZXQteGwtNXttYXJnaW4tbGVmdDo0MS42NjY2NjclfS5vZmZzZXQteGwtNnttYXJnaW4tbGVmdDo1MCV9Lm9mZnNldC14bC03e21hcmdpbi1sZWZ0OjU4LjMzMzMzMyV9Lm9mZnNldC14bC04e21hcmdpbi1sZWZ0OjY2LjY2NjY2NyV9Lm9mZnNldC14bC05e21hcmdpbi1sZWZ0Ojc1JX0ub2Zmc2V0LXhsLTEwe21hcmdpbi1sZWZ0OjgzLjMzMzMzMyV9Lm9mZnNldC14bC0xMXttYXJnaW4tbGVmdDo5MS42NjY2NjclfX0udGFibGV7d2lkdGg6MTAwJTttYXJnaW4tYm90dG9tOjFyZW07Y29sb3I6IzIxMjUyOX0udGFibGUgdGQsLnRhYmxlIHRoe3BhZGRpbmc6Ljc1cmVtO3ZlcnRpY2FsLWFsaWduOnRvcDtib3JkZXItdG9wOjFweCBzb2xpZCAjZGVlMmU2fS50YWJsZSB0aGVhZCB0aHt2ZXJ0aWNhbC1hbGlnbjpib3R0b207Ym9yZGVyLWJvdHRvbToycHggc29saWQgI2RlZTJlNn0udGFibGUgdGJvZHkrdGJvZHl7Ym9yZGVyLXRvcDoycHggc29saWQgI2RlZTJlNn0udGFibGUtc20gdGQsLnRhYmxlLXNtIHRoe3BhZGRpbmc6LjNyZW19LnRhYmxlLWJvcmRlcmVke2JvcmRlcjoxcHggc29saWQgI2RlZTJlNn0udGFibGUtYm9yZGVyZWQgdGQsLnRhYmxlLWJvcmRlcmVkIHRoe2JvcmRlcjoxcHggc29saWQgI2RlZTJlNn0udGFibGUtYm9yZGVyZWQgdGhlYWQgdGQsLnRhYmxlLWJvcmRlcmVkIHRoZWFkIHRoe2JvcmRlci1ib3R0b20td2lkdGg6MnB4fS50YWJsZS1ib3JkZXJsZXNzIHRib2R5K3Rib2R5LC50YWJsZS1ib3JkZXJsZXNzIHRkLC50YWJsZS1ib3JkZXJsZXNzIHRoLC50YWJsZS1ib3JkZXJsZXNzIHRoZWFkIHRoe2JvcmRlcjowfS50YWJsZS1zdHJpcGVkIHRib2R5IHRyOm50aC1vZi10eXBlKG9kZCl7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4wNSl9LnRhYmxlLWhvdmVyIHRib2R5IHRyOmhvdmVye2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4wNzUpfS50YWJsZS1wcmltYXJ5LC50YWJsZS1wcmltYXJ5PnRkLC50YWJsZS1wcmltYXJ5PnRoe2JhY2tncm91bmQtY29sb3I6I2I4ZGFmZn0udGFibGUtcHJpbWFyeSB0Ym9keSt0Ym9keSwudGFibGUtcHJpbWFyeSB0ZCwudGFibGUtcHJpbWFyeSB0aCwudGFibGUtcHJpbWFyeSB0aGVhZCB0aHtib3JkZXItY29sb3I6IzdhYmFmZn0udGFibGUtaG92ZXIgLnRhYmxlLXByaW1hcnk6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojOWZjZGZmfS50YWJsZS1ob3ZlciAudGFibGUtcHJpbWFyeTpob3Zlcj50ZCwudGFibGUtaG92ZXIgLnRhYmxlLXByaW1hcnk6aG92ZXI+dGh7YmFja2dyb3VuZC1jb2xvcjojOWZjZGZmfS50YWJsZS1zZWNvbmRhcnksLnRhYmxlLXNlY29uZGFyeT50ZCwudGFibGUtc2Vjb25kYXJ5PnRoe2JhY2tncm91bmQtY29sb3I6I2Q2ZDhkYn0udGFibGUtc2Vjb25kYXJ5IHRib2R5K3Rib2R5LC50YWJsZS1zZWNvbmRhcnkgdGQsLnRhYmxlLXNlY29uZGFyeSB0aCwudGFibGUtc2Vjb25kYXJ5IHRoZWFkIHRoe2JvcmRlci1jb2xvcjojYjNiN2JifS50YWJsZS1ob3ZlciAudGFibGUtc2Vjb25kYXJ5OmhvdmVye2JhY2tncm91bmQtY29sb3I6I2M4Y2JjZn0udGFibGUtaG92ZXIgLnRhYmxlLXNlY29uZGFyeTpob3Zlcj50ZCwudGFibGUtaG92ZXIgLnRhYmxlLXNlY29uZGFyeTpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNjOGNiY2Z9LnRhYmxlLXN1Y2Nlc3MsLnRhYmxlLXN1Y2Nlc3M+dGQsLnRhYmxlLXN1Y2Nlc3M+dGh7YmFja2dyb3VuZC1jb2xvcjojYzNlNmNifS50YWJsZS1zdWNjZXNzIHRib2R5K3Rib2R5LC50YWJsZS1zdWNjZXNzIHRkLC50YWJsZS1zdWNjZXNzIHRoLC50YWJsZS1zdWNjZXNzIHRoZWFkIHRoe2JvcmRlci1jb2xvcjojOGZkMTllfS50YWJsZS1ob3ZlciAudGFibGUtc3VjY2Vzczpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNiMWRmYmJ9LnRhYmxlLWhvdmVyIC50YWJsZS1zdWNjZXNzOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtc3VjY2Vzczpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNiMWRmYmJ9LnRhYmxlLWluZm8sLnRhYmxlLWluZm8+dGQsLnRhYmxlLWluZm8+dGh7YmFja2dyb3VuZC1jb2xvcjojYmVlNWVifS50YWJsZS1pbmZvIHRib2R5K3Rib2R5LC50YWJsZS1pbmZvIHRkLC50YWJsZS1pbmZvIHRoLC50YWJsZS1pbmZvIHRoZWFkIHRoe2JvcmRlci1jb2xvcjojODZjZmRhfS50YWJsZS1ob3ZlciAudGFibGUtaW5mbzpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNhYmRkZTV9LnRhYmxlLWhvdmVyIC50YWJsZS1pbmZvOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtaW5mbzpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNhYmRkZTV9LnRhYmxlLXdhcm5pbmcsLnRhYmxlLXdhcm5pbmc+dGQsLnRhYmxlLXdhcm5pbmc+dGh7YmFja2dyb3VuZC1jb2xvcjojZmZlZWJhfS50YWJsZS13YXJuaW5nIHRib2R5K3Rib2R5LC50YWJsZS13YXJuaW5nIHRkLC50YWJsZS13YXJuaW5nIHRoLC50YWJsZS13YXJuaW5nIHRoZWFkIHRoe2JvcmRlci1jb2xvcjojZmZkZjdlfS50YWJsZS1ob3ZlciAudGFibGUtd2FybmluZzpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmU4YTF9LnRhYmxlLWhvdmVyIC50YWJsZS13YXJuaW5nOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtd2FybmluZzpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmU4YTF9LnRhYmxlLWRhbmdlciwudGFibGUtZGFuZ2VyPnRkLC50YWJsZS1kYW5nZXI+dGh7YmFja2dyb3VuZC1jb2xvcjojZjVjNmNifS50YWJsZS1kYW5nZXIgdGJvZHkrdGJvZHksLnRhYmxlLWRhbmdlciB0ZCwudGFibGUtZGFuZ2VyIHRoLC50YWJsZS1kYW5nZXIgdGhlYWQgdGh7Ym9yZGVyLWNvbG9yOiNlZDk2OWV9LnRhYmxlLWhvdmVyIC50YWJsZS1kYW5nZXI6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZjFiMGI3fS50YWJsZS1ob3ZlciAudGFibGUtZGFuZ2VyOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtZGFuZ2VyOmhvdmVyPnRoe2JhY2tncm91bmQtY29sb3I6I2YxYjBiN30udGFibGUtbGlnaHQsLnRhYmxlLWxpZ2h0PnRkLC50YWJsZS1saWdodD50aHtiYWNrZ3JvdW5kLWNvbG9yOiNmZGZkZmV9LnRhYmxlLWxpZ2h0IHRib2R5K3Rib2R5LC50YWJsZS1saWdodCB0ZCwudGFibGUtbGlnaHQgdGgsLnRhYmxlLWxpZ2h0IHRoZWFkIHRoe2JvcmRlci1jb2xvcjojZmJmY2ZjfS50YWJsZS1ob3ZlciAudGFibGUtbGlnaHQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZWNlY2Y2fS50YWJsZS1ob3ZlciAudGFibGUtbGlnaHQ6aG92ZXI+dGQsLnRhYmxlLWhvdmVyIC50YWJsZS1saWdodDpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNlY2VjZjZ9LnRhYmxlLWRhcmssLnRhYmxlLWRhcms+dGQsLnRhYmxlLWRhcms+dGh7YmFja2dyb3VuZC1jb2xvcjojYzZjOGNhfS50YWJsZS1kYXJrIHRib2R5K3Rib2R5LC50YWJsZS1kYXJrIHRkLC50YWJsZS1kYXJrIHRoLC50YWJsZS1kYXJrIHRoZWFkIHRoe2JvcmRlci1jb2xvcjojOTU5OTljfS50YWJsZS1ob3ZlciAudGFibGUtZGFyazpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNiOWJiYmV9LnRhYmxlLWhvdmVyIC50YWJsZS1kYXJrOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtZGFyazpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNiOWJiYmV9LnRhYmxlLWFjdGl2ZSwudGFibGUtYWN0aXZlPnRkLC50YWJsZS1hY3RpdmU+dGh7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4wNzUpfS50YWJsZS1ob3ZlciAudGFibGUtYWN0aXZlOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMDc1KX0udGFibGUtaG92ZXIgLnRhYmxlLWFjdGl2ZTpob3Zlcj50ZCwudGFibGUtaG92ZXIgLnRhYmxlLWFjdGl2ZTpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjA3NSl9LnRhYmxlIC50aGVhZC1kYXJrIHRoe2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwO2JvcmRlci1jb2xvcjojNDU0ZDU1fS50YWJsZSAudGhlYWQtbGlnaHQgdGh7Y29sb3I6IzQ5NTA1NztiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWY7Ym9yZGVyLWNvbG9yOiNkZWUyZTZ9LnRhYmxlLWRhcmt7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMzNDNhNDB9LnRhYmxlLWRhcmsgdGQsLnRhYmxlLWRhcmsgdGgsLnRhYmxlLWRhcmsgdGhlYWQgdGh7Ym9yZGVyLWNvbG9yOiM0NTRkNTV9LnRhYmxlLWRhcmsudGFibGUtYm9yZGVyZWR7Ym9yZGVyOjB9LnRhYmxlLWRhcmsudGFibGUtc3RyaXBlZCB0Ym9keSB0cjpudGgtb2YtdHlwZShvZGQpe2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuMDUpfS50YWJsZS1kYXJrLnRhYmxlLWhvdmVyIHRib2R5IHRyOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC4wNzUpfUBtZWRpYSAobWF4LXdpZHRoOjU3NS45OHB4KXsudGFibGUtcmVzcG9uc2l2ZS1zbXtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7b3ZlcmZsb3cteDphdXRvOy13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOnRvdWNofS50YWJsZS1yZXNwb25zaXZlLXNtPi50YWJsZS1ib3JkZXJlZHtib3JkZXI6MH19QG1lZGlhIChtYXgtd2lkdGg6NzY3Ljk4cHgpey50YWJsZS1yZXNwb25zaXZlLW1ke2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtvdmVyZmxvdy14OmF1dG87LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2h9LnRhYmxlLXJlc3BvbnNpdmUtbWQ+LnRhYmxlLWJvcmRlcmVke2JvcmRlcjowfX1AbWVkaWEgKG1heC13aWR0aDo5OTEuOThweCl7LnRhYmxlLXJlc3BvbnNpdmUtbGd7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO292ZXJmbG93LXg6YXV0bzstd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzp0b3VjaH0udGFibGUtcmVzcG9uc2l2ZS1sZz4udGFibGUtYm9yZGVyZWR7Ym9yZGVyOjB9fUBtZWRpYSAobWF4LXdpZHRoOjExOTkuOThweCl7LnRhYmxlLXJlc3BvbnNpdmUteGx7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO292ZXJmbG93LXg6YXV0bzstd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzp0b3VjaH0udGFibGUtcmVzcG9uc2l2ZS14bD4udGFibGUtYm9yZGVyZWR7Ym9yZGVyOjB9fS50YWJsZS1yZXNwb25zaXZle2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtvdmVyZmxvdy14OmF1dG87LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2h9LnRhYmxlLXJlc3BvbnNpdmU+LnRhYmxlLWJvcmRlcmVke2JvcmRlcjowfS5mb3JtLWNvbnRyb2x7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2hlaWdodDpjYWxjKDEuNWVtICsgLjc1cmVtICsgMnB4KTtwYWRkaW5nOi4zNzVyZW0gLjc1cmVtO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzQ5NTA1NztiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7YmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94O2JvcmRlcjoxcHggc29saWQgI2NlZDRkYTtib3JkZXItcmFkaXVzOi4yNXJlbTt0cmFuc2l0aW9uOmJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dH1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuZm9ybS1jb250cm9se3RyYW5zaXRpb246bm9uZX19LmZvcm0tY29udHJvbDo6LW1zLWV4cGFuZHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjowfS5mb3JtLWNvbnRyb2w6Zm9jdXN7Y29sb3I6IzQ5NTA1NztiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWNvbG9yOiM4MGJkZmY7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgwLDEyMywyNTUsLjI1KX0uZm9ybS1jb250cm9sOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOiM2Yzc1N2Q7b3BhY2l0eToxfS5mb3JtLWNvbnRyb2w6Oi1tb3otcGxhY2Vob2xkZXJ7Y29sb3I6IzZjNzU3ZDtvcGFjaXR5OjF9LmZvcm0tY29udHJvbDotbXMtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6IzZjNzU3ZDtvcGFjaXR5OjF9LmZvcm0tY29udHJvbDo6LW1zLWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOiM2Yzc1N2Q7b3BhY2l0eToxfS5mb3JtLWNvbnRyb2w6OnBsYWNlaG9sZGVye2NvbG9yOiM2Yzc1N2Q7b3BhY2l0eToxfS5mb3JtLWNvbnRyb2w6ZGlzYWJsZWQsLmZvcm0tY29udHJvbFtyZWFkb25seV17YmFja2dyb3VuZC1jb2xvcjojZTllY2VmO29wYWNpdHk6MX1zZWxlY3QuZm9ybS1jb250cm9sOmZvY3VzOjotbXMtdmFsdWV7Y29sb3I6IzQ5NTA1NztiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmZvcm0tY29udHJvbC1maWxlLC5mb3JtLWNvbnRyb2wtcmFuZ2V7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlfS5jb2wtZm9ybS1sYWJlbHtwYWRkaW5nLXRvcDpjYWxjKC4zNzVyZW0gKyAxcHgpO3BhZGRpbmctYm90dG9tOmNhbGMoLjM3NXJlbSArIDFweCk7bWFyZ2luLWJvdHRvbTowO2ZvbnQtc2l6ZTppbmhlcml0O2xpbmUtaGVpZ2h0OjEuNX0uY29sLWZvcm0tbGFiZWwtbGd7cGFkZGluZy10b3A6Y2FsYyguNXJlbSArIDFweCk7cGFkZGluZy1ib3R0b206Y2FsYyguNXJlbSArIDFweCk7Zm9udC1zaXplOjEuMjVyZW07bGluZS1oZWlnaHQ6MS41fS5jb2wtZm9ybS1sYWJlbC1zbXtwYWRkaW5nLXRvcDpjYWxjKC4yNXJlbSArIDFweCk7cGFkZGluZy1ib3R0b206Y2FsYyguMjVyZW0gKyAxcHgpO2ZvbnQtc2l6ZTouODc1cmVtO2xpbmUtaGVpZ2h0OjEuNX0uZm9ybS1jb250cm9sLXBsYWludGV4dHtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7cGFkZGluZy10b3A6LjM3NXJlbTtwYWRkaW5nLWJvdHRvbTouMzc1cmVtO21hcmdpbi1ib3R0b206MDtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjpzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItd2lkdGg6MXB4IDB9LmZvcm0tY29udHJvbC1wbGFpbnRleHQuZm9ybS1jb250cm9sLWxnLC5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0LmZvcm0tY29udHJvbC1zbXtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjB9LmZvcm0tY29udHJvbC1zbXtoZWlnaHQ6Y2FsYygxLjVlbSArIC41cmVtICsgMnB4KTtwYWRkaW5nOi4yNXJlbSAuNXJlbTtmb250LXNpemU6Ljg3NXJlbTtsaW5lLWhlaWdodDoxLjU7Ym9yZGVyLXJhZGl1czouMnJlbX0uZm9ybS1jb250cm9sLWxne2hlaWdodDpjYWxjKDEuNWVtICsgMXJlbSArIDJweCk7cGFkZGluZzouNXJlbSAxcmVtO2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OjEuNTtib3JkZXItcmFkaXVzOi4zcmVtfXNlbGVjdC5mb3JtLWNvbnRyb2xbbXVsdGlwbGVdLHNlbGVjdC5mb3JtLWNvbnRyb2xbc2l6ZV17aGVpZ2h0OmF1dG99dGV4dGFyZWEuZm9ybS1jb250cm9se2hlaWdodDphdXRvfS5mb3JtLWdyb3Vwe21hcmdpbi1ib3R0b206MXJlbX0uZm9ybS10ZXh0e2Rpc3BsYXk6YmxvY2s7bWFyZ2luLXRvcDouMjVyZW19LmZvcm0tcm93e2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDttYXJnaW4tcmlnaHQ6LTVweDttYXJnaW4tbGVmdDotNXB4fS5mb3JtLXJvdz4uY29sLC5mb3JtLXJvdz5bY2xhc3MqPWNvbC1de3BhZGRpbmctcmlnaHQ6NXB4O3BhZGRpbmctbGVmdDo1cHh9LmZvcm0tY2hlY2t7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztwYWRkaW5nLWxlZnQ6MS4yNXJlbX0uZm9ybS1jaGVjay1pbnB1dHtwb3NpdGlvbjphYnNvbHV0ZTttYXJnaW4tdG9wOi4zcmVtO21hcmdpbi1sZWZ0Oi0xLjI1cmVtfS5mb3JtLWNoZWNrLWlucHV0OmRpc2FibGVkfi5mb3JtLWNoZWNrLWxhYmVse2NvbG9yOiM2Yzc1N2R9LmZvcm0tY2hlY2stbGFiZWx7bWFyZ2luLWJvdHRvbTowfS5mb3JtLWNoZWNrLWlubGluZXtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveDtkaXNwbGF5OmlubGluZS1mbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjA7bWFyZ2luLXJpZ2h0Oi43NXJlbX0uZm9ybS1jaGVjay1pbmxpbmUgLmZvcm0tY2hlY2staW5wdXR7cG9zaXRpb246c3RhdGljO21hcmdpbi10b3A6MDttYXJnaW4tcmlnaHQ6LjMxMjVyZW07bWFyZ2luLWxlZnQ6MH0udmFsaWQtZmVlZGJhY2t7ZGlzcGxheTpub25lO3dpZHRoOjEwMCU7bWFyZ2luLXRvcDouMjVyZW07Zm9udC1zaXplOjgwJTtjb2xvcjojMjhhNzQ1fS52YWxpZC10b29sdGlwe3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMDAlO3otaW5kZXg6NTtkaXNwbGF5Om5vbmU7bWF4LXdpZHRoOjEwMCU7cGFkZGluZzouMjVyZW0gLjVyZW07bWFyZ2luLXRvcDouMXJlbTtmb250LXNpemU6Ljg3NXJlbTtsaW5lLWhlaWdodDoxLjU7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNDAsMTY3LDY5LC45KTtib3JkZXItcmFkaXVzOi4yNXJlbX0uZm9ybS1jb250cm9sLmlzLXZhbGlkLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2w6dmFsaWR7Ym9yZGVyLWNvbG9yOiMyOGE3NDU7cGFkZGluZy1yaWdodDpjYWxjKDEuNWVtICsgLjc1cmVtKTtiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBmaWxsPSclMjMyOGE3NDUnIGQ9J00yLjMgNi43M0wuNiA0LjUzYy0uNC0xLjA0LjQ2LTEuNCAxLjEtLjhsMS4xIDEuNCAzLjQtMy44Yy42LS42MyAxLjYtLjI3IDEuMi43bC00IDQuNmMtLjQzLjUtLjguNC0xLjEuMXonLyUzZSUzYy9zdmclM2VcXFwiKTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgcmlnaHQgY2FsYyguMzc1ZW0gKyAuMTg3NXJlbSk7YmFja2dyb3VuZC1zaXplOmNhbGMoLjc1ZW0gKyAuMzc1cmVtKSBjYWxjKC43NWVtICsgLjM3NXJlbSl9LmZvcm0tY29udHJvbC5pcy12YWxpZDpmb2N1cywud2FzLXZhbGlkYXRlZCAuZm9ybS1jb250cm9sOnZhbGlkOmZvY3Vze2JvcmRlci1jb2xvcjojMjhhNzQ1O2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSg0MCwxNjcsNjksLjI1KX0uZm9ybS1jb250cm9sLmlzLXZhbGlkfi52YWxpZC1mZWVkYmFjaywuZm9ybS1jb250cm9sLmlzLXZhbGlkfi52YWxpZC10b29sdGlwLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2w6dmFsaWR+LnZhbGlkLWZlZWRiYWNrLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2w6dmFsaWR+LnZhbGlkLXRvb2x0aXB7ZGlzcGxheTpibG9ja30ud2FzLXZhbGlkYXRlZCB0ZXh0YXJlYS5mb3JtLWNvbnRyb2w6dmFsaWQsdGV4dGFyZWEuZm9ybS1jb250cm9sLmlzLXZhbGlke3BhZGRpbmctcmlnaHQ6Y2FsYygxLjVlbSArIC43NXJlbSk7YmFja2dyb3VuZC1wb3NpdGlvbjp0b3AgY2FsYyguMzc1ZW0gKyAuMTg3NXJlbSkgcmlnaHQgY2FsYyguMzc1ZW0gKyAuMTg3NXJlbSl9LmN1c3RvbS1zZWxlY3QuaXMtdmFsaWQsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1zZWxlY3Q6dmFsaWR7Ym9yZGVyLWNvbG9yOiMyOGE3NDU7cGFkZGluZy1yaWdodDpjYWxjKCgxZW0gKyAuNzVyZW0pICogMyAvIDQgKyAxLjc1cmVtKTtiYWNrZ3JvdW5kOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA0IDUnJTNlJTNjcGF0aCBmaWxsPSclMjMzNDNhNDAnIGQ9J00yIDBMMCAyaDR6bTAgNUwwIDNoNHonLyUzZSUzYy9zdmclM2VcXFwiKSBuby1yZXBlYXQgcmlnaHQgLjc1cmVtIGNlbnRlci84cHggMTBweCx1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgOCA4JyUzZSUzY3BhdGggZmlsbD0nJTIzMjhhNzQ1JyBkPSdNMi4zIDYuNzNMLjYgNC41M2MtLjQtMS4wNC40Ni0xLjQgMS4xLS44bDEuMSAxLjQgMy40LTMuOGMuNi0uNjMgMS42LS4yNyAxLjIuN2wtNCA0LjZjLS40My41LS44LjQtMS4xLjF6Jy8lM2UlM2Mvc3ZnJTNlXFxcIikgI2ZmZiBuby1yZXBlYXQgY2VudGVyIHJpZ2h0IDEuNzVyZW0vY2FsYyguNzVlbSArIC4zNzVyZW0pIGNhbGMoLjc1ZW0gKyAuMzc1cmVtKX0uY3VzdG9tLXNlbGVjdC5pcy12YWxpZDpmb2N1cywud2FzLXZhbGlkYXRlZCAuY3VzdG9tLXNlbGVjdDp2YWxpZDpmb2N1c3tib3JkZXItY29sb3I6IzI4YTc0NTtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNDAsMTY3LDY5LC4yNSl9LmN1c3RvbS1zZWxlY3QuaXMtdmFsaWR+LnZhbGlkLWZlZWRiYWNrLC5jdXN0b20tc2VsZWN0LmlzLXZhbGlkfi52YWxpZC10b29sdGlwLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tc2VsZWN0OnZhbGlkfi52YWxpZC1mZWVkYmFjaywud2FzLXZhbGlkYXRlZCAuY3VzdG9tLXNlbGVjdDp2YWxpZH4udmFsaWQtdG9vbHRpcHtkaXNwbGF5OmJsb2NrfS5mb3JtLWNvbnRyb2wtZmlsZS5pcy12YWxpZH4udmFsaWQtZmVlZGJhY2ssLmZvcm0tY29udHJvbC1maWxlLmlzLXZhbGlkfi52YWxpZC10b29sdGlwLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2wtZmlsZTp2YWxpZH4udmFsaWQtZmVlZGJhY2ssLndhcy12YWxpZGF0ZWQgLmZvcm0tY29udHJvbC1maWxlOnZhbGlkfi52YWxpZC10b29sdGlwe2Rpc3BsYXk6YmxvY2t9LmZvcm0tY2hlY2staW5wdXQuaXMtdmFsaWR+LmZvcm0tY2hlY2stbGFiZWwsLndhcy12YWxpZGF0ZWQgLmZvcm0tY2hlY2staW5wdXQ6dmFsaWR+LmZvcm0tY2hlY2stbGFiZWx7Y29sb3I6IzI4YTc0NX0uZm9ybS1jaGVjay1pbnB1dC5pcy12YWxpZH4udmFsaWQtZmVlZGJhY2ssLmZvcm0tY2hlY2staW5wdXQuaXMtdmFsaWR+LnZhbGlkLXRvb2x0aXAsLndhcy12YWxpZGF0ZWQgLmZvcm0tY2hlY2staW5wdXQ6dmFsaWR+LnZhbGlkLWZlZWRiYWNrLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OnZhbGlkfi52YWxpZC10b29sdGlwe2Rpc3BsYXk6YmxvY2t9LmN1c3RvbS1jb250cm9sLWlucHV0LmlzLXZhbGlkfi5jdXN0b20tY29udHJvbC1sYWJlbCwud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6dmFsaWR+LmN1c3RvbS1jb250cm9sLWxhYmVse2NvbG9yOiMyOGE3NDV9LmN1c3RvbS1jb250cm9sLWlucHV0LmlzLXZhbGlkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDp2YWxpZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6IzI4YTc0NX0uY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtdmFsaWR+LnZhbGlkLWZlZWRiYWNrLC5jdXN0b20tY29udHJvbC1pbnB1dC5pcy12YWxpZH4udmFsaWQtdG9vbHRpcCwud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6dmFsaWR+LnZhbGlkLWZlZWRiYWNrLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDp2YWxpZH4udmFsaWQtdG9vbHRpcHtkaXNwbGF5OmJsb2NrfS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy12YWxpZDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDp2YWxpZDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1jb2xvcjojMzRjZTU3O2JhY2tncm91bmQtY29sb3I6IzM0Y2U1N30uY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtdmFsaWQ6Zm9jdXN+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1jb250cm9sLWlucHV0OnZhbGlkOmZvY3Vzfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSg0MCwxNjcsNjksLjI1KX0uY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtdmFsaWQ6Zm9jdXM6bm90KDpjaGVja2VkKX4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6dmFsaWQ6Zm9jdXM6bm90KDpjaGVja2VkKX4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6IzI4YTc0NX0uY3VzdG9tLWZpbGUtaW5wdXQuaXMtdmFsaWR+LmN1c3RvbS1maWxlLWxhYmVsLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tZmlsZS1pbnB1dDp2YWxpZH4uY3VzdG9tLWZpbGUtbGFiZWx7Ym9yZGVyLWNvbG9yOiMyOGE3NDV9LmN1c3RvbS1maWxlLWlucHV0LmlzLXZhbGlkfi52YWxpZC1mZWVkYmFjaywuY3VzdG9tLWZpbGUtaW5wdXQuaXMtdmFsaWR+LnZhbGlkLXRvb2x0aXAsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1maWxlLWlucHV0OnZhbGlkfi52YWxpZC1mZWVkYmFjaywud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWZpbGUtaW5wdXQ6dmFsaWR+LnZhbGlkLXRvb2x0aXB7ZGlzcGxheTpibG9ja30uY3VzdG9tLWZpbGUtaW5wdXQuaXMtdmFsaWQ6Zm9jdXN+LmN1c3RvbS1maWxlLWxhYmVsLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tZmlsZS1pbnB1dDp2YWxpZDpmb2N1c34uY3VzdG9tLWZpbGUtbGFiZWx7Ym9yZGVyLWNvbG9yOiMyOGE3NDU7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDQwLDE2Nyw2OSwuMjUpfS5pbnZhbGlkLWZlZWRiYWNre2Rpc3BsYXk6bm9uZTt3aWR0aDoxMDAlO21hcmdpbi10b3A6LjI1cmVtO2ZvbnQtc2l6ZTo4MCU7Y29sb3I6I2RjMzU0NX0uaW52YWxpZC10b29sdGlwe3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMDAlO3otaW5kZXg6NTtkaXNwbGF5Om5vbmU7bWF4LXdpZHRoOjEwMCU7cGFkZGluZzouMjVyZW0gLjVyZW07bWFyZ2luLXRvcDouMXJlbTtmb250LXNpemU6Ljg3NXJlbTtsaW5lLWhlaWdodDoxLjU7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjIwLDUzLDY5LC45KTtib3JkZXItcmFkaXVzOi4yNXJlbX0uZm9ybS1jb250cm9sLmlzLWludmFsaWQsLndhcy12YWxpZGF0ZWQgLmZvcm0tY29udHJvbDppbnZhbGlke2JvcmRlci1jb2xvcjojZGMzNTQ1O3BhZGRpbmctcmlnaHQ6Y2FsYygxLjVlbSArIC43NXJlbSk7YmFja2dyb3VuZC1pbWFnZTp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBmaWxsPSclMjNkYzM1NDUnIHZpZXdCb3g9Jy0yIC0yIDcgNyclM2UlM2NwYXRoIHN0cm9rZT0nJTIzZGMzNTQ1JyBkPSdNMCAwbDMgM20wLTNMMCAzJy8lM2UlM2NjaXJjbGUgcj0nLjUnLyUzZSUzY2NpcmNsZSBjeD0nMycgcj0nLjUnLyUzZSUzY2NpcmNsZSBjeT0nMycgcj0nLjUnLyUzZSUzY2NpcmNsZSBjeD0nMycgY3k9JzMnIHI9Jy41Jy8lM2UlM2Mvc3ZnJTNFXFxcIik7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIHJpZ2h0IGNhbGMoLjM3NWVtICsgLjE4NzVyZW0pO2JhY2tncm91bmQtc2l6ZTpjYWxjKC43NWVtICsgLjM3NXJlbSkgY2FsYyguNzVlbSArIC4zNzVyZW0pfS5mb3JtLWNvbnRyb2wuaXMtaW52YWxpZDpmb2N1cywud2FzLXZhbGlkYXRlZCAuZm9ybS1jb250cm9sOmludmFsaWQ6Zm9jdXN7Ym9yZGVyLWNvbG9yOiNkYzM1NDU7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIyMCw1Myw2OSwuMjUpfS5mb3JtLWNvbnRyb2wuaXMtaW52YWxpZH4uaW52YWxpZC1mZWVkYmFjaywuZm9ybS1jb250cm9sLmlzLWludmFsaWR+LmludmFsaWQtdG9vbHRpcCwud2FzLXZhbGlkYXRlZCAuZm9ybS1jb250cm9sOmludmFsaWR+LmludmFsaWQtZmVlZGJhY2ssLndhcy12YWxpZGF0ZWQgLmZvcm0tY29udHJvbDppbnZhbGlkfi5pbnZhbGlkLXRvb2x0aXB7ZGlzcGxheTpibG9ja30ud2FzLXZhbGlkYXRlZCB0ZXh0YXJlYS5mb3JtLWNvbnRyb2w6aW52YWxpZCx0ZXh0YXJlYS5mb3JtLWNvbnRyb2wuaXMtaW52YWxpZHtwYWRkaW5nLXJpZ2h0OmNhbGMoMS41ZW0gKyAuNzVyZW0pO2JhY2tncm91bmQtcG9zaXRpb246dG9wIGNhbGMoLjM3NWVtICsgLjE4NzVyZW0pIHJpZ2h0IGNhbGMoLjM3NWVtICsgLjE4NzVyZW0pfS5jdXN0b20tc2VsZWN0LmlzLWludmFsaWQsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1zZWxlY3Q6aW52YWxpZHtib3JkZXItY29sb3I6I2RjMzU0NTtwYWRkaW5nLXJpZ2h0OmNhbGMoKDFlbSArIC43NXJlbSkgKiAzIC8gNCArIDEuNzVyZW0pO2JhY2tncm91bmQ6dXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDQgNSclM2UlM2NwYXRoIGZpbGw9JyUyMzM0M2E0MCcgZD0nTTIgMEwwIDJoNHptMCA1TDAgM2g0eicvJTNlJTNjL3N2ZyUzZVxcXCIpIG5vLXJlcGVhdCByaWdodCAuNzVyZW0gY2VudGVyLzhweCAxMHB4LHVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyUyM2RjMzU0NScgdmlld0JveD0nLTIgLTIgNyA3JyUzZSUzY3BhdGggc3Ryb2tlPSclMjNkYzM1NDUnIGQ9J00wIDBsMyAzbTAtM0wwIDMnLyUzZSUzY2NpcmNsZSByPScuNScvJTNlJTNjY2lyY2xlIGN4PSczJyByPScuNScvJTNlJTNjY2lyY2xlIGN5PSczJyByPScuNScvJTNlJTNjY2lyY2xlIGN4PSczJyBjeT0nMycgcj0nLjUnLyUzZSUzYy9zdmclM0VcXFwiKSAjZmZmIG5vLXJlcGVhdCBjZW50ZXIgcmlnaHQgMS43NXJlbS9jYWxjKC43NWVtICsgLjM3NXJlbSkgY2FsYyguNzVlbSArIC4zNzVyZW0pfS5jdXN0b20tc2VsZWN0LmlzLWludmFsaWQ6Zm9jdXMsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1zZWxlY3Q6aW52YWxpZDpmb2N1c3tib3JkZXItY29sb3I6I2RjMzU0NTtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjIwLDUzLDY5LC4yNSl9LmN1c3RvbS1zZWxlY3QuaXMtaW52YWxpZH4uaW52YWxpZC1mZWVkYmFjaywuY3VzdG9tLXNlbGVjdC5pcy1pbnZhbGlkfi5pbnZhbGlkLXRvb2x0aXAsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1zZWxlY3Q6aW52YWxpZH4uaW52YWxpZC1mZWVkYmFjaywud2FzLXZhbGlkYXRlZCAuY3VzdG9tLXNlbGVjdDppbnZhbGlkfi5pbnZhbGlkLXRvb2x0aXB7ZGlzcGxheTpibG9ja30uZm9ybS1jb250cm9sLWZpbGUuaXMtaW52YWxpZH4uaW52YWxpZC1mZWVkYmFjaywuZm9ybS1jb250cm9sLWZpbGUuaXMtaW52YWxpZH4uaW52YWxpZC10b29sdGlwLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2wtZmlsZTppbnZhbGlkfi5pbnZhbGlkLWZlZWRiYWNrLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2wtZmlsZTppbnZhbGlkfi5pbnZhbGlkLXRvb2x0aXB7ZGlzcGxheTpibG9ja30uZm9ybS1jaGVjay1pbnB1dC5pcy1pbnZhbGlkfi5mb3JtLWNoZWNrLWxhYmVsLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OmludmFsaWR+LmZvcm0tY2hlY2stbGFiZWx7Y29sb3I6I2RjMzU0NX0uZm9ybS1jaGVjay1pbnB1dC5pcy1pbnZhbGlkfi5pbnZhbGlkLWZlZWRiYWNrLC5mb3JtLWNoZWNrLWlucHV0LmlzLWludmFsaWR+LmludmFsaWQtdG9vbHRpcCwud2FzLXZhbGlkYXRlZCAuZm9ybS1jaGVjay1pbnB1dDppbnZhbGlkfi5pbnZhbGlkLWZlZWRiYWNrLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OmludmFsaWR+LmludmFsaWQtdG9vbHRpcHtkaXNwbGF5OmJsb2NrfS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy1pbnZhbGlkfi5jdXN0b20tY29udHJvbC1sYWJlbCwud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6aW52YWxpZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWx7Y29sb3I6I2RjMzU0NX0uY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtaW52YWxpZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6aW52YWxpZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6I2RjMzU0NX0uY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtaW52YWxpZH4uaW52YWxpZC1mZWVkYmFjaywuY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtaW52YWxpZH4uaW52YWxpZC10b29sdGlwLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkfi5pbnZhbGlkLWZlZWRiYWNrLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkfi5pbnZhbGlkLXRvb2x0aXB7ZGlzcGxheTpibG9ja30uY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtaW52YWxpZDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkOmNoZWNrZWR+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym9yZGVyLWNvbG9yOiNlNDYwNmQ7YmFja2dyb3VuZC1jb2xvcjojZTQ2MDZkfS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy1pbnZhbGlkOmZvY3Vzfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkOmZvY3Vzfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMjAsNTMsNjksLjI1KX0uY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtaW52YWxpZDpmb2N1czpub3QoOmNoZWNrZWQpfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkOmZvY3VzOm5vdCg6Y2hlY2tlZCl+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym9yZGVyLWNvbG9yOiNkYzM1NDV9LmN1c3RvbS1maWxlLWlucHV0LmlzLWludmFsaWR+LmN1c3RvbS1maWxlLWxhYmVsLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tZmlsZS1pbnB1dDppbnZhbGlkfi5jdXN0b20tZmlsZS1sYWJlbHtib3JkZXItY29sb3I6I2RjMzU0NX0uY3VzdG9tLWZpbGUtaW5wdXQuaXMtaW52YWxpZH4uaW52YWxpZC1mZWVkYmFjaywuY3VzdG9tLWZpbGUtaW5wdXQuaXMtaW52YWxpZH4uaW52YWxpZC10b29sdGlwLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tZmlsZS1pbnB1dDppbnZhbGlkfi5pbnZhbGlkLWZlZWRiYWNrLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tZmlsZS1pbnB1dDppbnZhbGlkfi5pbnZhbGlkLXRvb2x0aXB7ZGlzcGxheTpibG9ja30uY3VzdG9tLWZpbGUtaW5wdXQuaXMtaW52YWxpZDpmb2N1c34uY3VzdG9tLWZpbGUtbGFiZWwsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1maWxlLWlucHV0OmludmFsaWQ6Zm9jdXN+LmN1c3RvbS1maWxlLWxhYmVse2JvcmRlci1jb2xvcjojZGMzNTQ1O2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMjAsNTMsNjksLjI1KX0uZm9ybS1pbmxpbmV7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtZmxvdzpyb3cgd3JhcDtmbGV4LWZsb3c6cm93IHdyYXA7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0uZm9ybS1pbmxpbmUgLmZvcm0tY2hlY2t7d2lkdGg6MTAwJX1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmZvcm0taW5saW5lIGxhYmVse2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjttYXJnaW4tYm90dG9tOjB9LmZvcm0taW5saW5lIC5mb3JtLWdyb3Vwe2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4OjAgMCBhdXRvO2ZsZXg6MCAwIGF1dG87LW1zLWZsZXgtZmxvdzpyb3cgd3JhcDtmbGV4LWZsb3c6cm93IHdyYXA7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjttYXJnaW4tYm90dG9tOjB9LmZvcm0taW5saW5lIC5mb3JtLWNvbnRyb2x7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6YXV0bzt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmZvcm0taW5saW5lIC5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0e2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5mb3JtLWlubGluZSAuY3VzdG9tLXNlbGVjdCwuZm9ybS1pbmxpbmUgLmlucHV0LWdyb3Vwe3dpZHRoOmF1dG99LmZvcm0taW5saW5lIC5mb3JtLWNoZWNre2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt3aWR0aDphdXRvO3BhZGRpbmctbGVmdDowfS5mb3JtLWlubGluZSAuZm9ybS1jaGVjay1pbnB1dHtwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleC1uZWdhdGl2ZTowO2ZsZXgtc2hyaW5rOjA7bWFyZ2luLXRvcDowO21hcmdpbi1yaWdodDouMjVyZW07bWFyZ2luLWxlZnQ6MH0uZm9ybS1pbmxpbmUgLmN1c3RvbS1jb250cm9sey1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn0uZm9ybS1pbmxpbmUgLmN1c3RvbS1jb250cm9sLWxhYmVse21hcmdpbi1ib3R0b206MH19LmJ0bntkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXdlaWdodDo0MDA7Y29sb3I6IzIxMjUyOTt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjFweCBzb2xpZCB0cmFuc3BhcmVudDtwYWRkaW5nOi4zNzVyZW0gLjc1cmVtO2ZvbnQtc2l6ZToxcmVtO2xpbmUtaGVpZ2h0OjEuNTtib3JkZXItcmFkaXVzOi4yNXJlbTt0cmFuc2l0aW9uOmNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dH1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuYnRue3RyYW5zaXRpb246bm9uZX19LmJ0bjpob3Zlcntjb2xvcjojMjEyNTI5O3RleHQtZGVjb3JhdGlvbjpub25lfS5idG4uZm9jdXMsLmJ0bjpmb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDAsMTIzLDI1NSwuMjUpfS5idG4uZGlzYWJsZWQsLmJ0bjpkaXNhYmxlZHtvcGFjaXR5Oi42NX1hLmJ0bi5kaXNhYmxlZCxmaWVsZHNldDpkaXNhYmxlZCBhLmJ0bntwb2ludGVyLWV2ZW50czpub25lfS5idG4tcHJpbWFyeXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn0uYnRuLXByaW1hcnk6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDY5ZDk7Ym9yZGVyLWNvbG9yOiMwMDYyY2N9LmJ0bi1wcmltYXJ5LmZvY3VzLC5idG4tcHJpbWFyeTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMzgsMTQzLDI1NSwuNSl9LmJ0bi1wcmltYXJ5LmRpc2FibGVkLC5idG4tcHJpbWFyeTpkaXNhYmxlZHtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn0uYnRuLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi1wcmltYXJ5LmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwNjJjYztib3JkZXItY29sb3I6IzAwNWNiZn0uYnRuLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1wcmltYXJ5LmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMzgsMTQzLDI1NSwuNSl9LmJ0bi1zZWNvbmRhcnl7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM2Yzc1N2Q7Ym9yZGVyLWNvbG9yOiM2Yzc1N2R9LmJ0bi1zZWNvbmRhcnk6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM1YTYyNjg7Ym9yZGVyLWNvbG9yOiM1NDViNjJ9LmJ0bi1zZWNvbmRhcnkuZm9jdXMsLmJ0bi1zZWNvbmRhcnk6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDEzMCwxMzgsMTQ1LC41KX0uYnRuLXNlY29uZGFyeS5kaXNhYmxlZCwuYnRuLXNlY29uZGFyeTpkaXNhYmxlZHtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzZjNzU3ZDtib3JkZXItY29sb3I6IzZjNzU3ZH0uYnRuLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tc2Vjb25kYXJ5LmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzU0NWI2Mjtib3JkZXItY29sb3I6IzRlNTU1Yn0uYnRuLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tc2Vjb25kYXJ5LmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMTMwLDEzOCwxNDUsLjUpfS5idG4tc3VjY2Vzc3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzI4YTc0NTtib3JkZXItY29sb3I6IzI4YTc0NX0uYnRuLXN1Y2Nlc3M6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMyMTg4Mzg7Ym9yZGVyLWNvbG9yOiMxZTdlMzR9LmJ0bi1zdWNjZXNzLmZvY3VzLC5idG4tc3VjY2Vzczpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNzIsMTgwLDk3LC41KX0uYnRuLXN1Y2Nlc3MuZGlzYWJsZWQsLmJ0bi1zdWNjZXNzOmRpc2FibGVke2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMjhhNzQ1O2JvcmRlci1jb2xvcjojMjhhNzQ1fS5idG4tc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi1zdWNjZXNzOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuc2hvdz4uYnRuLXN1Y2Nlc3MuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMWU3ZTM0O2JvcmRlci1jb2xvcjojMWM3NDMwfS5idG4tc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi1zdWNjZXNzOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLXN1Y2Nlc3MuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSg3MiwxODAsOTcsLjUpfS5idG4taW5mb3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzE3YTJiODtib3JkZXItY29sb3I6IzE3YTJiOH0uYnRuLWluZm86aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxMzg0OTY7Ym9yZGVyLWNvbG9yOiMxMTdhOGJ9LmJ0bi1pbmZvLmZvY3VzLC5idG4taW5mbzpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNTgsMTc2LDE5NSwuNSl9LmJ0bi1pbmZvLmRpc2FibGVkLC5idG4taW5mbzpkaXNhYmxlZHtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzE3YTJiODtib3JkZXItY29sb3I6IzE3YTJiOH0uYnRuLWluZm86bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4taW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi1pbmZvLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzExN2E4Yjtib3JkZXItY29sb3I6IzEwNzA3Zn0uYnRuLWluZm86bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4taW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1pbmZvLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNTgsMTc2LDE5NSwuNSl9LmJ0bi13YXJuaW5ne2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZmZjMTA3O2JvcmRlci1jb2xvcjojZmZjMTA3fS5idG4td2FybmluZzpob3Zlcntjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2UwYTgwMDtib3JkZXItY29sb3I6I2QzOWUwMH0uYnRuLXdhcm5pbmcuZm9jdXMsLmJ0bi13YXJuaW5nOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMjIsMTcwLDEyLC41KX0uYnRuLXdhcm5pbmcuZGlzYWJsZWQsLmJ0bi13YXJuaW5nOmRpc2FibGVke2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZmZjMTA3O2JvcmRlci1jb2xvcjojZmZjMTA3fS5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuc2hvdz4uYnRuLXdhcm5pbmcuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZDM5ZTAwO2JvcmRlci1jb2xvcjojYzY5NTAwfS5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLXdhcm5pbmcuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMjIsMTcwLDEyLC41KX0uYnRuLWRhbmdlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2RjMzU0NTtib3JkZXItY29sb3I6I2RjMzU0NX0uYnRuLWRhbmdlcjpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2M4MjMzMztib3JkZXItY29sb3I6I2JkMjEzMH0uYnRuLWRhbmdlci5mb2N1cywuYnRuLWRhbmdlcjpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjI1LDgzLDk3LC41KX0uYnRuLWRhbmdlci5kaXNhYmxlZCwuYnRuLWRhbmdlcjpkaXNhYmxlZHtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2RjMzU0NTtib3JkZXItY29sb3I6I2RjMzU0NX0uYnRuLWRhbmdlcjpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tZGFuZ2VyLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2JkMjEzMDtib3JkZXItY29sb3I6I2IyMWYyZH0uYnRuLWRhbmdlcjpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tZGFuZ2VyLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjI1LDgzLDk3LC41KX0uYnRuLWxpZ2h0e2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZjhmOWZhO2JvcmRlci1jb2xvcjojZjhmOWZhfS5idG4tbGlnaHQ6aG92ZXJ7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNlMmU2ZWE7Ym9yZGVyLWNvbG9yOiNkYWUwZTV9LmJ0bi1saWdodC5mb2N1cywuYnRuLWxpZ2h0OmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMTYsMjE3LDIxOSwuNSl9LmJ0bi1saWdodC5kaXNhYmxlZCwuYnRuLWxpZ2h0OmRpc2FibGVke2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZjhmOWZhO2JvcmRlci1jb2xvcjojZjhmOWZhfS5idG4tbGlnaHQ6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tbGlnaHQ6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tbGlnaHQuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZGFlMGU1O2JvcmRlci1jb2xvcjojZDNkOWRmfS5idG4tbGlnaHQ6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tbGlnaHQ6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tbGlnaHQuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMTYsMjE3LDIxOSwuNSl9LmJ0bi1kYXJre2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwO2JvcmRlci1jb2xvcjojMzQzYTQwfS5idG4tZGFyazpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzIzMjcyYjtib3JkZXItY29sb3I6IzFkMjEyNH0uYnRuLWRhcmsuZm9jdXMsLmJ0bi1kYXJrOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSg4Miw4OCw5MywuNSl9LmJ0bi1kYXJrLmRpc2FibGVkLC5idG4tZGFyazpkaXNhYmxlZHtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzM0M2E0MDtib3JkZXItY29sb3I6IzM0M2E0MH0uYnRuLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi1kYXJrLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzFkMjEyNDtib3JkZXItY29sb3I6IzE3MWExZH0uYnRuLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1kYXJrLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoODIsODgsOTMsLjUpfS5idG4tb3V0bGluZS1wcmltYXJ5e2NvbG9yOiMwMDdiZmY7Ym9yZGVyLWNvbG9yOiMwMDdiZmZ9LmJ0bi1vdXRsaW5lLXByaW1hcnk6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7Ym9yZGVyLWNvbG9yOiMwMDdiZmZ9LmJ0bi1vdXRsaW5lLXByaW1hcnkuZm9jdXMsLmJ0bi1vdXRsaW5lLXByaW1hcnk6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDAsMTIzLDI1NSwuNSl9LmJ0bi1vdXRsaW5lLXByaW1hcnkuZGlzYWJsZWQsLmJ0bi1vdXRsaW5lLXByaW1hcnk6ZGlzYWJsZWR7Y29sb3I6IzAwN2JmZjtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLW91dGxpbmUtcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi1vdXRsaW5lLXByaW1hcnkuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmO2JvcmRlci1jb2xvcjojMDA3YmZmfS5idG4tb3V0bGluZS1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLW91dGxpbmUtcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1vdXRsaW5lLXByaW1hcnkuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgwLDEyMywyNTUsLjUpfS5idG4tb3V0bGluZS1zZWNvbmRhcnl7Y29sb3I6IzZjNzU3ZDtib3JkZXItY29sb3I6IzZjNzU3ZH0uYnRuLW91dGxpbmUtc2Vjb25kYXJ5OmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNmM3NTdkO2JvcmRlci1jb2xvcjojNmM3NTdkfS5idG4tb3V0bGluZS1zZWNvbmRhcnkuZm9jdXMsLmJ0bi1vdXRsaW5lLXNlY29uZGFyeTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMTA4LDExNywxMjUsLjUpfS5idG4tb3V0bGluZS1zZWNvbmRhcnkuZGlzYWJsZWQsLmJ0bi1vdXRsaW5lLXNlY29uZGFyeTpkaXNhYmxlZHtjb2xvcjojNmM3NTdkO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmJ0bi1vdXRsaW5lLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi1vdXRsaW5lLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi1vdXRsaW5lLXNlY29uZGFyeS5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM2Yzc1N2Q7Ym9yZGVyLWNvbG9yOiM2Yzc1N2R9LmJ0bi1vdXRsaW5lLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi1vdXRsaW5lLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1vdXRsaW5lLXNlY29uZGFyeS5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDEwOCwxMTcsMTI1LC41KX0uYnRuLW91dGxpbmUtc3VjY2Vzc3tjb2xvcjojMjhhNzQ1O2JvcmRlci1jb2xvcjojMjhhNzQ1fS5idG4tb3V0bGluZS1zdWNjZXNzOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMjhhNzQ1O2JvcmRlci1jb2xvcjojMjhhNzQ1fS5idG4tb3V0bGluZS1zdWNjZXNzLmZvY3VzLC5idG4tb3V0bGluZS1zdWNjZXNzOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSg0MCwxNjcsNjksLjUpfS5idG4tb3V0bGluZS1zdWNjZXNzLmRpc2FibGVkLC5idG4tb3V0bGluZS1zdWNjZXNzOmRpc2FibGVke2NvbG9yOiMyOGE3NDU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uYnRuLW91dGxpbmUtc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS1zdWNjZXNzLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzI4YTc0NTtib3JkZXItY29sb3I6IzI4YTc0NX0uYnRuLW91dGxpbmUtc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS1zdWNjZXNzLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNDAsMTY3LDY5LC41KX0uYnRuLW91dGxpbmUtaW5mb3tjb2xvcjojMTdhMmI4O2JvcmRlci1jb2xvcjojMTdhMmI4fS5idG4tb3V0bGluZS1pbmZvOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTdhMmI4O2JvcmRlci1jb2xvcjojMTdhMmI4fS5idG4tb3V0bGluZS1pbmZvLmZvY3VzLC5idG4tb3V0bGluZS1pbmZvOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMywxNjIsMTg0LC41KX0uYnRuLW91dGxpbmUtaW5mby5kaXNhYmxlZCwuYnRuLW91dGxpbmUtaW5mbzpkaXNhYmxlZHtjb2xvcjojMTdhMmI4O2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmJ0bi1vdXRsaW5lLWluZm86bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tb3V0bGluZS1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuc2hvdz4uYnRuLW91dGxpbmUtaW5mby5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxN2EyYjg7Ym9yZGVyLWNvbG9yOiMxN2EyYjh9LmJ0bi1vdXRsaW5lLWluZm86bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tb3V0bGluZS1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLW91dGxpbmUtaW5mby5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIzLDE2MiwxODQsLjUpfS5idG4tb3V0bGluZS13YXJuaW5ne2NvbG9yOiNmZmMxMDc7Ym9yZGVyLWNvbG9yOiNmZmMxMDd9LmJ0bi1vdXRsaW5lLXdhcm5pbmc6aG92ZXJ7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmMxMDc7Ym9yZGVyLWNvbG9yOiNmZmMxMDd9LmJ0bi1vdXRsaW5lLXdhcm5pbmcuZm9jdXMsLmJ0bi1vdXRsaW5lLXdhcm5pbmc6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDI1NSwxOTMsNywuNSl9LmJ0bi1vdXRsaW5lLXdhcm5pbmcuZGlzYWJsZWQsLmJ0bi1vdXRsaW5lLXdhcm5pbmc6ZGlzYWJsZWR7Y29sb3I6I2ZmYzEwNztiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLW91dGxpbmUtd2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi1vdXRsaW5lLXdhcm5pbmcuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZmZjMTA3O2JvcmRlci1jb2xvcjojZmZjMTA3fS5idG4tb3V0bGluZS13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLW91dGxpbmUtd2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1vdXRsaW5lLXdhcm5pbmcuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyNTUsMTkzLDcsLjUpfS5idG4tb3V0bGluZS1kYW5nZXJ7Y29sb3I6I2RjMzU0NTtib3JkZXItY29sb3I6I2RjMzU0NX0uYnRuLW91dGxpbmUtZGFuZ2VyOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojZGMzNTQ1O2JvcmRlci1jb2xvcjojZGMzNTQ1fS5idG4tb3V0bGluZS1kYW5nZXIuZm9jdXMsLmJ0bi1vdXRsaW5lLWRhbmdlcjpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjIwLDUzLDY5LC41KX0uYnRuLW91dGxpbmUtZGFuZ2VyLmRpc2FibGVkLC5idG4tb3V0bGluZS1kYW5nZXI6ZGlzYWJsZWR7Y29sb3I6I2RjMzU0NTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS1kYW5nZXIuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojZGMzNTQ1O2JvcmRlci1jb2xvcjojZGMzNTQ1fS5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS1kYW5nZXIuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMjAsNTMsNjksLjUpfS5idG4tb3V0bGluZS1saWdodHtjb2xvcjojZjhmOWZhO2JvcmRlci1jb2xvcjojZjhmOWZhfS5idG4tb3V0bGluZS1saWdodDpob3Zlcntjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2Y4ZjlmYTtib3JkZXItY29sb3I6I2Y4ZjlmYX0uYnRuLW91dGxpbmUtbGlnaHQuZm9jdXMsLmJ0bi1vdXRsaW5lLWxpZ2h0OmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyNDgsMjQ5LDI1MCwuNSl9LmJ0bi1vdXRsaW5lLWxpZ2h0LmRpc2FibGVkLC5idG4tb3V0bGluZS1saWdodDpkaXNhYmxlZHtjb2xvcjojZjhmOWZhO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLW91dGxpbmUtbGlnaHQ6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS1saWdodC5kcm9wZG93bi10b2dnbGV7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNmOGY5ZmE7Ym9yZGVyLWNvbG9yOiNmOGY5ZmF9LmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLW91dGxpbmUtbGlnaHQ6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS1saWdodC5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDI0OCwyNDksMjUwLC41KX0uYnRuLW91dGxpbmUtZGFya3tjb2xvcjojMzQzYTQwO2JvcmRlci1jb2xvcjojMzQzYTQwfS5idG4tb3V0bGluZS1kYXJrOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwO2JvcmRlci1jb2xvcjojMzQzYTQwfS5idG4tb3V0bGluZS1kYXJrLmZvY3VzLC5idG4tb3V0bGluZS1kYXJrOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSg1Miw1OCw2NCwuNSl9LmJ0bi1vdXRsaW5lLWRhcmsuZGlzYWJsZWQsLmJ0bi1vdXRsaW5lLWRhcms6ZGlzYWJsZWR7Y29sb3I6IzM0M2E0MDtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS1kYXJrOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLW91dGxpbmUtZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi1vdXRsaW5lLWRhcmsuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwO2JvcmRlci1jb2xvcjojMzQzYTQwfS5idG4tb3V0bGluZS1kYXJrOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLW91dGxpbmUtZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1vdXRsaW5lLWRhcmsuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSg1Miw1OCw2NCwuNSl9LmJ0bi1saW5re2ZvbnQtd2VpZ2h0OjQwMDtjb2xvcjojMDA3YmZmO3RleHQtZGVjb3JhdGlvbjpub25lfS5idG4tbGluazpob3Zlcntjb2xvcjojMDA1NmIzO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9LmJ0bi1saW5rLmZvY3VzLC5idG4tbGluazpmb2N1c3t0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO2JveC1zaGFkb3c6bm9uZX0uYnRuLWxpbmsuZGlzYWJsZWQsLmJ0bi1saW5rOmRpc2FibGVke2NvbG9yOiM2Yzc1N2Q7cG9pbnRlci1ldmVudHM6bm9uZX0uYnRuLWdyb3VwLWxnPi5idG4sLmJ0bi1sZ3twYWRkaW5nOi41cmVtIDFyZW07Zm9udC1zaXplOjEuMjVyZW07bGluZS1oZWlnaHQ6MS41O2JvcmRlci1yYWRpdXM6LjNyZW19LmJ0bi1ncm91cC1zbT4uYnRuLC5idG4tc217cGFkZGluZzouMjVyZW0gLjVyZW07Zm9udC1zaXplOi44NzVyZW07bGluZS1oZWlnaHQ6MS41O2JvcmRlci1yYWRpdXM6LjJyZW19LmJ0bi1ibG9ja3tkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCV9LmJ0bi1ibG9jaysuYnRuLWJsb2Nre21hcmdpbi10b3A6LjVyZW19aW5wdXRbdHlwZT1idXR0b25dLmJ0bi1ibG9jayxpbnB1dFt0eXBlPXJlc2V0XS5idG4tYmxvY2ssaW5wdXRbdHlwZT1zdWJtaXRdLmJ0bi1ibG9ja3t3aWR0aDoxMDAlfS5mYWRle3RyYW5zaXRpb246b3BhY2l0eSAuMTVzIGxpbmVhcn1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuZmFkZXt0cmFuc2l0aW9uOm5vbmV9fS5mYWRlOm5vdCguc2hvdyl7b3BhY2l0eTowfS5jb2xsYXBzZTpub3QoLnNob3cpe2Rpc3BsYXk6bm9uZX0uY29sbGFwc2luZ3twb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6MDtvdmVyZmxvdzpoaWRkZW47dHJhbnNpdGlvbjpoZWlnaHQgLjM1cyBlYXNlfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jb2xsYXBzaW5ne3RyYW5zaXRpb246bm9uZX19LmRyb3Bkb3duLC5kcm9wbGVmdCwuZHJvcHJpZ2h0LC5kcm9wdXB7cG9zaXRpb246cmVsYXRpdmV9LmRyb3Bkb3duLXRvZ2dsZXt3aGl0ZS1zcGFjZTpub3dyYXB9LmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6LjI1NWVtO3ZlcnRpY2FsLWFsaWduOi4yNTVlbTtjb250ZW50OlxcXCJcXFwiO2JvcmRlci10b3A6LjNlbSBzb2xpZDtib3JkZXItcmlnaHQ6LjNlbSBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOjA7Ym9yZGVyLWxlZnQ6LjNlbSBzb2xpZCB0cmFuc3BhcmVudH0uZHJvcGRvd24tdG9nZ2xlOmVtcHR5OjphZnRlcnttYXJnaW4tbGVmdDowfS5kcm9wZG93bi1tZW51e3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMDAlO2xlZnQ6MDt6LWluZGV4OjEwMDA7ZGlzcGxheTpub25lO2Zsb2F0OmxlZnQ7bWluLXdpZHRoOjEwcmVtO3BhZGRpbmc6LjVyZW0gMDttYXJnaW46LjEyNXJlbSAwIDA7Zm9udC1zaXplOjFyZW07Y29sb3I6IzIxMjUyOTt0ZXh0LWFsaWduOmxlZnQ7bGlzdC1zdHlsZTpub25lO2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xNSk7Ym9yZGVyLXJhZGl1czouMjVyZW19LmRyb3Bkb3duLW1lbnUtbGVmdHtyaWdodDphdXRvO2xlZnQ6MH0uZHJvcGRvd24tbWVudS1yaWdodHtyaWdodDowO2xlZnQ6YXV0b31AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmRyb3Bkb3duLW1lbnUtc20tbGVmdHtyaWdodDphdXRvO2xlZnQ6MH0uZHJvcGRvd24tbWVudS1zbS1yaWdodHtyaWdodDowO2xlZnQ6YXV0b319QG1lZGlhIChtaW4td2lkdGg6NzY4cHgpey5kcm9wZG93bi1tZW51LW1kLWxlZnR7cmlnaHQ6YXV0bztsZWZ0OjB9LmRyb3Bkb3duLW1lbnUtbWQtcmlnaHR7cmlnaHQ6MDtsZWZ0OmF1dG99fUBtZWRpYSAobWluLXdpZHRoOjk5MnB4KXsuZHJvcGRvd24tbWVudS1sZy1sZWZ0e3JpZ2h0OmF1dG87bGVmdDowfS5kcm9wZG93bi1tZW51LWxnLXJpZ2h0e3JpZ2h0OjA7bGVmdDphdXRvfX1AbWVkaWEgKG1pbi13aWR0aDoxMjAwcHgpey5kcm9wZG93bi1tZW51LXhsLWxlZnR7cmlnaHQ6YXV0bztsZWZ0OjB9LmRyb3Bkb3duLW1lbnUteGwtcmlnaHR7cmlnaHQ6MDtsZWZ0OmF1dG99fS5kcm9wdXAgLmRyb3Bkb3duLW1lbnV7dG9wOmF1dG87Ym90dG9tOjEwMCU7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206LjEyNXJlbX0uZHJvcHVwIC5kcm9wZG93bi10b2dnbGU6OmFmdGVye2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0Oi4yNTVlbTt2ZXJ0aWNhbC1hbGlnbjouMjU1ZW07Y29udGVudDpcXFwiXFxcIjtib3JkZXItdG9wOjA7Ym9yZGVyLXJpZ2h0Oi4zZW0gc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWJvdHRvbTouM2VtIHNvbGlkO2JvcmRlci1sZWZ0Oi4zZW0gc29saWQgdHJhbnNwYXJlbnR9LmRyb3B1cCAuZHJvcGRvd24tdG9nZ2xlOmVtcHR5OjphZnRlcnttYXJnaW4tbGVmdDowfS5kcm9wcmlnaHQgLmRyb3Bkb3duLW1lbnV7dG9wOjA7cmlnaHQ6YXV0bztsZWZ0OjEwMCU7bWFyZ2luLXRvcDowO21hcmdpbi1sZWZ0Oi4xMjVyZW19LmRyb3ByaWdodCAuZHJvcGRvd24tdG9nZ2xlOjphZnRlcntkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDouMjU1ZW07dmVydGljYWwtYWxpZ246LjI1NWVtO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLXRvcDouM2VtIHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1yaWdodDowO2JvcmRlci1ib3R0b206LjNlbSBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItbGVmdDouM2VtIHNvbGlkfS5kcm9wcmlnaHQgLmRyb3Bkb3duLXRvZ2dsZTplbXB0eTo6YWZ0ZXJ7bWFyZ2luLWxlZnQ6MH0uZHJvcHJpZ2h0IC5kcm9wZG93bi10b2dnbGU6OmFmdGVye3ZlcnRpY2FsLWFsaWduOjB9LmRyb3BsZWZ0IC5kcm9wZG93bi1tZW51e3RvcDowO3JpZ2h0OjEwMCU7bGVmdDphdXRvO21hcmdpbi10b3A6MDttYXJnaW4tcmlnaHQ6LjEyNXJlbX0uZHJvcGxlZnQgLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6LjI1NWVtO3ZlcnRpY2FsLWFsaWduOi4yNTVlbTtjb250ZW50OlxcXCJcXFwifS5kcm9wbGVmdCAuZHJvcGRvd24tdG9nZ2xlOjphZnRlcntkaXNwbGF5Om5vbmV9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGU6OmJlZm9yZXtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tcmlnaHQ6LjI1NWVtO3ZlcnRpY2FsLWFsaWduOi4yNTVlbTtjb250ZW50OlxcXCJcXFwiO2JvcmRlci10b3A6LjNlbSBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItcmlnaHQ6LjNlbSBzb2xpZDtib3JkZXItYm90dG9tOi4zZW0gc29saWQgdHJhbnNwYXJlbnR9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGU6ZW1wdHk6OmFmdGVye21hcmdpbi1sZWZ0OjB9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGU6OmJlZm9yZXt2ZXJ0aWNhbC1hbGlnbjowfS5kcm9wZG93bi1tZW51W3gtcGxhY2VtZW50Xj1ib3R0b21dLC5kcm9wZG93bi1tZW51W3gtcGxhY2VtZW50Xj1sZWZ0XSwuZHJvcGRvd24tbWVudVt4LXBsYWNlbWVudF49cmlnaHRdLC5kcm9wZG93bi1tZW51W3gtcGxhY2VtZW50Xj10b3Bde3JpZ2h0OmF1dG87Ym90dG9tOmF1dG99LmRyb3Bkb3duLWRpdmlkZXJ7aGVpZ2h0OjA7bWFyZ2luOi41cmVtIDA7b3ZlcmZsb3c6aGlkZGVuO2JvcmRlci10b3A6MXB4IHNvbGlkICNlOWVjZWZ9LmRyb3Bkb3duLWl0ZW17ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO3BhZGRpbmc6LjI1cmVtIDEuNXJlbTtjbGVhcjpib3RoO2ZvbnQtd2VpZ2h0OjQwMDtjb2xvcjojMjEyNTI5O3RleHQtYWxpZ246aW5oZXJpdDt3aGl0ZS1zcGFjZTpub3dyYXA7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MH0uZHJvcGRvd24taXRlbTpmb2N1cywuZHJvcGRvd24taXRlbTpob3Zlcntjb2xvcjojMTYxODFiO3RleHQtZGVjb3JhdGlvbjpub25lO2JhY2tncm91bmQtY29sb3I6I2Y4ZjlmYX0uZHJvcGRvd24taXRlbS5hY3RpdmUsLmRyb3Bkb3duLWl0ZW06YWN0aXZle2NvbG9yOiNmZmY7dGV4dC1kZWNvcmF0aW9uOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmfS5kcm9wZG93bi1pdGVtLmRpc2FibGVkLC5kcm9wZG93bi1pdGVtOmRpc2FibGVke2NvbG9yOiM2Yzc1N2Q7cG9pbnRlci1ldmVudHM6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5kcm9wZG93bi1tZW51LnNob3d7ZGlzcGxheTpibG9ja30uZHJvcGRvd24taGVhZGVye2Rpc3BsYXk6YmxvY2s7cGFkZGluZzouNXJlbSAxLjVyZW07bWFyZ2luLWJvdHRvbTowO2ZvbnQtc2l6ZTouODc1cmVtO2NvbG9yOiM2Yzc1N2Q7d2hpdGUtc3BhY2U6bm93cmFwfS5kcm9wZG93bi1pdGVtLXRleHR7ZGlzcGxheTpibG9jaztwYWRkaW5nOi4yNXJlbSAxLjVyZW07Y29sb3I6IzIxMjUyOX0uYnRuLWdyb3VwLC5idG4tZ3JvdXAtdmVydGljYWx7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3g7ZGlzcGxheTppbmxpbmUtZmxleDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuLC5idG4tZ3JvdXA+LmJ0bntwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleDoxIDEgYXV0bztmbGV4OjEgMSBhdXRvfS5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bjpob3ZlciwuYnRuLWdyb3VwPi5idG46aG92ZXJ7ei1pbmRleDoxfS5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bi5hY3RpdmUsLmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuOmFjdGl2ZSwuYnRuLWdyb3VwLXZlcnRpY2FsPi5idG46Zm9jdXMsLmJ0bi1ncm91cD4uYnRuLmFjdGl2ZSwuYnRuLWdyb3VwPi5idG46YWN0aXZlLC5idG4tZ3JvdXA+LmJ0bjpmb2N1c3t6LWluZGV4OjF9LmJ0bi10b29sYmFye2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS5idG4tdG9vbGJhciAuaW5wdXQtZ3JvdXB7d2lkdGg6YXV0b30uYnRuLWdyb3VwPi5idG4tZ3JvdXA6bm90KDpmaXJzdC1jaGlsZCksLmJ0bi1ncm91cD4uYnRuOm5vdCg6Zmlyc3QtY2hpbGQpe21hcmdpbi1sZWZ0Oi0xcHh9LmJ0bi1ncm91cD4uYnRuLWdyb3VwOm5vdCg6bGFzdC1jaGlsZCk+LmJ0biwuYnRuLWdyb3VwPi5idG46bm90KDpsYXN0LWNoaWxkKTpub3QoLmRyb3Bkb3duLXRvZ2dsZSl7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5idG4tZ3JvdXA+LmJ0bi1ncm91cDpub3QoOmZpcnN0LWNoaWxkKT4uYnRuLC5idG4tZ3JvdXA+LmJ0bjpub3QoOmZpcnN0LWNoaWxkKXtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5kcm9wZG93bi10b2dnbGUtc3BsaXR7cGFkZGluZy1yaWdodDouNTYyNXJlbTtwYWRkaW5nLWxlZnQ6LjU2MjVyZW19LmRyb3Bkb3duLXRvZ2dsZS1zcGxpdDo6YWZ0ZXIsLmRyb3ByaWdodCAuZHJvcGRvd24tdG9nZ2xlLXNwbGl0OjphZnRlciwuZHJvcHVwIC5kcm9wZG93bi10b2dnbGUtc3BsaXQ6OmFmdGVye21hcmdpbi1sZWZ0OjB9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGUtc3BsaXQ6OmJlZm9yZXttYXJnaW4tcmlnaHQ6MH0uYnRuLWdyb3VwLXNtPi5idG4rLmRyb3Bkb3duLXRvZ2dsZS1zcGxpdCwuYnRuLXNtKy5kcm9wZG93bi10b2dnbGUtc3BsaXR7cGFkZGluZy1yaWdodDouMzc1cmVtO3BhZGRpbmctbGVmdDouMzc1cmVtfS5idG4tZ3JvdXAtbGc+LmJ0bisuZHJvcGRvd24tdG9nZ2xlLXNwbGl0LC5idG4tbGcrLmRyb3Bkb3duLXRvZ2dsZS1zcGxpdHtwYWRkaW5nLXJpZ2h0Oi43NXJlbTtwYWRkaW5nLWxlZnQ6Ljc1cmVtfS5idG4tZ3JvdXAtdmVydGljYWx7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5idG4tZ3JvdXAtdmVydGljYWw+LmJ0biwuYnRuLWdyb3VwLXZlcnRpY2FsPi5idG4tZ3JvdXB7d2lkdGg6MTAwJX0uYnRuLWdyb3VwLXZlcnRpY2FsPi5idG4tZ3JvdXA6bm90KDpmaXJzdC1jaGlsZCksLmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuOm5vdCg6Zmlyc3QtY2hpbGQpe21hcmdpbi10b3A6LTFweH0uYnRuLWdyb3VwLXZlcnRpY2FsPi5idG4tZ3JvdXA6bm90KDpsYXN0LWNoaWxkKT4uYnRuLC5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bjpub3QoOmxhc3QtY2hpbGQpOm5vdCguZHJvcGRvd24tdG9nZ2xlKXtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0uYnRuLWdyb3VwLXZlcnRpY2FsPi5idG4tZ3JvdXA6bm90KDpmaXJzdC1jaGlsZCk+LmJ0biwuYnRuLWdyb3VwLXZlcnRpY2FsPi5idG46bm90KDpmaXJzdC1jaGlsZCl7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9LmJ0bi1ncm91cC10b2dnbGU+LmJ0biwuYnRuLWdyb3VwLXRvZ2dsZT4uYnRuLWdyb3VwPi5idG57bWFyZ2luLWJvdHRvbTowfS5idG4tZ3JvdXAtdG9nZ2xlPi5idG4gaW5wdXRbdHlwZT1jaGVja2JveF0sLmJ0bi1ncm91cC10b2dnbGU+LmJ0biBpbnB1dFt0eXBlPXJhZGlvXSwuYnRuLWdyb3VwLXRvZ2dsZT4uYnRuLWdyb3VwPi5idG4gaW5wdXRbdHlwZT1jaGVja2JveF0sLmJ0bi1ncm91cC10b2dnbGU+LmJ0bi1ncm91cD4uYnRuIGlucHV0W3R5cGU9cmFkaW9de3Bvc2l0aW9uOmFic29sdXRlO2NsaXA6cmVjdCgwLDAsMCwwKTtwb2ludGVyLWV2ZW50czpub25lfS5pbnB1dC1ncm91cHtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LW1zLWZsZXgtYWxpZ246c3RyZXRjaDthbGlnbi1pdGVtczpzdHJldGNoO3dpZHRoOjEwMCV9LmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSwuaW5wdXQtZ3JvdXA+LmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wsLmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0e3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4OjEgMSBhdXRvO2ZsZXg6MSAxIGF1dG87d2lkdGg6MSU7bWFyZ2luLWJvdHRvbTowfS5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGUrLmN1c3RvbS1maWxlLC5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGUrLmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSsuZm9ybS1jb250cm9sLC5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdCsuY3VzdG9tLWZpbGUsLmlucHV0LWdyb3VwPi5jdXN0b20tc2VsZWN0Ky5jdXN0b20tc2VsZWN0LC5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdCsuZm9ybS1jb250cm9sLC5pbnB1dC1ncm91cD4uZm9ybS1jb250cm9sKy5jdXN0b20tZmlsZSwuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbCsuY3VzdG9tLXNlbGVjdCwuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbCsuZm9ybS1jb250cm9sLC5pbnB1dC1ncm91cD4uZm9ybS1jb250cm9sLXBsYWludGV4dCsuY3VzdG9tLWZpbGUsLmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0Ky5jdXN0b20tc2VsZWN0LC5pbnB1dC1ncm91cD4uZm9ybS1jb250cm9sLXBsYWludGV4dCsuZm9ybS1jb250cm9se21hcmdpbi1sZWZ0Oi0xcHh9LmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSAuY3VzdG9tLWZpbGUtaW5wdXQ6Zm9jdXN+LmN1c3RvbS1maWxlLWxhYmVsLC5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdDpmb2N1cywuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbDpmb2N1c3t6LWluZGV4OjN9LmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSAuY3VzdG9tLWZpbGUtaW5wdXQ6Zm9jdXN7ei1pbmRleDo0fS5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdDpub3QoOmxhc3QtY2hpbGQpLC5pbnB1dC1ncm91cD4uZm9ybS1jb250cm9sOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdDpub3QoOmZpcnN0LWNoaWxkKSwuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbDpub3QoOmZpcnN0LWNoaWxkKXtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGV7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0uaW5wdXQtZ3JvdXA+LmN1c3RvbS1maWxlOm5vdCg6bGFzdC1jaGlsZCkgLmN1c3RvbS1maWxlLWxhYmVsLC5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGU6bm90KDpsYXN0LWNoaWxkKSAuY3VzdG9tLWZpbGUtbGFiZWw6OmFmdGVye2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MH0uaW5wdXQtZ3JvdXA+LmN1c3RvbS1maWxlOm5vdCg6Zmlyc3QtY2hpbGQpIC5jdXN0b20tZmlsZS1sYWJlbHtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5pbnB1dC1ncm91cC1hcHBlbmQsLmlucHV0LWdyb3VwLXByZXBlbmR7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXh9LmlucHV0LWdyb3VwLWFwcGVuZCAuYnRuLC5pbnB1dC1ncm91cC1wcmVwZW5kIC5idG57cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoyfS5pbnB1dC1ncm91cC1hcHBlbmQgLmJ0bjpmb2N1cywuaW5wdXQtZ3JvdXAtcHJlcGVuZCAuYnRuOmZvY3Vze3otaW5kZXg6M30uaW5wdXQtZ3JvdXAtYXBwZW5kIC5idG4rLmJ0biwuaW5wdXQtZ3JvdXAtYXBwZW5kIC5idG4rLmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLWFwcGVuZCAuaW5wdXQtZ3JvdXAtdGV4dCsuYnRuLC5pbnB1dC1ncm91cC1hcHBlbmQgLmlucHV0LWdyb3VwLXRleHQrLmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLXByZXBlbmQgLmJ0bisuYnRuLC5pbnB1dC1ncm91cC1wcmVwZW5kIC5idG4rLmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLXByZXBlbmQgLmlucHV0LWdyb3VwLXRleHQrLmJ0biwuaW5wdXQtZ3JvdXAtcHJlcGVuZCAuaW5wdXQtZ3JvdXAtdGV4dCsuaW5wdXQtZ3JvdXAtdGV4dHttYXJnaW4tbGVmdDotMXB4fS5pbnB1dC1ncm91cC1wcmVwZW5ke21hcmdpbi1yaWdodDotMXB4fS5pbnB1dC1ncm91cC1hcHBlbmR7bWFyZ2luLWxlZnQ6LTFweH0uaW5wdXQtZ3JvdXAtdGV4dHtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmc6LjM3NXJlbSAuNzVyZW07bWFyZ2luLWJvdHRvbTowO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzQ5NTA1Nzt0ZXh0LWFsaWduOmNlbnRlcjt3aGl0ZS1zcGFjZTpub3dyYXA7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmO2JvcmRlcjoxcHggc29saWQgI2NlZDRkYTtib3JkZXItcmFkaXVzOi4yNXJlbX0uaW5wdXQtZ3JvdXAtdGV4dCBpbnB1dFt0eXBlPWNoZWNrYm94XSwuaW5wdXQtZ3JvdXAtdGV4dCBpbnB1dFt0eXBlPXJhZGlvXXttYXJnaW4tdG9wOjB9LmlucHV0LWdyb3VwLWxnPi5jdXN0b20tc2VsZWN0LC5pbnB1dC1ncm91cC1sZz4uZm9ybS1jb250cm9sOm5vdCh0ZXh0YXJlYSl7aGVpZ2h0OmNhbGMoMS41ZW0gKyAxcmVtICsgMnB4KX0uaW5wdXQtZ3JvdXAtbGc+LmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwLWxnPi5mb3JtLWNvbnRyb2wsLmlucHV0LWdyb3VwLWxnPi5pbnB1dC1ncm91cC1hcHBlbmQ+LmJ0biwuaW5wdXQtZ3JvdXAtbGc+LmlucHV0LWdyb3VwLWFwcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dCwuaW5wdXQtZ3JvdXAtbGc+LmlucHV0LWdyb3VwLXByZXBlbmQ+LmJ0biwuaW5wdXQtZ3JvdXAtbGc+LmlucHV0LWdyb3VwLXByZXBlbmQ+LmlucHV0LWdyb3VwLXRleHR7cGFkZGluZzouNXJlbSAxcmVtO2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OjEuNTtib3JkZXItcmFkaXVzOi4zcmVtfS5pbnB1dC1ncm91cC1zbT4uY3VzdG9tLXNlbGVjdCwuaW5wdXQtZ3JvdXAtc20+LmZvcm0tY29udHJvbDpub3QodGV4dGFyZWEpe2hlaWdodDpjYWxjKDEuNWVtICsgLjVyZW0gKyAycHgpfS5pbnB1dC1ncm91cC1zbT4uY3VzdG9tLXNlbGVjdCwuaW5wdXQtZ3JvdXAtc20+LmZvcm0tY29udHJvbCwuaW5wdXQtZ3JvdXAtc20+LmlucHV0LWdyb3VwLWFwcGVuZD4uYnRuLC5pbnB1dC1ncm91cC1zbT4uaW5wdXQtZ3JvdXAtYXBwZW5kPi5pbnB1dC1ncm91cC10ZXh0LC5pbnB1dC1ncm91cC1zbT4uaW5wdXQtZ3JvdXAtcHJlcGVuZD4uYnRuLC5pbnB1dC1ncm91cC1zbT4uaW5wdXQtZ3JvdXAtcHJlcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dHtwYWRkaW5nOi4yNXJlbSAuNXJlbTtmb250LXNpemU6Ljg3NXJlbTtsaW5lLWhlaWdodDoxLjU7Ym9yZGVyLXJhZGl1czouMnJlbX0uaW5wdXQtZ3JvdXAtbGc+LmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwLXNtPi5jdXN0b20tc2VsZWN0e3BhZGRpbmctcmlnaHQ6MS43NXJlbX0uaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLWFwcGVuZDpsYXN0LWNoaWxkPi5idG46bm90KDpsYXN0LWNoaWxkKTpub3QoLmRyb3Bkb3duLXRvZ2dsZSksLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1hcHBlbmQ6bGFzdC1jaGlsZD4uaW5wdXQtZ3JvdXAtdGV4dDpub3QoOmxhc3QtY2hpbGQpLC5pbnB1dC1ncm91cD4uaW5wdXQtZ3JvdXAtYXBwZW5kOm5vdCg6bGFzdC1jaGlsZCk+LmJ0biwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLWFwcGVuZDpub3QoOmxhc3QtY2hpbGQpPi5pbnB1dC1ncm91cC10ZXh0LC5pbnB1dC1ncm91cD4uaW5wdXQtZ3JvdXAtcHJlcGVuZD4uYnRuLC5pbnB1dC1ncm91cD4uaW5wdXQtZ3JvdXAtcHJlcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dHtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1hcHBlbmQ+LmJ0biwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLWFwcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dCwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLXByZXBlbmQ6Zmlyc3QtY2hpbGQ+LmJ0bjpub3QoOmZpcnN0LWNoaWxkKSwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLXByZXBlbmQ6Zmlyc3QtY2hpbGQ+LmlucHV0LWdyb3VwLXRleHQ6bm90KDpmaXJzdC1jaGlsZCksLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1wcmVwZW5kOm5vdCg6Zmlyc3QtY2hpbGQpPi5idG4sLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1wcmVwZW5kOm5vdCg6Zmlyc3QtY2hpbGQpPi5pbnB1dC1ncm91cC10ZXh0e2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LmN1c3RvbS1jb250cm9se3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7bWluLWhlaWdodDoxLjVyZW07cGFkZGluZy1sZWZ0OjEuNXJlbX0uY3VzdG9tLWNvbnRyb2wtaW5saW5le2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94O2Rpc3BsYXk6aW5saW5lLWZsZXg7bWFyZ2luLXJpZ2h0OjFyZW19LmN1c3RvbS1jb250cm9sLWlucHV0e3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6LTE7b3BhY2l0eTowfS5jdXN0b20tY29udHJvbC1pbnB1dDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2NvbG9yOiNmZmY7Ym9yZGVyLWNvbG9yOiMwMDdiZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmfS5jdXN0b20tY29udHJvbC1pbnB1dDpmb2N1c34uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMCwxMjMsMjU1LC4yNSl9LmN1c3RvbS1jb250cm9sLWlucHV0OmZvY3VzOm5vdCg6Y2hlY2tlZCl+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym9yZGVyLWNvbG9yOiM4MGJkZmZ9LmN1c3RvbS1jb250cm9sLWlucHV0Om5vdCg6ZGlzYWJsZWQpOmFjdGl2ZX4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2IzZDdmZjtib3JkZXItY29sb3I6I2IzZDdmZn0uY3VzdG9tLWNvbnRyb2wtaW5wdXQ6ZGlzYWJsZWR+LmN1c3RvbS1jb250cm9sLWxhYmVse2NvbG9yOiM2Yzc1N2R9LmN1c3RvbS1jb250cm9sLWlucHV0OmRpc2FibGVkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZn0uY3VzdG9tLWNvbnRyb2wtbGFiZWx7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLWJvdHRvbTowO3ZlcnRpY2FsLWFsaWduOnRvcH0uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LjI1cmVtO2xlZnQ6LTEuNXJlbTtkaXNwbGF5OmJsb2NrO3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07cG9pbnRlci1ldmVudHM6bm9uZTtjb250ZW50OlxcXCJcXFwiO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6I2FkYjViZCBzb2xpZCAxcHh9LmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LjI1cmVtO2xlZnQ6LTEuNXJlbTtkaXNwbGF5OmJsb2NrO3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07Y29udGVudDpcXFwiXFxcIjtiYWNrZ3JvdW5kOm5vLXJlcGVhdCA1MCUvNTAlIDUwJX0uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1yYWRpdXM6LjI1cmVtfS5jdXN0b20tY2hlY2tib3ggLmN1c3RvbS1jb250cm9sLWlucHV0OmNoZWNrZWR+LmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBmaWxsPSclMjNmZmYnIGQ9J002LjU2NC43NWwtMy41OSAzLjYxMi0xLjUzOC0xLjU1TDAgNC4yNiAyLjk3NCA3LjI1IDggMi4xOTN6Jy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmN1c3RvbS1jaGVja2JveCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6aW5kZXRlcm1pbmF0ZX4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6IzAwN2JmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmZ9LmN1c3RvbS1jaGVja2JveCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6aW5kZXRlcm1pbmF0ZX4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmFmdGVye2JhY2tncm91bmQtaW1hZ2U6dXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDQgNCclM2UlM2NwYXRoIHN0cm9rZT0nJTIzZmZmJyBkPSdNMCAyaDQnLyUzZSUzYy9zdmclM2VcXFwiKX0uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1pbnB1dDpkaXNhYmxlZDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDEyMywyNTUsLjUpfS5jdXN0b20tY2hlY2tib3ggLmN1c3RvbS1jb250cm9sLWlucHV0OmRpc2FibGVkOmluZGV0ZXJtaW5hdGV+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMTIzLDI1NSwuNSl9LmN1c3RvbS1yYWRpbyAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItcmFkaXVzOjUwJX0uY3VzdG9tLXJhZGlvIC5jdXN0b20tY29udHJvbC1pbnB1dDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YWZ0ZXJ7YmFja2dyb3VuZC1pbWFnZTp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PSctNCAtNCA4IDgnJTNlJTNjY2lyY2xlIHI9JzMnIGZpbGw9JyUyM2ZmZicvJTNlJTNjL3N2ZyUzZVxcXCIpfS5jdXN0b20tcmFkaW8gLmN1c3RvbS1jb250cm9sLWlucHV0OmRpc2FibGVkOmNoZWNrZWR+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMTIzLDI1NSwuNSl9LmN1c3RvbS1zd2l0Y2h7cGFkZGluZy1sZWZ0OjIuMjVyZW19LmN1c3RvbS1zd2l0Y2ggLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7bGVmdDotMi4yNXJlbTt3aWR0aDoxLjc1cmVtO3BvaW50ZXItZXZlbnRzOmFsbDtib3JkZXItcmFkaXVzOi41cmVtfS5jdXN0b20tc3dpdGNoIC5jdXN0b20tY29udHJvbC1sYWJlbDo6YWZ0ZXJ7dG9wOmNhbGMoLjI1cmVtICsgMnB4KTtsZWZ0OmNhbGMoLTIuMjVyZW0gKyAycHgpO3dpZHRoOmNhbGMoMXJlbSAtIDRweCk7aGVpZ2h0OmNhbGMoMXJlbSAtIDRweCk7YmFja2dyb3VuZC1jb2xvcjojYWRiNWJkO2JvcmRlci1yYWRpdXM6LjVyZW07dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0LC13ZWJraXQtdHJhbnNmb3JtIC4xNXMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gLjE1cyBlYXNlLWluLW91dCxiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246dHJhbnNmb3JtIC4xNXMgZWFzZS1pbi1vdXQsYmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dCwtd2Via2l0LXRyYW5zZm9ybSAuMTVzIGVhc2UtaW4tb3V0fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jdXN0b20tc3dpdGNoIC5jdXN0b20tY29udHJvbC1sYWJlbDo6YWZ0ZXJ7dHJhbnNpdGlvbjpub25lfX0uY3VzdG9tLXN3aXRjaCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6Y2hlY2tlZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmFmdGVye2JhY2tncm91bmQtY29sb3I6I2ZmZjstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVYKC43NXJlbSk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLjc1cmVtKX0uY3VzdG9tLXN3aXRjaCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6ZGlzYWJsZWQ6Y2hlY2tlZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwxMjMsMjU1LC41KX0uY3VzdG9tLXNlbGVjdHtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxMDAlO2hlaWdodDpjYWxjKDEuNWVtICsgLjc1cmVtICsgMnB4KTtwYWRkaW5nOi4zNzVyZW0gMS43NXJlbSAuMzc1cmVtIC43NXJlbTtmb250LXNpemU6MXJlbTtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MS41O2NvbG9yOiM0OTUwNTc7dmVydGljYWwtYWxpZ246bWlkZGxlO2JhY2tncm91bmQ6dXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDQgNSclM2UlM2NwYXRoIGZpbGw9JyUyMzM0M2E0MCcgZD0nTTIgMEwwIDJoNHptMCA1TDAgM2g0eicvJTNlJTNjL3N2ZyUzZVxcXCIpIG5vLXJlcGVhdCByaWdodCAuNzVyZW0gY2VudGVyLzhweCAxMHB4O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNjZWQ0ZGE7Ym9yZGVyLXJhZGl1czouMjVyZW07LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfS5jdXN0b20tc2VsZWN0OmZvY3Vze2JvcmRlci1jb2xvcjojODBiZGZmO291dGxpbmU6MDtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMCwxMjMsMjU1LC4yNSl9LmN1c3RvbS1zZWxlY3Q6Zm9jdXM6Oi1tcy12YWx1ZXtjb2xvcjojNDk1MDU3O2JhY2tncm91bmQtY29sb3I6I2ZmZn0uY3VzdG9tLXNlbGVjdFttdWx0aXBsZV0sLmN1c3RvbS1zZWxlY3Rbc2l6ZV06bm90KFtzaXplPVxcXCIxXFxcIl0pe2hlaWdodDphdXRvO3BhZGRpbmctcmlnaHQ6Ljc1cmVtO2JhY2tncm91bmQtaW1hZ2U6bm9uZX0uY3VzdG9tLXNlbGVjdDpkaXNhYmxlZHtjb2xvcjojNmM3NTdkO2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZn0uY3VzdG9tLXNlbGVjdDo6LW1zLWV4cGFuZHtkaXNwbGF5Om5vbmV9LmN1c3RvbS1zZWxlY3Qtc217aGVpZ2h0OmNhbGMoMS41ZW0gKyAuNXJlbSArIDJweCk7cGFkZGluZy10b3A6LjI1cmVtO3BhZGRpbmctYm90dG9tOi4yNXJlbTtwYWRkaW5nLWxlZnQ6LjVyZW07Zm9udC1zaXplOi44NzVyZW19LmN1c3RvbS1zZWxlY3QtbGd7aGVpZ2h0OmNhbGMoMS41ZW0gKyAxcmVtICsgMnB4KTtwYWRkaW5nLXRvcDouNXJlbTtwYWRkaW5nLWJvdHRvbTouNXJlbTtwYWRkaW5nLWxlZnQ6MXJlbTtmb250LXNpemU6MS4yNXJlbX0uY3VzdG9tLWZpbGV7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6Y2FsYygxLjVlbSArIC43NXJlbSArIDJweCk7bWFyZ2luLWJvdHRvbTowfS5jdXN0b20tZmlsZS1pbnB1dHtwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjI7d2lkdGg6MTAwJTtoZWlnaHQ6Y2FsYygxLjVlbSArIC43NXJlbSArIDJweCk7bWFyZ2luOjA7b3BhY2l0eTowfS5jdXN0b20tZmlsZS1pbnB1dDpmb2N1c34uY3VzdG9tLWZpbGUtbGFiZWx7Ym9yZGVyLWNvbG9yOiM4MGJkZmY7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDAsMTIzLDI1NSwuMjUpfS5jdXN0b20tZmlsZS1pbnB1dDpkaXNhYmxlZH4uY3VzdG9tLWZpbGUtbGFiZWx7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmfS5jdXN0b20tZmlsZS1pbnB1dDpsYW5nKGVuKX4uY3VzdG9tLWZpbGUtbGFiZWw6OmFmdGVye2NvbnRlbnQ6XFxcIkJyb3dzZVxcXCJ9LmN1c3RvbS1maWxlLWlucHV0fi5jdXN0b20tZmlsZS1sYWJlbFtkYXRhLWJyb3dzZV06OmFmdGVye2NvbnRlbnQ6YXR0cihkYXRhLWJyb3dzZSl9LmN1c3RvbS1maWxlLWxhYmVse3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7bGVmdDowO3otaW5kZXg6MTtoZWlnaHQ6Y2FsYygxLjVlbSArIC43NXJlbSArIDJweCk7cGFkZGluZzouMzc1cmVtIC43NXJlbTtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MS41O2NvbG9yOiM0OTUwNTc7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI2NlZDRkYTtib3JkZXItcmFkaXVzOi4yNXJlbX0uY3VzdG9tLWZpbGUtbGFiZWw6OmFmdGVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7ei1pbmRleDozO2Rpc3BsYXk6YmxvY2s7aGVpZ2h0OmNhbGMoMS41ZW0gKyAuNzVyZW0pO3BhZGRpbmc6LjM3NXJlbSAuNzVyZW07bGluZS1oZWlnaHQ6MS41O2NvbG9yOiM0OTUwNTc7Y29udGVudDpcXFwiQnJvd3NlXFxcIjtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWY7Ym9yZGVyLWxlZnQ6aW5oZXJpdDtib3JkZXItcmFkaXVzOjAgLjI1cmVtIC4yNXJlbSAwfS5jdXN0b20tcmFuZ2V7d2lkdGg6MTAwJTtoZWlnaHQ6Y2FsYygxcmVtICsgLjRyZW0pO3BhZGRpbmc6MDtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50Oy13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZX0uY3VzdG9tLXJhbmdlOmZvY3Vze291dGxpbmU6MH0uY3VzdG9tLXJhbmdlOmZvY3VzOjotd2Via2l0LXNsaWRlci10aHVtYntib3gtc2hhZG93OjAgMCAwIDFweCAjZmZmLDAgMCAwIC4ycmVtIHJnYmEoMCwxMjMsMjU1LC4yNSl9LmN1c3RvbS1yYW5nZTpmb2N1czo6LW1vei1yYW5nZS10aHVtYntib3gtc2hhZG93OjAgMCAwIDFweCAjZmZmLDAgMCAwIC4ycmVtIHJnYmEoMCwxMjMsMjU1LC4yNSl9LmN1c3RvbS1yYW5nZTpmb2N1czo6LW1zLXRodW1ie2JveC1zaGFkb3c6MCAwIDAgMXB4ICNmZmYsMCAwIDAgLjJyZW0gcmdiYSgwLDEyMywyNTUsLjI1KX0uY3VzdG9tLXJhbmdlOjotbW96LWZvY3VzLW91dGVye2JvcmRlcjowfS5jdXN0b20tcmFuZ2U6Oi13ZWJraXQtc2xpZGVyLXRodW1ie3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07bWFyZ2luLXRvcDotLjI1cmVtO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXI6MDtib3JkZXItcmFkaXVzOjFyZW07dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0Oy13ZWJraXQtYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZX1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuY3VzdG9tLXJhbmdlOjotd2Via2l0LXNsaWRlci10aHVtYnt0cmFuc2l0aW9uOm5vbmV9fS5jdXN0b20tcmFuZ2U6Oi13ZWJraXQtc2xpZGVyLXRodW1iOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiNiM2Q3ZmZ9LmN1c3RvbS1yYW5nZTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2t7d2lkdGg6MTAwJTtoZWlnaHQ6LjVyZW07Y29sb3I6dHJhbnNwYXJlbnQ7Y3Vyc29yOnBvaW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZGVlMmU2O2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItcmFkaXVzOjFyZW19LmN1c3RvbS1yYW5nZTo6LW1vei1yYW5nZS10aHVtYnt3aWR0aDoxcmVtO2hlaWdodDoxcmVtO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXI6MDtib3JkZXItcmFkaXVzOjFyZW07dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0Oy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZX1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuY3VzdG9tLXJhbmdlOjotbW96LXJhbmdlLXRodW1ie3RyYW5zaXRpb246bm9uZX19LmN1c3RvbS1yYW5nZTo6LW1vei1yYW5nZS10aHVtYjphY3RpdmV7YmFja2dyb3VuZC1jb2xvcjojYjNkN2ZmfS5jdXN0b20tcmFuZ2U6Oi1tb3otcmFuZ2UtdHJhY2t7d2lkdGg6MTAwJTtoZWlnaHQ6LjVyZW07Y29sb3I6dHJhbnNwYXJlbnQ7Y3Vyc29yOnBvaW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZGVlMmU2O2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItcmFkaXVzOjFyZW19LmN1c3RvbS1yYW5nZTo6LW1zLXRodW1ie3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07bWFyZ2luLXRvcDowO21hcmdpbi1yaWdodDouMnJlbTttYXJnaW4tbGVmdDouMnJlbTtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czoxcmVtO3RyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dDthcHBlYXJhbmNlOm5vbmV9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOnJlZHVjZSl7LmN1c3RvbS1yYW5nZTo6LW1zLXRodW1ie3RyYW5zaXRpb246bm9uZX19LmN1c3RvbS1yYW5nZTo6LW1zLXRodW1iOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiNiM2Q3ZmZ9LmN1c3RvbS1yYW5nZTo6LW1zLXRyYWNre3dpZHRoOjEwMCU7aGVpZ2h0Oi41cmVtO2NvbG9yOnRyYW5zcGFyZW50O2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci13aWR0aDouNXJlbX0uY3VzdG9tLXJhbmdlOjotbXMtZmlsbC1sb3dlcntiYWNrZ3JvdW5kLWNvbG9yOiNkZWUyZTY7Ym9yZGVyLXJhZGl1czoxcmVtfS5jdXN0b20tcmFuZ2U6Oi1tcy1maWxsLXVwcGVye21hcmdpbi1yaWdodDoxNXB4O2JhY2tncm91bmQtY29sb3I6I2RlZTJlNjtib3JkZXItcmFkaXVzOjFyZW19LmN1c3RvbS1yYW5nZTpkaXNhYmxlZDo6LXdlYmtpdC1zbGlkZXItdGh1bWJ7YmFja2dyb3VuZC1jb2xvcjojYWRiNWJkfS5jdXN0b20tcmFuZ2U6ZGlzYWJsZWQ6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNre2N1cnNvcjpkZWZhdWx0fS5jdXN0b20tcmFuZ2U6ZGlzYWJsZWQ6Oi1tb3otcmFuZ2UtdGh1bWJ7YmFja2dyb3VuZC1jb2xvcjojYWRiNWJkfS5jdXN0b20tcmFuZ2U6ZGlzYWJsZWQ6Oi1tb3otcmFuZ2UtdHJhY2t7Y3Vyc29yOmRlZmF1bHR9LmN1c3RvbS1yYW5nZTpkaXNhYmxlZDo6LW1zLXRodW1ie2JhY2tncm91bmQtY29sb3I6I2FkYjViZH0uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwuY3VzdG9tLWZpbGUtbGFiZWwsLmN1c3RvbS1zZWxlY3R7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC5jdXN0b20tZmlsZS1sYWJlbCwuY3VzdG9tLXNlbGVjdHt0cmFuc2l0aW9uOm5vbmV9fS5uYXZ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwO3BhZGRpbmctbGVmdDowO21hcmdpbi1ib3R0b206MDtsaXN0LXN0eWxlOm5vbmV9Lm5hdi1saW5re2Rpc3BsYXk6YmxvY2s7cGFkZGluZzouNXJlbSAxcmVtfS5uYXYtbGluazpmb2N1cywubmF2LWxpbms6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Lm5hdi1saW5rLmRpc2FibGVke2NvbG9yOiM2Yzc1N2Q7cG9pbnRlci1ldmVudHM6bm9uZTtjdXJzb3I6ZGVmYXVsdH0ubmF2LXRhYnN7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RlZTJlNn0ubmF2LXRhYnMgLm5hdi1pdGVte21hcmdpbi1ib3R0b206LTFweH0ubmF2LXRhYnMgLm5hdi1saW5re2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czouMjVyZW07Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjI1cmVtfS5uYXYtdGFicyAubmF2LWxpbms6Zm9jdXMsLm5hdi10YWJzIC5uYXYtbGluazpob3Zlcntib3JkZXItY29sb3I6I2U5ZWNlZiAjZTllY2VmICNkZWUyZTZ9Lm5hdi10YWJzIC5uYXYtbGluay5kaXNhYmxlZHtjb2xvcjojNmM3NTdkO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50fS5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmssLm5hdi10YWJzIC5uYXYtbGluay5hY3RpdmV7Y29sb3I6IzQ5NTA1NztiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWNvbG9yOiNkZWUyZTYgI2RlZTJlNiAjZmZmfS5uYXYtdGFicyAuZHJvcGRvd24tbWVudXttYXJnaW4tdG9wOi0xcHg7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lm5hdi1waWxscyAubmF2LWxpbmt7Ym9yZGVyLXJhZGl1czouMjVyZW19Lm5hdi1waWxscyAubmF2LWxpbmsuYWN0aXZlLC5uYXYtcGlsbHMgLnNob3c+Lm5hdi1saW5re2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmfS5uYXYtZmlsbCAubmF2LWl0ZW17LW1zLWZsZXg6MSAxIGF1dG87ZmxleDoxIDEgYXV0bzt0ZXh0LWFsaWduOmNlbnRlcn0ubmF2LWp1c3RpZmllZCAubmF2LWl0ZW17LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTt0ZXh0LWFsaWduOmNlbnRlcn0udGFiLWNvbnRlbnQ+LnRhYi1wYW5le2Rpc3BsYXk6bm9uZX0udGFiLWNvbnRlbnQ+LmFjdGl2ZXtkaXNwbGF5OmJsb2NrfS5uYXZiYXJ7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO3BhZGRpbmc6LjVyZW0gMXJlbX0ubmF2YmFyPi5jb250YWluZXIsLm5hdmJhcj4uY29udGFpbmVyLWZsdWlke2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0ubmF2YmFyLWJyYW5ke2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmctdG9wOi4zMTI1cmVtO3BhZGRpbmctYm90dG9tOi4zMTI1cmVtO21hcmdpbi1yaWdodDoxcmVtO2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OmluaGVyaXQ7d2hpdGUtc3BhY2U6bm93cmFwfS5uYXZiYXItYnJhbmQ6Zm9jdXMsLm5hdmJhci1icmFuZDpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0ubmF2YmFyLW5hdntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtwYWRkaW5nLWxlZnQ6MDttYXJnaW4tYm90dG9tOjA7bGlzdC1zdHlsZTpub25lfS5uYXZiYXItbmF2IC5uYXYtbGlua3twYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjB9Lm5hdmJhci1uYXYgLmRyb3Bkb3duLW1lbnV7cG9zaXRpb246c3RhdGljO2Zsb2F0Om5vbmV9Lm5hdmJhci10ZXh0e2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmctdG9wOi41cmVtO3BhZGRpbmctYm90dG9tOi41cmVtfS5uYXZiYXItY29sbGFwc2V7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MTAwJTtmbGV4LWJhc2lzOjEwMCU7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5uYXZiYXItdG9nZ2xlcntwYWRkaW5nOi4yNXJlbSAuNzVyZW07Zm9udC1zaXplOjEuMjVyZW07bGluZS1oZWlnaHQ6MTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czouMjVyZW19Lm5hdmJhci10b2dnbGVyOmZvY3VzLC5uYXZiYXItdG9nZ2xlcjpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0ubmF2YmFyLXRvZ2dsZXItaWNvbntkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxLjVlbTtoZWlnaHQ6MS41ZW07dmVydGljYWwtYWxpZ246bWlkZGxlO2NvbnRlbnQ6XFxcIlxcXCI7YmFja2dyb3VuZDpuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtiYWNrZ3JvdW5kLXNpemU6MTAwJSAxMDAlfUBtZWRpYSAobWF4LXdpZHRoOjU3NS45OHB4KXsubmF2YmFyLWV4cGFuZC1zbT4uY29udGFpbmVyLC5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXItZmx1aWR7cGFkZGluZy1yaWdodDowO3BhZGRpbmctbGVmdDowfX1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7Lm5hdmJhci1leHBhbmQtc217LW1zLWZsZXgtZmxvdzpyb3cgbm93cmFwO2ZsZXgtZmxvdzpyb3cgbm93cmFwOy1tcy1mbGV4LXBhY2s6c3RhcnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9Lm5hdmJhci1leHBhbmQtc20gLm5hdmJhci1uYXZ7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lm5hdmJhci1leHBhbmQtc20gLm5hdmJhci1uYXYgLmRyb3Bkb3duLW1lbnV7cG9zaXRpb246YWJzb2x1dGV9Lm5hdmJhci1leHBhbmQtc20gLm5hdmJhci1uYXYgLm5hdi1saW5re3BhZGRpbmctcmlnaHQ6LjVyZW07cGFkZGluZy1sZWZ0Oi41cmVtfS5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQtc20+LmNvbnRhaW5lci1mbHVpZHstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfS5uYXZiYXItZXhwYW5kLXNtIC5uYXZiYXItY29sbGFwc2V7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudDstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTphdXRvO2ZsZXgtYmFzaXM6YXV0b30ubmF2YmFyLWV4cGFuZC1zbSAubmF2YmFyLXRvZ2dsZXJ7ZGlzcGxheTpub25lfX1AbWVkaWEgKG1heC13aWR0aDo3NjcuOThweCl7Lm5hdmJhci1leHBhbmQtbWQ+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLWZsdWlke3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH19QG1lZGlhIChtaW4td2lkdGg6NzY4cHgpey5uYXZiYXItZXhwYW5kLW1key1tcy1mbGV4LWZsb3c6cm93IG5vd3JhcDtmbGV4LWZsb3c6cm93IG5vd3JhcDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS5uYXZiYXItZXhwYW5kLW1kIC5uYXZiYXItbmF2ey1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93fS5uYXZiYXItZXhwYW5kLW1kIC5uYXZiYXItbmF2IC5kcm9wZG93bi1tZW51e3Bvc2l0aW9uOmFic29sdXRlfS5uYXZiYXItZXhwYW5kLW1kIC5uYXZiYXItbmF2IC5uYXYtbGlua3twYWRkaW5nLXJpZ2h0Oi41cmVtO3BhZGRpbmctbGVmdDouNXJlbX0ubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLC5uYXZiYXItZXhwYW5kLW1kPi5jb250YWluZXItZmx1aWR7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH0ubmF2YmFyLWV4cGFuZC1tZCAubmF2YmFyLWNvbGxhcHNle2Rpc3BsYXk6LW1zLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCFpbXBvcnRhbnQ7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6YXV0bztmbGV4LWJhc2lzOmF1dG99Lm5hdmJhci1leHBhbmQtbWQgLm5hdmJhci10b2dnbGVye2Rpc3BsYXk6bm9uZX19QG1lZGlhIChtYXgtd2lkdGg6OTkxLjk4cHgpey5uYXZiYXItZXhwYW5kLWxnPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lci1mbHVpZHtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjB9fUBtZWRpYSAobWluLXdpZHRoOjk5MnB4KXsubmF2YmFyLWV4cGFuZC1sZ3stbXMtZmxleC1mbG93OnJvdyBub3dyYXA7ZmxleC1mbG93OnJvdyBub3dyYXA7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH0ubmF2YmFyLWV4cGFuZC1sZyAubmF2YmFyLW5hdnstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30ubmF2YmFyLWV4cGFuZC1sZyAubmF2YmFyLW5hdiAuZHJvcGRvd24tbWVudXtwb3NpdGlvbjphYnNvbHV0ZX0ubmF2YmFyLWV4cGFuZC1sZyAubmF2YmFyLW5hdiAubmF2LWxpbmt7cGFkZGluZy1yaWdodDouNXJlbTtwYWRkaW5nLWxlZnQ6LjVyZW19Lm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC1sZz4uY29udGFpbmVyLWZsdWlkey1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXB9Lm5hdmJhci1leHBhbmQtbGcgLm5hdmJhci1jb2xsYXBzZXtkaXNwbGF5Oi1tcy1mbGV4Ym94IWltcG9ydGFudDtkaXNwbGF5OmZsZXghaW1wb3J0YW50Oy1tcy1mbGV4LXByZWZlcnJlZC1zaXplOmF1dG87ZmxleC1iYXNpczphdXRvfS5uYXZiYXItZXhwYW5kLWxnIC5uYXZiYXItdG9nZ2xlcntkaXNwbGF5Om5vbmV9fUBtZWRpYSAobWF4LXdpZHRoOjExOTkuOThweCl7Lm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLWZsdWlke3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH19QG1lZGlhIChtaW4td2lkdGg6MTIwMHB4KXsubmF2YmFyLWV4cGFuZC14bHstbXMtZmxleC1mbG93OnJvdyBub3dyYXA7ZmxleC1mbG93OnJvdyBub3dyYXA7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH0ubmF2YmFyLWV4cGFuZC14bCAubmF2YmFyLW5hdnstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30ubmF2YmFyLWV4cGFuZC14bCAubmF2YmFyLW5hdiAuZHJvcGRvd24tbWVudXtwb3NpdGlvbjphYnNvbHV0ZX0ubmF2YmFyLWV4cGFuZC14bCAubmF2YmFyLW5hdiAubmF2LWxpbmt7cGFkZGluZy1yaWdodDouNXJlbTtwYWRkaW5nLWxlZnQ6LjVyZW19Lm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLWZsdWlkey1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXB9Lm5hdmJhci1leHBhbmQteGwgLm5hdmJhci1jb2xsYXBzZXtkaXNwbGF5Oi1tcy1mbGV4Ym94IWltcG9ydGFudDtkaXNwbGF5OmZsZXghaW1wb3J0YW50Oy1tcy1mbGV4LXByZWZlcnJlZC1zaXplOmF1dG87ZmxleC1iYXNpczphdXRvfS5uYXZiYXItZXhwYW5kLXhsIC5uYXZiYXItdG9nZ2xlcntkaXNwbGF5Om5vbmV9fS5uYXZiYXItZXhwYW5key1tcy1mbGV4LWZsb3c6cm93IG5vd3JhcDtmbGV4LWZsb3c6cm93IG5vd3JhcDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS5uYXZiYXItZXhwYW5kPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lci1mbHVpZHtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjB9Lm5hdmJhci1leHBhbmQgLm5hdmJhci1uYXZ7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lm5hdmJhci1leHBhbmQgLm5hdmJhci1uYXYgLmRyb3Bkb3duLW1lbnV7cG9zaXRpb246YWJzb2x1dGV9Lm5hdmJhci1leHBhbmQgLm5hdmJhci1uYXYgLm5hdi1saW5re3BhZGRpbmctcmlnaHQ6LjVyZW07cGFkZGluZy1sZWZ0Oi41cmVtfS5uYXZiYXItZXhwYW5kPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lci1mbHVpZHstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfS5uYXZiYXItZXhwYW5kIC5uYXZiYXItY29sbGFwc2V7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudDstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTphdXRvO2ZsZXgtYmFzaXM6YXV0b30ubmF2YmFyLWV4cGFuZCAubmF2YmFyLXRvZ2dsZXJ7ZGlzcGxheTpub25lfS5uYXZiYXItbGlnaHQgLm5hdmJhci1icmFuZHtjb2xvcjpyZ2JhKDAsMCwwLC45KX0ubmF2YmFyLWxpZ2h0IC5uYXZiYXItYnJhbmQ6Zm9jdXMsLm5hdmJhci1saWdodCAubmF2YmFyLWJyYW5kOmhvdmVye2NvbG9yOnJnYmEoMCwwLDAsLjkpfS5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5re2NvbG9yOnJnYmEoMCwwLDAsLjUpfS5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rOmZvY3VzLC5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rOmhvdmVye2NvbG9yOnJnYmEoMCwwLDAsLjcpfS5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rLmRpc2FibGVke2NvbG9yOnJnYmEoMCwwLDAsLjMpfS5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLmFjdGl2ZT4ubmF2LWxpbmssLm5hdmJhci1saWdodCAubmF2YmFyLW5hdiAubmF2LWxpbmsuYWN0aXZlLC5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rLnNob3csLm5hdmJhci1saWdodCAubmF2YmFyLW5hdiAuc2hvdz4ubmF2LWxpbmt7Y29sb3I6cmdiYSgwLDAsMCwuOSl9Lm5hdmJhci1saWdodCAubmF2YmFyLXRvZ2dsZXJ7Y29sb3I6cmdiYSgwLDAsMCwuNSk7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjEpfS5uYXZiYXItbGlnaHQgLm5hdmJhci10b2dnbGVyLWljb257YmFja2dyb3VuZC1pbWFnZTp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2Nzdmcgdmlld0JveD0nMCAwIDMwIDMwJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNlJTNjcGF0aCBzdHJva2U9J3JnYmEoMCwgMCwgMCwgMC41KScgc3Ryb2tlLXdpZHRoPScyJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1taXRlcmxpbWl0PScxMCcgZD0nTTQgN2gyMk00IDE1aDIyTTQgMjNoMjInLyUzZSUzYy9zdmclM2VcXFwiKX0ubmF2YmFyLWxpZ2h0IC5uYXZiYXItdGV4dHtjb2xvcjpyZ2JhKDAsMCwwLC41KX0ubmF2YmFyLWxpZ2h0IC5uYXZiYXItdGV4dCBhe2NvbG9yOnJnYmEoMCwwLDAsLjkpfS5uYXZiYXItbGlnaHQgLm5hdmJhci10ZXh0IGE6Zm9jdXMsLm5hdmJhci1saWdodCAubmF2YmFyLXRleHQgYTpob3Zlcntjb2xvcjpyZ2JhKDAsMCwwLC45KX0ubmF2YmFyLWRhcmsgLm5hdmJhci1icmFuZHtjb2xvcjojZmZmfS5uYXZiYXItZGFyayAubmF2YmFyLWJyYW5kOmZvY3VzLC5uYXZiYXItZGFyayAubmF2YmFyLWJyYW5kOmhvdmVye2NvbG9yOiNmZmZ9Lm5hdmJhci1kYXJrIC5uYXZiYXItbmF2IC5uYXYtbGlua3tjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC41KX0ubmF2YmFyLWRhcmsgLm5hdmJhci1uYXYgLm5hdi1saW5rOmZvY3VzLC5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAubmF2LWxpbms6aG92ZXJ7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuNzUpfS5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAubmF2LWxpbmsuZGlzYWJsZWR7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuMjUpfS5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAuYWN0aXZlPi5uYXYtbGluaywubmF2YmFyLWRhcmsgLm5hdmJhci1uYXYgLm5hdi1saW5rLmFjdGl2ZSwubmF2YmFyLWRhcmsgLm5hdmJhci1uYXYgLm5hdi1saW5rLnNob3csLm5hdmJhci1kYXJrIC5uYXZiYXItbmF2IC5zaG93Pi5uYXYtbGlua3tjb2xvcjojZmZmfS5uYXZiYXItZGFyayAubmF2YmFyLXRvZ2dsZXJ7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuNSk7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjEpfS5uYXZiYXItZGFyayAubmF2YmFyLXRvZ2dsZXItaWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB2aWV3Qm94PScwIDAgMzAgMzAnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM2UlM2NwYXRoIHN0cm9rZT0ncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpJyBzdHJva2Utd2lkdGg9JzInIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLW1pdGVybGltaXQ9JzEwJyBkPSdNNCA3aDIyTTQgMTVoMjJNNCAyM2gyMicvJTNlJTNjL3N2ZyUzZVxcXCIpfS5uYXZiYXItZGFyayAubmF2YmFyLXRleHR7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuNSl9Lm5hdmJhci1kYXJrIC5uYXZiYXItdGV4dCBhe2NvbG9yOiNmZmZ9Lm5hdmJhci1kYXJrIC5uYXZiYXItdGV4dCBhOmZvY3VzLC5uYXZiYXItZGFyayAubmF2YmFyLXRleHQgYTpob3Zlcntjb2xvcjojZmZmfS5jYXJke3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uO21pbi13aWR0aDowO3dvcmQtd3JhcDpicmVhay13b3JkO2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNsaXA6Ym9yZGVyLWJveDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEyNSk7Ym9yZGVyLXJhZGl1czouMjVyZW19LmNhcmQ+aHJ7bWFyZ2luLXJpZ2h0OjA7bWFyZ2luLWxlZnQ6MH0uY2FyZD4ubGlzdC1ncm91cDpmaXJzdC1jaGlsZCAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci10b3AtbGVmdC1yYWRpdXM6LjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOi4yNXJlbX0uY2FyZD4ubGlzdC1ncm91cDpsYXN0LWNoaWxkIC5saXN0LWdyb3VwLWl0ZW06bGFzdC1jaGlsZHtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czouMjVyZW07Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czouMjVyZW19LmNhcmQtYm9keXstbXMtZmxleDoxIDEgYXV0bztmbGV4OjEgMSBhdXRvO3BhZGRpbmc6MS4yNXJlbX0uY2FyZC10aXRsZXttYXJnaW4tYm90dG9tOi43NXJlbX0uY2FyZC1zdWJ0aXRsZXttYXJnaW4tdG9wOi0uMzc1cmVtO21hcmdpbi1ib3R0b206MH0uY2FyZC10ZXh0Omxhc3QtY2hpbGR7bWFyZ2luLWJvdHRvbTowfS5jYXJkLWxpbms6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmNhcmQtbGluaysuY2FyZC1saW5re21hcmdpbi1sZWZ0OjEuMjVyZW19LmNhcmQtaGVhZGVye3BhZGRpbmc6Ljc1cmVtIDEuMjVyZW07bWFyZ2luLWJvdHRvbTowO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMDMpO2JvcmRlci1ib3R0b206MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEyNSl9LmNhcmQtaGVhZGVyOmZpcnN0LWNoaWxke2JvcmRlci1yYWRpdXM6Y2FsYyguMjVyZW0gLSAxcHgpIGNhbGMoLjI1cmVtIC0gMXB4KSAwIDB9LmNhcmQtaGVhZGVyKy5saXN0LWdyb3VwIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLXRvcDowfS5jYXJkLWZvb3RlcntwYWRkaW5nOi43NXJlbSAxLjI1cmVtO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMDMpO2JvcmRlci10b3A6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEyNSl9LmNhcmQtZm9vdGVyOmxhc3QtY2hpbGR7Ym9yZGVyLXJhZGl1czowIDAgY2FsYyguMjVyZW0gLSAxcHgpIGNhbGMoLjI1cmVtIC0gMXB4KX0uY2FyZC1oZWFkZXItdGFic3ttYXJnaW4tcmlnaHQ6LS42MjVyZW07bWFyZ2luLWJvdHRvbTotLjc1cmVtO21hcmdpbi1sZWZ0Oi0uNjI1cmVtO2JvcmRlci1ib3R0b206MH0uY2FyZC1oZWFkZXItcGlsbHN7bWFyZ2luLXJpZ2h0Oi0uNjI1cmVtO21hcmdpbi1sZWZ0Oi0uNjI1cmVtfS5jYXJkLWltZy1vdmVybGF5e3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bGVmdDowO3BhZGRpbmc6MS4yNXJlbX0uY2FyZC1pbWd7d2lkdGg6MTAwJTtib3JkZXItcmFkaXVzOmNhbGMoLjI1cmVtIC0gMXB4KX0uY2FyZC1pbWctdG9we3dpZHRoOjEwMCU7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czpjYWxjKC4yNXJlbSAtIDFweCk7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6Y2FsYyguMjVyZW0gLSAxcHgpfS5jYXJkLWltZy1ib3R0b217d2lkdGg6MTAwJTtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czpjYWxjKC4yNXJlbSAtIDFweCk7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czpjYWxjKC4yNXJlbSAtIDFweCl9LmNhcmQtZGVja3tkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0uY2FyZC1kZWNrIC5jYXJke21hcmdpbi1ib3R0b206MTVweH1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmNhcmQtZGVja3stbXMtZmxleC1mbG93OnJvdyB3cmFwO2ZsZXgtZmxvdzpyb3cgd3JhcDttYXJnaW4tcmlnaHQ6LTE1cHg7bWFyZ2luLWxlZnQ6LTE1cHh9LmNhcmQtZGVjayAuY2FyZHtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleDoxIDAgMCU7ZmxleDoxIDAgMCU7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47bWFyZ2luLXJpZ2h0OjE1cHg7bWFyZ2luLWJvdHRvbTowO21hcmdpbi1sZWZ0OjE1cHh9fS5jYXJkLWdyb3Vwe2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1ufS5jYXJkLWdyb3VwPi5jYXJke21hcmdpbi1ib3R0b206MTVweH1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmNhcmQtZ3JvdXB7LW1zLWZsZXgtZmxvdzpyb3cgd3JhcDtmbGV4LWZsb3c6cm93IHdyYXB9LmNhcmQtZ3JvdXA+LmNhcmR7LW1zLWZsZXg6MSAwIDAlO2ZsZXg6MSAwIDAlO21hcmdpbi1ib3R0b206MH0uY2FyZC1ncm91cD4uY2FyZCsuY2FyZHttYXJnaW4tbGVmdDowO2JvcmRlci1sZWZ0OjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpsYXN0LWNoaWxkKXtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpsYXN0LWNoaWxkKSAuY2FyZC1oZWFkZXIsLmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpsYXN0LWNoaWxkKSAuY2FyZC1pbWctdG9we2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpsYXN0LWNoaWxkKSAuY2FyZC1mb290ZXIsLmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpsYXN0LWNoaWxkKSAuY2FyZC1pbWctYm90dG9te2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpmaXJzdC1jaGlsZCl7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0uY2FyZC1ncm91cD4uY2FyZDpub3QoOmZpcnN0LWNoaWxkKSAuY2FyZC1oZWFkZXIsLmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpmaXJzdC1jaGlsZCkgLmNhcmQtaW1nLXRvcHtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpmaXJzdC1jaGlsZCkgLmNhcmQtZm9vdGVyLC5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6Zmlyc3QtY2hpbGQpIC5jYXJkLWltZy1ib3R0b217Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfX0uY2FyZC1jb2x1bW5zIC5jYXJke21hcmdpbi1ib3R0b206Ljc1cmVtfUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsuY2FyZC1jb2x1bW5zey13ZWJraXQtY29sdW1uLWNvdW50OjM7LW1vei1jb2x1bW4tY291bnQ6Mztjb2x1bW4tY291bnQ6Mzstd2Via2l0LWNvbHVtbi1nYXA6MS4yNXJlbTstbW96LWNvbHVtbi1nYXA6MS4yNXJlbTtjb2x1bW4tZ2FwOjEuMjVyZW07b3JwaGFuczoxO3dpZG93czoxfS5jYXJkLWNvbHVtbnMgLmNhcmR7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MTAwJX19LmFjY29yZGlvbj4uY2FyZHtvdmVyZmxvdzpoaWRkZW59LmFjY29yZGlvbj4uY2FyZDpub3QoOmZpcnN0LW9mLXR5cGUpIC5jYXJkLWhlYWRlcjpmaXJzdC1jaGlsZHtib3JkZXItcmFkaXVzOjB9LmFjY29yZGlvbj4uY2FyZDpub3QoOmZpcnN0LW9mLXR5cGUpOm5vdCg6bGFzdC1vZi10eXBlKXtib3JkZXItYm90dG9tOjA7Ym9yZGVyLXJhZGl1czowfS5hY2NvcmRpb24+LmNhcmQ6Zmlyc3Qtb2YtdHlwZXtib3JkZXItYm90dG9tOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LmFjY29yZGlvbj4uY2FyZDpsYXN0LW9mLXR5cGV7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9LmFjY29yZGlvbj4uY2FyZCAuY2FyZC1oZWFkZXJ7bWFyZ2luLWJvdHRvbTotMXB4fS5icmVhZGNydW1ie2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDtwYWRkaW5nOi43NXJlbSAxcmVtO21hcmdpbi1ib3R0b206MXJlbTtsaXN0LXN0eWxlOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmO2JvcmRlci1yYWRpdXM6LjI1cmVtfS5icmVhZGNydW1iLWl0ZW0rLmJyZWFkY3J1bWItaXRlbXtwYWRkaW5nLWxlZnQ6LjVyZW19LmJyZWFkY3J1bWItaXRlbSsuYnJlYWRjcnVtYi1pdGVtOjpiZWZvcmV7ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZy1yaWdodDouNXJlbTtjb2xvcjojNmM3NTdkO2NvbnRlbnQ6XFxcIi9cXFwifS5icmVhZGNydW1iLWl0ZW0rLmJyZWFkY3J1bWItaXRlbTpob3Zlcjo6YmVmb3Jle3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9LmJyZWFkY3J1bWItaXRlbSsuYnJlYWRjcnVtYi1pdGVtOmhvdmVyOjpiZWZvcmV7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmJyZWFkY3J1bWItaXRlbS5hY3RpdmV7Y29sb3I6IzZjNzU3ZH0ucGFnaW5hdGlvbntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDtwYWRkaW5nLWxlZnQ6MDtsaXN0LXN0eWxlOm5vbmU7Ym9yZGVyLXJhZGl1czouMjVyZW19LnBhZ2UtbGlua3twb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6LjVyZW0gLjc1cmVtO21hcmdpbi1sZWZ0Oi0xcHg7bGluZS1oZWlnaHQ6MS4yNTtjb2xvcjojMDA3YmZmO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNkZWUyZTZ9LnBhZ2UtbGluazpob3Zlcnt6LWluZGV4OjI7Y29sb3I6IzAwNTZiMzt0ZXh0LWRlY29yYXRpb246bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWY7Ym9yZGVyLWNvbG9yOiNkZWUyZTZ9LnBhZ2UtbGluazpmb2N1c3t6LWluZGV4OjI7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgwLDEyMywyNTUsLjI1KX0ucGFnZS1pdGVtOmZpcnN0LWNoaWxkIC5wYWdlLWxpbmt7bWFyZ2luLWxlZnQ6MDtib3JkZXItdG9wLWxlZnQtcmFkaXVzOi4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOi4yNXJlbX0ucGFnZS1pdGVtOmxhc3QtY2hpbGQgLnBhZ2UtbGlua3tib3JkZXItdG9wLXJpZ2h0LXJhZGl1czouMjVyZW07Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6LjI1cmVtfS5wYWdlLWl0ZW0uYWN0aXZlIC5wYWdlLWxpbmt7ei1pbmRleDoxO2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmO2JvcmRlci1jb2xvcjojMDA3YmZmfS5wYWdlLWl0ZW0uZGlzYWJsZWQgLnBhZ2UtbGlua3tjb2xvcjojNmM3NTdkO3BvaW50ZXItZXZlbnRzOm5vbmU7Y3Vyc29yOmF1dG87YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1jb2xvcjojZGVlMmU2fS5wYWdpbmF0aW9uLWxnIC5wYWdlLWxpbmt7cGFkZGluZzouNzVyZW0gMS41cmVtO2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OjEuNX0ucGFnaW5hdGlvbi1sZyAucGFnZS1pdGVtOmZpcnN0LWNoaWxkIC5wYWdlLWxpbmt7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czouM3JlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOi4zcmVtfS5wYWdpbmF0aW9uLWxnIC5wYWdlLWl0ZW06bGFzdC1jaGlsZCAucGFnZS1saW5re2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOi4zcmVtO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOi4zcmVtfS5wYWdpbmF0aW9uLXNtIC5wYWdlLWxpbmt7cGFkZGluZzouMjVyZW0gLjVyZW07Zm9udC1zaXplOi44NzVyZW07bGluZS1oZWlnaHQ6MS41fS5wYWdpbmF0aW9uLXNtIC5wYWdlLWl0ZW06Zmlyc3QtY2hpbGQgLnBhZ2UtbGlua3tib3JkZXItdG9wLWxlZnQtcmFkaXVzOi4ycmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjJyZW19LnBhZ2luYXRpb24tc20gLnBhZ2UtaXRlbTpsYXN0LWNoaWxkIC5wYWdlLWxpbmt7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjJyZW07Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6LjJyZW19LmJhZGdle2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6LjI1ZW0gLjRlbTtmb250LXNpemU6NzUlO2ZvbnQtd2VpZ2h0OjcwMDtsaW5lLWhlaWdodDoxO3RleHQtYWxpZ246Y2VudGVyO3doaXRlLXNwYWNlOm5vd3JhcDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZTtib3JkZXItcmFkaXVzOi4yNXJlbTt0cmFuc2l0aW9uOmNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dH1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuYmFkZ2V7dHJhbnNpdGlvbjpub25lfX1hLmJhZGdlOmZvY3VzLGEuYmFkZ2U6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmJhZGdlOmVtcHR5e2Rpc3BsYXk6bm9uZX0uYnRuIC5iYWRnZXtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6LTFweH0uYmFkZ2UtcGlsbHtwYWRkaW5nLXJpZ2h0Oi42ZW07cGFkZGluZy1sZWZ0Oi42ZW07Ym9yZGVyLXJhZGl1czoxMHJlbX0uYmFkZ2UtcHJpbWFyeXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZn1hLmJhZGdlLXByaW1hcnk6Zm9jdXMsYS5iYWRnZS1wcmltYXJ5OmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA2MmNjfWEuYmFkZ2UtcHJpbWFyeS5mb2N1cyxhLmJhZGdlLXByaW1hcnk6Zm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgwLDEyMywyNTUsLjUpfS5iYWRnZS1zZWNvbmRhcnl7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM2Yzc1N2R9YS5iYWRnZS1zZWNvbmRhcnk6Zm9jdXMsYS5iYWRnZS1zZWNvbmRhcnk6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM1NDViNjJ9YS5iYWRnZS1zZWNvbmRhcnkuZm9jdXMsYS5iYWRnZS1zZWNvbmRhcnk6Zm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgxMDgsMTE3LDEyNSwuNSl9LmJhZGdlLXN1Y2Nlc3N7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMyOGE3NDV9YS5iYWRnZS1zdWNjZXNzOmZvY3VzLGEuYmFkZ2Utc3VjY2Vzczpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzFlN2UzNH1hLmJhZGdlLXN1Y2Nlc3MuZm9jdXMsYS5iYWRnZS1zdWNjZXNzOmZvY3Vze291dGxpbmU6MDtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNDAsMTY3LDY5LC41KX0uYmFkZ2UtaW5mb3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzE3YTJiOH1hLmJhZGdlLWluZm86Zm9jdXMsYS5iYWRnZS1pbmZvOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTE3YThifWEuYmFkZ2UtaW5mby5mb2N1cyxhLmJhZGdlLWluZm86Zm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMywxNjIsMTg0LC41KX0uYmFkZ2Utd2FybmluZ3tjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2ZmYzEwN31hLmJhZGdlLXdhcm5pbmc6Zm9jdXMsYS5iYWRnZS13YXJuaW5nOmhvdmVye2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZDM5ZTAwfWEuYmFkZ2Utd2FybmluZy5mb2N1cyxhLmJhZGdlLXdhcm5pbmc6Zm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyNTUsMTkzLDcsLjUpfS5iYWRnZS1kYW5nZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNkYzM1NDV9YS5iYWRnZS1kYW5nZXI6Zm9jdXMsYS5iYWRnZS1kYW5nZXI6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNiZDIxMzB9YS5iYWRnZS1kYW5nZXIuZm9jdXMsYS5iYWRnZS1kYW5nZXI6Zm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMjAsNTMsNjksLjUpfS5iYWRnZS1saWdodHtjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2Y4ZjlmYX1hLmJhZGdlLWxpZ2h0OmZvY3VzLGEuYmFkZ2UtbGlnaHQ6aG92ZXJ7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNkYWUwZTV9YS5iYWRnZS1saWdodC5mb2N1cyxhLmJhZGdlLWxpZ2h0OmZvY3Vze291dGxpbmU6MDtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjQ4LDI0OSwyNTAsLjUpfS5iYWRnZS1kYXJre2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwfWEuYmFkZ2UtZGFyazpmb2N1cyxhLmJhZGdlLWRhcms6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxZDIxMjR9YS5iYWRnZS1kYXJrLmZvY3VzLGEuYmFkZ2UtZGFyazpmb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDUyLDU4LDY0LC41KX0uanVtYm90cm9ue3BhZGRpbmc6MnJlbSAxcmVtO21hcmdpbi1ib3R0b206MnJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWY7Ym9yZGVyLXJhZGl1czouM3JlbX1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7Lmp1bWJvdHJvbntwYWRkaW5nOjRyZW0gMnJlbX19Lmp1bWJvdHJvbi1mbHVpZHtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjA7Ym9yZGVyLXJhZGl1czowfS5hbGVydHtwb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nOi43NXJlbSAxLjI1cmVtO21hcmdpbi1ib3R0b206MXJlbTtib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1yYWRpdXM6LjI1cmVtfS5hbGVydC1oZWFkaW5ne2NvbG9yOmluaGVyaXR9LmFsZXJ0LWxpbmt7Zm9udC13ZWlnaHQ6NzAwfS5hbGVydC1kaXNtaXNzaWJsZXtwYWRkaW5nLXJpZ2h0OjRyZW19LmFsZXJ0LWRpc21pc3NpYmxlIC5jbG9zZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO3BhZGRpbmc6Ljc1cmVtIDEuMjVyZW07Y29sb3I6aW5oZXJpdH0uYWxlcnQtcHJpbWFyeXtjb2xvcjojMDA0MDg1O2JhY2tncm91bmQtY29sb3I6I2NjZTVmZjtib3JkZXItY29sb3I6I2I4ZGFmZn0uYWxlcnQtcHJpbWFyeSBocntib3JkZXItdG9wLWNvbG9yOiM5ZmNkZmZ9LmFsZXJ0LXByaW1hcnkgLmFsZXJ0LWxpbmt7Y29sb3I6IzAwMjc1Mn0uYWxlcnQtc2Vjb25kYXJ5e2NvbG9yOiMzODNkNDE7YmFja2dyb3VuZC1jb2xvcjojZTJlM2U1O2JvcmRlci1jb2xvcjojZDZkOGRifS5hbGVydC1zZWNvbmRhcnkgaHJ7Ym9yZGVyLXRvcC1jb2xvcjojYzhjYmNmfS5hbGVydC1zZWNvbmRhcnkgLmFsZXJ0LWxpbmt7Y29sb3I6IzIwMjMyNn0uYWxlcnQtc3VjY2Vzc3tjb2xvcjojMTU1NzI0O2JhY2tncm91bmQtY29sb3I6I2Q0ZWRkYTtib3JkZXItY29sb3I6I2MzZTZjYn0uYWxlcnQtc3VjY2VzcyBocntib3JkZXItdG9wLWNvbG9yOiNiMWRmYmJ9LmFsZXJ0LXN1Y2Nlc3MgLmFsZXJ0LWxpbmt7Y29sb3I6IzBiMmUxM30uYWxlcnQtaW5mb3tjb2xvcjojMGM1NDYwO2JhY2tncm91bmQtY29sb3I6I2QxZWNmMTtib3JkZXItY29sb3I6I2JlZTVlYn0uYWxlcnQtaW5mbyBocntib3JkZXItdG9wLWNvbG9yOiNhYmRkZTV9LmFsZXJ0LWluZm8gLmFsZXJ0LWxpbmt7Y29sb3I6IzA2MmMzM30uYWxlcnQtd2FybmluZ3tjb2xvcjojODU2NDA0O2JhY2tncm91bmQtY29sb3I6I2ZmZjNjZDtib3JkZXItY29sb3I6I2ZmZWViYX0uYWxlcnQtd2FybmluZyBocntib3JkZXItdG9wLWNvbG9yOiNmZmU4YTF9LmFsZXJ0LXdhcm5pbmcgLmFsZXJ0LWxpbmt7Y29sb3I6IzUzM2YwM30uYWxlcnQtZGFuZ2Vye2NvbG9yOiM3MjFjMjQ7YmFja2dyb3VuZC1jb2xvcjojZjhkN2RhO2JvcmRlci1jb2xvcjojZjVjNmNifS5hbGVydC1kYW5nZXIgaHJ7Ym9yZGVyLXRvcC1jb2xvcjojZjFiMGI3fS5hbGVydC1kYW5nZXIgLmFsZXJ0LWxpbmt7Y29sb3I6IzQ5MTIxN30uYWxlcnQtbGlnaHR7Y29sb3I6IzgxODE4MjtiYWNrZ3JvdW5kLWNvbG9yOiNmZWZlZmU7Ym9yZGVyLWNvbG9yOiNmZGZkZmV9LmFsZXJ0LWxpZ2h0IGhye2JvcmRlci10b3AtY29sb3I6I2VjZWNmNn0uYWxlcnQtbGlnaHQgLmFsZXJ0LWxpbmt7Y29sb3I6IzY4Njg2OH0uYWxlcnQtZGFya3tjb2xvcjojMWIxZTIxO2JhY2tncm91bmQtY29sb3I6I2Q2ZDhkOTtib3JkZXItY29sb3I6I2M2YzhjYX0uYWxlcnQtZGFyayBocntib3JkZXItdG9wLWNvbG9yOiNiOWJiYmV9LmFsZXJ0LWRhcmsgLmFsZXJ0LWxpbmt7Y29sb3I6IzA0MDUwNX1ALXdlYmtpdC1rZXlmcmFtZXMgcHJvZ3Jlc3MtYmFyLXN0cmlwZXN7ZnJvbXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjFyZW0gMH10b3tiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgMH19QGtleWZyYW1lcyBwcm9ncmVzcy1iYXItc3RyaXBlc3tmcm9te2JhY2tncm91bmQtcG9zaXRpb246MXJlbSAwfXRve2JhY2tncm91bmQtcG9zaXRpb246MCAwfX0ucHJvZ3Jlc3N7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7aGVpZ2h0OjFyZW07b3ZlcmZsb3c6aGlkZGVuO2ZvbnQtc2l6ZTouNzVyZW07YmFja2dyb3VuZC1jb2xvcjojZTllY2VmO2JvcmRlci1yYWRpdXM6LjI1cmVtfS5wcm9ncmVzcy1iYXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtjb2xvcjojZmZmO3RleHQtYWxpZ246Y2VudGVyO3doaXRlLXNwYWNlOm5vd3JhcDtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7dHJhbnNpdGlvbjp3aWR0aCAuNnMgZWFzZX1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsucHJvZ3Jlc3MtYmFye3RyYW5zaXRpb246bm9uZX19LnByb2dyZXNzLWJhci1zdHJpcGVke2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDQ1ZGVnLHJnYmEoMjU1LDI1NSwyNTUsLjE1KSAyNSUsdHJhbnNwYXJlbnQgMjUlLHRyYW5zcGFyZW50IDUwJSxyZ2JhKDI1NSwyNTUsMjU1LC4xNSkgNTAlLHJnYmEoMjU1LDI1NSwyNTUsLjE1KSA3NSUsdHJhbnNwYXJlbnQgNzUlLHRyYW5zcGFyZW50KTtiYWNrZ3JvdW5kLXNpemU6MXJlbSAxcmVtfS5wcm9ncmVzcy1iYXItYW5pbWF0ZWR7LXdlYmtpdC1hbmltYXRpb246cHJvZ3Jlc3MtYmFyLXN0cmlwZXMgMXMgbGluZWFyIGluZmluaXRlO2FuaW1hdGlvbjpwcm9ncmVzcy1iYXItc3RyaXBlcyAxcyBsaW5lYXIgaW5maW5pdGV9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOnJlZHVjZSl7LnByb2dyZXNzLWJhci1hbmltYXRlZHstd2Via2l0LWFuaW1hdGlvbjpub25lO2FuaW1hdGlvbjpub25lfX0ubWVkaWF7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydH0ubWVkaWEtYm9keXstbXMtZmxleDoxO2ZsZXg6MX0ubGlzdC1ncm91cHtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtwYWRkaW5nLWxlZnQ6MDttYXJnaW4tYm90dG9tOjB9Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb257d2lkdGg6MTAwJTtjb2xvcjojNDk1MDU3O3RleHQtYWxpZ246aW5oZXJpdH0ubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1cywubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpob3Zlcnt6LWluZGV4OjE7Y29sb3I6IzQ5NTA1Nzt0ZXh0LWRlY29yYXRpb246bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOiNmOGY5ZmF9Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246YWN0aXZle2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmfS5saXN0LWdyb3VwLWl0ZW17cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztwYWRkaW5nOi43NXJlbSAxLjI1cmVtO21hcmdpbi1ib3R0b206LTFweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xMjUpfS5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czouMjVyZW07Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjI1cmVtfS5saXN0LWdyb3VwLWl0ZW06bGFzdC1jaGlsZHttYXJnaW4tYm90dG9tOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjI1cmVtfS5saXN0LWdyb3VwLWl0ZW0uZGlzYWJsZWQsLmxpc3QtZ3JvdXAtaXRlbTpkaXNhYmxlZHtjb2xvcjojNmM3NTdkO3BvaW50ZXItZXZlbnRzOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5saXN0LWdyb3VwLWl0ZW0uYWN0aXZle3otaW5kZXg6Mjtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn0ubGlzdC1ncm91cC1ob3Jpem9udGFsey1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93fS5saXN0LWdyb3VwLWhvcml6b250YWwgLmxpc3QtZ3JvdXAtaXRlbXttYXJnaW4tcmlnaHQ6LTFweDttYXJnaW4tYm90dG9tOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbCAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci10b3AtbGVmdC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbCAubGlzdC1ncm91cC1pdGVtOmxhc3QtY2hpbGR7bWFyZ2luLXJpZ2h0OjA7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOi4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9QG1lZGlhIChtaW4td2lkdGg6NTc2cHgpey5saXN0LWdyb3VwLWhvcml6b250YWwtc217LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1zbSAubGlzdC1ncm91cC1pdGVte21hcmdpbi1yaWdodDotMXB4O21hcmdpbi1ib3R0b206MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLXNtIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czouMjVyZW07Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czouMjVyZW07Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLXNtIC5saXN0LWdyb3VwLWl0ZW06bGFzdC1jaGlsZHttYXJnaW4tcmlnaHQ6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czouMjVyZW07Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH19QG1lZGlhIChtaW4td2lkdGg6NzY4cHgpey5saXN0LWdyb3VwLWhvcml6b250YWwtbWR7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1tZCAubGlzdC1ncm91cC1pdGVte21hcmdpbi1yaWdodDotMXB4O21hcmdpbi1ib3R0b206MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLW1kIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czouMjVyZW07Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czouMjVyZW07Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLW1kIC5saXN0LWdyb3VwLWl0ZW06bGFzdC1jaGlsZHttYXJnaW4tcmlnaHQ6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czouMjVyZW07Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey5saXN0LWdyb3VwLWhvcml6b250YWwtbGd7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1sZyAubGlzdC1ncm91cC1pdGVte21hcmdpbi1yaWdodDotMXB4O21hcmdpbi1ib3R0b206MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLWxnIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czouMjVyZW07Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czouMjVyZW07Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLWxnIC5saXN0LWdyb3VwLWl0ZW06bGFzdC1jaGlsZHttYXJnaW4tcmlnaHQ6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czouMjVyZW07Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH19QG1lZGlhIChtaW4td2lkdGg6MTIwMHB4KXsubGlzdC1ncm91cC1ob3Jpem9udGFsLXhsey1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93fS5saXN0LWdyb3VwLWhvcml6b250YWwteGwgLmxpc3QtZ3JvdXAtaXRlbXttYXJnaW4tcmlnaHQ6LTFweDttYXJnaW4tYm90dG9tOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC14bCAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci10b3AtbGVmdC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC14bCAubGlzdC1ncm91cC1pdGVtOmxhc3QtY2hpbGR7bWFyZ2luLXJpZ2h0OjA7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOi4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9fS5saXN0LWdyb3VwLWZsdXNoIC5saXN0LWdyb3VwLWl0ZW17Ym9yZGVyLXJpZ2h0OjA7Ym9yZGVyLWxlZnQ6MDtib3JkZXItcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtZmx1c2ggLmxpc3QtZ3JvdXAtaXRlbTpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206LTFweH0ubGlzdC1ncm91cC1mbHVzaDpmaXJzdC1jaGlsZCAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci10b3A6MH0ubGlzdC1ncm91cC1mbHVzaDpsYXN0LWNoaWxkIC5saXN0LWdyb3VwLWl0ZW06bGFzdC1jaGlsZHttYXJnaW4tYm90dG9tOjA7Ym9yZGVyLWJvdHRvbTowfS5saXN0LWdyb3VwLWl0ZW0tcHJpbWFyeXtjb2xvcjojMDA0MDg1O2JhY2tncm91bmQtY29sb3I6I2I4ZGFmZn0ubGlzdC1ncm91cC1pdGVtLXByaW1hcnkubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1cywubGlzdC1ncm91cC1pdGVtLXByaW1hcnkubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpob3Zlcntjb2xvcjojMDA0MDg1O2JhY2tncm91bmQtY29sb3I6IzlmY2RmZn0ubGlzdC1ncm91cC1pdGVtLXByaW1hcnkubGlzdC1ncm91cC1pdGVtLWFjdGlvbi5hY3RpdmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDQwODU7Ym9yZGVyLWNvbG9yOiMwMDQwODV9Lmxpc3QtZ3JvdXAtaXRlbS1zZWNvbmRhcnl7Y29sb3I6IzM4M2Q0MTtiYWNrZ3JvdW5kLWNvbG9yOiNkNmQ4ZGJ9Lmxpc3QtZ3JvdXAtaXRlbS1zZWNvbmRhcnkubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1cywubGlzdC1ncm91cC1pdGVtLXNlY29uZGFyeS5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVye2NvbG9yOiMzODNkNDE7YmFja2dyb3VuZC1jb2xvcjojYzhjYmNmfS5saXN0LWdyb3VwLWl0ZW0tc2Vjb25kYXJ5Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24uYWN0aXZle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMzgzZDQxO2JvcmRlci1jb2xvcjojMzgzZDQxfS5saXN0LWdyb3VwLWl0ZW0tc3VjY2Vzc3tjb2xvcjojMTU1NzI0O2JhY2tncm91bmQtY29sb3I6I2MzZTZjYn0ubGlzdC1ncm91cC1pdGVtLXN1Y2Nlc3MubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1cywubGlzdC1ncm91cC1pdGVtLXN1Y2Nlc3MubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpob3Zlcntjb2xvcjojMTU1NzI0O2JhY2tncm91bmQtY29sb3I6I2IxZGZiYn0ubGlzdC1ncm91cC1pdGVtLXN1Y2Nlc3MubGlzdC1ncm91cC1pdGVtLWFjdGlvbi5hY3RpdmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxNTU3MjQ7Ym9yZGVyLWNvbG9yOiMxNTU3MjR9Lmxpc3QtZ3JvdXAtaXRlbS1pbmZve2NvbG9yOiMwYzU0NjA7YmFja2dyb3VuZC1jb2xvcjojYmVlNWVifS5saXN0LWdyb3VwLWl0ZW0taW5mby5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3VzLC5saXN0LWdyb3VwLWl0ZW0taW5mby5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVye2NvbG9yOiMwYzU0NjA7YmFja2dyb3VuZC1jb2xvcjojYWJkZGU1fS5saXN0LWdyb3VwLWl0ZW0taW5mby5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uLmFjdGl2ZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzBjNTQ2MDtib3JkZXItY29sb3I6IzBjNTQ2MH0ubGlzdC1ncm91cC1pdGVtLXdhcm5pbmd7Y29sb3I6Izg1NjQwNDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmVlYmF9Lmxpc3QtZ3JvdXAtaXRlbS13YXJuaW5nLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246Zm9jdXMsLmxpc3QtZ3JvdXAtaXRlbS13YXJuaW5nLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246aG92ZXJ7Y29sb3I6Izg1NjQwNDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmU4YTF9Lmxpc3QtZ3JvdXAtaXRlbS13YXJuaW5nLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24uYWN0aXZle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojODU2NDA0O2JvcmRlci1jb2xvcjojODU2NDA0fS5saXN0LWdyb3VwLWl0ZW0tZGFuZ2Vye2NvbG9yOiM3MjFjMjQ7YmFja2dyb3VuZC1jb2xvcjojZjVjNmNifS5saXN0LWdyb3VwLWl0ZW0tZGFuZ2VyLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246Zm9jdXMsLmxpc3QtZ3JvdXAtaXRlbS1kYW5nZXIubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpob3Zlcntjb2xvcjojNzIxYzI0O2JhY2tncm91bmQtY29sb3I6I2YxYjBiN30ubGlzdC1ncm91cC1pdGVtLWRhbmdlci5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uLmFjdGl2ZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzcyMWMyNDtib3JkZXItY29sb3I6IzcyMWMyNH0ubGlzdC1ncm91cC1pdGVtLWxpZ2h0e2NvbG9yOiM4MTgxODI7YmFja2dyb3VuZC1jb2xvcjojZmRmZGZlfS5saXN0LWdyb3VwLWl0ZW0tbGlnaHQubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1cywubGlzdC1ncm91cC1pdGVtLWxpZ2h0Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246aG92ZXJ7Y29sb3I6IzgxODE4MjtiYWNrZ3JvdW5kLWNvbG9yOiNlY2VjZjZ9Lmxpc3QtZ3JvdXAtaXRlbS1saWdodC5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uLmFjdGl2ZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzgxODE4Mjtib3JkZXItY29sb3I6IzgxODE4Mn0ubGlzdC1ncm91cC1pdGVtLWRhcmt7Y29sb3I6IzFiMWUyMTtiYWNrZ3JvdW5kLWNvbG9yOiNjNmM4Y2F9Lmxpc3QtZ3JvdXAtaXRlbS1kYXJrLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246Zm9jdXMsLmxpc3QtZ3JvdXAtaXRlbS1kYXJrLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246aG92ZXJ7Y29sb3I6IzFiMWUyMTtiYWNrZ3JvdW5kLWNvbG9yOiNiOWJiYmV9Lmxpc3QtZ3JvdXAtaXRlbS1kYXJrLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24uYWN0aXZle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMWIxZTIxO2JvcmRlci1jb2xvcjojMWIxZTIxfS5jbG9zZXtmbG9hdDpyaWdodDtmb250LXNpemU6MS41cmVtO2ZvbnQtd2VpZ2h0OjcwMDtsaW5lLWhlaWdodDoxO2NvbG9yOiMwMDA7dGV4dC1zaGFkb3c6MCAxcHggMCAjZmZmO29wYWNpdHk6LjV9LmNsb3NlOmhvdmVye2NvbG9yOiMwMDA7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmNsb3NlOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmZvY3VzLC5jbG9zZTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTpob3ZlcntvcGFjaXR5Oi43NX1idXR0b24uY2xvc2V7cGFkZGluZzowO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjA7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfWEuY2xvc2UuZGlzYWJsZWR7cG9pbnRlci1ldmVudHM6bm9uZX0udG9hc3R7bWF4LXdpZHRoOjM1MHB4O292ZXJmbG93OmhpZGRlbjtmb250LXNpemU6Ljg3NXJlbTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjg1KTtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xKTtib3gtc2hhZG93OjAgLjI1cmVtIC43NXJlbSByZ2JhKDAsMCwwLC4xKTstd2Via2l0LWJhY2tkcm9wLWZpbHRlcjpibHVyKDEwcHgpO2JhY2tkcm9wLWZpbHRlcjpibHVyKDEwcHgpO29wYWNpdHk6MDtib3JkZXItcmFkaXVzOi4yNXJlbX0udG9hc3Q6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOi43NXJlbX0udG9hc3Quc2hvd2luZ3tvcGFjaXR5OjF9LnRvYXN0LnNob3d7ZGlzcGxheTpibG9jaztvcGFjaXR5OjF9LnRvYXN0LmhpZGV7ZGlzcGxheTpub25lfS50b2FzdC1oZWFkZXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nOi4yNXJlbSAuNzVyZW07Y29sb3I6IzZjNzU3ZDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjg1KTtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgcmdiYSgwLDAsMCwuMDUpfS50b2FzdC1ib2R5e3BhZGRpbmc6Ljc1cmVtfS5tb2RhbC1vcGVue292ZXJmbG93OmhpZGRlbn0ubW9kYWwtb3BlbiAubW9kYWx7b3ZlcmZsb3cteDpoaWRkZW47b3ZlcmZsb3cteTphdXRvfS5tb2RhbHtwb3NpdGlvbjpmaXhlZDt0b3A6MDtsZWZ0OjA7ei1pbmRleDoxMDUwO2Rpc3BsYXk6bm9uZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO292ZXJmbG93OmhpZGRlbjtvdXRsaW5lOjB9Lm1vZGFsLWRpYWxvZ3twb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDphdXRvO21hcmdpbjouNXJlbTtwb2ludGVyLWV2ZW50czpub25lfS5tb2RhbC5mYWRlIC5tb2RhbC1kaWFsb2d7dHJhbnNpdGlvbjotd2Via2l0LXRyYW5zZm9ybSAuM3MgZWFzZS1vdXQ7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gLjNzIGVhc2Utb3V0O3RyYW5zaXRpb246dHJhbnNmb3JtIC4zcyBlYXNlLW91dCwtd2Via2l0LXRyYW5zZm9ybSAuM3MgZWFzZS1vdXQ7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDAsLTUwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwtNTBweCl9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOnJlZHVjZSl7Lm1vZGFsLmZhZGUgLm1vZGFsLWRpYWxvZ3t0cmFuc2l0aW9uOm5vbmV9fS5tb2RhbC5zaG93IC5tb2RhbC1kaWFsb2d7LXdlYmtpdC10cmFuc2Zvcm06bm9uZTt0cmFuc2Zvcm06bm9uZX0ubW9kYWwtZGlhbG9nLXNjcm9sbGFibGV7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7bWF4LWhlaWdodDpjYWxjKDEwMCUgLSAxcmVtKX0ubW9kYWwtZGlhbG9nLXNjcm9sbGFibGUgLm1vZGFsLWNvbnRlbnR7bWF4LWhlaWdodDpjYWxjKDEwMHZoIC0gMXJlbSk7b3ZlcmZsb3c6aGlkZGVufS5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZSAubW9kYWwtZm9vdGVyLC5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZSAubW9kYWwtaGVhZGVyey1tcy1mbGV4LW5lZ2F0aXZlOjA7ZmxleC1zaHJpbms6MH0ubW9kYWwtZGlhbG9nLXNjcm9sbGFibGUgLm1vZGFsLWJvZHl7b3ZlcmZsb3cteTphdXRvfS5tb2RhbC1kaWFsb2ctY2VudGVyZWR7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjttaW4taGVpZ2h0OmNhbGMoMTAwJSAtIDFyZW0pfS5tb2RhbC1kaWFsb2ctY2VudGVyZWQ6OmJlZm9yZXtkaXNwbGF5OmJsb2NrO2hlaWdodDpjYWxjKDEwMHZoIC0gMXJlbSk7Y29udGVudDpcXFwiXFxcIn0ubW9kYWwtZGlhbG9nLWNlbnRlcmVkLm1vZGFsLWRpYWxvZy1zY3JvbGxhYmxley1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7aGVpZ2h0OjEwMCV9Lm1vZGFsLWRpYWxvZy1jZW50ZXJlZC5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZSAubW9kYWwtY29udGVudHttYXgtaGVpZ2h0Om5vbmV9Lm1vZGFsLWRpYWxvZy1jZW50ZXJlZC5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZTo6YmVmb3Jle2NvbnRlbnQ6bm9uZX0ubW9kYWwtY29udGVudHtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjt3aWR0aDoxMDAlO3BvaW50ZXItZXZlbnRzOmF1dG87YmFja2dyb3VuZC1jb2xvcjojZmZmO2JhY2tncm91bmQtY2xpcDpwYWRkaW5nLWJveDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjIpO2JvcmRlci1yYWRpdXM6LjNyZW07b3V0bGluZTowfS5tb2RhbC1iYWNrZHJvcHtwb3NpdGlvbjpmaXhlZDt0b3A6MDtsZWZ0OjA7ei1pbmRleDoxMDQwO3dpZHRoOjEwMHZ3O2hlaWdodDoxMDB2aDtiYWNrZ3JvdW5kLWNvbG9yOiMwMDB9Lm1vZGFsLWJhY2tkcm9wLmZhZGV7b3BhY2l0eTowfS5tb2RhbC1iYWNrZHJvcC5zaG93e29wYWNpdHk6LjV9Lm1vZGFsLWhlYWRlcntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjtwYWRkaW5nOjFyZW0gMXJlbTtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGVlMmU2O2JvcmRlci10b3AtbGVmdC1yYWRpdXM6LjNyZW07Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjNyZW19Lm1vZGFsLWhlYWRlciAuY2xvc2V7cGFkZGluZzoxcmVtIDFyZW07bWFyZ2luOi0xcmVtIC0xcmVtIC0xcmVtIGF1dG99Lm1vZGFsLXRpdGxle21hcmdpbi1ib3R0b206MDtsaW5lLWhlaWdodDoxLjV9Lm1vZGFsLWJvZHl7cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXg6MSAxIGF1dG87ZmxleDoxIDEgYXV0bztwYWRkaW5nOjFyZW19Lm1vZGFsLWZvb3RlcntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LXBhY2s6ZW5kO2p1c3RpZnktY29udGVudDpmbGV4LWVuZDtwYWRkaW5nOjFyZW07Ym9yZGVyLXRvcDoxcHggc29saWQgI2RlZTJlNjtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czouM3JlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOi4zcmVtfS5tb2RhbC1mb290ZXI+Om5vdCg6Zmlyc3QtY2hpbGQpe21hcmdpbi1sZWZ0Oi4yNXJlbX0ubW9kYWwtZm9vdGVyPjpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1yaWdodDouMjVyZW19Lm1vZGFsLXNjcm9sbGJhci1tZWFzdXJle3Bvc2l0aW9uOmFic29sdXRlO3RvcDotOTk5OXB4O3dpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7b3ZlcmZsb3c6c2Nyb2xsfUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsubW9kYWwtZGlhbG9ne21heC13aWR0aDo1MDBweDttYXJnaW46MS43NXJlbSBhdXRvfS5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZXttYXgtaGVpZ2h0OmNhbGMoMTAwJSAtIDMuNXJlbSl9Lm1vZGFsLWRpYWxvZy1zY3JvbGxhYmxlIC5tb2RhbC1jb250ZW50e21heC1oZWlnaHQ6Y2FsYygxMDB2aCAtIDMuNXJlbSl9Lm1vZGFsLWRpYWxvZy1jZW50ZXJlZHttaW4taGVpZ2h0OmNhbGMoMTAwJSAtIDMuNXJlbSl9Lm1vZGFsLWRpYWxvZy1jZW50ZXJlZDo6YmVmb3Jle2hlaWdodDpjYWxjKDEwMHZoIC0gMy41cmVtKX0ubW9kYWwtc217bWF4LXdpZHRoOjMwMHB4fX1AbWVkaWEgKG1pbi13aWR0aDo5OTJweCl7Lm1vZGFsLWxnLC5tb2RhbC14bHttYXgtd2lkdGg6ODAwcHh9fUBtZWRpYSAobWluLXdpZHRoOjEyMDBweCl7Lm1vZGFsLXhse21heC13aWR0aDoxMTQwcHh9fS50b29sdGlwe3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTA3MDtkaXNwbGF5OmJsb2NrO21hcmdpbjowO2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsXFxcIk5vdG8gU2Fuc1xcXCIsc2Fucy1zZXJpZixcXFwiQXBwbGUgQ29sb3IgRW1vamlcXFwiLFxcXCJTZWdvZSBVSSBFbW9qaVxcXCIsXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsXFxcIk5vdG8gQ29sb3IgRW1vamlcXFwiO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7dGV4dC1hbGlnbjpsZWZ0O3RleHQtYWxpZ246c3RhcnQ7dGV4dC1kZWNvcmF0aW9uOm5vbmU7dGV4dC1zaGFkb3c6bm9uZTt0ZXh0LXRyYW5zZm9ybTpub25lO2xldHRlci1zcGFjaW5nOm5vcm1hbDt3b3JkLWJyZWFrOm5vcm1hbDt3b3JkLXNwYWNpbmc6bm9ybWFsO3doaXRlLXNwYWNlOm5vcm1hbDtsaW5lLWJyZWFrOmF1dG87Zm9udC1zaXplOi44NzVyZW07d29yZC13cmFwOmJyZWFrLXdvcmQ7b3BhY2l0eTowfS50b29sdGlwLnNob3d7b3BhY2l0eTouOX0udG9vbHRpcCAuYXJyb3d7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jazt3aWR0aDouOHJlbTtoZWlnaHQ6LjRyZW19LnRvb2x0aXAgLmFycm93OjpiZWZvcmV7cG9zaXRpb246YWJzb2x1dGU7Y29udGVudDpcXFwiXFxcIjtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXN0eWxlOnNvbGlkfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePXRvcF0sLmJzLXRvb2x0aXAtdG9we3BhZGRpbmc6LjRyZW0gMH0uYnMtdG9vbHRpcC1hdXRvW3gtcGxhY2VtZW50Xj10b3BdIC5hcnJvdywuYnMtdG9vbHRpcC10b3AgLmFycm93e2JvdHRvbTowfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePXRvcF0gLmFycm93OjpiZWZvcmUsLmJzLXRvb2x0aXAtdG9wIC5hcnJvdzo6YmVmb3Jle3RvcDowO2JvcmRlci13aWR0aDouNHJlbSAuNHJlbSAwO2JvcmRlci10b3AtY29sb3I6IzAwMH0uYnMtdG9vbHRpcC1hdXRvW3gtcGxhY2VtZW50Xj1yaWdodF0sLmJzLXRvb2x0aXAtcmlnaHR7cGFkZGluZzowIC40cmVtfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePXJpZ2h0XSAuYXJyb3csLmJzLXRvb2x0aXAtcmlnaHQgLmFycm93e2xlZnQ6MDt3aWR0aDouNHJlbTtoZWlnaHQ6LjhyZW19LmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49cmlnaHRdIC5hcnJvdzo6YmVmb3JlLC5icy10b29sdGlwLXJpZ2h0IC5hcnJvdzo6YmVmb3Jle3JpZ2h0OjA7Ym9yZGVyLXdpZHRoOi40cmVtIC40cmVtIC40cmVtIDA7Ym9yZGVyLXJpZ2h0LWNvbG9yOiMwMDB9LmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49Ym90dG9tXSwuYnMtdG9vbHRpcC1ib3R0b217cGFkZGluZzouNHJlbSAwfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePWJvdHRvbV0gLmFycm93LC5icy10b29sdGlwLWJvdHRvbSAuYXJyb3d7dG9wOjB9LmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49Ym90dG9tXSAuYXJyb3c6OmJlZm9yZSwuYnMtdG9vbHRpcC1ib3R0b20gLmFycm93OjpiZWZvcmV7Ym90dG9tOjA7Ym9yZGVyLXdpZHRoOjAgLjRyZW0gLjRyZW07Ym9yZGVyLWJvdHRvbS1jb2xvcjojMDAwfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePWxlZnRdLC5icy10b29sdGlwLWxlZnR7cGFkZGluZzowIC40cmVtfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePWxlZnRdIC5hcnJvdywuYnMtdG9vbHRpcC1sZWZ0IC5hcnJvd3tyaWdodDowO3dpZHRoOi40cmVtO2hlaWdodDouOHJlbX0uYnMtdG9vbHRpcC1hdXRvW3gtcGxhY2VtZW50Xj1sZWZ0XSAuYXJyb3c6OmJlZm9yZSwuYnMtdG9vbHRpcC1sZWZ0IC5hcnJvdzo6YmVmb3Jle2xlZnQ6MDtib3JkZXItd2lkdGg6LjRyZW0gMCAuNHJlbSAuNHJlbTtib3JkZXItbGVmdC1jb2xvcjojMDAwfS50b29sdGlwLWlubmVye21heC13aWR0aDoyMDBweDtwYWRkaW5nOi4yNXJlbSAuNXJlbTtjb2xvcjojZmZmO3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQtY29sb3I6IzAwMDtib3JkZXItcmFkaXVzOi4yNXJlbX0ucG9wb3Zlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7ei1pbmRleDoxMDYwO2Rpc3BsYXk6YmxvY2s7bWF4LXdpZHRoOjI3NnB4O2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsXFxcIk5vdG8gU2Fuc1xcXCIsc2Fucy1zZXJpZixcXFwiQXBwbGUgQ29sb3IgRW1vamlcXFwiLFxcXCJTZWdvZSBVSSBFbW9qaVxcXCIsXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsXFxcIk5vdG8gQ29sb3IgRW1vamlcXFwiO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7dGV4dC1hbGlnbjpsZWZ0O3RleHQtYWxpZ246c3RhcnQ7dGV4dC1kZWNvcmF0aW9uOm5vbmU7dGV4dC1zaGFkb3c6bm9uZTt0ZXh0LXRyYW5zZm9ybTpub25lO2xldHRlci1zcGFjaW5nOm5vcm1hbDt3b3JkLWJyZWFrOm5vcm1hbDt3b3JkLXNwYWNpbmc6bm9ybWFsO3doaXRlLXNwYWNlOm5vcm1hbDtsaW5lLWJyZWFrOmF1dG87Zm9udC1zaXplOi44NzVyZW07d29yZC13cmFwOmJyZWFrLXdvcmQ7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JhY2tncm91bmQtY2xpcDpwYWRkaW5nLWJveDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjIpO2JvcmRlci1yYWRpdXM6LjNyZW19LnBvcG92ZXIgLmFycm93e3Bvc2l0aW9uOmFic29sdXRlO2Rpc3BsYXk6YmxvY2s7d2lkdGg6MXJlbTtoZWlnaHQ6LjVyZW07bWFyZ2luOjAgLjNyZW19LnBvcG92ZXIgLmFycm93OjphZnRlciwucG9wb3ZlciAuYXJyb3c6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1zdHlsZTpzb2xpZH0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj10b3BdLC5icy1wb3BvdmVyLXRvcHttYXJnaW4tYm90dG9tOi41cmVtfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePXRvcF0+LmFycm93LC5icy1wb3BvdmVyLXRvcD4uYXJyb3d7Ym90dG9tOmNhbGMoKC41cmVtICsgMXB4KSAqIC0xKX0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj10b3BdPi5hcnJvdzo6YmVmb3JlLC5icy1wb3BvdmVyLXRvcD4uYXJyb3c6OmJlZm9yZXtib3R0b206MDtib3JkZXItd2lkdGg6LjVyZW0gLjVyZW0gMDtib3JkZXItdG9wLWNvbG9yOnJnYmEoMCwwLDAsLjI1KX0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj10b3BdPi5hcnJvdzo6YWZ0ZXIsLmJzLXBvcG92ZXItdG9wPi5hcnJvdzo6YWZ0ZXJ7Ym90dG9tOjFweDtib3JkZXItd2lkdGg6LjVyZW0gLjVyZW0gMDtib3JkZXItdG9wLWNvbG9yOiNmZmZ9LmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49cmlnaHRdLC5icy1wb3BvdmVyLXJpZ2h0e21hcmdpbi1sZWZ0Oi41cmVtfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePXJpZ2h0XT4uYXJyb3csLmJzLXBvcG92ZXItcmlnaHQ+LmFycm93e2xlZnQ6Y2FsYygoLjVyZW0gKyAxcHgpICogLTEpO3dpZHRoOi41cmVtO2hlaWdodDoxcmVtO21hcmdpbjouM3JlbSAwfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePXJpZ2h0XT4uYXJyb3c6OmJlZm9yZSwuYnMtcG9wb3Zlci1yaWdodD4uYXJyb3c6OmJlZm9yZXtsZWZ0OjA7Ym9yZGVyLXdpZHRoOi41cmVtIC41cmVtIC41cmVtIDA7Ym9yZGVyLXJpZ2h0LWNvbG9yOnJnYmEoMCwwLDAsLjI1KX0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1yaWdodF0+LmFycm93OjphZnRlciwuYnMtcG9wb3Zlci1yaWdodD4uYXJyb3c6OmFmdGVye2xlZnQ6MXB4O2JvcmRlci13aWR0aDouNXJlbSAuNXJlbSAuNXJlbSAwO2JvcmRlci1yaWdodC1jb2xvcjojZmZmfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePWJvdHRvbV0sLmJzLXBvcG92ZXItYm90dG9te21hcmdpbi10b3A6LjVyZW19LmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49Ym90dG9tXT4uYXJyb3csLmJzLXBvcG92ZXItYm90dG9tPi5hcnJvd3t0b3A6Y2FsYygoLjVyZW0gKyAxcHgpICogLTEpfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePWJvdHRvbV0+LmFycm93OjpiZWZvcmUsLmJzLXBvcG92ZXItYm90dG9tPi5hcnJvdzo6YmVmb3Jle3RvcDowO2JvcmRlci13aWR0aDowIC41cmVtIC41cmVtIC41cmVtO2JvcmRlci1ib3R0b20tY29sb3I6cmdiYSgwLDAsMCwuMjUpfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePWJvdHRvbV0+LmFycm93OjphZnRlciwuYnMtcG9wb3Zlci1ib3R0b20+LmFycm93OjphZnRlcnt0b3A6MXB4O2JvcmRlci13aWR0aDowIC41cmVtIC41cmVtIC41cmVtO2JvcmRlci1ib3R0b20tY29sb3I6I2ZmZn0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1ib3R0b21dIC5wb3BvdmVyLWhlYWRlcjo6YmVmb3JlLC5icy1wb3BvdmVyLWJvdHRvbSAucG9wb3Zlci1oZWFkZXI6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjUwJTtkaXNwbGF5OmJsb2NrO3dpZHRoOjFyZW07bWFyZ2luLWxlZnQ6LS41cmVtO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2Y3ZjdmN30uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1sZWZ0XSwuYnMtcG9wb3Zlci1sZWZ0e21hcmdpbi1yaWdodDouNXJlbX0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1sZWZ0XT4uYXJyb3csLmJzLXBvcG92ZXItbGVmdD4uYXJyb3d7cmlnaHQ6Y2FsYygoLjVyZW0gKyAxcHgpICogLTEpO3dpZHRoOi41cmVtO2hlaWdodDoxcmVtO21hcmdpbjouM3JlbSAwfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePWxlZnRdPi5hcnJvdzo6YmVmb3JlLC5icy1wb3BvdmVyLWxlZnQ+LmFycm93OjpiZWZvcmV7cmlnaHQ6MDtib3JkZXItd2lkdGg6LjVyZW0gMCAuNXJlbSAuNXJlbTtib3JkZXItbGVmdC1jb2xvcjpyZ2JhKDAsMCwwLC4yNSl9LmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49bGVmdF0+LmFycm93OjphZnRlciwuYnMtcG9wb3Zlci1sZWZ0Pi5hcnJvdzo6YWZ0ZXJ7cmlnaHQ6MXB4O2JvcmRlci13aWR0aDouNXJlbSAwIC41cmVtIC41cmVtO2JvcmRlci1sZWZ0LWNvbG9yOiNmZmZ9LnBvcG92ZXItaGVhZGVye3BhZGRpbmc6LjVyZW0gLjc1cmVtO21hcmdpbi1ib3R0b206MDtmb250LXNpemU6MXJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmN2Y3Zjc7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2ViZWJlYjtib3JkZXItdG9wLWxlZnQtcmFkaXVzOmNhbGMoLjNyZW0gLSAxcHgpO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOmNhbGMoLjNyZW0gLSAxcHgpfS5wb3BvdmVyLWhlYWRlcjplbXB0eXtkaXNwbGF5Om5vbmV9LnBvcG92ZXItYm9keXtwYWRkaW5nOi41cmVtIC43NXJlbTtjb2xvcjojMjEyNTI5fS5jYXJvdXNlbHtwb3NpdGlvbjpyZWxhdGl2ZX0uY2Fyb3VzZWwucG9pbnRlci1ldmVudHstbXMtdG91Y2gtYWN0aW9uOnBhbi15O3RvdWNoLWFjdGlvbjpwYW4teX0uY2Fyb3VzZWwtaW5uZXJ7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW59LmNhcm91c2VsLWlubmVyOjphZnRlcntkaXNwbGF5OmJsb2NrO2NsZWFyOmJvdGg7Y29udGVudDpcXFwiXFxcIn0uY2Fyb3VzZWwtaXRlbXtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5Om5vbmU7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO21hcmdpbi1yaWdodDotMTAwJTstd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6aGlkZGVuO2JhY2tmYWNlLXZpc2liaWxpdHk6aGlkZGVuO3RyYW5zaXRpb246LXdlYmtpdC10cmFuc2Zvcm0gLjZzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246dHJhbnNmb3JtIC42cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOnRyYW5zZm9ybSAuNnMgZWFzZS1pbi1vdXQsLXdlYmtpdC10cmFuc2Zvcm0gLjZzIGVhc2UtaW4tb3V0fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jYXJvdXNlbC1pdGVte3RyYW5zaXRpb246bm9uZX19LmNhcm91c2VsLWl0ZW0tbmV4dCwuY2Fyb3VzZWwtaXRlbS1wcmV2LC5jYXJvdXNlbC1pdGVtLmFjdGl2ZXtkaXNwbGF5OmJsb2NrfS5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1yaWdodCwuY2Fyb3VzZWwtaXRlbS1uZXh0Om5vdCguY2Fyb3VzZWwtaXRlbS1sZWZ0KXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVYKDEwMCUpO3RyYW5zZm9ybTp0cmFuc2xhdGVYKDEwMCUpfS5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1sZWZ0LC5jYXJvdXNlbC1pdGVtLXByZXY6bm90KC5jYXJvdXNlbC1pdGVtLXJpZ2h0KXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVYKC0xMDAlKTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgtMTAwJSl9LmNhcm91c2VsLWZhZGUgLmNhcm91c2VsLWl0ZW17b3BhY2l0eTowO3RyYW5zaXRpb24tcHJvcGVydHk6b3BhY2l0eTstd2Via2l0LXRyYW5zZm9ybTpub25lO3RyYW5zZm9ybTpub25lfS5jYXJvdXNlbC1mYWRlIC5jYXJvdXNlbC1pdGVtLW5leHQuY2Fyb3VzZWwtaXRlbS1sZWZ0LC5jYXJvdXNlbC1mYWRlIC5jYXJvdXNlbC1pdGVtLXByZXYuY2Fyb3VzZWwtaXRlbS1yaWdodCwuY2Fyb3VzZWwtZmFkZSAuY2Fyb3VzZWwtaXRlbS5hY3RpdmV7ei1pbmRleDoxO29wYWNpdHk6MX0uY2Fyb3VzZWwtZmFkZSAuYWN0aXZlLmNhcm91c2VsLWl0ZW0tbGVmdCwuY2Fyb3VzZWwtZmFkZSAuYWN0aXZlLmNhcm91c2VsLWl0ZW0tcmlnaHR7ei1pbmRleDowO29wYWNpdHk6MDt0cmFuc2l0aW9uOjBzIC42cyBvcGFjaXR5fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jYXJvdXNlbC1mYWRlIC5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1sZWZ0LC5jYXJvdXNlbC1mYWRlIC5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1yaWdodHt0cmFuc2l0aW9uOm5vbmV9fS5jYXJvdXNlbC1jb250cm9sLW5leHQsLmNhcm91c2VsLWNvbnRyb2wtcHJldntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtib3R0b206MDt6LWluZGV4OjE7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3dpZHRoOjE1JTtjb2xvcjojZmZmO3RleHQtYWxpZ246Y2VudGVyO29wYWNpdHk6LjU7dHJhbnNpdGlvbjpvcGFjaXR5IC4xNXMgZWFzZX1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuY2Fyb3VzZWwtY29udHJvbC1uZXh0LC5jYXJvdXNlbC1jb250cm9sLXByZXZ7dHJhbnNpdGlvbjpub25lfX0uY2Fyb3VzZWwtY29udHJvbC1uZXh0OmZvY3VzLC5jYXJvdXNlbC1jb250cm9sLW5leHQ6aG92ZXIsLmNhcm91c2VsLWNvbnRyb2wtcHJldjpmb2N1cywuY2Fyb3VzZWwtY29udHJvbC1wcmV2OmhvdmVye2NvbG9yOiNmZmY7dGV4dC1kZWNvcmF0aW9uOm5vbmU7b3V0bGluZTowO29wYWNpdHk6Ljl9LmNhcm91c2VsLWNvbnRyb2wtcHJldntsZWZ0OjB9LmNhcm91c2VsLWNvbnRyb2wtbmV4dHtyaWdodDowfS5jYXJvdXNlbC1jb250cm9sLW5leHQtaWNvbiwuY2Fyb3VzZWwtY29udHJvbC1wcmV2LWljb257ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtiYWNrZ3JvdW5kOm5vLXJlcGVhdCA1MCUvMTAwJSAxMDAlfS5jYXJvdXNlbC1jb250cm9sLXByZXYtaWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyUyM2ZmZicgdmlld0JveD0nMCAwIDggOCclM2UlM2NwYXRoIGQ9J001LjI1IDBsLTQgNCA0IDQgMS41LTEuNS0yLjUtMi41IDIuNS0yLjUtMS41LTEuNXonLyUzZSUzYy9zdmclM2VcXFwiKX0uY2Fyb3VzZWwtY29udHJvbC1uZXh0LWljb257YmFja2dyb3VuZC1pbWFnZTp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBmaWxsPSclMjNmZmYnIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBkPSdNMi43NSAwbC0xLjUgMS41IDIuNSAyLjUtMi41IDIuNSAxLjUgMS41IDQtNC00LTR6Jy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmNhcm91c2VsLWluZGljYXRvcnN7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDoxNTtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3BhZGRpbmctbGVmdDowO21hcmdpbi1yaWdodDoxNSU7bWFyZ2luLWxlZnQ6MTUlO2xpc3Qtc3R5bGU6bm9uZX0uY2Fyb3VzZWwtaW5kaWNhdG9ycyBsaXtib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy1tcy1mbGV4OjAgMSBhdXRvO2ZsZXg6MCAxIGF1dG87d2lkdGg6MzBweDtoZWlnaHQ6M3B4O21hcmdpbi1yaWdodDozcHg7bWFyZ2luLWxlZnQ6M3B4O3RleHQtaW5kZW50Oi05OTlweDtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7YmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94O2JvcmRlci10b3A6MTBweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOjEwcHggc29saWQgdHJhbnNwYXJlbnQ7b3BhY2l0eTouNTt0cmFuc2l0aW9uOm9wYWNpdHkgLjZzIGVhc2V9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOnJlZHVjZSl7LmNhcm91c2VsLWluZGljYXRvcnMgbGl7dHJhbnNpdGlvbjpub25lfX0uY2Fyb3VzZWwtaW5kaWNhdG9ycyAuYWN0aXZle29wYWNpdHk6MX0uY2Fyb3VzZWwtY2FwdGlvbntwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDoxNSU7Ym90dG9tOjIwcHg7bGVmdDoxNSU7ei1pbmRleDoxMDtwYWRkaW5nLXRvcDoyMHB4O3BhZGRpbmctYm90dG9tOjIwcHg7Y29sb3I6I2ZmZjt0ZXh0LWFsaWduOmNlbnRlcn1ALXdlYmtpdC1rZXlmcmFtZXMgc3Bpbm5lci1ib3JkZXJ7dG97LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM2MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX1Aa2V5ZnJhbWVzIHNwaW5uZXItYm9yZGVye3Rvey13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpO3RyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKX19LnNwaW5uZXItYm9yZGVye2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjJyZW07aGVpZ2h0OjJyZW07dmVydGljYWwtYWxpZ246dGV4dC1ib3R0b207Ym9yZGVyOi4yNWVtIHNvbGlkIGN1cnJlbnRDb2xvcjtib3JkZXItcmlnaHQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czo1MCU7LXdlYmtpdC1hbmltYXRpb246c3Bpbm5lci1ib3JkZXIgLjc1cyBsaW5lYXIgaW5maW5pdGU7YW5pbWF0aW9uOnNwaW5uZXItYm9yZGVyIC43NXMgbGluZWFyIGluZmluaXRlfS5zcGlubmVyLWJvcmRlci1zbXt3aWR0aDoxcmVtO2hlaWdodDoxcmVtO2JvcmRlci13aWR0aDouMmVtfUAtd2Via2l0LWtleWZyYW1lcyBzcGlubmVyLWdyb3d7MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfTUwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgc3Bpbm5lci1ncm93ezAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX01MCV7b3BhY2l0eToxfX0uc3Bpbm5lci1ncm93e2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjJyZW07aGVpZ2h0OjJyZW07dmVydGljYWwtYWxpZ246dGV4dC1ib3R0b207YmFja2dyb3VuZC1jb2xvcjpjdXJyZW50Q29sb3I7Ym9yZGVyLXJhZGl1czo1MCU7b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOnNwaW5uZXItZ3JvdyAuNzVzIGxpbmVhciBpbmZpbml0ZTthbmltYXRpb246c3Bpbm5lci1ncm93IC43NXMgbGluZWFyIGluZmluaXRlfS5zcGlubmVyLWdyb3ctc217d2lkdGg6MXJlbTtoZWlnaHQ6MXJlbX0uYWxpZ24tYmFzZWxpbmV7dmVydGljYWwtYWxpZ246YmFzZWxpbmUhaW1wb3J0YW50fS5hbGlnbi10b3B7dmVydGljYWwtYWxpZ246dG9wIWltcG9ydGFudH0uYWxpZ24tbWlkZGxle3ZlcnRpY2FsLWFsaWduOm1pZGRsZSFpbXBvcnRhbnR9LmFsaWduLWJvdHRvbXt2ZXJ0aWNhbC1hbGlnbjpib3R0b20haW1wb3J0YW50fS5hbGlnbi10ZXh0LWJvdHRvbXt2ZXJ0aWNhbC1hbGlnbjp0ZXh0LWJvdHRvbSFpbXBvcnRhbnR9LmFsaWduLXRleHQtdG9we3ZlcnRpY2FsLWFsaWduOnRleHQtdG9wIWltcG9ydGFudH0uYmctcHJpbWFyeXtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmYhaW1wb3J0YW50fWEuYmctcHJpbWFyeTpmb2N1cyxhLmJnLXByaW1hcnk6aG92ZXIsYnV0dG9uLmJnLXByaW1hcnk6Zm9jdXMsYnV0dG9uLmJnLXByaW1hcnk6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojMDA2MmNjIWltcG9ydGFudH0uYmctc2Vjb25kYXJ5e2JhY2tncm91bmQtY29sb3I6IzZjNzU3ZCFpbXBvcnRhbnR9YS5iZy1zZWNvbmRhcnk6Zm9jdXMsYS5iZy1zZWNvbmRhcnk6aG92ZXIsYnV0dG9uLmJnLXNlY29uZGFyeTpmb2N1cyxidXR0b24uYmctc2Vjb25kYXJ5OmhvdmVye2JhY2tncm91bmQtY29sb3I6IzU0NWI2MiFpbXBvcnRhbnR9LmJnLXN1Y2Nlc3N7YmFja2dyb3VuZC1jb2xvcjojMjhhNzQ1IWltcG9ydGFudH1hLmJnLXN1Y2Nlc3M6Zm9jdXMsYS5iZy1zdWNjZXNzOmhvdmVyLGJ1dHRvbi5iZy1zdWNjZXNzOmZvY3VzLGJ1dHRvbi5iZy1zdWNjZXNzOmhvdmVye2JhY2tncm91bmQtY29sb3I6IzFlN2UzNCFpbXBvcnRhbnR9LmJnLWluZm97YmFja2dyb3VuZC1jb2xvcjojMTdhMmI4IWltcG9ydGFudH1hLmJnLWluZm86Zm9jdXMsYS5iZy1pbmZvOmhvdmVyLGJ1dHRvbi5iZy1pbmZvOmZvY3VzLGJ1dHRvbi5iZy1pbmZvOmhvdmVye2JhY2tncm91bmQtY29sb3I6IzExN2E4YiFpbXBvcnRhbnR9LmJnLXdhcm5pbmd7YmFja2dyb3VuZC1jb2xvcjojZmZjMTA3IWltcG9ydGFudH1hLmJnLXdhcm5pbmc6Zm9jdXMsYS5iZy13YXJuaW5nOmhvdmVyLGJ1dHRvbi5iZy13YXJuaW5nOmZvY3VzLGJ1dHRvbi5iZy13YXJuaW5nOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2QzOWUwMCFpbXBvcnRhbnR9LmJnLWRhbmdlcntiYWNrZ3JvdW5kLWNvbG9yOiNkYzM1NDUhaW1wb3J0YW50fWEuYmctZGFuZ2VyOmZvY3VzLGEuYmctZGFuZ2VyOmhvdmVyLGJ1dHRvbi5iZy1kYW5nZXI6Zm9jdXMsYnV0dG9uLmJnLWRhbmdlcjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNiZDIxMzAhaW1wb3J0YW50fS5iZy1saWdodHtiYWNrZ3JvdW5kLWNvbG9yOiNmOGY5ZmEhaW1wb3J0YW50fWEuYmctbGlnaHQ6Zm9jdXMsYS5iZy1saWdodDpob3ZlcixidXR0b24uYmctbGlnaHQ6Zm9jdXMsYnV0dG9uLmJnLWxpZ2h0OmhvdmVye2JhY2tncm91bmQtY29sb3I6I2RhZTBlNSFpbXBvcnRhbnR9LmJnLWRhcmt7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwIWltcG9ydGFudH1hLmJnLWRhcms6Zm9jdXMsYS5iZy1kYXJrOmhvdmVyLGJ1dHRvbi5iZy1kYXJrOmZvY3VzLGJ1dHRvbi5iZy1kYXJrOmhvdmVye2JhY2tncm91bmQtY29sb3I6IzFkMjEyNCFpbXBvcnRhbnR9LmJnLXdoaXRle2JhY2tncm91bmQtY29sb3I6I2ZmZiFpbXBvcnRhbnR9LmJnLXRyYW5zcGFyZW50e2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQhaW1wb3J0YW50fS5ib3JkZXJ7Ym9yZGVyOjFweCBzb2xpZCAjZGVlMmU2IWltcG9ydGFudH0uYm9yZGVyLXRvcHtib3JkZXItdG9wOjFweCBzb2xpZCAjZGVlMmU2IWltcG9ydGFudH0uYm9yZGVyLXJpZ2h0e2JvcmRlci1yaWdodDoxcHggc29saWQgI2RlZTJlNiFpbXBvcnRhbnR9LmJvcmRlci1ib3R0b217Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RlZTJlNiFpbXBvcnRhbnR9LmJvcmRlci1sZWZ0e2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjZGVlMmU2IWltcG9ydGFudH0uYm9yZGVyLTB7Ym9yZGVyOjAhaW1wb3J0YW50fS5ib3JkZXItdG9wLTB7Ym9yZGVyLXRvcDowIWltcG9ydGFudH0uYm9yZGVyLXJpZ2h0LTB7Ym9yZGVyLXJpZ2h0OjAhaW1wb3J0YW50fS5ib3JkZXItYm90dG9tLTB7Ym9yZGVyLWJvdHRvbTowIWltcG9ydGFudH0uYm9yZGVyLWxlZnQtMHtib3JkZXItbGVmdDowIWltcG9ydGFudH0uYm9yZGVyLXByaW1hcnl7Ym9yZGVyLWNvbG9yOiMwMDdiZmYhaW1wb3J0YW50fS5ib3JkZXItc2Vjb25kYXJ5e2JvcmRlci1jb2xvcjojNmM3NTdkIWltcG9ydGFudH0uYm9yZGVyLXN1Y2Nlc3N7Ym9yZGVyLWNvbG9yOiMyOGE3NDUhaW1wb3J0YW50fS5ib3JkZXItaW5mb3tib3JkZXItY29sb3I6IzE3YTJiOCFpbXBvcnRhbnR9LmJvcmRlci13YXJuaW5ne2JvcmRlci1jb2xvcjojZmZjMTA3IWltcG9ydGFudH0uYm9yZGVyLWRhbmdlcntib3JkZXItY29sb3I6I2RjMzU0NSFpbXBvcnRhbnR9LmJvcmRlci1saWdodHtib3JkZXItY29sb3I6I2Y4ZjlmYSFpbXBvcnRhbnR9LmJvcmRlci1kYXJre2JvcmRlci1jb2xvcjojMzQzYTQwIWltcG9ydGFudH0uYm9yZGVyLXdoaXRle2JvcmRlci1jb2xvcjojZmZmIWltcG9ydGFudH0ucm91bmRlZC1zbXtib3JkZXItcmFkaXVzOi4ycmVtIWltcG9ydGFudH0ucm91bmRlZHtib3JkZXItcmFkaXVzOi4yNXJlbSFpbXBvcnRhbnR9LnJvdW5kZWQtdG9we2JvcmRlci10b3AtbGVmdC1yYWRpdXM6LjI1cmVtIWltcG9ydGFudDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czouMjVyZW0haW1wb3J0YW50fS5yb3VuZGVkLXJpZ2h0e2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOi4yNXJlbSFpbXBvcnRhbnQ7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6LjI1cmVtIWltcG9ydGFudH0ucm91bmRlZC1ib3R0b217Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6LjI1cmVtIWltcG9ydGFudDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOi4yNXJlbSFpbXBvcnRhbnR9LnJvdW5kZWQtbGVmdHtib3JkZXItdG9wLWxlZnQtcmFkaXVzOi4yNXJlbSFpbXBvcnRhbnQ7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czouMjVyZW0haW1wb3J0YW50fS5yb3VuZGVkLWxne2JvcmRlci1yYWRpdXM6LjNyZW0haW1wb3J0YW50fS5yb3VuZGVkLWNpcmNsZXtib3JkZXItcmFkaXVzOjUwJSFpbXBvcnRhbnR9LnJvdW5kZWQtcGlsbHtib3JkZXItcmFkaXVzOjUwcmVtIWltcG9ydGFudH0ucm91bmRlZC0we2JvcmRlci1yYWRpdXM6MCFpbXBvcnRhbnR9LmNsZWFyZml4OjphZnRlcntkaXNwbGF5OmJsb2NrO2NsZWFyOmJvdGg7Y29udGVudDpcXFwiXFxcIn0uZC1ub25le2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9LmQtaW5saW5le2Rpc3BsYXk6aW5saW5lIWltcG9ydGFudH0uZC1pbmxpbmUtYmxvY2t7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fS5kLWJsb2Nre2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50fS5kLXRhYmxle2Rpc3BsYXk6dGFibGUhaW1wb3J0YW50fS5kLXRhYmxlLXJvd3tkaXNwbGF5OnRhYmxlLXJvdyFpbXBvcnRhbnR9LmQtdGFibGUtY2VsbHtkaXNwbGF5OnRhYmxlLWNlbGwhaW1wb3J0YW50fS5kLWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudH0uZC1pbmxpbmUtZmxleHtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCFpbXBvcnRhbnR9QG1lZGlhIChtaW4td2lkdGg6NTc2cHgpey5kLXNtLW5vbmV7ZGlzcGxheTpub25lIWltcG9ydGFudH0uZC1zbS1pbmxpbmV7ZGlzcGxheTppbmxpbmUhaW1wb3J0YW50fS5kLXNtLWlubGluZS1ibG9ja3tkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9LmQtc20tYmxvY2t7ZGlzcGxheTpibG9jayFpbXBvcnRhbnR9LmQtc20tdGFibGV7ZGlzcGxheTp0YWJsZSFpbXBvcnRhbnR9LmQtc20tdGFibGUtcm93e2Rpc3BsYXk6dGFibGUtcm93IWltcG9ydGFudH0uZC1zbS10YWJsZS1jZWxse2Rpc3BsYXk6dGFibGUtY2VsbCFpbXBvcnRhbnR9LmQtc20tZmxleHtkaXNwbGF5Oi1tcy1mbGV4Ym94IWltcG9ydGFudDtkaXNwbGF5OmZsZXghaW1wb3J0YW50fS5kLXNtLWlubGluZS1mbGV4e2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94IWltcG9ydGFudDtkaXNwbGF5OmlubGluZS1mbGV4IWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6NzY4cHgpey5kLW1kLW5vbmV7ZGlzcGxheTpub25lIWltcG9ydGFudH0uZC1tZC1pbmxpbmV7ZGlzcGxheTppbmxpbmUhaW1wb3J0YW50fS5kLW1kLWlubGluZS1ibG9ja3tkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9LmQtbWQtYmxvY2t7ZGlzcGxheTpibG9jayFpbXBvcnRhbnR9LmQtbWQtdGFibGV7ZGlzcGxheTp0YWJsZSFpbXBvcnRhbnR9LmQtbWQtdGFibGUtcm93e2Rpc3BsYXk6dGFibGUtcm93IWltcG9ydGFudH0uZC1tZC10YWJsZS1jZWxse2Rpc3BsYXk6dGFibGUtY2VsbCFpbXBvcnRhbnR9LmQtbWQtZmxleHtkaXNwbGF5Oi1tcy1mbGV4Ym94IWltcG9ydGFudDtkaXNwbGF5OmZsZXghaW1wb3J0YW50fS5kLW1kLWlubGluZS1mbGV4e2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94IWltcG9ydGFudDtkaXNwbGF5OmlubGluZS1mbGV4IWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey5kLWxnLW5vbmV7ZGlzcGxheTpub25lIWltcG9ydGFudH0uZC1sZy1pbmxpbmV7ZGlzcGxheTppbmxpbmUhaW1wb3J0YW50fS5kLWxnLWlubGluZS1ibG9ja3tkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9LmQtbGctYmxvY2t7ZGlzcGxheTpibG9jayFpbXBvcnRhbnR9LmQtbGctdGFibGV7ZGlzcGxheTp0YWJsZSFpbXBvcnRhbnR9LmQtbGctdGFibGUtcm93e2Rpc3BsYXk6dGFibGUtcm93IWltcG9ydGFudH0uZC1sZy10YWJsZS1jZWxse2Rpc3BsYXk6dGFibGUtY2VsbCFpbXBvcnRhbnR9LmQtbGctZmxleHtkaXNwbGF5Oi1tcy1mbGV4Ym94IWltcG9ydGFudDtkaXNwbGF5OmZsZXghaW1wb3J0YW50fS5kLWxnLWlubGluZS1mbGV4e2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94IWltcG9ydGFudDtkaXNwbGF5OmlubGluZS1mbGV4IWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6MTIwMHB4KXsuZC14bC1ub25le2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9LmQteGwtaW5saW5le2Rpc3BsYXk6aW5saW5lIWltcG9ydGFudH0uZC14bC1pbmxpbmUtYmxvY2t7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fS5kLXhsLWJsb2Nre2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50fS5kLXhsLXRhYmxle2Rpc3BsYXk6dGFibGUhaW1wb3J0YW50fS5kLXhsLXRhYmxlLXJvd3tkaXNwbGF5OnRhYmxlLXJvdyFpbXBvcnRhbnR9LmQteGwtdGFibGUtY2VsbHtkaXNwbGF5OnRhYmxlLWNlbGwhaW1wb3J0YW50fS5kLXhsLWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudH0uZC14bC1pbmxpbmUtZmxleHtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCFpbXBvcnRhbnR9fUBtZWRpYSBwcmludHsuZC1wcmludC1ub25le2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9LmQtcHJpbnQtaW5saW5le2Rpc3BsYXk6aW5saW5lIWltcG9ydGFudH0uZC1wcmludC1pbmxpbmUtYmxvY2t7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fS5kLXByaW50LWJsb2Nre2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50fS5kLXByaW50LXRhYmxle2Rpc3BsYXk6dGFibGUhaW1wb3J0YW50fS5kLXByaW50LXRhYmxlLXJvd3tkaXNwbGF5OnRhYmxlLXJvdyFpbXBvcnRhbnR9LmQtcHJpbnQtdGFibGUtY2VsbHtkaXNwbGF5OnRhYmxlLWNlbGwhaW1wb3J0YW50fS5kLXByaW50LWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudH0uZC1wcmludC1pbmxpbmUtZmxleHtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCFpbXBvcnRhbnR9fS5lbWJlZC1yZXNwb25zaXZle3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtwYWRkaW5nOjA7b3ZlcmZsb3c6aGlkZGVufS5lbWJlZC1yZXNwb25zaXZlOjpiZWZvcmV7ZGlzcGxheTpibG9jaztjb250ZW50OlxcXCJcXFwifS5lbWJlZC1yZXNwb25zaXZlIC5lbWJlZC1yZXNwb25zaXZlLWl0ZW0sLmVtYmVkLXJlc3BvbnNpdmUgZW1iZWQsLmVtYmVkLXJlc3BvbnNpdmUgaWZyYW1lLC5lbWJlZC1yZXNwb25zaXZlIG9iamVjdCwuZW1iZWQtcmVzcG9uc2l2ZSB2aWRlb3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtib3R0b206MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtib3JkZXI6MH0uZW1iZWQtcmVzcG9uc2l2ZS0yMWJ5OTo6YmVmb3Jle3BhZGRpbmctdG9wOjQyLjg1NzE0MyV9LmVtYmVkLXJlc3BvbnNpdmUtMTZieTk6OmJlZm9yZXtwYWRkaW5nLXRvcDo1Ni4yNSV9LmVtYmVkLXJlc3BvbnNpdmUtNGJ5Mzo6YmVmb3Jle3BhZGRpbmctdG9wOjc1JX0uZW1iZWQtcmVzcG9uc2l2ZS0xYnkxOjpiZWZvcmV7cGFkZGluZy10b3A6MTAwJX0uZmxleC1yb3d7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdyFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93IWltcG9ydGFudH0uZmxleC1jb2x1bW57LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbiFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudH0uZmxleC1yb3ctcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlIWltcG9ydGFudH0uZmxleC1jb2x1bW4tcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlIWltcG9ydGFudH0uZmxleC13cmFwey1tcy1mbGV4LXdyYXA6d3JhcCFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAhaW1wb3J0YW50fS5mbGV4LW5vd3JhcHstbXMtZmxleC13cmFwOm5vd3JhcCFpbXBvcnRhbnQ7ZmxleC13cmFwOm5vd3JhcCFpbXBvcnRhbnR9LmZsZXgtd3JhcC1yZXZlcnNley1tcy1mbGV4LXdyYXA6d3JhcC1yZXZlcnNlIWltcG9ydGFudDtmbGV4LXdyYXA6d3JhcC1yZXZlcnNlIWltcG9ydGFudH0uZmxleC1maWxsey1tcy1mbGV4OjEgMSBhdXRvIWltcG9ydGFudDtmbGV4OjEgMSBhdXRvIWltcG9ydGFudH0uZmxleC1ncm93LTB7LW1zLWZsZXgtcG9zaXRpdmU6MCFpbXBvcnRhbnQ7ZmxleC1ncm93OjAhaW1wb3J0YW50fS5mbGV4LWdyb3ctMXstbXMtZmxleC1wb3NpdGl2ZToxIWltcG9ydGFudDtmbGV4LWdyb3c6MSFpbXBvcnRhbnR9LmZsZXgtc2hyaW5rLTB7LW1zLWZsZXgtbmVnYXRpdmU6MCFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MCFpbXBvcnRhbnR9LmZsZXgtc2hyaW5rLTF7LW1zLWZsZXgtbmVnYXRpdmU6MSFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MSFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1zdGFydHstbXMtZmxleC1wYWNrOnN0YXJ0IWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydCFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1lbmR7LW1zLWZsZXgtcGFjazplbmQhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LWVuZCFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1jZW50ZXJ7LW1zLWZsZXgtcGFjazpjZW50ZXIhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpjZW50ZXIhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbnstbXMtZmxleC1wYWNrOmp1c3RpZnkhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWFyb3VuZHstbXMtZmxleC1wYWNrOmRpc3RyaWJ1dGUhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1zdGFydHstbXMtZmxleC1hbGlnbjpzdGFydCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLWVuZHstbXMtZmxleC1hbGlnbjplbmQhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24taXRlbXMtY2VudGVyey1tcy1mbGV4LWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24taXRlbXMtYmFzZWxpbmV7LW1zLWZsZXgtYWxpZ246YmFzZWxpbmUhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmJhc2VsaW5lIWltcG9ydGFudH0uYWxpZ24taXRlbXMtc3RyZXRjaHstbXMtZmxleC1hbGlnbjpzdHJldGNoIWltcG9ydGFudDthbGlnbi1pdGVtczpzdHJldGNoIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1zdGFydHstbXMtZmxleC1saW5lLXBhY2s6c3RhcnQhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtZW5key1tcy1mbGV4LWxpbmUtcGFjazplbmQhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWNlbnRlcnstbXMtZmxleC1saW5lLXBhY2s6Y2VudGVyIWltcG9ydGFudDthbGlnbi1jb250ZW50OmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtYmV0d2VlbnstbXMtZmxleC1saW5lLXBhY2s6anVzdGlmeSFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1iZXR3ZWVuIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1hcm91bmR7LW1zLWZsZXgtbGluZS1wYWNrOmRpc3RyaWJ1dGUhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYXJvdW5kIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1zdHJldGNoey1tcy1mbGV4LWxpbmUtcGFjazpzdHJldGNoIWltcG9ydGFudDthbGlnbi1jb250ZW50OnN0cmV0Y2ghaW1wb3J0YW50fS5hbGlnbi1zZWxmLWF1dG97LW1zLWZsZXgtaXRlbS1hbGlnbjphdXRvIWltcG9ydGFudDthbGlnbi1zZWxmOmF1dG8haW1wb3J0YW50fS5hbGlnbi1zZWxmLXN0YXJ0ey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RhcnQhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLXNlbGYtZW5key1tcy1mbGV4LWl0ZW0tYWxpZ246ZW5kIWltcG9ydGFudDthbGlnbi1zZWxmOmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24tc2VsZi1jZW50ZXJ7LW1zLWZsZXgtaXRlbS1hbGlnbjpjZW50ZXIhaW1wb3J0YW50O2FsaWduLXNlbGY6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24tc2VsZi1iYXNlbGluZXstbXMtZmxleC1pdGVtLWFsaWduOmJhc2VsaW5lIWltcG9ydGFudDthbGlnbi1zZWxmOmJhc2VsaW5lIWltcG9ydGFudH0uYWxpZ24tc2VsZi1zdHJldGNoey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpzdHJldGNoIWltcG9ydGFudH1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmZsZXgtc20tcm93ey1tcy1mbGV4LWRpcmVjdGlvbjpyb3chaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdyFpbXBvcnRhbnR9LmZsZXgtc20tY29sdW1uey1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW4haW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbiFpbXBvcnRhbnR9LmZsZXgtc20tcm93LXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZSFpbXBvcnRhbnR9LmZsZXgtc20tY29sdW1uLXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZSFpbXBvcnRhbnR9LmZsZXgtc20td3JhcHstbXMtZmxleC13cmFwOndyYXAhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwIWltcG9ydGFudH0uZmxleC1zbS1ub3dyYXB7LW1zLWZsZXgtd3JhcDpub3dyYXAhaW1wb3J0YW50O2ZsZXgtd3JhcDpub3dyYXAhaW1wb3J0YW50fS5mbGV4LXNtLXdyYXAtcmV2ZXJzZXstbXMtZmxleC13cmFwOndyYXAtcmV2ZXJzZSFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAtcmV2ZXJzZSFpbXBvcnRhbnR9LmZsZXgtc20tZmlsbHstbXMtZmxleDoxIDEgYXV0byFpbXBvcnRhbnQ7ZmxleDoxIDEgYXV0byFpbXBvcnRhbnR9LmZsZXgtc20tZ3Jvdy0wey1tcy1mbGV4LXBvc2l0aXZlOjAhaW1wb3J0YW50O2ZsZXgtZ3JvdzowIWltcG9ydGFudH0uZmxleC1zbS1ncm93LTF7LW1zLWZsZXgtcG9zaXRpdmU6MSFpbXBvcnRhbnQ7ZmxleC1ncm93OjEhaW1wb3J0YW50fS5mbGV4LXNtLXNocmluay0wey1tcy1mbGV4LW5lZ2F0aXZlOjAhaW1wb3J0YW50O2ZsZXgtc2hyaW5rOjAhaW1wb3J0YW50fS5mbGV4LXNtLXNocmluay0xey1tcy1mbGV4LW5lZ2F0aXZlOjEhaW1wb3J0YW50O2ZsZXgtc2hyaW5rOjEhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtc20tc3RhcnR7LW1zLWZsZXgtcGFjazpzdGFydCFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtc20tZW5key1tcy1mbGV4LXBhY2s6ZW5kIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtc20tY2VudGVyey1tcy1mbGV4LXBhY2s6Y2VudGVyIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXNtLWJldHdlZW57LW1zLWZsZXgtcGFjazpqdXN0aWZ5IWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1zbS1hcm91bmR7LW1zLWZsZXgtcGFjazpkaXN0cmlidXRlIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kIWltcG9ydGFudH0uYWxpZ24taXRlbXMtc20tc3RhcnR7LW1zLWZsZXgtYWxpZ246c3RhcnQhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1zbS1lbmR7LW1zLWZsZXgtYWxpZ246ZW5kIWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LWVuZCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXNtLWNlbnRlcnstbXMtZmxleC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXNtLWJhc2VsaW5ley1tcy1mbGV4LWFsaWduOmJhc2VsaW5lIWltcG9ydGFudDthbGlnbi1pdGVtczpiYXNlbGluZSFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXNtLXN0cmV0Y2h7LW1zLWZsZXgtYWxpZ246c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6c3RyZXRjaCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc20tc3RhcnR7LW1zLWZsZXgtbGluZS1wYWNrOnN0YXJ0IWltcG9ydGFudDthbGlnbi1jb250ZW50OmZsZXgtc3RhcnQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXNtLWVuZHstbXMtZmxleC1saW5lLXBhY2s6ZW5kIWltcG9ydGFudDthbGlnbi1jb250ZW50OmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1zbS1jZW50ZXJ7LW1zLWZsZXgtbGluZS1wYWNrOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpjZW50ZXIhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXNtLWJldHdlZW57LW1zLWZsZXgtbGluZS1wYWNrOmp1c3RpZnkhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc20tYXJvdW5key1tcy1mbGV4LWxpbmUtcGFjazpkaXN0cmlidXRlIWltcG9ydGFudDthbGlnbi1jb250ZW50OnNwYWNlLWFyb3VuZCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc20tc3RyZXRjaHstbXMtZmxleC1saW5lLXBhY2s6c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzdHJldGNoIWltcG9ydGFudH0uYWxpZ24tc2VsZi1zbS1hdXRvey1tcy1mbGV4LWl0ZW0tYWxpZ246YXV0byFpbXBvcnRhbnQ7YWxpZ24tc2VsZjphdXRvIWltcG9ydGFudH0uYWxpZ24tc2VsZi1zbS1zdGFydHstbXMtZmxleC1pdGVtLWFsaWduOnN0YXJ0IWltcG9ydGFudDthbGlnbi1zZWxmOmZsZXgtc3RhcnQhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXNtLWVuZHstbXMtZmxleC1pdGVtLWFsaWduOmVuZCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LWVuZCFpbXBvcnRhbnR9LmFsaWduLXNlbGYtc20tY2VudGVyey1tcy1mbGV4LWl0ZW0tYWxpZ246Y2VudGVyIWltcG9ydGFudDthbGlnbi1zZWxmOmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLXNlbGYtc20tYmFzZWxpbmV7LW1zLWZsZXgtaXRlbS1hbGlnbjpiYXNlbGluZSFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpiYXNlbGluZSFpbXBvcnRhbnR9LmFsaWduLXNlbGYtc20tc3RyZXRjaHstbXMtZmxleC1pdGVtLWFsaWduOnN0cmV0Y2ghaW1wb3J0YW50O2FsaWduLXNlbGY6c3RyZXRjaCFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsuZmxleC1tZC1yb3d7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdyFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93IWltcG9ydGFudH0uZmxleC1tZC1jb2x1bW57LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbiFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudH0uZmxleC1tZC1yb3ctcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlIWltcG9ydGFudH0uZmxleC1tZC1jb2x1bW4tcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlIWltcG9ydGFudH0uZmxleC1tZC13cmFwey1tcy1mbGV4LXdyYXA6d3JhcCFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAhaW1wb3J0YW50fS5mbGV4LW1kLW5vd3JhcHstbXMtZmxleC13cmFwOm5vd3JhcCFpbXBvcnRhbnQ7ZmxleC13cmFwOm5vd3JhcCFpbXBvcnRhbnR9LmZsZXgtbWQtd3JhcC1yZXZlcnNley1tcy1mbGV4LXdyYXA6d3JhcC1yZXZlcnNlIWltcG9ydGFudDtmbGV4LXdyYXA6d3JhcC1yZXZlcnNlIWltcG9ydGFudH0uZmxleC1tZC1maWxsey1tcy1mbGV4OjEgMSBhdXRvIWltcG9ydGFudDtmbGV4OjEgMSBhdXRvIWltcG9ydGFudH0uZmxleC1tZC1ncm93LTB7LW1zLWZsZXgtcG9zaXRpdmU6MCFpbXBvcnRhbnQ7ZmxleC1ncm93OjAhaW1wb3J0YW50fS5mbGV4LW1kLWdyb3ctMXstbXMtZmxleC1wb3NpdGl2ZToxIWltcG9ydGFudDtmbGV4LWdyb3c6MSFpbXBvcnRhbnR9LmZsZXgtbWQtc2hyaW5rLTB7LW1zLWZsZXgtbmVnYXRpdmU6MCFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MCFpbXBvcnRhbnR9LmZsZXgtbWQtc2hyaW5rLTF7LW1zLWZsZXgtbmVnYXRpdmU6MSFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MSFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1tZC1zdGFydHstbXMtZmxleC1wYWNrOnN0YXJ0IWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydCFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1tZC1lbmR7LW1zLWZsZXgtcGFjazplbmQhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LWVuZCFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1tZC1jZW50ZXJ7LW1zLWZsZXgtcGFjazpjZW50ZXIhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpjZW50ZXIhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbWQtYmV0d2VlbnstbXMtZmxleC1wYWNrOmp1c3RpZnkhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LW1kLWFyb3VuZHstbXMtZmxleC1wYWNrOmRpc3RyaWJ1dGUhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1tZC1zdGFydHstbXMtZmxleC1hbGlnbjpzdGFydCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLW1kLWVuZHstbXMtZmxleC1hbGlnbjplbmQhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbWQtY2VudGVyey1tcy1mbGV4LWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbWQtYmFzZWxpbmV7LW1zLWZsZXgtYWxpZ246YmFzZWxpbmUhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmJhc2VsaW5lIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbWQtc3RyZXRjaHstbXMtZmxleC1hbGlnbjpzdHJldGNoIWltcG9ydGFudDthbGlnbi1pdGVtczpzdHJldGNoIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1tZC1zdGFydHstbXMtZmxleC1saW5lLXBhY2s6c3RhcnQhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbWQtZW5key1tcy1mbGV4LWxpbmUtcGFjazplbmQhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LW1kLWNlbnRlcnstbXMtZmxleC1saW5lLXBhY2s6Y2VudGVyIWltcG9ydGFudDthbGlnbi1jb250ZW50OmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbWQtYmV0d2VlbnstbXMtZmxleC1saW5lLXBhY2s6anVzdGlmeSFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1iZXR3ZWVuIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1tZC1hcm91bmR7LW1zLWZsZXgtbGluZS1wYWNrOmRpc3RyaWJ1dGUhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYXJvdW5kIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1tZC1zdHJldGNoey1tcy1mbGV4LWxpbmUtcGFjazpzdHJldGNoIWltcG9ydGFudDthbGlnbi1jb250ZW50OnN0cmV0Y2ghaW1wb3J0YW50fS5hbGlnbi1zZWxmLW1kLWF1dG97LW1zLWZsZXgtaXRlbS1hbGlnbjphdXRvIWltcG9ydGFudDthbGlnbi1zZWxmOmF1dG8haW1wb3J0YW50fS5hbGlnbi1zZWxmLW1kLXN0YXJ0ey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RhcnQhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbWQtZW5key1tcy1mbGV4LWl0ZW0tYWxpZ246ZW5kIWltcG9ydGFudDthbGlnbi1zZWxmOmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24tc2VsZi1tZC1jZW50ZXJ7LW1zLWZsZXgtaXRlbS1hbGlnbjpjZW50ZXIhaW1wb3J0YW50O2FsaWduLXNlbGY6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24tc2VsZi1tZC1iYXNlbGluZXstbXMtZmxleC1pdGVtLWFsaWduOmJhc2VsaW5lIWltcG9ydGFudDthbGlnbi1zZWxmOmJhc2VsaW5lIWltcG9ydGFudH0uYWxpZ24tc2VsZi1tZC1zdHJldGNoey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpzdHJldGNoIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey5mbGV4LWxnLXJvd3stbXMtZmxleC1kaXJlY3Rpb246cm93IWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpyb3chaW1wb3J0YW50fS5mbGV4LWxnLWNvbHVtbnstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4haW1wb3J0YW50fS5mbGV4LWxnLXJvdy1yZXZlcnNley1tcy1mbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZSFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UhaW1wb3J0YW50fS5mbGV4LWxnLWNvbHVtbi1yZXZlcnNley1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZSFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UhaW1wb3J0YW50fS5mbGV4LWxnLXdyYXB7LW1zLWZsZXgtd3JhcDp3cmFwIWltcG9ydGFudDtmbGV4LXdyYXA6d3JhcCFpbXBvcnRhbnR9LmZsZXgtbGctbm93cmFwey1tcy1mbGV4LXdyYXA6bm93cmFwIWltcG9ydGFudDtmbGV4LXdyYXA6bm93cmFwIWltcG9ydGFudH0uZmxleC1sZy13cmFwLXJldmVyc2V7LW1zLWZsZXgtd3JhcDp3cmFwLXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwLXJldmVyc2UhaW1wb3J0YW50fS5mbGV4LWxnLWZpbGx7LW1zLWZsZXg6MSAxIGF1dG8haW1wb3J0YW50O2ZsZXg6MSAxIGF1dG8haW1wb3J0YW50fS5mbGV4LWxnLWdyb3ctMHstbXMtZmxleC1wb3NpdGl2ZTowIWltcG9ydGFudDtmbGV4LWdyb3c6MCFpbXBvcnRhbnR9LmZsZXgtbGctZ3Jvdy0xey1tcy1mbGV4LXBvc2l0aXZlOjEhaW1wb3J0YW50O2ZsZXgtZ3JvdzoxIWltcG9ydGFudH0uZmxleC1sZy1zaHJpbmstMHstbXMtZmxleC1uZWdhdGl2ZTowIWltcG9ydGFudDtmbGV4LXNocmluazowIWltcG9ydGFudH0uZmxleC1sZy1zaHJpbmstMXstbXMtZmxleC1uZWdhdGl2ZToxIWltcG9ydGFudDtmbGV4LXNocmluazoxIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWxnLXN0YXJ0ey1tcy1mbGV4LXBhY2s6c3RhcnQhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0IWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWxnLWVuZHstbXMtZmxleC1wYWNrOmVuZCFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWxnLWNlbnRlcnstbXMtZmxleC1wYWNrOmNlbnRlciFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmNlbnRlciFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1sZy1iZXR3ZWVuey1tcy1mbGV4LXBhY2s6anVzdGlmeSFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW4haW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbGctYXJvdW5key1tcy1mbGV4LXBhY2s6ZGlzdHJpYnV0ZSFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLWxnLXN0YXJ0ey1tcy1mbGV4LWFsaWduOnN0YXJ0IWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0IWltcG9ydGFudH0uYWxpZ24taXRlbXMtbGctZW5key1tcy1mbGV4LWFsaWduOmVuZCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1sZy1jZW50ZXJ7LW1zLWZsZXgtYWxpZ246Y2VudGVyIWltcG9ydGFudDthbGlnbi1pdGVtczpjZW50ZXIhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1sZy1iYXNlbGluZXstbXMtZmxleC1hbGlnbjpiYXNlbGluZSFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6YmFzZWxpbmUhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1sZy1zdHJldGNoey1tcy1mbGV4LWFsaWduOnN0cmV0Y2ghaW1wb3J0YW50O2FsaWduLWl0ZW1zOnN0cmV0Y2ghaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWxnLXN0YXJ0ey1tcy1mbGV4LWxpbmUtcGFjazpzdGFydCFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpmbGV4LXN0YXJ0IWltcG9ydGFudH0uYWxpZ24tY29udGVudC1sZy1lbmR7LW1zLWZsZXgtbGluZS1wYWNrOmVuZCFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpmbGV4LWVuZCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbGctY2VudGVyey1tcy1mbGV4LWxpbmUtcGFjazpjZW50ZXIhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1sZy1iZXR3ZWVuey1tcy1mbGV4LWxpbmUtcGFjazpqdXN0aWZ5IWltcG9ydGFudDthbGlnbi1jb250ZW50OnNwYWNlLWJldHdlZW4haW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWxnLWFyb3VuZHstbXMtZmxleC1saW5lLXBhY2s6ZGlzdHJpYnV0ZSFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1hcm91bmQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWxnLXN0cmV0Y2h7LW1zLWZsZXgtbGluZS1wYWNrOnN0cmV0Y2ghaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3RyZXRjaCFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbGctYXV0b3stbXMtZmxleC1pdGVtLWFsaWduOmF1dG8haW1wb3J0YW50O2FsaWduLXNlbGY6YXV0byFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbGctc3RhcnR7LW1zLWZsZXgtaXRlbS1hbGlnbjpzdGFydCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LXN0YXJ0IWltcG9ydGFudH0uYWxpZ24tc2VsZi1sZy1lbmR7LW1zLWZsZXgtaXRlbS1hbGlnbjplbmQhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1zZWxmLWxnLWNlbnRlcnstbXMtZmxleC1pdGVtLWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpjZW50ZXIhaW1wb3J0YW50fS5hbGlnbi1zZWxmLWxnLWJhc2VsaW5ley1tcy1mbGV4LWl0ZW0tYWxpZ246YmFzZWxpbmUhaW1wb3J0YW50O2FsaWduLXNlbGY6YmFzZWxpbmUhaW1wb3J0YW50fS5hbGlnbi1zZWxmLWxnLXN0cmV0Y2h7LW1zLWZsZXgtaXRlbS1hbGlnbjpzdHJldGNoIWltcG9ydGFudDthbGlnbi1zZWxmOnN0cmV0Y2ghaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDoxMjAwcHgpey5mbGV4LXhsLXJvd3stbXMtZmxleC1kaXJlY3Rpb246cm93IWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpyb3chaW1wb3J0YW50fS5mbGV4LXhsLWNvbHVtbnstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4haW1wb3J0YW50fS5mbGV4LXhsLXJvdy1yZXZlcnNley1tcy1mbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZSFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UhaW1wb3J0YW50fS5mbGV4LXhsLWNvbHVtbi1yZXZlcnNley1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZSFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UhaW1wb3J0YW50fS5mbGV4LXhsLXdyYXB7LW1zLWZsZXgtd3JhcDp3cmFwIWltcG9ydGFudDtmbGV4LXdyYXA6d3JhcCFpbXBvcnRhbnR9LmZsZXgteGwtbm93cmFwey1tcy1mbGV4LXdyYXA6bm93cmFwIWltcG9ydGFudDtmbGV4LXdyYXA6bm93cmFwIWltcG9ydGFudH0uZmxleC14bC13cmFwLXJldmVyc2V7LW1zLWZsZXgtd3JhcDp3cmFwLXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwLXJldmVyc2UhaW1wb3J0YW50fS5mbGV4LXhsLWZpbGx7LW1zLWZsZXg6MSAxIGF1dG8haW1wb3J0YW50O2ZsZXg6MSAxIGF1dG8haW1wb3J0YW50fS5mbGV4LXhsLWdyb3ctMHstbXMtZmxleC1wb3NpdGl2ZTowIWltcG9ydGFudDtmbGV4LWdyb3c6MCFpbXBvcnRhbnR9LmZsZXgteGwtZ3Jvdy0xey1tcy1mbGV4LXBvc2l0aXZlOjEhaW1wb3J0YW50O2ZsZXgtZ3JvdzoxIWltcG9ydGFudH0uZmxleC14bC1zaHJpbmstMHstbXMtZmxleC1uZWdhdGl2ZTowIWltcG9ydGFudDtmbGV4LXNocmluazowIWltcG9ydGFudH0uZmxleC14bC1zaHJpbmstMXstbXMtZmxleC1uZWdhdGl2ZToxIWltcG9ydGFudDtmbGV4LXNocmluazoxIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXhsLXN0YXJ0ey1tcy1mbGV4LXBhY2s6c3RhcnQhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0IWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXhsLWVuZHstbXMtZmxleC1wYWNrOmVuZCFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXhsLWNlbnRlcnstbXMtZmxleC1wYWNrOmNlbnRlciFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmNlbnRlciFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC14bC1iZXR3ZWVuey1tcy1mbGV4LXBhY2s6anVzdGlmeSFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW4haW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQteGwtYXJvdW5key1tcy1mbGV4LXBhY2s6ZGlzdHJpYnV0ZSFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXhsLXN0YXJ0ey1tcy1mbGV4LWFsaWduOnN0YXJ0IWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0IWltcG9ydGFudH0uYWxpZ24taXRlbXMteGwtZW5key1tcy1mbGV4LWFsaWduOmVuZCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy14bC1jZW50ZXJ7LW1zLWZsZXgtYWxpZ246Y2VudGVyIWltcG9ydGFudDthbGlnbi1pdGVtczpjZW50ZXIhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy14bC1iYXNlbGluZXstbXMtZmxleC1hbGlnbjpiYXNlbGluZSFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6YmFzZWxpbmUhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy14bC1zdHJldGNoey1tcy1mbGV4LWFsaWduOnN0cmV0Y2ghaW1wb3J0YW50O2FsaWduLWl0ZW1zOnN0cmV0Y2ghaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXhsLXN0YXJ0ey1tcy1mbGV4LWxpbmUtcGFjazpzdGFydCFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpmbGV4LXN0YXJ0IWltcG9ydGFudH0uYWxpZ24tY29udGVudC14bC1lbmR7LW1zLWZsZXgtbGluZS1wYWNrOmVuZCFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpmbGV4LWVuZCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQteGwtY2VudGVyey1tcy1mbGV4LWxpbmUtcGFjazpjZW50ZXIhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24tY29udGVudC14bC1iZXR3ZWVuey1tcy1mbGV4LWxpbmUtcGFjazpqdXN0aWZ5IWltcG9ydGFudDthbGlnbi1jb250ZW50OnNwYWNlLWJldHdlZW4haW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXhsLWFyb3VuZHstbXMtZmxleC1saW5lLXBhY2s6ZGlzdHJpYnV0ZSFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1hcm91bmQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXhsLXN0cmV0Y2h7LW1zLWZsZXgtbGluZS1wYWNrOnN0cmV0Y2ghaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3RyZXRjaCFpbXBvcnRhbnR9LmFsaWduLXNlbGYteGwtYXV0b3stbXMtZmxleC1pdGVtLWFsaWduOmF1dG8haW1wb3J0YW50O2FsaWduLXNlbGY6YXV0byFpbXBvcnRhbnR9LmFsaWduLXNlbGYteGwtc3RhcnR7LW1zLWZsZXgtaXRlbS1hbGlnbjpzdGFydCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LXN0YXJ0IWltcG9ydGFudH0uYWxpZ24tc2VsZi14bC1lbmR7LW1zLWZsZXgtaXRlbS1hbGlnbjplbmQhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXhsLWNlbnRlcnstbXMtZmxleC1pdGVtLWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpjZW50ZXIhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXhsLWJhc2VsaW5ley1tcy1mbGV4LWl0ZW0tYWxpZ246YmFzZWxpbmUhaW1wb3J0YW50O2FsaWduLXNlbGY6YmFzZWxpbmUhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXhsLXN0cmV0Y2h7LW1zLWZsZXgtaXRlbS1hbGlnbjpzdHJldGNoIWltcG9ydGFudDthbGlnbi1zZWxmOnN0cmV0Y2ghaW1wb3J0YW50fX0uZmxvYXQtbGVmdHtmbG9hdDpsZWZ0IWltcG9ydGFudH0uZmxvYXQtcmlnaHR7ZmxvYXQ6cmlnaHQhaW1wb3J0YW50fS5mbG9hdC1ub25le2Zsb2F0Om5vbmUhaW1wb3J0YW50fUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsuZmxvYXQtc20tbGVmdHtmbG9hdDpsZWZ0IWltcG9ydGFudH0uZmxvYXQtc20tcmlnaHR7ZmxvYXQ6cmlnaHQhaW1wb3J0YW50fS5mbG9hdC1zbS1ub25le2Zsb2F0Om5vbmUhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDo3NjhweCl7LmZsb2F0LW1kLWxlZnR7ZmxvYXQ6bGVmdCFpbXBvcnRhbnR9LmZsb2F0LW1kLXJpZ2h0e2Zsb2F0OnJpZ2h0IWltcG9ydGFudH0uZmxvYXQtbWQtbm9uZXtmbG9hdDpub25lIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey5mbG9hdC1sZy1sZWZ0e2Zsb2F0OmxlZnQhaW1wb3J0YW50fS5mbG9hdC1sZy1yaWdodHtmbG9hdDpyaWdodCFpbXBvcnRhbnR9LmZsb2F0LWxnLW5vbmV7ZmxvYXQ6bm9uZSFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjEyMDBweCl7LmZsb2F0LXhsLWxlZnR7ZmxvYXQ6bGVmdCFpbXBvcnRhbnR9LmZsb2F0LXhsLXJpZ2h0e2Zsb2F0OnJpZ2h0IWltcG9ydGFudH0uZmxvYXQteGwtbm9uZXtmbG9hdDpub25lIWltcG9ydGFudH19Lm92ZXJmbG93LWF1dG97b3ZlcmZsb3c6YXV0byFpbXBvcnRhbnR9Lm92ZXJmbG93LWhpZGRlbntvdmVyZmxvdzpoaWRkZW4haW1wb3J0YW50fS5wb3NpdGlvbi1zdGF0aWN7cG9zaXRpb246c3RhdGljIWltcG9ydGFudH0ucG9zaXRpb24tcmVsYXRpdmV7cG9zaXRpb246cmVsYXRpdmUhaW1wb3J0YW50fS5wb3NpdGlvbi1hYnNvbHV0ZXtwb3NpdGlvbjphYnNvbHV0ZSFpbXBvcnRhbnR9LnBvc2l0aW9uLWZpeGVke3Bvc2l0aW9uOmZpeGVkIWltcG9ydGFudH0ucG9zaXRpb24tc3RpY2t5e3Bvc2l0aW9uOi13ZWJraXQtc3RpY2t5IWltcG9ydGFudDtwb3NpdGlvbjpzdGlja3khaW1wb3J0YW50fS5maXhlZC10b3B7cG9zaXRpb246Zml4ZWQ7dG9wOjA7cmlnaHQ6MDtsZWZ0OjA7ei1pbmRleDoxMDMwfS5maXhlZC1ib3R0b217cG9zaXRpb246Zml4ZWQ7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDoxMDMwfUBzdXBwb3J0cyAoKHBvc2l0aW9uOi13ZWJraXQtc3RpY2t5KSBvciAocG9zaXRpb246c3RpY2t5KSl7LnN0aWNreS10b3B7cG9zaXRpb246LXdlYmtpdC1zdGlja3k7cG9zaXRpb246c3RpY2t5O3RvcDowO3otaW5kZXg6MTAyMH19LnNyLW9ubHl7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MXB4O2hlaWdodDoxcHg7cGFkZGluZzowO292ZXJmbG93OmhpZGRlbjtjbGlwOnJlY3QoMCwwLDAsMCk7d2hpdGUtc3BhY2U6bm93cmFwO2JvcmRlcjowfS5zci1vbmx5LWZvY3VzYWJsZTphY3RpdmUsLnNyLW9ubHktZm9jdXNhYmxlOmZvY3Vze3Bvc2l0aW9uOnN0YXRpYzt3aWR0aDphdXRvO2hlaWdodDphdXRvO292ZXJmbG93OnZpc2libGU7Y2xpcDphdXRvO3doaXRlLXNwYWNlOm5vcm1hbH0uc2hhZG93LXNte2JveC1zaGFkb3c6MCAuMTI1cmVtIC4yNXJlbSByZ2JhKDAsMCwwLC4wNzUpIWltcG9ydGFudH0uc2hhZG93e2JveC1zaGFkb3c6MCAuNXJlbSAxcmVtIHJnYmEoMCwwLDAsLjE1KSFpbXBvcnRhbnR9LnNoYWRvdy1sZ3tib3gtc2hhZG93OjAgMXJlbSAzcmVtIHJnYmEoMCwwLDAsLjE3NSkhaW1wb3J0YW50fS5zaGFkb3ctbm9uZXtib3gtc2hhZG93Om5vbmUhaW1wb3J0YW50fS53LTI1e3dpZHRoOjI1JSFpbXBvcnRhbnR9LnctNTB7d2lkdGg6NTAlIWltcG9ydGFudH0udy03NXt3aWR0aDo3NSUhaW1wb3J0YW50fS53LTEwMHt3aWR0aDoxMDAlIWltcG9ydGFudH0udy1hdXRve3dpZHRoOmF1dG8haW1wb3J0YW50fS5oLTI1e2hlaWdodDoyNSUhaW1wb3J0YW50fS5oLTUwe2hlaWdodDo1MCUhaW1wb3J0YW50fS5oLTc1e2hlaWdodDo3NSUhaW1wb3J0YW50fS5oLTEwMHtoZWlnaHQ6MTAwJSFpbXBvcnRhbnR9LmgtYXV0b3toZWlnaHQ6YXV0byFpbXBvcnRhbnR9Lm13LTEwMHttYXgtd2lkdGg6MTAwJSFpbXBvcnRhbnR9Lm1oLTEwMHttYXgtaGVpZ2h0OjEwMCUhaW1wb3J0YW50fS5taW4tdnctMTAwe21pbi13aWR0aDoxMDB2dyFpbXBvcnRhbnR9Lm1pbi12aC0xMDB7bWluLWhlaWdodDoxMDB2aCFpbXBvcnRhbnR9LnZ3LTEwMHt3aWR0aDoxMDB2dyFpbXBvcnRhbnR9LnZoLTEwMHtoZWlnaHQ6MTAwdmghaW1wb3J0YW50fS5zdHJldGNoZWQtbGluazo6YWZ0ZXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDoxO3BvaW50ZXItZXZlbnRzOmF1dG87Y29udGVudDpcXFwiXFxcIjtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMCl9Lm0tMHttYXJnaW46MCFpbXBvcnRhbnR9Lm10LTAsLm15LTB7bWFyZ2luLXRvcDowIWltcG9ydGFudH0ubXItMCwubXgtMHttYXJnaW4tcmlnaHQ6MCFpbXBvcnRhbnR9Lm1iLTAsLm15LTB7bWFyZ2luLWJvdHRvbTowIWltcG9ydGFudH0ubWwtMCwubXgtMHttYXJnaW4tbGVmdDowIWltcG9ydGFudH0ubS0xe21hcmdpbjouMjVyZW0haW1wb3J0YW50fS5tdC0xLC5teS0xe21hcmdpbi10b3A6LjI1cmVtIWltcG9ydGFudH0ubXItMSwubXgtMXttYXJnaW4tcmlnaHQ6LjI1cmVtIWltcG9ydGFudH0ubWItMSwubXktMXttYXJnaW4tYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9Lm1sLTEsLm14LTF7bWFyZ2luLWxlZnQ6LjI1cmVtIWltcG9ydGFudH0ubS0ye21hcmdpbjouNXJlbSFpbXBvcnRhbnR9Lm10LTIsLm15LTJ7bWFyZ2luLXRvcDouNXJlbSFpbXBvcnRhbnR9Lm1yLTIsLm14LTJ7bWFyZ2luLXJpZ2h0Oi41cmVtIWltcG9ydGFudH0ubWItMiwubXktMnttYXJnaW4tYm90dG9tOi41cmVtIWltcG9ydGFudH0ubWwtMiwubXgtMnttYXJnaW4tbGVmdDouNXJlbSFpbXBvcnRhbnR9Lm0tM3ttYXJnaW46MXJlbSFpbXBvcnRhbnR9Lm10LTMsLm15LTN7bWFyZ2luLXRvcDoxcmVtIWltcG9ydGFudH0ubXItMywubXgtM3ttYXJnaW4tcmlnaHQ6MXJlbSFpbXBvcnRhbnR9Lm1iLTMsLm15LTN7bWFyZ2luLWJvdHRvbToxcmVtIWltcG9ydGFudH0ubWwtMywubXgtM3ttYXJnaW4tbGVmdDoxcmVtIWltcG9ydGFudH0ubS00e21hcmdpbjoxLjVyZW0haW1wb3J0YW50fS5tdC00LC5teS00e21hcmdpbi10b3A6MS41cmVtIWltcG9ydGFudH0ubXItNCwubXgtNHttYXJnaW4tcmlnaHQ6MS41cmVtIWltcG9ydGFudH0ubWItNCwubXktNHttYXJnaW4tYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9Lm1sLTQsLm14LTR7bWFyZ2luLWxlZnQ6MS41cmVtIWltcG9ydGFudH0ubS01e21hcmdpbjozcmVtIWltcG9ydGFudH0ubXQtNSwubXktNXttYXJnaW4tdG9wOjNyZW0haW1wb3J0YW50fS5tci01LC5teC01e21hcmdpbi1yaWdodDozcmVtIWltcG9ydGFudH0ubWItNSwubXktNXttYXJnaW4tYm90dG9tOjNyZW0haW1wb3J0YW50fS5tbC01LC5teC01e21hcmdpbi1sZWZ0OjNyZW0haW1wb3J0YW50fS5wLTB7cGFkZGluZzowIWltcG9ydGFudH0ucHQtMCwucHktMHtwYWRkaW5nLXRvcDowIWltcG9ydGFudH0ucHItMCwucHgtMHtwYWRkaW5nLXJpZ2h0OjAhaW1wb3J0YW50fS5wYi0wLC5weS0we3BhZGRpbmctYm90dG9tOjAhaW1wb3J0YW50fS5wbC0wLC5weC0we3BhZGRpbmctbGVmdDowIWltcG9ydGFudH0ucC0xe3BhZGRpbmc6LjI1cmVtIWltcG9ydGFudH0ucHQtMSwucHktMXtwYWRkaW5nLXRvcDouMjVyZW0haW1wb3J0YW50fS5wci0xLC5weC0xe3BhZGRpbmctcmlnaHQ6LjI1cmVtIWltcG9ydGFudH0ucGItMSwucHktMXtwYWRkaW5nLWJvdHRvbTouMjVyZW0haW1wb3J0YW50fS5wbC0xLC5weC0xe3BhZGRpbmctbGVmdDouMjVyZW0haW1wb3J0YW50fS5wLTJ7cGFkZGluZzouNXJlbSFpbXBvcnRhbnR9LnB0LTIsLnB5LTJ7cGFkZGluZy10b3A6LjVyZW0haW1wb3J0YW50fS5wci0yLC5weC0ye3BhZGRpbmctcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5wYi0yLC5weS0ye3BhZGRpbmctYm90dG9tOi41cmVtIWltcG9ydGFudH0ucGwtMiwucHgtMntwYWRkaW5nLWxlZnQ6LjVyZW0haW1wb3J0YW50fS5wLTN7cGFkZGluZzoxcmVtIWltcG9ydGFudH0ucHQtMywucHktM3twYWRkaW5nLXRvcDoxcmVtIWltcG9ydGFudH0ucHItMywucHgtM3twYWRkaW5nLXJpZ2h0OjFyZW0haW1wb3J0YW50fS5wYi0zLC5weS0ze3BhZGRpbmctYm90dG9tOjFyZW0haW1wb3J0YW50fS5wbC0zLC5weC0ze3BhZGRpbmctbGVmdDoxcmVtIWltcG9ydGFudH0ucC00e3BhZGRpbmc6MS41cmVtIWltcG9ydGFudH0ucHQtNCwucHktNHtwYWRkaW5nLXRvcDoxLjVyZW0haW1wb3J0YW50fS5wci00LC5weC00e3BhZGRpbmctcmlnaHQ6MS41cmVtIWltcG9ydGFudH0ucGItNCwucHktNHtwYWRkaW5nLWJvdHRvbToxLjVyZW0haW1wb3J0YW50fS5wbC00LC5weC00e3BhZGRpbmctbGVmdDoxLjVyZW0haW1wb3J0YW50fS5wLTV7cGFkZGluZzozcmVtIWltcG9ydGFudH0ucHQtNSwucHktNXtwYWRkaW5nLXRvcDozcmVtIWltcG9ydGFudH0ucHItNSwucHgtNXtwYWRkaW5nLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5wYi01LC5weS01e3BhZGRpbmctYm90dG9tOjNyZW0haW1wb3J0YW50fS5wbC01LC5weC01e3BhZGRpbmctbGVmdDozcmVtIWltcG9ydGFudH0ubS1uMXttYXJnaW46LS4yNXJlbSFpbXBvcnRhbnR9Lm10LW4xLC5teS1uMXttYXJnaW4tdG9wOi0uMjVyZW0haW1wb3J0YW50fS5tci1uMSwubXgtbjF7bWFyZ2luLXJpZ2h0Oi0uMjVyZW0haW1wb3J0YW50fS5tYi1uMSwubXktbjF7bWFyZ2luLWJvdHRvbTotLjI1cmVtIWltcG9ydGFudH0ubWwtbjEsLm14LW4xe21hcmdpbi1sZWZ0Oi0uMjVyZW0haW1wb3J0YW50fS5tLW4ye21hcmdpbjotLjVyZW0haW1wb3J0YW50fS5tdC1uMiwubXktbjJ7bWFyZ2luLXRvcDotLjVyZW0haW1wb3J0YW50fS5tci1uMiwubXgtbjJ7bWFyZ2luLXJpZ2h0Oi0uNXJlbSFpbXBvcnRhbnR9Lm1iLW4yLC5teS1uMnttYXJnaW4tYm90dG9tOi0uNXJlbSFpbXBvcnRhbnR9Lm1sLW4yLC5teC1uMnttYXJnaW4tbGVmdDotLjVyZW0haW1wb3J0YW50fS5tLW4ze21hcmdpbjotMXJlbSFpbXBvcnRhbnR9Lm10LW4zLC5teS1uM3ttYXJnaW4tdG9wOi0xcmVtIWltcG9ydGFudH0ubXItbjMsLm14LW4ze21hcmdpbi1yaWdodDotMXJlbSFpbXBvcnRhbnR9Lm1iLW4zLC5teS1uM3ttYXJnaW4tYm90dG9tOi0xcmVtIWltcG9ydGFudH0ubWwtbjMsLm14LW4ze21hcmdpbi1sZWZ0Oi0xcmVtIWltcG9ydGFudH0ubS1uNHttYXJnaW46LTEuNXJlbSFpbXBvcnRhbnR9Lm10LW40LC5teS1uNHttYXJnaW4tdG9wOi0xLjVyZW0haW1wb3J0YW50fS5tci1uNCwubXgtbjR7bWFyZ2luLXJpZ2h0Oi0xLjVyZW0haW1wb3J0YW50fS5tYi1uNCwubXktbjR7bWFyZ2luLWJvdHRvbTotMS41cmVtIWltcG9ydGFudH0ubWwtbjQsLm14LW40e21hcmdpbi1sZWZ0Oi0xLjVyZW0haW1wb3J0YW50fS5tLW41e21hcmdpbjotM3JlbSFpbXBvcnRhbnR9Lm10LW41LC5teS1uNXttYXJnaW4tdG9wOi0zcmVtIWltcG9ydGFudH0ubXItbjUsLm14LW41e21hcmdpbi1yaWdodDotM3JlbSFpbXBvcnRhbnR9Lm1iLW41LC5teS1uNXttYXJnaW4tYm90dG9tOi0zcmVtIWltcG9ydGFudH0ubWwtbjUsLm14LW41e21hcmdpbi1sZWZ0Oi0zcmVtIWltcG9ydGFudH0ubS1hdXRve21hcmdpbjphdXRvIWltcG9ydGFudH0ubXQtYXV0bywubXktYXV0b3ttYXJnaW4tdG9wOmF1dG8haW1wb3J0YW50fS5tci1hdXRvLC5teC1hdXRve21hcmdpbi1yaWdodDphdXRvIWltcG9ydGFudH0ubWItYXV0bywubXktYXV0b3ttYXJnaW4tYm90dG9tOmF1dG8haW1wb3J0YW50fS5tbC1hdXRvLC5teC1hdXRve21hcmdpbi1sZWZ0OmF1dG8haW1wb3J0YW50fUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsubS1zbS0we21hcmdpbjowIWltcG9ydGFudH0ubXQtc20tMCwubXktc20tMHttYXJnaW4tdG9wOjAhaW1wb3J0YW50fS5tci1zbS0wLC5teC1zbS0we21hcmdpbi1yaWdodDowIWltcG9ydGFudH0ubWItc20tMCwubXktc20tMHttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fS5tbC1zbS0wLC5teC1zbS0we21hcmdpbi1sZWZ0OjAhaW1wb3J0YW50fS5tLXNtLTF7bWFyZ2luOi4yNXJlbSFpbXBvcnRhbnR9Lm10LXNtLTEsLm15LXNtLTF7bWFyZ2luLXRvcDouMjVyZW0haW1wb3J0YW50fS5tci1zbS0xLC5teC1zbS0xe21hcmdpbi1yaWdodDouMjVyZW0haW1wb3J0YW50fS5tYi1zbS0xLC5teS1zbS0xe21hcmdpbi1ib3R0b206LjI1cmVtIWltcG9ydGFudH0ubWwtc20tMSwubXgtc20tMXttYXJnaW4tbGVmdDouMjVyZW0haW1wb3J0YW50fS5tLXNtLTJ7bWFyZ2luOi41cmVtIWltcG9ydGFudH0ubXQtc20tMiwubXktc20tMnttYXJnaW4tdG9wOi41cmVtIWltcG9ydGFudH0ubXItc20tMiwubXgtc20tMnttYXJnaW4tcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5tYi1zbS0yLC5teS1zbS0ye21hcmdpbi1ib3R0b206LjVyZW0haW1wb3J0YW50fS5tbC1zbS0yLC5teC1zbS0ye21hcmdpbi1sZWZ0Oi41cmVtIWltcG9ydGFudH0ubS1zbS0ze21hcmdpbjoxcmVtIWltcG9ydGFudH0ubXQtc20tMywubXktc20tM3ttYXJnaW4tdG9wOjFyZW0haW1wb3J0YW50fS5tci1zbS0zLC5teC1zbS0ze21hcmdpbi1yaWdodDoxcmVtIWltcG9ydGFudH0ubWItc20tMywubXktc20tM3ttYXJnaW4tYm90dG9tOjFyZW0haW1wb3J0YW50fS5tbC1zbS0zLC5teC1zbS0ze21hcmdpbi1sZWZ0OjFyZW0haW1wb3J0YW50fS5tLXNtLTR7bWFyZ2luOjEuNXJlbSFpbXBvcnRhbnR9Lm10LXNtLTQsLm15LXNtLTR7bWFyZ2luLXRvcDoxLjVyZW0haW1wb3J0YW50fS5tci1zbS00LC5teC1zbS00e21hcmdpbi1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5tYi1zbS00LC5teS1zbS00e21hcmdpbi1ib3R0b206MS41cmVtIWltcG9ydGFudH0ubWwtc20tNCwubXgtc20tNHttYXJnaW4tbGVmdDoxLjVyZW0haW1wb3J0YW50fS5tLXNtLTV7bWFyZ2luOjNyZW0haW1wb3J0YW50fS5tdC1zbS01LC5teS1zbS01e21hcmdpbi10b3A6M3JlbSFpbXBvcnRhbnR9Lm1yLXNtLTUsLm14LXNtLTV7bWFyZ2luLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5tYi1zbS01LC5teS1zbS01e21hcmdpbi1ib3R0b206M3JlbSFpbXBvcnRhbnR9Lm1sLXNtLTUsLm14LXNtLTV7bWFyZ2luLWxlZnQ6M3JlbSFpbXBvcnRhbnR9LnAtc20tMHtwYWRkaW5nOjAhaW1wb3J0YW50fS5wdC1zbS0wLC5weS1zbS0we3BhZGRpbmctdG9wOjAhaW1wb3J0YW50fS5wci1zbS0wLC5weC1zbS0we3BhZGRpbmctcmlnaHQ6MCFpbXBvcnRhbnR9LnBiLXNtLTAsLnB5LXNtLTB7cGFkZGluZy1ib3R0b206MCFpbXBvcnRhbnR9LnBsLXNtLTAsLnB4LXNtLTB7cGFkZGluZy1sZWZ0OjAhaW1wb3J0YW50fS5wLXNtLTF7cGFkZGluZzouMjVyZW0haW1wb3J0YW50fS5wdC1zbS0xLC5weS1zbS0xe3BhZGRpbmctdG9wOi4yNXJlbSFpbXBvcnRhbnR9LnByLXNtLTEsLnB4LXNtLTF7cGFkZGluZy1yaWdodDouMjVyZW0haW1wb3J0YW50fS5wYi1zbS0xLC5weS1zbS0xe3BhZGRpbmctYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9LnBsLXNtLTEsLnB4LXNtLTF7cGFkZGluZy1sZWZ0Oi4yNXJlbSFpbXBvcnRhbnR9LnAtc20tMntwYWRkaW5nOi41cmVtIWltcG9ydGFudH0ucHQtc20tMiwucHktc20tMntwYWRkaW5nLXRvcDouNXJlbSFpbXBvcnRhbnR9LnByLXNtLTIsLnB4LXNtLTJ7cGFkZGluZy1yaWdodDouNXJlbSFpbXBvcnRhbnR9LnBiLXNtLTIsLnB5LXNtLTJ7cGFkZGluZy1ib3R0b206LjVyZW0haW1wb3J0YW50fS5wbC1zbS0yLC5weC1zbS0ye3BhZGRpbmctbGVmdDouNXJlbSFpbXBvcnRhbnR9LnAtc20tM3twYWRkaW5nOjFyZW0haW1wb3J0YW50fS5wdC1zbS0zLC5weS1zbS0ze3BhZGRpbmctdG9wOjFyZW0haW1wb3J0YW50fS5wci1zbS0zLC5weC1zbS0ze3BhZGRpbmctcmlnaHQ6MXJlbSFpbXBvcnRhbnR9LnBiLXNtLTMsLnB5LXNtLTN7cGFkZGluZy1ib3R0b206MXJlbSFpbXBvcnRhbnR9LnBsLXNtLTMsLnB4LXNtLTN7cGFkZGluZy1sZWZ0OjFyZW0haW1wb3J0YW50fS5wLXNtLTR7cGFkZGluZzoxLjVyZW0haW1wb3J0YW50fS5wdC1zbS00LC5weS1zbS00e3BhZGRpbmctdG9wOjEuNXJlbSFpbXBvcnRhbnR9LnByLXNtLTQsLnB4LXNtLTR7cGFkZGluZy1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5wYi1zbS00LC5weS1zbS00e3BhZGRpbmctYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9LnBsLXNtLTQsLnB4LXNtLTR7cGFkZGluZy1sZWZ0OjEuNXJlbSFpbXBvcnRhbnR9LnAtc20tNXtwYWRkaW5nOjNyZW0haW1wb3J0YW50fS5wdC1zbS01LC5weS1zbS01e3BhZGRpbmctdG9wOjNyZW0haW1wb3J0YW50fS5wci1zbS01LC5weC1zbS01e3BhZGRpbmctcmlnaHQ6M3JlbSFpbXBvcnRhbnR9LnBiLXNtLTUsLnB5LXNtLTV7cGFkZGluZy1ib3R0b206M3JlbSFpbXBvcnRhbnR9LnBsLXNtLTUsLnB4LXNtLTV7cGFkZGluZy1sZWZ0OjNyZW0haW1wb3J0YW50fS5tLXNtLW4xe21hcmdpbjotLjI1cmVtIWltcG9ydGFudH0ubXQtc20tbjEsLm15LXNtLW4xe21hcmdpbi10b3A6LS4yNXJlbSFpbXBvcnRhbnR9Lm1yLXNtLW4xLC5teC1zbS1uMXttYXJnaW4tcmlnaHQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm1iLXNtLW4xLC5teS1zbS1uMXttYXJnaW4tYm90dG9tOi0uMjVyZW0haW1wb3J0YW50fS5tbC1zbS1uMSwubXgtc20tbjF7bWFyZ2luLWxlZnQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm0tc20tbjJ7bWFyZ2luOi0uNXJlbSFpbXBvcnRhbnR9Lm10LXNtLW4yLC5teS1zbS1uMnttYXJnaW4tdG9wOi0uNXJlbSFpbXBvcnRhbnR9Lm1yLXNtLW4yLC5teC1zbS1uMnttYXJnaW4tcmlnaHQ6LS41cmVtIWltcG9ydGFudH0ubWItc20tbjIsLm15LXNtLW4ye21hcmdpbi1ib3R0b206LS41cmVtIWltcG9ydGFudH0ubWwtc20tbjIsLm14LXNtLW4ye21hcmdpbi1sZWZ0Oi0uNXJlbSFpbXBvcnRhbnR9Lm0tc20tbjN7bWFyZ2luOi0xcmVtIWltcG9ydGFudH0ubXQtc20tbjMsLm15LXNtLW4ze21hcmdpbi10b3A6LTFyZW0haW1wb3J0YW50fS5tci1zbS1uMywubXgtc20tbjN7bWFyZ2luLXJpZ2h0Oi0xcmVtIWltcG9ydGFudH0ubWItc20tbjMsLm15LXNtLW4ze21hcmdpbi1ib3R0b206LTFyZW0haW1wb3J0YW50fS5tbC1zbS1uMywubXgtc20tbjN7bWFyZ2luLWxlZnQ6LTFyZW0haW1wb3J0YW50fS5tLXNtLW40e21hcmdpbjotMS41cmVtIWltcG9ydGFudH0ubXQtc20tbjQsLm15LXNtLW40e21hcmdpbi10b3A6LTEuNXJlbSFpbXBvcnRhbnR9Lm1yLXNtLW40LC5teC1zbS1uNHttYXJnaW4tcmlnaHQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm1iLXNtLW40LC5teS1zbS1uNHttYXJnaW4tYm90dG9tOi0xLjVyZW0haW1wb3J0YW50fS5tbC1zbS1uNCwubXgtc20tbjR7bWFyZ2luLWxlZnQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm0tc20tbjV7bWFyZ2luOi0zcmVtIWltcG9ydGFudH0ubXQtc20tbjUsLm15LXNtLW41e21hcmdpbi10b3A6LTNyZW0haW1wb3J0YW50fS5tci1zbS1uNSwubXgtc20tbjV7bWFyZ2luLXJpZ2h0Oi0zcmVtIWltcG9ydGFudH0ubWItc20tbjUsLm15LXNtLW41e21hcmdpbi1ib3R0b206LTNyZW0haW1wb3J0YW50fS5tbC1zbS1uNSwubXgtc20tbjV7bWFyZ2luLWxlZnQ6LTNyZW0haW1wb3J0YW50fS5tLXNtLWF1dG97bWFyZ2luOmF1dG8haW1wb3J0YW50fS5tdC1zbS1hdXRvLC5teS1zbS1hdXRve21hcmdpbi10b3A6YXV0byFpbXBvcnRhbnR9Lm1yLXNtLWF1dG8sLm14LXNtLWF1dG97bWFyZ2luLXJpZ2h0OmF1dG8haW1wb3J0YW50fS5tYi1zbS1hdXRvLC5teS1zbS1hdXRve21hcmdpbi1ib3R0b206YXV0byFpbXBvcnRhbnR9Lm1sLXNtLWF1dG8sLm14LXNtLWF1dG97bWFyZ2luLWxlZnQ6YXV0byFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsubS1tZC0we21hcmdpbjowIWltcG9ydGFudH0ubXQtbWQtMCwubXktbWQtMHttYXJnaW4tdG9wOjAhaW1wb3J0YW50fS5tci1tZC0wLC5teC1tZC0we21hcmdpbi1yaWdodDowIWltcG9ydGFudH0ubWItbWQtMCwubXktbWQtMHttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fS5tbC1tZC0wLC5teC1tZC0we21hcmdpbi1sZWZ0OjAhaW1wb3J0YW50fS5tLW1kLTF7bWFyZ2luOi4yNXJlbSFpbXBvcnRhbnR9Lm10LW1kLTEsLm15LW1kLTF7bWFyZ2luLXRvcDouMjVyZW0haW1wb3J0YW50fS5tci1tZC0xLC5teC1tZC0xe21hcmdpbi1yaWdodDouMjVyZW0haW1wb3J0YW50fS5tYi1tZC0xLC5teS1tZC0xe21hcmdpbi1ib3R0b206LjI1cmVtIWltcG9ydGFudH0ubWwtbWQtMSwubXgtbWQtMXttYXJnaW4tbGVmdDouMjVyZW0haW1wb3J0YW50fS5tLW1kLTJ7bWFyZ2luOi41cmVtIWltcG9ydGFudH0ubXQtbWQtMiwubXktbWQtMnttYXJnaW4tdG9wOi41cmVtIWltcG9ydGFudH0ubXItbWQtMiwubXgtbWQtMnttYXJnaW4tcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5tYi1tZC0yLC5teS1tZC0ye21hcmdpbi1ib3R0b206LjVyZW0haW1wb3J0YW50fS5tbC1tZC0yLC5teC1tZC0ye21hcmdpbi1sZWZ0Oi41cmVtIWltcG9ydGFudH0ubS1tZC0ze21hcmdpbjoxcmVtIWltcG9ydGFudH0ubXQtbWQtMywubXktbWQtM3ttYXJnaW4tdG9wOjFyZW0haW1wb3J0YW50fS5tci1tZC0zLC5teC1tZC0ze21hcmdpbi1yaWdodDoxcmVtIWltcG9ydGFudH0ubWItbWQtMywubXktbWQtM3ttYXJnaW4tYm90dG9tOjFyZW0haW1wb3J0YW50fS5tbC1tZC0zLC5teC1tZC0ze21hcmdpbi1sZWZ0OjFyZW0haW1wb3J0YW50fS5tLW1kLTR7bWFyZ2luOjEuNXJlbSFpbXBvcnRhbnR9Lm10LW1kLTQsLm15LW1kLTR7bWFyZ2luLXRvcDoxLjVyZW0haW1wb3J0YW50fS5tci1tZC00LC5teC1tZC00e21hcmdpbi1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5tYi1tZC00LC5teS1tZC00e21hcmdpbi1ib3R0b206MS41cmVtIWltcG9ydGFudH0ubWwtbWQtNCwubXgtbWQtNHttYXJnaW4tbGVmdDoxLjVyZW0haW1wb3J0YW50fS5tLW1kLTV7bWFyZ2luOjNyZW0haW1wb3J0YW50fS5tdC1tZC01LC5teS1tZC01e21hcmdpbi10b3A6M3JlbSFpbXBvcnRhbnR9Lm1yLW1kLTUsLm14LW1kLTV7bWFyZ2luLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5tYi1tZC01LC5teS1tZC01e21hcmdpbi1ib3R0b206M3JlbSFpbXBvcnRhbnR9Lm1sLW1kLTUsLm14LW1kLTV7bWFyZ2luLWxlZnQ6M3JlbSFpbXBvcnRhbnR9LnAtbWQtMHtwYWRkaW5nOjAhaW1wb3J0YW50fS5wdC1tZC0wLC5weS1tZC0we3BhZGRpbmctdG9wOjAhaW1wb3J0YW50fS5wci1tZC0wLC5weC1tZC0we3BhZGRpbmctcmlnaHQ6MCFpbXBvcnRhbnR9LnBiLW1kLTAsLnB5LW1kLTB7cGFkZGluZy1ib3R0b206MCFpbXBvcnRhbnR9LnBsLW1kLTAsLnB4LW1kLTB7cGFkZGluZy1sZWZ0OjAhaW1wb3J0YW50fS5wLW1kLTF7cGFkZGluZzouMjVyZW0haW1wb3J0YW50fS5wdC1tZC0xLC5weS1tZC0xe3BhZGRpbmctdG9wOi4yNXJlbSFpbXBvcnRhbnR9LnByLW1kLTEsLnB4LW1kLTF7cGFkZGluZy1yaWdodDouMjVyZW0haW1wb3J0YW50fS5wYi1tZC0xLC5weS1tZC0xe3BhZGRpbmctYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9LnBsLW1kLTEsLnB4LW1kLTF7cGFkZGluZy1sZWZ0Oi4yNXJlbSFpbXBvcnRhbnR9LnAtbWQtMntwYWRkaW5nOi41cmVtIWltcG9ydGFudH0ucHQtbWQtMiwucHktbWQtMntwYWRkaW5nLXRvcDouNXJlbSFpbXBvcnRhbnR9LnByLW1kLTIsLnB4LW1kLTJ7cGFkZGluZy1yaWdodDouNXJlbSFpbXBvcnRhbnR9LnBiLW1kLTIsLnB5LW1kLTJ7cGFkZGluZy1ib3R0b206LjVyZW0haW1wb3J0YW50fS5wbC1tZC0yLC5weC1tZC0ye3BhZGRpbmctbGVmdDouNXJlbSFpbXBvcnRhbnR9LnAtbWQtM3twYWRkaW5nOjFyZW0haW1wb3J0YW50fS5wdC1tZC0zLC5weS1tZC0ze3BhZGRpbmctdG9wOjFyZW0haW1wb3J0YW50fS5wci1tZC0zLC5weC1tZC0ze3BhZGRpbmctcmlnaHQ6MXJlbSFpbXBvcnRhbnR9LnBiLW1kLTMsLnB5LW1kLTN7cGFkZGluZy1ib3R0b206MXJlbSFpbXBvcnRhbnR9LnBsLW1kLTMsLnB4LW1kLTN7cGFkZGluZy1sZWZ0OjFyZW0haW1wb3J0YW50fS5wLW1kLTR7cGFkZGluZzoxLjVyZW0haW1wb3J0YW50fS5wdC1tZC00LC5weS1tZC00e3BhZGRpbmctdG9wOjEuNXJlbSFpbXBvcnRhbnR9LnByLW1kLTQsLnB4LW1kLTR7cGFkZGluZy1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5wYi1tZC00LC5weS1tZC00e3BhZGRpbmctYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9LnBsLW1kLTQsLnB4LW1kLTR7cGFkZGluZy1sZWZ0OjEuNXJlbSFpbXBvcnRhbnR9LnAtbWQtNXtwYWRkaW5nOjNyZW0haW1wb3J0YW50fS5wdC1tZC01LC5weS1tZC01e3BhZGRpbmctdG9wOjNyZW0haW1wb3J0YW50fS5wci1tZC01LC5weC1tZC01e3BhZGRpbmctcmlnaHQ6M3JlbSFpbXBvcnRhbnR9LnBiLW1kLTUsLnB5LW1kLTV7cGFkZGluZy1ib3R0b206M3JlbSFpbXBvcnRhbnR9LnBsLW1kLTUsLnB4LW1kLTV7cGFkZGluZy1sZWZ0OjNyZW0haW1wb3J0YW50fS5tLW1kLW4xe21hcmdpbjotLjI1cmVtIWltcG9ydGFudH0ubXQtbWQtbjEsLm15LW1kLW4xe21hcmdpbi10b3A6LS4yNXJlbSFpbXBvcnRhbnR9Lm1yLW1kLW4xLC5teC1tZC1uMXttYXJnaW4tcmlnaHQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm1iLW1kLW4xLC5teS1tZC1uMXttYXJnaW4tYm90dG9tOi0uMjVyZW0haW1wb3J0YW50fS5tbC1tZC1uMSwubXgtbWQtbjF7bWFyZ2luLWxlZnQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm0tbWQtbjJ7bWFyZ2luOi0uNXJlbSFpbXBvcnRhbnR9Lm10LW1kLW4yLC5teS1tZC1uMnttYXJnaW4tdG9wOi0uNXJlbSFpbXBvcnRhbnR9Lm1yLW1kLW4yLC5teC1tZC1uMnttYXJnaW4tcmlnaHQ6LS41cmVtIWltcG9ydGFudH0ubWItbWQtbjIsLm15LW1kLW4ye21hcmdpbi1ib3R0b206LS41cmVtIWltcG9ydGFudH0ubWwtbWQtbjIsLm14LW1kLW4ye21hcmdpbi1sZWZ0Oi0uNXJlbSFpbXBvcnRhbnR9Lm0tbWQtbjN7bWFyZ2luOi0xcmVtIWltcG9ydGFudH0ubXQtbWQtbjMsLm15LW1kLW4ze21hcmdpbi10b3A6LTFyZW0haW1wb3J0YW50fS5tci1tZC1uMywubXgtbWQtbjN7bWFyZ2luLXJpZ2h0Oi0xcmVtIWltcG9ydGFudH0ubWItbWQtbjMsLm15LW1kLW4ze21hcmdpbi1ib3R0b206LTFyZW0haW1wb3J0YW50fS5tbC1tZC1uMywubXgtbWQtbjN7bWFyZ2luLWxlZnQ6LTFyZW0haW1wb3J0YW50fS5tLW1kLW40e21hcmdpbjotMS41cmVtIWltcG9ydGFudH0ubXQtbWQtbjQsLm15LW1kLW40e21hcmdpbi10b3A6LTEuNXJlbSFpbXBvcnRhbnR9Lm1yLW1kLW40LC5teC1tZC1uNHttYXJnaW4tcmlnaHQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm1iLW1kLW40LC5teS1tZC1uNHttYXJnaW4tYm90dG9tOi0xLjVyZW0haW1wb3J0YW50fS5tbC1tZC1uNCwubXgtbWQtbjR7bWFyZ2luLWxlZnQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm0tbWQtbjV7bWFyZ2luOi0zcmVtIWltcG9ydGFudH0ubXQtbWQtbjUsLm15LW1kLW41e21hcmdpbi10b3A6LTNyZW0haW1wb3J0YW50fS5tci1tZC1uNSwubXgtbWQtbjV7bWFyZ2luLXJpZ2h0Oi0zcmVtIWltcG9ydGFudH0ubWItbWQtbjUsLm15LW1kLW41e21hcmdpbi1ib3R0b206LTNyZW0haW1wb3J0YW50fS5tbC1tZC1uNSwubXgtbWQtbjV7bWFyZ2luLWxlZnQ6LTNyZW0haW1wb3J0YW50fS5tLW1kLWF1dG97bWFyZ2luOmF1dG8haW1wb3J0YW50fS5tdC1tZC1hdXRvLC5teS1tZC1hdXRve21hcmdpbi10b3A6YXV0byFpbXBvcnRhbnR9Lm1yLW1kLWF1dG8sLm14LW1kLWF1dG97bWFyZ2luLXJpZ2h0OmF1dG8haW1wb3J0YW50fS5tYi1tZC1hdXRvLC5teS1tZC1hdXRve21hcmdpbi1ib3R0b206YXV0byFpbXBvcnRhbnR9Lm1sLW1kLWF1dG8sLm14LW1kLWF1dG97bWFyZ2luLWxlZnQ6YXV0byFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjk5MnB4KXsubS1sZy0we21hcmdpbjowIWltcG9ydGFudH0ubXQtbGctMCwubXktbGctMHttYXJnaW4tdG9wOjAhaW1wb3J0YW50fS5tci1sZy0wLC5teC1sZy0we21hcmdpbi1yaWdodDowIWltcG9ydGFudH0ubWItbGctMCwubXktbGctMHttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fS5tbC1sZy0wLC5teC1sZy0we21hcmdpbi1sZWZ0OjAhaW1wb3J0YW50fS5tLWxnLTF7bWFyZ2luOi4yNXJlbSFpbXBvcnRhbnR9Lm10LWxnLTEsLm15LWxnLTF7bWFyZ2luLXRvcDouMjVyZW0haW1wb3J0YW50fS5tci1sZy0xLC5teC1sZy0xe21hcmdpbi1yaWdodDouMjVyZW0haW1wb3J0YW50fS5tYi1sZy0xLC5teS1sZy0xe21hcmdpbi1ib3R0b206LjI1cmVtIWltcG9ydGFudH0ubWwtbGctMSwubXgtbGctMXttYXJnaW4tbGVmdDouMjVyZW0haW1wb3J0YW50fS5tLWxnLTJ7bWFyZ2luOi41cmVtIWltcG9ydGFudH0ubXQtbGctMiwubXktbGctMnttYXJnaW4tdG9wOi41cmVtIWltcG9ydGFudH0ubXItbGctMiwubXgtbGctMnttYXJnaW4tcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5tYi1sZy0yLC5teS1sZy0ye21hcmdpbi1ib3R0b206LjVyZW0haW1wb3J0YW50fS5tbC1sZy0yLC5teC1sZy0ye21hcmdpbi1sZWZ0Oi41cmVtIWltcG9ydGFudH0ubS1sZy0ze21hcmdpbjoxcmVtIWltcG9ydGFudH0ubXQtbGctMywubXktbGctM3ttYXJnaW4tdG9wOjFyZW0haW1wb3J0YW50fS5tci1sZy0zLC5teC1sZy0ze21hcmdpbi1yaWdodDoxcmVtIWltcG9ydGFudH0ubWItbGctMywubXktbGctM3ttYXJnaW4tYm90dG9tOjFyZW0haW1wb3J0YW50fS5tbC1sZy0zLC5teC1sZy0ze21hcmdpbi1sZWZ0OjFyZW0haW1wb3J0YW50fS5tLWxnLTR7bWFyZ2luOjEuNXJlbSFpbXBvcnRhbnR9Lm10LWxnLTQsLm15LWxnLTR7bWFyZ2luLXRvcDoxLjVyZW0haW1wb3J0YW50fS5tci1sZy00LC5teC1sZy00e21hcmdpbi1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5tYi1sZy00LC5teS1sZy00e21hcmdpbi1ib3R0b206MS41cmVtIWltcG9ydGFudH0ubWwtbGctNCwubXgtbGctNHttYXJnaW4tbGVmdDoxLjVyZW0haW1wb3J0YW50fS5tLWxnLTV7bWFyZ2luOjNyZW0haW1wb3J0YW50fS5tdC1sZy01LC5teS1sZy01e21hcmdpbi10b3A6M3JlbSFpbXBvcnRhbnR9Lm1yLWxnLTUsLm14LWxnLTV7bWFyZ2luLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5tYi1sZy01LC5teS1sZy01e21hcmdpbi1ib3R0b206M3JlbSFpbXBvcnRhbnR9Lm1sLWxnLTUsLm14LWxnLTV7bWFyZ2luLWxlZnQ6M3JlbSFpbXBvcnRhbnR9LnAtbGctMHtwYWRkaW5nOjAhaW1wb3J0YW50fS5wdC1sZy0wLC5weS1sZy0we3BhZGRpbmctdG9wOjAhaW1wb3J0YW50fS5wci1sZy0wLC5weC1sZy0we3BhZGRpbmctcmlnaHQ6MCFpbXBvcnRhbnR9LnBiLWxnLTAsLnB5LWxnLTB7cGFkZGluZy1ib3R0b206MCFpbXBvcnRhbnR9LnBsLWxnLTAsLnB4LWxnLTB7cGFkZGluZy1sZWZ0OjAhaW1wb3J0YW50fS5wLWxnLTF7cGFkZGluZzouMjVyZW0haW1wb3J0YW50fS5wdC1sZy0xLC5weS1sZy0xe3BhZGRpbmctdG9wOi4yNXJlbSFpbXBvcnRhbnR9LnByLWxnLTEsLnB4LWxnLTF7cGFkZGluZy1yaWdodDouMjVyZW0haW1wb3J0YW50fS5wYi1sZy0xLC5weS1sZy0xe3BhZGRpbmctYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9LnBsLWxnLTEsLnB4LWxnLTF7cGFkZGluZy1sZWZ0Oi4yNXJlbSFpbXBvcnRhbnR9LnAtbGctMntwYWRkaW5nOi41cmVtIWltcG9ydGFudH0ucHQtbGctMiwucHktbGctMntwYWRkaW5nLXRvcDouNXJlbSFpbXBvcnRhbnR9LnByLWxnLTIsLnB4LWxnLTJ7cGFkZGluZy1yaWdodDouNXJlbSFpbXBvcnRhbnR9LnBiLWxnLTIsLnB5LWxnLTJ7cGFkZGluZy1ib3R0b206LjVyZW0haW1wb3J0YW50fS5wbC1sZy0yLC5weC1sZy0ye3BhZGRpbmctbGVmdDouNXJlbSFpbXBvcnRhbnR9LnAtbGctM3twYWRkaW5nOjFyZW0haW1wb3J0YW50fS5wdC1sZy0zLC5weS1sZy0ze3BhZGRpbmctdG9wOjFyZW0haW1wb3J0YW50fS5wci1sZy0zLC5weC1sZy0ze3BhZGRpbmctcmlnaHQ6MXJlbSFpbXBvcnRhbnR9LnBiLWxnLTMsLnB5LWxnLTN7cGFkZGluZy1ib3R0b206MXJlbSFpbXBvcnRhbnR9LnBsLWxnLTMsLnB4LWxnLTN7cGFkZGluZy1sZWZ0OjFyZW0haW1wb3J0YW50fS5wLWxnLTR7cGFkZGluZzoxLjVyZW0haW1wb3J0YW50fS5wdC1sZy00LC5weS1sZy00e3BhZGRpbmctdG9wOjEuNXJlbSFpbXBvcnRhbnR9LnByLWxnLTQsLnB4LWxnLTR7cGFkZGluZy1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5wYi1sZy00LC5weS1sZy00e3BhZGRpbmctYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9LnBsLWxnLTQsLnB4LWxnLTR7cGFkZGluZy1sZWZ0OjEuNXJlbSFpbXBvcnRhbnR9LnAtbGctNXtwYWRkaW5nOjNyZW0haW1wb3J0YW50fS5wdC1sZy01LC5weS1sZy01e3BhZGRpbmctdG9wOjNyZW0haW1wb3J0YW50fS5wci1sZy01LC5weC1sZy01e3BhZGRpbmctcmlnaHQ6M3JlbSFpbXBvcnRhbnR9LnBiLWxnLTUsLnB5LWxnLTV7cGFkZGluZy1ib3R0b206M3JlbSFpbXBvcnRhbnR9LnBsLWxnLTUsLnB4LWxnLTV7cGFkZGluZy1sZWZ0OjNyZW0haW1wb3J0YW50fS5tLWxnLW4xe21hcmdpbjotLjI1cmVtIWltcG9ydGFudH0ubXQtbGctbjEsLm15LWxnLW4xe21hcmdpbi10b3A6LS4yNXJlbSFpbXBvcnRhbnR9Lm1yLWxnLW4xLC5teC1sZy1uMXttYXJnaW4tcmlnaHQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm1iLWxnLW4xLC5teS1sZy1uMXttYXJnaW4tYm90dG9tOi0uMjVyZW0haW1wb3J0YW50fS5tbC1sZy1uMSwubXgtbGctbjF7bWFyZ2luLWxlZnQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm0tbGctbjJ7bWFyZ2luOi0uNXJlbSFpbXBvcnRhbnR9Lm10LWxnLW4yLC5teS1sZy1uMnttYXJnaW4tdG9wOi0uNXJlbSFpbXBvcnRhbnR9Lm1yLWxnLW4yLC5teC1sZy1uMnttYXJnaW4tcmlnaHQ6LS41cmVtIWltcG9ydGFudH0ubWItbGctbjIsLm15LWxnLW4ye21hcmdpbi1ib3R0b206LS41cmVtIWltcG9ydGFudH0ubWwtbGctbjIsLm14LWxnLW4ye21hcmdpbi1sZWZ0Oi0uNXJlbSFpbXBvcnRhbnR9Lm0tbGctbjN7bWFyZ2luOi0xcmVtIWltcG9ydGFudH0ubXQtbGctbjMsLm15LWxnLW4ze21hcmdpbi10b3A6LTFyZW0haW1wb3J0YW50fS5tci1sZy1uMywubXgtbGctbjN7bWFyZ2luLXJpZ2h0Oi0xcmVtIWltcG9ydGFudH0ubWItbGctbjMsLm15LWxnLW4ze21hcmdpbi1ib3R0b206LTFyZW0haW1wb3J0YW50fS5tbC1sZy1uMywubXgtbGctbjN7bWFyZ2luLWxlZnQ6LTFyZW0haW1wb3J0YW50fS5tLWxnLW40e21hcmdpbjotMS41cmVtIWltcG9ydGFudH0ubXQtbGctbjQsLm15LWxnLW40e21hcmdpbi10b3A6LTEuNXJlbSFpbXBvcnRhbnR9Lm1yLWxnLW40LC5teC1sZy1uNHttYXJnaW4tcmlnaHQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm1iLWxnLW40LC5teS1sZy1uNHttYXJnaW4tYm90dG9tOi0xLjVyZW0haW1wb3J0YW50fS5tbC1sZy1uNCwubXgtbGctbjR7bWFyZ2luLWxlZnQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm0tbGctbjV7bWFyZ2luOi0zcmVtIWltcG9ydGFudH0ubXQtbGctbjUsLm15LWxnLW41e21hcmdpbi10b3A6LTNyZW0haW1wb3J0YW50fS5tci1sZy1uNSwubXgtbGctbjV7bWFyZ2luLXJpZ2h0Oi0zcmVtIWltcG9ydGFudH0ubWItbGctbjUsLm15LWxnLW41e21hcmdpbi1ib3R0b206LTNyZW0haW1wb3J0YW50fS5tbC1sZy1uNSwubXgtbGctbjV7bWFyZ2luLWxlZnQ6LTNyZW0haW1wb3J0YW50fS5tLWxnLWF1dG97bWFyZ2luOmF1dG8haW1wb3J0YW50fS5tdC1sZy1hdXRvLC5teS1sZy1hdXRve21hcmdpbi10b3A6YXV0byFpbXBvcnRhbnR9Lm1yLWxnLWF1dG8sLm14LWxnLWF1dG97bWFyZ2luLXJpZ2h0OmF1dG8haW1wb3J0YW50fS5tYi1sZy1hdXRvLC5teS1sZy1hdXRve21hcmdpbi1ib3R0b206YXV0byFpbXBvcnRhbnR9Lm1sLWxnLWF1dG8sLm14LWxnLWF1dG97bWFyZ2luLWxlZnQ6YXV0byFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjEyMDBweCl7Lm0teGwtMHttYXJnaW46MCFpbXBvcnRhbnR9Lm10LXhsLTAsLm15LXhsLTB7bWFyZ2luLXRvcDowIWltcG9ydGFudH0ubXIteGwtMCwubXgteGwtMHttYXJnaW4tcmlnaHQ6MCFpbXBvcnRhbnR9Lm1iLXhsLTAsLm15LXhsLTB7bWFyZ2luLWJvdHRvbTowIWltcG9ydGFudH0ubWwteGwtMCwubXgteGwtMHttYXJnaW4tbGVmdDowIWltcG9ydGFudH0ubS14bC0xe21hcmdpbjouMjVyZW0haW1wb3J0YW50fS5tdC14bC0xLC5teS14bC0xe21hcmdpbi10b3A6LjI1cmVtIWltcG9ydGFudH0ubXIteGwtMSwubXgteGwtMXttYXJnaW4tcmlnaHQ6LjI1cmVtIWltcG9ydGFudH0ubWIteGwtMSwubXkteGwtMXttYXJnaW4tYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9Lm1sLXhsLTEsLm14LXhsLTF7bWFyZ2luLWxlZnQ6LjI1cmVtIWltcG9ydGFudH0ubS14bC0ye21hcmdpbjouNXJlbSFpbXBvcnRhbnR9Lm10LXhsLTIsLm15LXhsLTJ7bWFyZ2luLXRvcDouNXJlbSFpbXBvcnRhbnR9Lm1yLXhsLTIsLm14LXhsLTJ7bWFyZ2luLXJpZ2h0Oi41cmVtIWltcG9ydGFudH0ubWIteGwtMiwubXkteGwtMnttYXJnaW4tYm90dG9tOi41cmVtIWltcG9ydGFudH0ubWwteGwtMiwubXgteGwtMnttYXJnaW4tbGVmdDouNXJlbSFpbXBvcnRhbnR9Lm0teGwtM3ttYXJnaW46MXJlbSFpbXBvcnRhbnR9Lm10LXhsLTMsLm15LXhsLTN7bWFyZ2luLXRvcDoxcmVtIWltcG9ydGFudH0ubXIteGwtMywubXgteGwtM3ttYXJnaW4tcmlnaHQ6MXJlbSFpbXBvcnRhbnR9Lm1iLXhsLTMsLm15LXhsLTN7bWFyZ2luLWJvdHRvbToxcmVtIWltcG9ydGFudH0ubWwteGwtMywubXgteGwtM3ttYXJnaW4tbGVmdDoxcmVtIWltcG9ydGFudH0ubS14bC00e21hcmdpbjoxLjVyZW0haW1wb3J0YW50fS5tdC14bC00LC5teS14bC00e21hcmdpbi10b3A6MS41cmVtIWltcG9ydGFudH0ubXIteGwtNCwubXgteGwtNHttYXJnaW4tcmlnaHQ6MS41cmVtIWltcG9ydGFudH0ubWIteGwtNCwubXkteGwtNHttYXJnaW4tYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9Lm1sLXhsLTQsLm14LXhsLTR7bWFyZ2luLWxlZnQ6MS41cmVtIWltcG9ydGFudH0ubS14bC01e21hcmdpbjozcmVtIWltcG9ydGFudH0ubXQteGwtNSwubXkteGwtNXttYXJnaW4tdG9wOjNyZW0haW1wb3J0YW50fS5tci14bC01LC5teC14bC01e21hcmdpbi1yaWdodDozcmVtIWltcG9ydGFudH0ubWIteGwtNSwubXkteGwtNXttYXJnaW4tYm90dG9tOjNyZW0haW1wb3J0YW50fS5tbC14bC01LC5teC14bC01e21hcmdpbi1sZWZ0OjNyZW0haW1wb3J0YW50fS5wLXhsLTB7cGFkZGluZzowIWltcG9ydGFudH0ucHQteGwtMCwucHkteGwtMHtwYWRkaW5nLXRvcDowIWltcG9ydGFudH0ucHIteGwtMCwucHgteGwtMHtwYWRkaW5nLXJpZ2h0OjAhaW1wb3J0YW50fS5wYi14bC0wLC5weS14bC0we3BhZGRpbmctYm90dG9tOjAhaW1wb3J0YW50fS5wbC14bC0wLC5weC14bC0we3BhZGRpbmctbGVmdDowIWltcG9ydGFudH0ucC14bC0xe3BhZGRpbmc6LjI1cmVtIWltcG9ydGFudH0ucHQteGwtMSwucHkteGwtMXtwYWRkaW5nLXRvcDouMjVyZW0haW1wb3J0YW50fS5wci14bC0xLC5weC14bC0xe3BhZGRpbmctcmlnaHQ6LjI1cmVtIWltcG9ydGFudH0ucGIteGwtMSwucHkteGwtMXtwYWRkaW5nLWJvdHRvbTouMjVyZW0haW1wb3J0YW50fS5wbC14bC0xLC5weC14bC0xe3BhZGRpbmctbGVmdDouMjVyZW0haW1wb3J0YW50fS5wLXhsLTJ7cGFkZGluZzouNXJlbSFpbXBvcnRhbnR9LnB0LXhsLTIsLnB5LXhsLTJ7cGFkZGluZy10b3A6LjVyZW0haW1wb3J0YW50fS5wci14bC0yLC5weC14bC0ye3BhZGRpbmctcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5wYi14bC0yLC5weS14bC0ye3BhZGRpbmctYm90dG9tOi41cmVtIWltcG9ydGFudH0ucGwteGwtMiwucHgteGwtMntwYWRkaW5nLWxlZnQ6LjVyZW0haW1wb3J0YW50fS5wLXhsLTN7cGFkZGluZzoxcmVtIWltcG9ydGFudH0ucHQteGwtMywucHkteGwtM3twYWRkaW5nLXRvcDoxcmVtIWltcG9ydGFudH0ucHIteGwtMywucHgteGwtM3twYWRkaW5nLXJpZ2h0OjFyZW0haW1wb3J0YW50fS5wYi14bC0zLC5weS14bC0ze3BhZGRpbmctYm90dG9tOjFyZW0haW1wb3J0YW50fS5wbC14bC0zLC5weC14bC0ze3BhZGRpbmctbGVmdDoxcmVtIWltcG9ydGFudH0ucC14bC00e3BhZGRpbmc6MS41cmVtIWltcG9ydGFudH0ucHQteGwtNCwucHkteGwtNHtwYWRkaW5nLXRvcDoxLjVyZW0haW1wb3J0YW50fS5wci14bC00LC5weC14bC00e3BhZGRpbmctcmlnaHQ6MS41cmVtIWltcG9ydGFudH0ucGIteGwtNCwucHkteGwtNHtwYWRkaW5nLWJvdHRvbToxLjVyZW0haW1wb3J0YW50fS5wbC14bC00LC5weC14bC00e3BhZGRpbmctbGVmdDoxLjVyZW0haW1wb3J0YW50fS5wLXhsLTV7cGFkZGluZzozcmVtIWltcG9ydGFudH0ucHQteGwtNSwucHkteGwtNXtwYWRkaW5nLXRvcDozcmVtIWltcG9ydGFudH0ucHIteGwtNSwucHgteGwtNXtwYWRkaW5nLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5wYi14bC01LC5weS14bC01e3BhZGRpbmctYm90dG9tOjNyZW0haW1wb3J0YW50fS5wbC14bC01LC5weC14bC01e3BhZGRpbmctbGVmdDozcmVtIWltcG9ydGFudH0ubS14bC1uMXttYXJnaW46LS4yNXJlbSFpbXBvcnRhbnR9Lm10LXhsLW4xLC5teS14bC1uMXttYXJnaW4tdG9wOi0uMjVyZW0haW1wb3J0YW50fS5tci14bC1uMSwubXgteGwtbjF7bWFyZ2luLXJpZ2h0Oi0uMjVyZW0haW1wb3J0YW50fS5tYi14bC1uMSwubXkteGwtbjF7bWFyZ2luLWJvdHRvbTotLjI1cmVtIWltcG9ydGFudH0ubWwteGwtbjEsLm14LXhsLW4xe21hcmdpbi1sZWZ0Oi0uMjVyZW0haW1wb3J0YW50fS5tLXhsLW4ye21hcmdpbjotLjVyZW0haW1wb3J0YW50fS5tdC14bC1uMiwubXkteGwtbjJ7bWFyZ2luLXRvcDotLjVyZW0haW1wb3J0YW50fS5tci14bC1uMiwubXgteGwtbjJ7bWFyZ2luLXJpZ2h0Oi0uNXJlbSFpbXBvcnRhbnR9Lm1iLXhsLW4yLC5teS14bC1uMnttYXJnaW4tYm90dG9tOi0uNXJlbSFpbXBvcnRhbnR9Lm1sLXhsLW4yLC5teC14bC1uMnttYXJnaW4tbGVmdDotLjVyZW0haW1wb3J0YW50fS5tLXhsLW4ze21hcmdpbjotMXJlbSFpbXBvcnRhbnR9Lm10LXhsLW4zLC5teS14bC1uM3ttYXJnaW4tdG9wOi0xcmVtIWltcG9ydGFudH0ubXIteGwtbjMsLm14LXhsLW4ze21hcmdpbi1yaWdodDotMXJlbSFpbXBvcnRhbnR9Lm1iLXhsLW4zLC5teS14bC1uM3ttYXJnaW4tYm90dG9tOi0xcmVtIWltcG9ydGFudH0ubWwteGwtbjMsLm14LXhsLW4ze21hcmdpbi1sZWZ0Oi0xcmVtIWltcG9ydGFudH0ubS14bC1uNHttYXJnaW46LTEuNXJlbSFpbXBvcnRhbnR9Lm10LXhsLW40LC5teS14bC1uNHttYXJnaW4tdG9wOi0xLjVyZW0haW1wb3J0YW50fS5tci14bC1uNCwubXgteGwtbjR7bWFyZ2luLXJpZ2h0Oi0xLjVyZW0haW1wb3J0YW50fS5tYi14bC1uNCwubXkteGwtbjR7bWFyZ2luLWJvdHRvbTotMS41cmVtIWltcG9ydGFudH0ubWwteGwtbjQsLm14LXhsLW40e21hcmdpbi1sZWZ0Oi0xLjVyZW0haW1wb3J0YW50fS5tLXhsLW41e21hcmdpbjotM3JlbSFpbXBvcnRhbnR9Lm10LXhsLW41LC5teS14bC1uNXttYXJnaW4tdG9wOi0zcmVtIWltcG9ydGFudH0ubXIteGwtbjUsLm14LXhsLW41e21hcmdpbi1yaWdodDotM3JlbSFpbXBvcnRhbnR9Lm1iLXhsLW41LC5teS14bC1uNXttYXJnaW4tYm90dG9tOi0zcmVtIWltcG9ydGFudH0ubWwteGwtbjUsLm14LXhsLW41e21hcmdpbi1sZWZ0Oi0zcmVtIWltcG9ydGFudH0ubS14bC1hdXRve21hcmdpbjphdXRvIWltcG9ydGFudH0ubXQteGwtYXV0bywubXkteGwtYXV0b3ttYXJnaW4tdG9wOmF1dG8haW1wb3J0YW50fS5tci14bC1hdXRvLC5teC14bC1hdXRve21hcmdpbi1yaWdodDphdXRvIWltcG9ydGFudH0ubWIteGwtYXV0bywubXkteGwtYXV0b3ttYXJnaW4tYm90dG9tOmF1dG8haW1wb3J0YW50fS5tbC14bC1hdXRvLC5teC14bC1hdXRve21hcmdpbi1sZWZ0OmF1dG8haW1wb3J0YW50fX0udGV4dC1tb25vc3BhY2V7Zm9udC1mYW1pbHk6U0ZNb25vLVJlZ3VsYXIsTWVubG8sTW9uYWNvLENvbnNvbGFzLFxcXCJMaWJlcmF0aW9uIE1vbm9cXFwiLFxcXCJDb3VyaWVyIE5ld1xcXCIsbW9ub3NwYWNlIWltcG9ydGFudH0udGV4dC1qdXN0aWZ5e3RleHQtYWxpZ246anVzdGlmeSFpbXBvcnRhbnR9LnRleHQtd3JhcHt3aGl0ZS1zcGFjZTpub3JtYWwhaW1wb3J0YW50fS50ZXh0LW5vd3JhcHt3aGl0ZS1zcGFjZTpub3dyYXAhaW1wb3J0YW50fS50ZXh0LXRydW5jYXRle292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcH0udGV4dC1sZWZ0e3RleHQtYWxpZ246bGVmdCFpbXBvcnRhbnR9LnRleHQtcmlnaHR7dGV4dC1hbGlnbjpyaWdodCFpbXBvcnRhbnR9LnRleHQtY2VudGVye3RleHQtYWxpZ246Y2VudGVyIWltcG9ydGFudH1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LnRleHQtc20tbGVmdHt0ZXh0LWFsaWduOmxlZnQhaW1wb3J0YW50fS50ZXh0LXNtLXJpZ2h0e3RleHQtYWxpZ246cmlnaHQhaW1wb3J0YW50fS50ZXh0LXNtLWNlbnRlcnt0ZXh0LWFsaWduOmNlbnRlciFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsudGV4dC1tZC1sZWZ0e3RleHQtYWxpZ246bGVmdCFpbXBvcnRhbnR9LnRleHQtbWQtcmlnaHR7dGV4dC1hbGlnbjpyaWdodCFpbXBvcnRhbnR9LnRleHQtbWQtY2VudGVye3RleHQtYWxpZ246Y2VudGVyIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey50ZXh0LWxnLWxlZnR7dGV4dC1hbGlnbjpsZWZ0IWltcG9ydGFudH0udGV4dC1sZy1yaWdodHt0ZXh0LWFsaWduOnJpZ2h0IWltcG9ydGFudH0udGV4dC1sZy1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDoxMjAwcHgpey50ZXh0LXhsLWxlZnR7dGV4dC1hbGlnbjpsZWZ0IWltcG9ydGFudH0udGV4dC14bC1yaWdodHt0ZXh0LWFsaWduOnJpZ2h0IWltcG9ydGFudH0udGV4dC14bC1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50fX0udGV4dC1sb3dlcmNhc2V7dGV4dC10cmFuc2Zvcm06bG93ZXJjYXNlIWltcG9ydGFudH0udGV4dC11cHBlcmNhc2V7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlIWltcG9ydGFudH0udGV4dC1jYXBpdGFsaXple3RleHQtdHJhbnNmb3JtOmNhcGl0YWxpemUhaW1wb3J0YW50fS5mb250LXdlaWdodC1saWdodHtmb250LXdlaWdodDozMDAhaW1wb3J0YW50fS5mb250LXdlaWdodC1saWdodGVye2ZvbnQtd2VpZ2h0OmxpZ2h0ZXIhaW1wb3J0YW50fS5mb250LXdlaWdodC1ub3JtYWx7Zm9udC13ZWlnaHQ6NDAwIWltcG9ydGFudH0uZm9udC13ZWlnaHQtYm9sZHtmb250LXdlaWdodDo3MDAhaW1wb3J0YW50fS5mb250LXdlaWdodC1ib2xkZXJ7Zm9udC13ZWlnaHQ6Ym9sZGVyIWltcG9ydGFudH0uZm9udC1pdGFsaWN7Zm9udC1zdHlsZTppdGFsaWMhaW1wb3J0YW50fS50ZXh0LXdoaXRle2NvbG9yOiNmZmYhaW1wb3J0YW50fS50ZXh0LXByaW1hcnl7Y29sb3I6IzAwN2JmZiFpbXBvcnRhbnR9YS50ZXh0LXByaW1hcnk6Zm9jdXMsYS50ZXh0LXByaW1hcnk6aG92ZXJ7Y29sb3I6IzAwNTZiMyFpbXBvcnRhbnR9LnRleHQtc2Vjb25kYXJ5e2NvbG9yOiM2Yzc1N2QhaW1wb3J0YW50fWEudGV4dC1zZWNvbmRhcnk6Zm9jdXMsYS50ZXh0LXNlY29uZGFyeTpob3Zlcntjb2xvcjojNDk0ZjU0IWltcG9ydGFudH0udGV4dC1zdWNjZXNze2NvbG9yOiMyOGE3NDUhaW1wb3J0YW50fWEudGV4dC1zdWNjZXNzOmZvY3VzLGEudGV4dC1zdWNjZXNzOmhvdmVye2NvbG9yOiMxOTY5MmMhaW1wb3J0YW50fS50ZXh0LWluZm97Y29sb3I6IzE3YTJiOCFpbXBvcnRhbnR9YS50ZXh0LWluZm86Zm9jdXMsYS50ZXh0LWluZm86aG92ZXJ7Y29sb3I6IzBmNjY3NCFpbXBvcnRhbnR9LnRleHQtd2FybmluZ3tjb2xvcjojZmZjMTA3IWltcG9ydGFudH1hLnRleHQtd2FybmluZzpmb2N1cyxhLnRleHQtd2FybmluZzpob3Zlcntjb2xvcjojYmE4YjAwIWltcG9ydGFudH0udGV4dC1kYW5nZXJ7Y29sb3I6I2RjMzU0NSFpbXBvcnRhbnR9YS50ZXh0LWRhbmdlcjpmb2N1cyxhLnRleHQtZGFuZ2VyOmhvdmVye2NvbG9yOiNhNzFkMmEhaW1wb3J0YW50fS50ZXh0LWxpZ2h0e2NvbG9yOiNmOGY5ZmEhaW1wb3J0YW50fWEudGV4dC1saWdodDpmb2N1cyxhLnRleHQtbGlnaHQ6aG92ZXJ7Y29sb3I6I2NiZDNkYSFpbXBvcnRhbnR9LnRleHQtZGFya3tjb2xvcjojMzQzYTQwIWltcG9ydGFudH1hLnRleHQtZGFyazpmb2N1cyxhLnRleHQtZGFyazpob3Zlcntjb2xvcjojMTIxNDE2IWltcG9ydGFudH0udGV4dC1ib2R5e2NvbG9yOiMyMTI1MjkhaW1wb3J0YW50fS50ZXh0LW11dGVke2NvbG9yOiM2Yzc1N2QhaW1wb3J0YW50fS50ZXh0LWJsYWNrLTUwe2NvbG9yOnJnYmEoMCwwLDAsLjUpIWltcG9ydGFudH0udGV4dC13aGl0ZS01MHtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC41KSFpbXBvcnRhbnR9LnRleHQtaGlkZXtmb250OjAvMCBhO2NvbG9yOnRyYW5zcGFyZW50O3RleHQtc2hhZG93Om5vbmU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MH0udGV4dC1kZWNvcmF0aW9uLW5vbmV7dGV4dC1kZWNvcmF0aW9uOm5vbmUhaW1wb3J0YW50fS50ZXh0LWJyZWFre3dvcmQtYnJlYWs6YnJlYWstd29yZCFpbXBvcnRhbnQ7b3ZlcmZsb3ctd3JhcDpicmVhay13b3JkIWltcG9ydGFudH0udGV4dC1yZXNldHtjb2xvcjppbmhlcml0IWltcG9ydGFudH0udmlzaWJsZXt2aXNpYmlsaXR5OnZpc2libGUhaW1wb3J0YW50fS5pbnZpc2libGV7dmlzaWJpbGl0eTpoaWRkZW4haW1wb3J0YW50fUBtZWRpYSBwcmludHsqLDo6YWZ0ZXIsOjpiZWZvcmV7dGV4dC1zaGFkb3c6bm9uZSFpbXBvcnRhbnQ7Ym94LXNoYWRvdzpub25lIWltcG9ydGFudH1hOm5vdCguYnRuKXt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfWFiYnJbdGl0bGVdOjphZnRlcntjb250ZW50OlxcXCIgKFxcXCIgYXR0cih0aXRsZSkgXFxcIilcXFwifXByZXt3aGl0ZS1zcGFjZTpwcmUtd3JhcCFpbXBvcnRhbnR9YmxvY2txdW90ZSxwcmV7Ym9yZGVyOjFweCBzb2xpZCAjYWRiNWJkO3BhZ2UtYnJlYWstaW5zaWRlOmF2b2lkfXRoZWFke2Rpc3BsYXk6dGFibGUtaGVhZGVyLWdyb3VwfWltZyx0cntwYWdlLWJyZWFrLWluc2lkZTphdm9pZH1oMixoMyxwe29ycGhhbnM6Mzt3aWRvd3M6M31oMixoM3twYWdlLWJyZWFrLWFmdGVyOmF2b2lkfUBwYWdle3NpemU6YTN9Ym9keXttaW4td2lkdGg6OTkycHghaW1wb3J0YW50fS5jb250YWluZXJ7bWluLXdpZHRoOjk5MnB4IWltcG9ydGFudH0ubmF2YmFye2Rpc3BsYXk6bm9uZX0uYmFkZ2V7Ym9yZGVyOjFweCBzb2xpZCAjMDAwfS50YWJsZXtib3JkZXItY29sbGFwc2U6Y29sbGFwc2UhaW1wb3J0YW50fS50YWJsZSB0ZCwudGFibGUgdGh7YmFja2dyb3VuZC1jb2xvcjojZmZmIWltcG9ydGFudH0udGFibGUtYm9yZGVyZWQgdGQsLnRhYmxlLWJvcmRlcmVkIHRoe2JvcmRlcjoxcHggc29saWQgI2RlZTJlNiFpbXBvcnRhbnR9LnRhYmxlLWRhcmt7Y29sb3I6aW5oZXJpdH0udGFibGUtZGFyayB0Ym9keSt0Ym9keSwudGFibGUtZGFyayB0ZCwudGFibGUtZGFyayB0aCwudGFibGUtZGFyayB0aGVhZCB0aHtib3JkZXItY29sb3I6I2RlZTJlNn0udGFibGUgLnRoZWFkLWRhcmsgdGh7Y29sb3I6aW5oZXJpdDtib3JkZXItY29sb3I6I2RlZTJlNn19XCIsIFwiXCJdKTtcblxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0ge307XG5cbnZhclx0bWVtb2l6ZSA9IGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbztcblxuXHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikgbWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0cmV0dXJuIG1lbW87XG5cdH07XG59O1xuXG52YXIgaXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuXHQvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuXHQvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG5cdC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcblx0Ly8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG5cdC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuXHRyZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG59KTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uICh0YXJnZXQsIHBhcmVudCkge1xuICBpZiAocGFyZW50KXtcbiAgICByZXR1cm4gcGFyZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbiAgfVxuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xufTtcblxudmFyIGdldEVsZW1lbnQgPSAoZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vID0ge307XG5cblx0cmV0dXJuIGZ1bmN0aW9uKHRhcmdldCwgcGFyZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgcGFzc2luZyBmdW5jdGlvbiBpbiBvcHRpb25zLCB0aGVuIHVzZSBpdCBmb3IgcmVzb2x2ZSBcImhlYWRcIiBlbGVtZW50LlxuICAgICAgICAgICAgICAgIC8vIFVzZWZ1bCBmb3IgU2hhZG93IFJvb3Qgc3R5bGUgaS5lXG4gICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgIC8vICAgaW5zZXJ0SW50bzogZnVuY3Rpb24gKCkgeyByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb29cIikuc2hhZG93Um9vdCB9XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBnZXRUYXJnZXQuY2FsbCh0aGlzLCB0YXJnZXQsIHBhcmVudCk7XG5cdFx0XHQvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXHRcdFx0aWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1t0YXJnZXRdXG5cdH07XG59KSgpO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlLCB0YXJnZXQpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXG5cdGlmKG9wdGlvbnMuYXR0cnMubm9uY2UgPT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBub25jZSA9IGdldE5vbmNlKCk7XG5cdFx0aWYgKG5vbmNlKSB7XG5cdFx0XHRvcHRpb25zLmF0dHJzLm5vbmNlID0gbm9uY2U7XG5cdFx0fVxuXHR9XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXHRvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXG5cdGFkZEF0dHJzKGxpbmssIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayk7XG5cblx0cmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJzIChlbCwgYXR0cnMpIHtcblx0T2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gZ2V0Tm9uY2UoKSB7XG5cdGlmICh0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHRyZXR1cm4gX193ZWJwYWNrX25vbmNlX187XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gdHlwZW9mIG9wdGlvbnMudHJhbnNmb3JtID09PSAnZnVuY3Rpb24nXG5cdFx0ID8gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcykgXG5cdFx0IDogb3B0aW9ucy50cmFuc2Zvcm0uZGVmYXVsdChvYmouY3NzKTtcblxuXHQgICAgaWYgKHJlc3VsdCkge1xuXHQgICAgXHQvLyBJZiB0cmFuc2Zvcm0gcmV0dXJucyBhIHZhbHVlLCB1c2UgdGhhdCBpbnN0ZWFkIG9mIHRoZSBvcmlnaW5hbCBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIHJ1bm5pbmcgcnVudGltZSB0cmFuc2Zvcm1hdGlvbnMgb24gdGhlIGNzcy5cblx0ICAgIFx0b2JqLmNzcyA9IHJlc3VsdDtcblx0ICAgIH0gZWxzZSB7XG5cdCAgICBcdC8vIElmIHRoZSB0cmFuc2Zvcm0gZnVuY3Rpb24gcmV0dXJucyBhIGZhbHN5IHZhbHVlLCBkb24ndCBhZGQgdGhpcyBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIGNvbmRpdGlvbmFsIGxvYWRpbmcgb2YgY3NzXG5cdCAgICBcdHJldHVybiBmdW5jdGlvbigpIHtcblx0ICAgIFx0XHQvLyBub29wXG5cdCAgICBcdH07XG5cdCAgICB9XG5cdH1cblxuXHRpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcblx0XHR2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcblxuXHRcdHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuXG5cdFx0dXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG5cdFx0cmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcblxuXHR9IGVsc2UgaWYgKFxuXHRcdG9iai5zb3VyY2VNYXAgJiZcblx0XHR0eXBlb2YgVVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLmNyZWF0ZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5yZXZva2VPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBCbG9iID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiXG5cdCkge1xuXHRcdHN0eWxlID0gY3JlYXRlTGlua0VsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gdXBkYXRlTGluay5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXG5cdFx0XHRpZihzdHlsZS5ocmVmKSBVUkwucmV2b2tlT2JqZWN0VVJMKHN0eWxlLmhyZWYpO1xuXHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXHRcdH07XG5cdH1cblxuXHR1cGRhdGUob2JqKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUgKG5ld09iaikge1xuXHRcdGlmIChuZXdPYmopIHtcblx0XHRcdGlmIChcblx0XHRcdFx0bmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJlxuXHRcdFx0XHRuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJlxuXHRcdFx0XHRuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR1cGRhdGUob2JqID0gbmV3T2JqKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVtb3ZlKCk7XG5cdFx0fVxuXHR9O1xufVxuXG52YXIgcmVwbGFjZVRleHQgPSAoZnVuY3Rpb24gKCkge1xuXHR2YXIgdGV4dFN0b3JlID0gW107XG5cblx0cmV0dXJuIGZ1bmN0aW9uIChpbmRleCwgcmVwbGFjZW1lbnQpIHtcblx0XHR0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG5cblx0XHRyZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcblx0fTtcbn0pKCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcgKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcblx0dmFyIGNzcyA9IHJlbW92ZSA/IFwiXCIgOiBvYmouY3NzO1xuXG5cdGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG5cdH0gZWxzZSB7XG5cdFx0dmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuXHRcdHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuXHRcdGlmIChjaGlsZE5vZGVzW2luZGV4XSkgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG5cdFx0XHRzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyAoc3R5bGUsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuXG5cdGlmKG1lZGlhKSB7XG5cdFx0c3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpXG5cdH1cblxuXHRpZihzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuXHR9IGVsc2Uge1xuXHRcdHdoaWxlKHN0eWxlLmZpcnN0Q2hpbGQpIHtcblx0XHRcdHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuXHRcdH1cblxuXHRcdHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUxpbmsgKGxpbmssIG9wdGlvbnMsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cblx0Lypcblx0XHRJZiBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgaXNuJ3QgZGVmaW5lZCwgYnV0IHNvdXJjZW1hcHMgYXJlIGVuYWJsZWRcblx0XHRhbmQgdGhlcmUgaXMgbm8gcHVibGljUGF0aCBkZWZpbmVkIHRoZW4gbGV0cyB0dXJuIGNvbnZlcnRUb0Fic29sdXRlVXJsc1xuXHRcdG9uIGJ5IGRlZmF1bHQuICBPdGhlcndpc2UgZGVmYXVsdCB0byB0aGUgY29udmVydFRvQWJzb2x1dGVVcmxzIG9wdGlvblxuXHRcdGRpcmVjdGx5XG5cdCovXG5cdHZhciBhdXRvRml4VXJscyA9IG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzID09PSB1bmRlZmluZWQgJiYgc291cmNlTWFwO1xuXG5cdGlmIChvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyB8fCBhdXRvRml4VXJscykge1xuXHRcdGNzcyA9IGZpeFVybHMoY3NzKTtcblx0fVxuXG5cdGlmIChzb3VyY2VNYXApIHtcblx0XHQvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjYwMzg3NVxuXHRcdGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpICsgXCIgKi9cIjtcblx0fVxuXG5cdHZhciBibG9iID0gbmV3IEJsb2IoW2Nzc10sIHsgdHlwZTogXCJ0ZXh0L2Nzc1wiIH0pO1xuXG5cdHZhciBvbGRTcmMgPSBsaW5rLmhyZWY7XG5cblx0bGluay5ocmVmID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcblxuXHRpZihvbGRTcmMpIFVSTC5yZXZva2VPYmplY3RVUkwob2xkU3JjKTtcbn1cbiIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bykge1xuICB2YXIgZnJvbSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7XG5cbiAgdmFyIHRvUGFydHMgPSB0byAmJiB0by5zcGxpdCgnLycpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaCA9IHZvaWQgMDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSB7XG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG4gIH1pZiAobXVzdEVuZEFicyAmJiBmcm9tUGFydHNbMF0gIT09ICcnICYmICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpKSBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xuXG4gIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShiKSAmJiBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgYS5ldmVyeShmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGl0ZW0sIGJbaW5kZXhdKTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBhVHlwZSA9IHR5cGVvZiBhID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhKTtcbiAgdmFyIGJUeXBlID0gdHlwZW9mIGIgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGIpO1xuXG4gIGlmIChhVHlwZSAhPT0gYlR5cGUpIHJldHVybiBmYWxzZTtcblxuICBpZiAoYVR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFWYWx1ZSA9IGEudmFsdWVPZigpO1xuICAgIHZhciBiVmFsdWUgPSBiLnZhbHVlT2YoKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICB2YXIgYktleXMgPSBPYmplY3Qua2V5cyhiKTtcblxuICAgIGlmIChhS2V5cy5sZW5ndGggIT09IGJLZXlzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgcmV0dXJuIGFLZXlzLmV2ZXJ5KGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGFba2V5XSwgYltrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsdWVFcXVhbDsiLCJ2YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbnZhciBwcmVmaXggPSAnSW52YXJpYW50IGZhaWxlZCc7XG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gIGlmIChjb25kaXRpb24pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoJ14nICsgcHJlZml4ICsgJyhcXFxcL3xcXFxcP3wjfCQpJywgJ2knKS50ZXN0KHBhdGgpO1xufVxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcblxuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbiAgcmV0dXJuIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb247XG5cbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59XG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufVxuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxudmFyIEhhc2hDaGFuZ2VFdmVudCQxID0gJ2hhc2hjaGFuZ2UnO1xudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufVxuXG5mdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHZhciBoYXNoSW5kZXggPSB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCcjJyk7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNsaWNlKDAsIGhhc2hJbmRleCA+PSAwID8gaGFzaEluZGV4IDogMCkgKyAnIycgKyBwYXRoKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuXG5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggPT09IC0xID8gMCA6IHByZXZJbmRleCArIDEpO1xuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJykgOiB2b2lkIDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBfcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSAnY3JlYXRlLXJlYWN0LWNvbnRleHQnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBjcmVhdGVQYXRoIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcbmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlIH0gZnJvbSAncmVhY3QtaXMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LlByb3ZpZGVyLmRpc3BsYXlOYW1lID0gbmFtZSArIFwiLlByb3ZpZGVyXCI7XG4gIGNvbnRleHQuQ29uc3VtZXIuZGlzcGxheU5hbWUgPSBuYW1lICsgXCIuQ29uc3VtZXJcIjtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgY29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQoJ1JvdXRlcicpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgUm91dGVyLmNvbXB1dGVSb290TWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIFJvdXRlcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmhpc3RvcnkubG9jYXRpb25cbiAgICB9OyAvLyBUaGlzIGlzIGEgYml0IG9mIGEgaGFjay4gV2UgaGF2ZSB0byBzdGFydCBsaXN0ZW5pbmcgZm9yIGxvY2F0aW9uXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcbiAgICAvLyBvbiB0aGUgaW5pdGlhbCByZW5kZXIuIElmIHRoZXJlIGFyZSwgdGhleSB3aWxsIHJlcGxhY2UvcHVzaCB3aGVuXG4gICAgLy8gdGhleSBtb3VudCBhbmQgc2luY2UgY0RNIGZpcmVzIGluIGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLCB3ZSBtYXlcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxuXG4gICAgX3RoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xuXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICBfdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgICBpZiAoX3RoaXMuX2lzTW91bnRlZCkge1xuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLl9wZW5kaW5nTG9jYXRpb24pIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGwsXG4gICAgICB2YWx1ZToge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBNZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciBMaWZlY3ljbGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGlmZWN5Y2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaWZlY3ljbGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IExpZmVjeWNsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIExpZmVjeWNsZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXkgZnJvbSBhIHNjcmVlbi5cbiAqL1xuXG5mdW5jdGlvbiBQcm9tcHQoX3JlZikge1xuICB2YXIgbWVzc2FnZSA9IF9yZWYubWVzc2FnZSxcbiAgICAgIF9yZWYkd2hlbiA9IF9yZWYud2hlbixcbiAgICAgIHdoZW4gPSBfcmVmJHdoZW4gPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHdoZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JCQxKSB7XG4gICAgIWNvbnRleHQkJDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgaWYgKCF3aGVuIHx8IGNvbnRleHQkJDEuc3RhdGljQ29udGV4dCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1ldGhvZCA9IGNvbnRleHQkJDEuaGlzdG9yeS5ibG9jaztcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1lc3NhZ2UgIT09IG1lc3NhZ2UpIHtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgfSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcbiAgUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcbiAgdmFyIGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXRoID0gXCIvXCI7XG4gIH1cblxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcbiAgICBwcmV0dHk6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcbiAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXG4gICAgICBwdXNoID0gX3JlZiRwdXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkcHVzaDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkJDEpIHtcbiAgICAhY29udGV4dCQkMSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dCQkMS5oaXN0b3J5LFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gY29udGV4dCQkMS5zdGF0aWNDb250ZXh0O1xuICAgIHZhciBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgfSkgOiB0byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG5cbiAgICBpZiAoc3RhdGljQ29udGV4dCkge1xuICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIGlmICghbG9jYXRpb25zQXJlRXF1YWwocHJldlByb3BzLnRvLCBsb2NhdGlvbikpIHtcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdG86IHRvXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUkMSA9IHt9O1xudmFyIGNhY2hlTGltaXQkMSA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQkMSA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoJDEocGF0aCwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgcGF0aENhY2hlID0gY2FjaGUkMVtjYWNoZUtleV0gfHwgKGNhY2hlJDFbY2FjaGVLZXldID0ge30pO1xuICBpZiAocGF0aENhY2hlW3BhdGhdKSByZXR1cm4gcGF0aENhY2hlW3BhdGhdO1xuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmVnZXhwID0gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpO1xuICB2YXIgcmVzdWx0ID0ge1xuICAgIHJlZ2V4cDogcmVnZXhwLFxuICAgIGtleXM6IGtleXNcbiAgfTtcblxuICBpZiAoY2FjaGVDb3VudCQxIDwgY2FjaGVMaW1pdCQxKSB7XG4gICAgcGF0aENhY2hlW3BhdGhdID0gcmVzdWx0O1xuICAgIGNhY2hlQ291bnQkMSsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxuICovXG5cblxuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIpIG9wdGlvbnMgPSB7XG4gICAgcGF0aDogb3B0aW9uc1xuICB9O1xuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG4gIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKG1hdGNoZWQsIHBhdGgpIHtcbiAgICBpZiAobWF0Y2hlZCkgcmV0dXJuIG1hdGNoZWQ7XG5cbiAgICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgkMShwYXRoLCB7XG4gICAgICBlbmQ6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZVxuICAgIH0pLFxuICAgICAgICByZWdleHAgPSBfY29tcGlsZVBhdGgucmVnZXhwLFxuICAgICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgICB2YXIgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcbiAgICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG4gICAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogcGF0aCxcbiAgICAgIC8vIHRoZSBwYXRoIHVzZWQgdG8gbWF0Y2hcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsXG4gICAgICAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICAgIGlzRXhhY3Q6IGlzRXhhY3QsXG4gICAgICAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICByZXR1cm4gbWVtbztcbiAgICAgIH0sIHt9KVxuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG5cbnZhciBSb3V0ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICAgIWNvbnRleHQkJDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkJDEubG9jYXRpb247XG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcbiAgICAgIDogX3RoaXMucHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX3RoaXMucHJvcHMpIDogY29udGV4dCQkMS5tYXRjaDtcblxuICAgICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIGNvbnRleHQkJDEsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY2hpbGRyZW4gPSBjaGlsZHJlbihwcm9wcyk7XG5cbiAgICAgICAgaWYgKGNoaWxkcmVuID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgICB2YXIgcGF0aCA9IF90aGlzLnByb3BzLnBhdGg7XG4gICAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICsgKFwiPFJvdXRlXCIgKyAocGF0aCA/IFwiIHBhdGg9XFxcIlwiICsgcGF0aCArIFwiXFxcIlwiIDogXCJcIikgKyBcIj4sIGJ1dCB5b3UgXCIpICsgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCIpIDogdm9pZCAwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9wc1xuICAgICAgfSwgY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikgPyBjaGlsZHJlbiA6IHByb3BzLm1hdGNoID8gY29tcG9uZW50ID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBudWxsIDogbnVsbCk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5jb21wb25lbnQpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cbi8qKlxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XG4gKiBjYW4ndCBhY3R1YWxseSBjaGFuZ2UgdGhlIGN1cnJlbnQgbG9jYXRpb24uIEluc3RlYWQsIGl0IGp1c3QgcmVjb3Jkc1xuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cbiAqL1xuXG5cbnZhciBTdGF0aWNSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3RhdGljUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdGF0aWNSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJQVVNIXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVSZXBsYWNlID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJSRVBMQUNFXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVMaXN0ZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0YXRpY1JvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLm5hdmlnYXRlVG8gPSBmdW5jdGlvbiBuYXZpZ2F0ZVRvKGxvY2F0aW9uLCBhY3Rpb24pIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMkYmFzZW5hbWUsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0O1xuICAgIGNvbnRleHQuYWN0aW9uID0gYWN0aW9uO1xuICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMyJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wczIkY29udGV4dCA9IF90aGlzJHByb3BzMi5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMyJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMyJGNvbnRleHQsXG4gICAgICAgIF90aGlzJHByb3BzMiRsb2NhdGlvbiA9IF90aGlzJHByb3BzMi5sb2NhdGlvbixcbiAgICAgICAgbG9jYXRpb24gPSBfdGhpcyRwcm9wczIkbG9jYXRpb24gPT09IHZvaWQgMCA/IFwiL1wiIDogX3RoaXMkcHJvcHMyJGxvY2F0aW9uLFxuICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMyLCBbXCJiYXNlbmFtZVwiLCBcImNvbnRleHRcIiwgXCJsb2NhdGlvblwiXSk7XG5cbiAgICB2YXIgaGlzdG9yeSA9IHtcbiAgICAgIGNyZWF0ZUhyZWY6IGZ1bmN0aW9uIGNyZWF0ZUhyZWYocGF0aCkge1xuICAgICAgICByZXR1cm4gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKTtcbiAgICAgIH0sXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcbiAgICB9O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgIGhpc3Rvcnk6IGhpc3RvcnksXG4gICAgICBzdGF0aWNDb250ZXh0OiBjb250ZXh0XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cblxudmFyIFN3aXRjaCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3dpdGNoLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICAgIWNvbnRleHQkJDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JCQxLmxvY2F0aW9uO1xuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgICAvLyB0byB0cmlnZ2VyIGFuIHVubW91bnQvcmVtb3VudCBmb3IgdHdvIDxSb3V0ZT5zIHRoYXQgcmVuZGVyIHRoZSBzYW1lXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG5cbiAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goX3RoaXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XG4gICAgICAgICAgdmFyIHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG4gICAgICAgICAgbWF0Y2ggPSBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfZXh0ZW5kcyh7fSwgY2hpbGQucHJvcHMsIHtcbiAgICAgICAgICAgIHBhdGg6IHBhdGhcbiAgICAgICAgICB9KSkgOiBjb250ZXh0JCQxLm1hdGNoO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBtYXRjaCA/IFJlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgY29tcHV0ZWRNYXRjaDogbWF0Y2hcbiAgICAgIH0pIDogbnVsbDtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gU3dpdGNoO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG5cbmZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwge1xuICAgICAgY2hpbGRyZW46IGZ1bmN0aW9uIGNoaWxkcmVuKHJvdXRlQ29tcG9uZW50UHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIHJvdXRlQ29tcG9uZW50UHJvcHMsIHtcbiAgICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuICBDLldyYXBwZWRDb21wb25lbnQgPSBDb21wb25lbnQ7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIEMucHJvcFR5cGVzID0ge1xuICAgICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLmZ1bmNcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIGdsb2JhbCA9IHdpbmRvdztcbiAgICB2YXIga2V5ID0gXCJfX3JlYWN0X3JvdXRlcl9idWlsZF9fXCI7XG4gICAgdmFyIGJ1aWxkTmFtZXMgPSB7XG4gICAgICBjanM6IFwiQ29tbW9uSlNcIixcbiAgICAgIGVzbTogXCJFUyBtb2R1bGVzXCIsXG4gICAgICB1bWQ6IFwiVU1EXCJcbiAgICB9O1xuXG4gICAgaWYgKGdsb2JhbFtrZXldICYmIGdsb2JhbFtrZXldICE9PSBcImVzbVwiKSB7XG4gICAgICB2YXIgaW5pdGlhbEJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbZ2xvYmFsW2tleV1dO1xuICAgICAgdmFyIHNlY29uZGFyeUJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbXCJlc21cIl07IC8vIFRPRE86IEFkZCBsaW5rIHRvIGFydGljbGUgdGhhdCBleHBsYWlucyBpbiBkZXRhaWwgaG93IHRvIGF2b2lkXG4gICAgICAvLyBsb2FkaW5nIDIgZGlmZmVyZW50IGJ1aWxkcy5cblxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IGFyZSBsb2FkaW5nIHRoZSBcIiArIHNlY29uZGFyeUJ1aWxkTmFtZSArIFwiIGJ1aWxkIG9mIFJlYWN0IFJvdXRlciBcIiArIChcIm9uIGEgcGFnZSB0aGF0IGlzIGFscmVhZHkgcnVubmluZyB0aGUgXCIgKyBpbml0aWFsQnVpbGROYW1lICsgXCIgXCIpICsgXCJidWlsZCwgc28gdGhpbmdzIHdvbid0IHdvcmsgcmlnaHQuXCIpO1xuICAgIH1cblxuICAgIGdsb2JhbFtrZXldID0gXCJlc21cIjtcbiAgfVxufVxuXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgd2l0aFJvdXRlciwgY29udGV4dCBhcyBfX1JvdXRlckNvbnRleHQgfTtcbiIsImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSb3V0ZXIsIF9fUm91dGVyQ29udGV4dCwgUm91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuZXhwb3J0ICogZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTG9jYXRpb24gfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBCcm93c2VyUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXJcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5cbnZhciBIYXNoUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEhhc2hSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhhc2hIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSGFzaFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pXG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXG4gKi9cblxuXG52YXIgTGluayA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShMaW5rLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaW5rKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaW5rLnByb3RvdHlwZTtcblxuICBfcHJvdG8uaGFuZGxlQ2xpY2sgPSBmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCwgaGlzdG9yeSkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uQ2xpY2spIHRoaXMucHJvcHMub25DbGljayhldmVudCk7XG5cbiAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAoIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICF0aGlzLnByb3BzLnRhcmdldCB8fCB0aGlzLnByb3BzLnRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHZhciBtZXRob2QgPSB0aGlzLnByb3BzLnJlcGxhY2UgPyBoaXN0b3J5LnJlcGxhY2UgOiBoaXN0b3J5LnB1c2g7XG4gICAgICAgIG1ldGhvZCh0aGlzLnByb3BzLnRvKTtcbiAgICAgIH1cbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBpbm5lclJlZiA9IF90aGlzJHByb3BzLmlubmVyUmVmLFxuICAgICAgICByZXBsYWNlID0gX3RoaXMkcHJvcHMucmVwbGFjZSxcbiAgICAgICAgdG8gPSBfdGhpcyRwcm9wcy50byxcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzLCBbXCJpbm5lclJlZlwiLCBcInJlcGxhY2VcIiwgXCJ0b1wiXSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcblxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX19Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGNvbnRleHQubG9jYXRpb24pIDogdG87XG4gICAgICB2YXIgaHJlZiA9IGxvY2F0aW9uID8gY29udGV4dC5oaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLmhhbmRsZUNsaWNrKGV2ZW50LCBjb250ZXh0Lmhpc3RvcnkpO1xuICAgICAgICB9LFxuICAgICAgICBocmVmOiBocmVmLFxuICAgICAgICByZWY6IGlubmVyUmVmXG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIExpbms7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKTtcbiAgdmFyIGlubmVyUmVmVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGN1cnJlbnQ6IFByb3BUeXBlcy5hbnlcbiAgfSldKTtcbiAgTGluay5wcm9wVHlwZXMgPSB7XG4gICAgaW5uZXJSZWY6IGlubmVyUmVmVHlwZSxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IHRvVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbmZ1bmN0aW9uIE5hdkxpbmsoX3JlZikge1xuICB2YXIgX3JlZiRhcmlhQ3VycmVudCA9IF9yZWZbXCJhcmlhLWN1cnJlbnRcIl0sXG4gICAgICBhcmlhQ3VycmVudCA9IF9yZWYkYXJpYUN1cnJlbnQgPT09IHZvaWQgMCA/IFwicGFnZVwiIDogX3JlZiRhcmlhQ3VycmVudCxcbiAgICAgIF9yZWYkYWN0aXZlQ2xhc3NOYW1lID0gX3JlZi5hY3RpdmVDbGFzc05hbWUsXG4gICAgICBhY3RpdmVDbGFzc05hbWUgPSBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9PT0gdm9pZCAwID8gXCJhY3RpdmVcIiA6IF9yZWYkYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlU3R5bGUgPSBfcmVmLmFjdGl2ZVN0eWxlLFxuICAgICAgY2xhc3NOYW1lUHJvcCA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgZXhhY3QgPSBfcmVmLmV4YWN0LFxuICAgICAgaXNBY3RpdmVQcm9wID0gX3JlZi5pc0FjdGl2ZSxcbiAgICAgIGxvY2F0aW9uID0gX3JlZi5sb2NhdGlvbixcbiAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxuICAgICAgc3R5bGVQcm9wID0gX3JlZi5zdHlsZSxcbiAgICAgIHRvID0gX3JlZi50byxcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJhcmlhLWN1cnJlbnRcIiwgXCJhY3RpdmVDbGFzc05hbWVcIiwgXCJhY3RpdmVTdHlsZVwiLCBcImNsYXNzTmFtZVwiLCBcImV4YWN0XCIsIFwiaXNBY3RpdmVcIiwgXCJsb2NhdGlvblwiLCBcInN0cmljdFwiLCBcInN0eWxlXCIsIFwidG9cIl0pO1xuXG4gIHZhciBwYXRoID0gdHlwZW9mIHRvID09PSBcIm9iamVjdFwiID8gdG8ucGF0aG5hbWUgOiB0bzsgLy8gUmVnZXggdGFrZW4gZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL3BpbGxhcmpzL3BhdGgtdG8tcmVnZXhwL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0wyMDJcblxuICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwge1xuICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgIGV4YWN0OiBleGFjdCxcbiAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgY2hpbGRyZW46IGZ1bmN0aW9uIGNoaWxkcmVuKF9yZWYyKSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfcmVmMi5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaCA9IF9yZWYyLm1hdGNoO1xuICAgICAgdmFyIGlzQWN0aXZlID0gISEoaXNBY3RpdmVQcm9wID8gaXNBY3RpdmVQcm9wKG1hdGNoLCBsb2NhdGlvbikgOiBtYXRjaCk7XG4gICAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcbiAgICAgIHZhciBzdHlsZSA9IGlzQWN0aXZlID8gX2V4dGVuZHMoe30sIHN0eWxlUHJvcCwgYWN0aXZlU3R5bGUpIDogc3R5bGVQcm9wO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgX2V4dGVuZHMoe1xuICAgICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICAgICAgc3R5bGU6IHN0eWxlLFxuICAgICAgICB0bzogdG9cbiAgICAgIH0sIHJlc3QpKTtcbiAgICB9XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFJvdXRlLnByb3BUeXBlcy5leGFjdCxcbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgc3RyaWN0OiBSb3V0ZS5wcm9wVHlwZXMuc3RyaWN0LFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pO1xufVxuXG5leHBvcnQgeyBCcm93c2VyUm91dGVyLCBIYXNoUm91dGVyLCBMaW5rLCBOYXZMaW5rIH07XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbnZhciBwcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBTcGVjaWZ5IHdoZXRoZXIgdGhlIGZlZWRiYWNrIGlzIGZvciB2YWxpZCBvciBpbnZhbGlkIGZpZWxkc1xuICAgKlxuICAgKiBAdHlwZSB7KCd2YWxpZCd8J2ludmFsaWQnKX1cbiAgICovXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgYXM6IFByb3BUeXBlcy5lbGVtZW50VHlwZVxufTtcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIHR5cGU6ICd2YWxpZCdcbn07XG52YXIgRmVlZGJhY2sgPSBSZWFjdC5mb3J3YXJkUmVmKCAvLyBOZWVkIHRvIGRlZmluZSB0aGUgZGVmYXVsdCBcImFzXCIgZHVyaW5nIHByb3AgZGVzdHJ1Y3R1cmluZyB0byBiZSBjb21wYXRpYmxlIHdpdGggc3R5bGVkLWNvbXBvbmVudHMgZ2l0aHViLmNvbS9yZWFjdC1ib290c3RyYXAvcmVhY3QtYm9vdHN0cmFwL2lzc3Vlcy8zNTk1XG5mdW5jdGlvbiAoX3JlZiwgcmVmKSB7XG4gIHZhciBfcmVmJGFzID0gX3JlZi5hcyxcbiAgICAgIENvbXBvbmVudCA9IF9yZWYkYXMgPT09IHZvaWQgMCA/ICdkaXYnIDogX3JlZiRhcyxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgdHlwZSA9IF9yZWYudHlwZSxcbiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXNcIiwgXCJjbGFzc05hbWVcIiwgXCJ0eXBlXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIHJlZjogcmVmLFxuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhjbGFzc05hbWUsIHR5cGUgJiYgdHlwZSArIFwiLWZlZWRiYWNrXCIpXG4gIH0pKTtcbn0pO1xuRmVlZGJhY2suZGlzcGxheU5hbWUgPSAnRmVlZGJhY2snO1xuRmVlZGJhY2sucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuRmVlZGJhY2suZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgRmVlZGJhY2s7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbnZhciBGb3JtQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoe1xuICBjb250cm9sSWQ6IHVuZGVmaW5lZFxufSk7XG5leHBvcnQgZGVmYXVsdCBGb3JtQ29udGV4dDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IGZvcndhcmRSZWYgZnJvbSAnQHJlc3RhcnQvY29udGV4dC9mb3J3YXJkUmVmJztcbmltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xudmFyIFRoZW1lQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobmV3IE1hcCgpKTtcbnZhciBDb25zdW1lciA9IFRoZW1lQ29udGV4dC5Db25zdW1lcixcbiAgICBQcm92aWRlciA9IFRoZW1lQ29udGV4dC5Qcm92aWRlcjtcblxudmFyIFRoZW1lUHJvdmlkZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoVGhlbWVQcm92aWRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVGhlbWVQcm92aWRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5wcmVmaXhlcyA9IG5ldyBNYXAoKTtcbiAgICBPYmplY3Qua2V5cyhfdGhpcy5wcm9wcy5wcmVmaXhlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBfdGhpcy5wcmVmaXhlcy5zZXQoa2V5LCBfdGhpcy5wcm9wcy5wcmVmaXhlc1trZXldKTtcbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gVGhlbWVQcm92aWRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChQcm92aWRlciwge1xuICAgICAgdmFsdWU6IHRoaXMucHJlZml4ZXNcbiAgICB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKTtcbiAgfTtcblxuICByZXR1cm4gVGhlbWVQcm92aWRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUJvb3RzdHJhcFByZWZpeChwcmVmaXgsIGRlZmF1bHRQcmVmaXgpIHtcbiAgdmFyIHByZWZpeGVzID0gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xuICByZXR1cm4gcHJlZml4IHx8IHByZWZpeGVzLmdldChkZWZhdWx0UHJlZml4KSB8fCBkZWZhdWx0UHJlZml4O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVCb290c3RyYXBDb21wb25lbnQoQ29tcG9uZW50LCBvcHRzKSB7XG4gIGlmICh0eXBlb2Ygb3B0cyA9PT0gJ3N0cmluZycpIG9wdHMgPSB7XG4gICAgcHJlZml4OiBvcHRzXG4gIH07XG4gIHZhciBpc0NsYXNzeSA9IENvbXBvbmVudC5wcm90b3R5cGUgJiYgQ29tcG9uZW50LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50OyAvLyBJZiBpdCdzIGEgZnVuY3Rpb25hbCBjb21wb25lbnQgbWFrZSBzdXJlIHdlIGRvbid0IGJyZWFrIGl0IHdpdGggYSByZWZcblxuICB2YXIgX29wdHMgPSBvcHRzLFxuICAgICAgcHJlZml4ID0gX29wdHMucHJlZml4LFxuICAgICAgX29wdHMkZm9yd2FyZFJlZkFzID0gX29wdHMuZm9yd2FyZFJlZkFzLFxuICAgICAgZm9yd2FyZFJlZkFzID0gX29wdHMkZm9yd2FyZFJlZkFzID09PSB2b2lkIDAgPyBpc0NsYXNzeSA/ICdyZWYnIDogJ2lubmVyUmVmJyA6IF9vcHRzJGZvcndhcmRSZWZBcztcbiAgcmV0dXJuIGZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYsIHJlZikge1xuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCBfcmVmKTtcblxuICAgIHByb3BzW2ZvcndhcmRSZWZBc10gPSByZWY7XG4gICAgdmFyIHByZWZpeGVzID0gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvcHJvcC10eXBlc1xuICAgICAgYnNQcmVmaXg6IHByb3BzLmJzUHJlZml4IHx8IHByZWZpeGVzLmdldChwcmVmaXgpIHx8IHByZWZpeFxuICAgIH0pKTtcbiAgfSwge1xuICAgIGRpc3BsYXlOYW1lOiBcIkJvb3RzdHJhcChcIiArIChDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUpICsgXCIpXCJcbiAgfSk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJvb3RzdHJhcENvbXBvbmVudCwgQ29uc3VtZXIgYXMgVGhlbWVDb25zdW1lciB9O1xuZXhwb3J0IGRlZmF1bHQgVGhlbWVQcm92aWRlcjsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IEZlZWRiYWNrIGZyb20gJy4vRmVlZGJhY2snO1xuaW1wb3J0IEZvcm1Db250ZXh0IGZyb20gJy4vRm9ybUNvbnRleHQnO1xuaW1wb3J0IHsgdXNlQm9vdHN0cmFwUHJlZml4IH0gZnJvbSAnLi9UaGVtZVByb3ZpZGVyJztcbnZhciBGb3JtQ29udHJvbCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYsIHJlZikge1xuICB2YXIgYnNQcmVmaXggPSBfcmVmLmJzUHJlZml4LFxuICAgICAgdHlwZSA9IF9yZWYudHlwZSxcbiAgICAgIHNpemUgPSBfcmVmLnNpemUsXG4gICAgICBpZCA9IF9yZWYuaWQsXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGlzVmFsaWQgPSBfcmVmLmlzVmFsaWQsXG4gICAgICBpc0ludmFsaWQgPSBfcmVmLmlzSW52YWxpZCxcbiAgICAgIHBsYWludGV4dCA9IF9yZWYucGxhaW50ZXh0LFxuICAgICAgcmVhZE9ubHkgPSBfcmVmLnJlYWRPbmx5LFxuICAgICAgX3JlZiRhcyA9IF9yZWYuYXMsXG4gICAgICBDb21wb25lbnQgPSBfcmVmJGFzID09PSB2b2lkIDAgPyAnaW5wdXQnIDogX3JlZiRhcyxcbiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYnNQcmVmaXhcIiwgXCJ0eXBlXCIsIFwic2l6ZVwiLCBcImlkXCIsIFwiY2xhc3NOYW1lXCIsIFwiaXNWYWxpZFwiLCBcImlzSW52YWxpZFwiLCBcInBsYWludGV4dFwiLCBcInJlYWRPbmx5XCIsIFwiYXNcIl0pO1xuXG4gIHZhciBfdXNlQ29udGV4dCA9IHVzZUNvbnRleHQoRm9ybUNvbnRleHQpLFxuICAgICAgY29udHJvbElkID0gX3VzZUNvbnRleHQuY29udHJvbElkO1xuXG4gIGJzUHJlZml4ID0gdXNlQm9vdHN0cmFwUHJlZml4KGJzUHJlZml4LCAnZm9ybS1jb250cm9sJyk7XG4gIHZhciBjbGFzc2VzO1xuXG4gIGlmIChwbGFpbnRleHQpIHtcbiAgICB2YXIgX2NsYXNzZXM7XG5cbiAgICBjbGFzc2VzID0gKF9jbGFzc2VzID0ge30sIF9jbGFzc2VzW2JzUHJlZml4ICsgXCItcGxhaW50ZXh0XCJdID0gdHJ1ZSwgX2NsYXNzZXMpO1xuICB9IGVsc2UgaWYgKHR5cGUgPT09ICdmaWxlJykge1xuICAgIHZhciBfY2xhc3NlczI7XG5cbiAgICBjbGFzc2VzID0gKF9jbGFzc2VzMiA9IHt9LCBfY2xhc3NlczJbYnNQcmVmaXggKyBcIi1maWxlXCJdID0gdHJ1ZSwgX2NsYXNzZXMyKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgX2NsYXNzZXMzO1xuXG4gICAgY2xhc3NlcyA9IChfY2xhc3NlczMgPSB7fSwgX2NsYXNzZXMzW2JzUHJlZml4XSA9IHRydWUsIF9jbGFzc2VzM1tic1ByZWZpeCArIFwiLVwiICsgc2l6ZV0gPSBzaXplLCBfY2xhc3NlczMpO1xuICB9XG5cbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjb250cm9sSWQgPT0gbnVsbCB8fCAhaWQsICdgY29udHJvbElkYCBpcyBpZ25vcmVkIG9uIGA8Rm9ybUNvbnRyb2w+YCB3aGVuIGBpZGAgaXMgc3BlY2lmaWVkLicpIDogdm9pZCAwO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIHR5cGU6IHR5cGUsXG4gICAgcmVmOiByZWYsXG4gICAgcmVhZE9ubHk6IHJlYWRPbmx5LFxuICAgIGlkOiBpZCB8fCBjb250cm9sSWQsXG4gICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgY2xhc3NlcywgaXNWYWxpZCAmJiBcImlzLXZhbGlkXCIsIGlzSW52YWxpZCAmJiBcImlzLWludmFsaWRcIilcbiAgfSkpO1xufSk7XG5Gb3JtQ29udHJvbC5kaXNwbGF5TmFtZSA9ICdGb3JtQ29udHJvbCc7XG5Gb3JtQ29udHJvbC5GZWVkYmFjayA9IEZlZWRiYWNrO1xuZXhwb3J0IGRlZmF1bHQgRm9ybUNvbnRyb2w7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRm9ybUNvbnRleHQgZnJvbSAnLi9Gb3JtQ29udGV4dCc7XG5pbXBvcnQgeyB1c2VCb290c3RyYXBQcmVmaXggfSBmcm9tICcuL1RoZW1lUHJvdmlkZXInO1xudmFyIEZvcm1Hcm91cCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYsIHJlZikge1xuICB2YXIgYnNQcmVmaXggPSBfcmVmLmJzUHJlZml4LFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sXG4gICAgICBjb250cm9sSWQgPSBfcmVmLmNvbnRyb2xJZCxcbiAgICAgIF9yZWYkYXMgPSBfcmVmLmFzLFxuICAgICAgQ29tcG9uZW50ID0gX3JlZiRhcyA9PT0gdm9pZCAwID8gJ2RpdicgOiBfcmVmJGFzLFxuICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJic1ByZWZpeFwiLCBcImNsYXNzTmFtZVwiLCBcImNoaWxkcmVuXCIsIFwiY29udHJvbElkXCIsIFwiYXNcIl0pO1xuXG4gIGJzUHJlZml4ID0gdXNlQm9vdHN0cmFwUHJlZml4KGJzUHJlZml4LCAnZm9ybS1ncm91cCcpO1xuICB2YXIgY29udGV4dCA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjb250cm9sSWQ6IGNvbnRyb2xJZFxuICAgIH07XG4gIH0sIFtjb250cm9sSWRdKTtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRm9ybUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogY29udGV4dFxuICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgcmVmOiByZWYsXG4gICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgYnNQcmVmaXgpXG4gIH0pLCBjaGlsZHJlbikpO1xufSk7XG5Gb3JtR3JvdXAuZGlzcGxheU5hbWUgPSAnRm9ybUdyb3VwJztcbmV4cG9ydCBkZWZhdWx0IEZvcm1Hcm91cDsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBGb3JtR3JvdXAsIEZvcm1Db250cm9sIH0gZnJvbSAncmVhY3QtYm9vdHN0cmFwJztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcblxyXG5jbGFzcyBUZXh0SW5wdXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IgKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgICAgICAgIHRleHRWYWx1ZTogcHJvcHMudmFsdWUgPyBwcm9wcy52YWx1ZSA6ICcnXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMub25LZXlQcmVzcyA9IHRoaXMub25LZXlQcmVzcy5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ2hhbmdlIChlKSB7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHRleHRWYWx1ZTogZS52YWx1ZSB9KTtcclxuICAgICAgICAvL3RoaXMucHJvcHMub25DaGFuZ2UoZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25LZXlQcmVzcyAoZSkge1xyXG4gICAgICAgIC8vdGhpcy5wcm9wcy5vbktleVByZXNzKGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlciAoKSB7XHJcbiAgICAgICAgbGV0IHtcclxuICAgICAgICAgICAgbGFiZWwsXHJcbiAgICAgICAgICAgIG1heExlbmd0aCxcclxuICAgICAgICAgICAgbmFtZSxcclxuICAgICAgICAgICAgcGxhY2Vob2xkZXJcclxuICAgICAgICB9ID0gdGhpcy5wcm9wcztcclxuXHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPFN0eWxlZEZvcm1Hcm91cD5cclxuICAgICAgICAgICAgICAgIDxsYWJlbD57bGFiZWx9PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0SW5wdXRcIlxyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9e25hbWV9XHJcbiAgICAgICAgICAgICAgICAgICAgaWQ9e25hbWV9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUudGV4dFZhbHVlfVxyXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cclxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZX1cclxuICAgICAgICAgICAgICAgICAgICBvbktleVByZXNzPXt0aGlzLm9uS2V5UHJlc3N9XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4TGVuZ3RoPXttYXhMZW5ndGh9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L1N0eWxlZEZvcm1Hcm91cD5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcbk9iamVjdC5hc3NpZ24oVGV4dElucHV0LCB7XHJcbiAgICBwcm9wVHlwZXM6IHtcclxuICAgICAgICBtYXhMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgICAgICAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgICAgICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICAgICAgbGFiZWw6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICAgICAgcGxhY2Vob2xkZXI6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICAgICAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmdcclxuICAgIH0sXHJcbiAgICBkZWZhdWx0UHJvcHM6IHtcclxuICAgICAgICBtYXhMZW5ndGg6IDEwMCxcclxuICAgICAgICBwbGFjZWhvbGRlcjogJycsXHJcbiAgICAgICAgdmFsdWU6ICcnLFxyXG4gICAgICAgIGxhYmVsOiAnJ1xyXG4gICAgfVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRleHRJbnB1dDtcclxuXHJcbmNvbnN0IFN0eWxlZEZvcm1Hcm91cCA9IHN0eWxlZChGb3JtR3JvdXApYFxyXG4gICAgJiYmIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEyMDBweDtcclxuICAgICAgICBtYXJnaW46IDE1cHggYXV0bztcclxuICAgICAgICBsYWJlbCB7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpbnB1dFt0eXBlPSd0ZXh0J10ge1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjODE4NThiO1xyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiA0NXB4O1xyXG4gICAgICAgICAgICAmOmZvY3VzIHtcclxuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICM4MTg1OGIgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gICBcclxuICAgIH0gXHJcbmA7XHJcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2FtZWxpemUgZnJvbSAnZG9tLWhlbHBlcnMvdXRpbC9jYW1lbGl6ZSc7XG5pbXBvcnQgeyB1c2VCb290c3RyYXBQcmVmaXggfSBmcm9tICcuLi9UaGVtZVByb3ZpZGVyJztcblxudmFyIHBhc2NhbENhc2UgPSBmdW5jdGlvbiBwYXNjYWxDYXNlKHN0cikge1xuICByZXR1cm4gc3RyWzBdLnRvVXBwZXJDYXNlKCkgKyBjYW1lbGl6ZShzdHIpLnNsaWNlKDEpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlV2l0aEJzUHJlZml4KHByZWZpeCwgX3RlbXApIHtcbiAgdmFyIF9yZWYgPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcCxcbiAgICAgIF9yZWYkZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lLFxuICAgICAgZGlzcGxheU5hbWUgPSBfcmVmJGRpc3BsYXlOYW1lID09PSB2b2lkIDAgPyBwYXNjYWxDYXNlKHByZWZpeCkgOiBfcmVmJGRpc3BsYXlOYW1lLFxuICAgICAgX3JlZiRDb21wb25lbnQgPSBfcmVmLkNvbXBvbmVudCxcbiAgICAgIENvbXBvbmVudCA9IF9yZWYkQ29tcG9uZW50ID09PSB2b2lkIDAgPyAnZGl2JyA6IF9yZWYkQ29tcG9uZW50LFxuICAgICAgZGVmYXVsdFByb3BzID0gX3JlZi5kZWZhdWx0UHJvcHM7XG5cbiAgdmFyIEJzQ29tcG9uZW50ID0gUmVhY3QuZm9yd2FyZFJlZiggLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbiAgZnVuY3Rpb24gKF9yZWYyLCByZWYpIHtcbiAgICB2YXIgY2xhc3NOYW1lID0gX3JlZjIuY2xhc3NOYW1lLFxuICAgICAgICBic1ByZWZpeCA9IF9yZWYyLmJzUHJlZml4LFxuICAgICAgICBfcmVmMiRhcyA9IF9yZWYyLmFzLFxuICAgICAgICBUYWcgPSBfcmVmMiRhcyA9PT0gdm9pZCAwID8gQ29tcG9uZW50IDogX3JlZjIkYXMsXG4gICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImNsYXNzTmFtZVwiLCBcImJzUHJlZml4XCIsIFwiYXNcIl0pO1xuXG4gICAgdmFyIHJlc29sdmVkUHJlZml4ID0gdXNlQm9vdHN0cmFwUHJlZml4KGJzUHJlZml4LCBwcmVmaXgpO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe1xuICAgICAgcmVmOiByZWYsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMoY2xhc3NOYW1lLCByZXNvbHZlZFByZWZpeClcbiAgICB9LCBwcm9wcykpO1xuICB9KTtcbiAgQnNDb21wb25lbnQuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuICBCc0NvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICByZXR1cm4gQnNDb21wb25lbnQ7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUJvb3RzdHJhcFByZWZpeCB9IGZyb20gJy4vVGhlbWVQcm92aWRlcic7XG52YXIgTmF2YmFyQnJhbmQgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCByZWYpIHtcbiAgdmFyIGJzUHJlZml4ID0gX3JlZi5ic1ByZWZpeCxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgYXMgPSBfcmVmLmFzLFxuICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJic1ByZWZpeFwiLCBcImNsYXNzTmFtZVwiLCBcImFzXCJdKTtcblxuICBic1ByZWZpeCA9IHVzZUJvb3RzdHJhcFByZWZpeChic1ByZWZpeCwgJ25hdmJhci1icmFuZCcpO1xuICB2YXIgQ29tcG9uZW50ID0gYXMgfHwgKHByb3BzLmhyZWYgPyAnYScgOiAnc3BhbicpO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIHJlZjogcmVmLFxuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhjbGFzc05hbWUsIGJzUHJlZml4KVxuICB9KSk7XG59KTtcbk5hdmJhckJyYW5kLmRpc3BsYXlOYW1lID0gJ05hdmJhckJyYW5kJztcbmV4cG9ydCBkZWZhdWx0IE5hdmJhckJyYW5kOyIsImV4cG9ydCBkZWZhdWx0IHtcbiAgZGlzYWJsZWQ6IGZhbHNlXG59OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5leHBvcnQgZGVmYXVsdCBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpOyIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgKiBhcyBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnJztcbmltcG9ydCB7IHRpbWVvdXRzU2hhcGUgfSBmcm9tICcuL3V0aWxzL1Byb3BUeXBlcyc7XG5pbXBvcnQgVHJhbnNpdGlvbkdyb3VwQ29udGV4dCBmcm9tICcuL1RyYW5zaXRpb25Hcm91cENvbnRleHQnO1xuZXhwb3J0IHZhciBVTk1PVU5URUQgPSAndW5tb3VudGVkJztcbmV4cG9ydCB2YXIgRVhJVEVEID0gJ2V4aXRlZCc7XG5leHBvcnQgdmFyIEVOVEVSSU5HID0gJ2VudGVyaW5nJztcbmV4cG9ydCB2YXIgRU5URVJFRCA9ICdlbnRlcmVkJztcbmV4cG9ydCB2YXIgRVhJVElORyA9ICdleGl0aW5nJztcbi8qKlxuICogVGhlIFRyYW5zaXRpb24gY29tcG9uZW50IGxldHMgeW91IGRlc2NyaWJlIGEgdHJhbnNpdGlvbiBmcm9tIG9uZSBjb21wb25lbnRcbiAqIHN0YXRlIHRvIGFub3RoZXIgX292ZXIgdGltZV8gd2l0aCBhIHNpbXBsZSBkZWNsYXJhdGl2ZSBBUEkuIE1vc3QgY29tbW9ubHlcbiAqIGl0J3MgdXNlZCB0byBhbmltYXRlIHRoZSBtb3VudGluZyBhbmQgdW5tb3VudGluZyBvZiBhIGNvbXBvbmVudCwgYnV0IGNhbiBhbHNvXG4gKiBiZSB1c2VkIHRvIGRlc2NyaWJlIGluLXBsYWNlIHRyYW5zaXRpb24gc3RhdGVzIGFzIHdlbGwuXG4gKlxuICogLS0tXG4gKlxuICogKipOb3RlKio6IGBUcmFuc2l0aW9uYCBpcyBhIHBsYXRmb3JtLWFnbm9zdGljIGJhc2UgY29tcG9uZW50LiBJZiB5b3UncmUgdXNpbmdcbiAqIHRyYW5zaXRpb25zIGluIENTUywgeW91J2xsIHByb2JhYmx5IHdhbnQgdG8gdXNlXG4gKiBbYENTU1RyYW5zaXRpb25gXShodHRwczovL3JlYWN0Y29tbXVuaXR5Lm9yZy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL2Nzcy10cmFuc2l0aW9uKVxuICogaW5zdGVhZC4gSXQgaW5oZXJpdHMgYWxsIHRoZSBmZWF0dXJlcyBvZiBgVHJhbnNpdGlvbmAsIGJ1dCBjb250YWluc1xuICogYWRkaXRpb25hbCBmZWF0dXJlcyBuZWNlc3NhcnkgdG8gcGxheSBuaWNlIHdpdGggQ1NTIHRyYW5zaXRpb25zIChoZW5jZSB0aGVcbiAqIG5hbWUgb2YgdGhlIGNvbXBvbmVudCkuXG4gKlxuICogLS0tXG4gKlxuICogQnkgZGVmYXVsdCB0aGUgYFRyYW5zaXRpb25gIGNvbXBvbmVudCBkb2VzIG5vdCBhbHRlciB0aGUgYmVoYXZpb3Igb2YgdGhlXG4gKiBjb21wb25lbnQgaXQgcmVuZGVycywgaXQgb25seSB0cmFja3MgXCJlbnRlclwiIGFuZCBcImV4aXRcIiBzdGF0ZXMgZm9yIHRoZVxuICogY29tcG9uZW50cy4gSXQncyB1cCB0byB5b3UgdG8gZ2l2ZSBtZWFuaW5nIGFuZCBlZmZlY3QgdG8gdGhvc2Ugc3RhdGVzLiBGb3JcbiAqIGV4YW1wbGUgd2UgY2FuIGFkZCBzdHlsZXMgdG8gYSBjb21wb25lbnQgd2hlbiBpdCBlbnRlcnMgb3IgZXhpdHM6XG4gKlxuICogYGBganN4XG4gKiBpbXBvcnQgeyBUcmFuc2l0aW9uIH0gZnJvbSAncmVhY3QtdHJhbnNpdGlvbi1ncm91cCc7XG4gKlxuICogY29uc3QgZHVyYXRpb24gPSAzMDA7XG4gKlxuICogY29uc3QgZGVmYXVsdFN0eWxlID0ge1xuICogICB0cmFuc2l0aW9uOiBgb3BhY2l0eSAke2R1cmF0aW9ufW1zIGVhc2UtaW4tb3V0YCxcbiAqICAgb3BhY2l0eTogMCxcbiAqIH1cbiAqXG4gKiBjb25zdCB0cmFuc2l0aW9uU3R5bGVzID0ge1xuICogICBlbnRlcmluZzogeyBvcGFjaXR5OiAxIH0sXG4gKiAgIGVudGVyZWQ6ICB7IG9wYWNpdHk6IDEgfSxcbiAqICAgZXhpdGluZzogIHsgb3BhY2l0eTogMCB9LFxuICogICBleGl0ZWQ6ICB7IG9wYWNpdHk6IDAgfSxcbiAqIH07XG4gKlxuICogY29uc3QgRmFkZSA9ICh7IGluOiBpblByb3AgfSkgPT4gKFxuICogICA8VHJhbnNpdGlvbiBpbj17aW5Qcm9wfSB0aW1lb3V0PXtkdXJhdGlvbn0+XG4gKiAgICAge3N0YXRlID0+IChcbiAqICAgICAgIDxkaXYgc3R5bGU9e3tcbiAqICAgICAgICAgLi4uZGVmYXVsdFN0eWxlLFxuICogICAgICAgICAuLi50cmFuc2l0aW9uU3R5bGVzW3N0YXRlXVxuICogICAgICAgfX0+XG4gKiAgICAgICAgIEknbSBhIGZhZGUgVHJhbnNpdGlvbiFcbiAqICAgICAgIDwvZGl2PlxuICogICAgICl9XG4gKiAgIDwvVHJhbnNpdGlvbj5cbiAqICk7XG4gKiBgYGBcbiAqXG4gKiBUaGVyZSBhcmUgNCBtYWluIHN0YXRlcyBhIFRyYW5zaXRpb24gY2FuIGJlIGluOlxuICogIC0gYCdlbnRlcmluZydgXG4gKiAgLSBgJ2VudGVyZWQnYFxuICogIC0gYCdleGl0aW5nJ2BcbiAqICAtIGAnZXhpdGVkJ2BcbiAqXG4gKiBUcmFuc2l0aW9uIHN0YXRlIGlzIHRvZ2dsZWQgdmlhIHRoZSBgaW5gIHByb3AuIFdoZW4gYHRydWVgIHRoZSBjb21wb25lbnRcbiAqIGJlZ2lucyB0aGUgXCJFbnRlclwiIHN0YWdlLiBEdXJpbmcgdGhpcyBzdGFnZSwgdGhlIGNvbXBvbmVudCB3aWxsIHNoaWZ0IGZyb21cbiAqIGl0cyBjdXJyZW50IHRyYW5zaXRpb24gc3RhdGUsIHRvIGAnZW50ZXJpbmcnYCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZVxuICogdHJhbnNpdGlvbiBhbmQgdGhlbiB0byB0aGUgYCdlbnRlcmVkJ2Agc3RhZ2Ugb25jZSBpdCdzIGNvbXBsZXRlLiBMZXQncyB0YWtlXG4gKiB0aGUgZm9sbG93aW5nIGV4YW1wbGUgKHdlJ2xsIHVzZSB0aGVcbiAqIFt1c2VTdGF0ZV0oaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2hvb2tzLXJlZmVyZW5jZS5odG1sI3VzZXN0YXRlKSBob29rKTpcbiAqXG4gKiBgYGBqc3hcbiAqIGZ1bmN0aW9uIEFwcCgpIHtcbiAqICAgY29uc3QgW2luUHJvcCwgc2V0SW5Qcm9wXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAqICAgcmV0dXJuIChcbiAqICAgICA8ZGl2PlxuICogICAgICAgPFRyYW5zaXRpb24gaW49e2luUHJvcH0gdGltZW91dD17NTAwfT5cbiAqICAgICAgICAge3N0YXRlID0+IChcbiAqICAgICAgICAgICAvLyAuLi5cbiAqICAgICAgICAgKX1cbiAqICAgICAgIDwvVHJhbnNpdGlvbj5cbiAqICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gc2V0SW5Qcm9wKHRydWUpfT5cbiAqICAgICAgICAgQ2xpY2sgdG8gRW50ZXJcbiAqICAgICAgIDwvYnV0dG9uPlxuICogICAgIDwvZGl2PlxuICogICApO1xuICogfVxuICogYGBgXG4gKlxuICogV2hlbiB0aGUgYnV0dG9uIGlzIGNsaWNrZWQgdGhlIGNvbXBvbmVudCB3aWxsIHNoaWZ0IHRvIHRoZSBgJ2VudGVyaW5nJ2Agc3RhdGVcbiAqIGFuZCBzdGF5IHRoZXJlIGZvciA1MDBtcyAodGhlIHZhbHVlIG9mIGB0aW1lb3V0YCkgYmVmb3JlIGl0IGZpbmFsbHkgc3dpdGNoZXNcbiAqIHRvIGAnZW50ZXJlZCdgLlxuICpcbiAqIFdoZW4gYGluYCBpcyBgZmFsc2VgIHRoZSBzYW1lIHRoaW5nIGhhcHBlbnMgZXhjZXB0IHRoZSBzdGF0ZSBtb3ZlcyBmcm9tXG4gKiBgJ2V4aXRpbmcnYCB0byBgJ2V4aXRlZCdgLlxuICovXG5cbnZhciBUcmFuc2l0aW9uID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFRyYW5zaXRpb24sIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFRyYW5zaXRpb24ocHJvcHMsIGNvbnRleHQpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcywgY29udGV4dCkgfHwgdGhpcztcbiAgICB2YXIgcGFyZW50R3JvdXAgPSBjb250ZXh0OyAvLyBJbiB0aGUgY29udGV4dCBvZiBhIFRyYW5zaXRpb25Hcm91cCBhbGwgZW50ZXJzIGFyZSByZWFsbHkgYXBwZWFyc1xuXG4gICAgdmFyIGFwcGVhciA9IHBhcmVudEdyb3VwICYmICFwYXJlbnRHcm91cC5pc01vdW50aW5nID8gcHJvcHMuZW50ZXIgOiBwcm9wcy5hcHBlYXI7XG4gICAgdmFyIGluaXRpYWxTdGF0dXM7XG4gICAgX3RoaXMuYXBwZWFyU3RhdHVzID0gbnVsbDtcblxuICAgIGlmIChwcm9wcy5pbikge1xuICAgICAgaWYgKGFwcGVhcikge1xuICAgICAgICBpbml0aWFsU3RhdHVzID0gRVhJVEVEO1xuICAgICAgICBfdGhpcy5hcHBlYXJTdGF0dXMgPSBFTlRFUklORztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGluaXRpYWxTdGF0dXMgPSBFTlRFUkVEO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocHJvcHMudW5tb3VudE9uRXhpdCB8fCBwcm9wcy5tb3VudE9uRW50ZXIpIHtcbiAgICAgICAgaW5pdGlhbFN0YXR1cyA9IFVOTU9VTlRFRDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGluaXRpYWxTdGF0dXMgPSBFWElURUQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBzdGF0dXM6IGluaXRpYWxTdGF0dXNcbiAgICB9O1xuICAgIF90aGlzLm5leHRDYWxsYmFjayA9IG51bGw7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgVHJhbnNpdGlvbi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMgPSBmdW5jdGlvbiBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMoX3JlZiwgcHJldlN0YXRlKSB7XG4gICAgdmFyIG5leHRJbiA9IF9yZWYuaW47XG5cbiAgICBpZiAobmV4dEluICYmIHByZXZTdGF0ZS5zdGF0dXMgPT09IFVOTU9VTlRFRCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzOiBFWElURURcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07IC8vIGdldFNuYXBzaG90QmVmb3JlVXBkYXRlKHByZXZQcm9wcykge1xuICAvLyAgIGxldCBuZXh0U3RhdHVzID0gbnVsbFxuICAvLyAgIGlmIChwcmV2UHJvcHMgIT09IHRoaXMucHJvcHMpIHtcbiAgLy8gICAgIGNvbnN0IHsgc3RhdHVzIH0gPSB0aGlzLnN0YXRlXG4gIC8vICAgICBpZiAodGhpcy5wcm9wcy5pbikge1xuICAvLyAgICAgICBpZiAoc3RhdHVzICE9PSBFTlRFUklORyAmJiBzdGF0dXMgIT09IEVOVEVSRUQpIHtcbiAgLy8gICAgICAgICBuZXh0U3RhdHVzID0gRU5URVJJTkdcbiAgLy8gICAgICAgfVxuICAvLyAgICAgfSBlbHNlIHtcbiAgLy8gICAgICAgaWYgKHN0YXR1cyA9PT0gRU5URVJJTkcgfHwgc3RhdHVzID09PSBFTlRFUkVEKSB7XG4gIC8vICAgICAgICAgbmV4dFN0YXR1cyA9IEVYSVRJTkdcbiAgLy8gICAgICAgfVxuICAvLyAgICAgfVxuICAvLyAgIH1cbiAgLy8gICByZXR1cm4geyBuZXh0U3RhdHVzIH1cbiAgLy8gfVxuXG5cbiAgdmFyIF9wcm90byA9IFRyYW5zaXRpb24ucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMudXBkYXRlU3RhdHVzKHRydWUsIHRoaXMuYXBwZWFyU3RhdHVzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIHZhciBuZXh0U3RhdHVzID0gbnVsbDtcblxuICAgIGlmIChwcmV2UHJvcHMgIT09IHRoaXMucHJvcHMpIHtcbiAgICAgIHZhciBzdGF0dXMgPSB0aGlzLnN0YXRlLnN0YXR1cztcblxuICAgICAgaWYgKHRoaXMucHJvcHMuaW4pIHtcbiAgICAgICAgaWYgKHN0YXR1cyAhPT0gRU5URVJJTkcgJiYgc3RhdHVzICE9PSBFTlRFUkVEKSB7XG4gICAgICAgICAgbmV4dFN0YXR1cyA9IEVOVEVSSU5HO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoc3RhdHVzID09PSBFTlRFUklORyB8fCBzdGF0dXMgPT09IEVOVEVSRUQpIHtcbiAgICAgICAgICBuZXh0U3RhdHVzID0gRVhJVElORztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMudXBkYXRlU3RhdHVzKGZhbHNlLCBuZXh0U3RhdHVzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLmNhbmNlbE5leHRDYWxsYmFjaygpO1xuICB9O1xuXG4gIF9wcm90by5nZXRUaW1lb3V0cyA9IGZ1bmN0aW9uIGdldFRpbWVvdXRzKCkge1xuICAgIHZhciB0aW1lb3V0ID0gdGhpcy5wcm9wcy50aW1lb3V0O1xuICAgIHZhciBleGl0LCBlbnRlciwgYXBwZWFyO1xuICAgIGV4aXQgPSBlbnRlciA9IGFwcGVhciA9IHRpbWVvdXQ7XG5cbiAgICBpZiAodGltZW91dCAhPSBudWxsICYmIHR5cGVvZiB0aW1lb3V0ICE9PSAnbnVtYmVyJykge1xuICAgICAgZXhpdCA9IHRpbWVvdXQuZXhpdDtcbiAgICAgIGVudGVyID0gdGltZW91dC5lbnRlcjsgLy8gVE9ETzogcmVtb3ZlIGZhbGxiYWNrIGZvciBuZXh0IG1ham9yXG5cbiAgICAgIGFwcGVhciA9IHRpbWVvdXQuYXBwZWFyICE9PSB1bmRlZmluZWQgPyB0aW1lb3V0LmFwcGVhciA6IGVudGVyO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBleGl0OiBleGl0LFxuICAgICAgZW50ZXI6IGVudGVyLFxuICAgICAgYXBwZWFyOiBhcHBlYXJcbiAgICB9O1xuICB9O1xuXG4gIF9wcm90by51cGRhdGVTdGF0dXMgPSBmdW5jdGlvbiB1cGRhdGVTdGF0dXMobW91bnRpbmcsIG5leHRTdGF0dXMpIHtcbiAgICBpZiAobW91bnRpbmcgPT09IHZvaWQgMCkge1xuICAgICAgbW91bnRpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAobmV4dFN0YXR1cyAhPT0gbnVsbCkge1xuICAgICAgLy8gbmV4dFN0YXR1cyB3aWxsIGFsd2F5cyBiZSBFTlRFUklORyBvciBFWElUSU5HLlxuICAgICAgdGhpcy5jYW5jZWxOZXh0Q2FsbGJhY2soKTtcbiAgICAgIHZhciBub2RlID0gUmVhY3RET00uZmluZERPTU5vZGUodGhpcyk7XG5cbiAgICAgIGlmIChuZXh0U3RhdHVzID09PSBFTlRFUklORykge1xuICAgICAgICB0aGlzLnBlcmZvcm1FbnRlcihub2RlLCBtb3VudGluZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnBlcmZvcm1FeGl0KG5vZGUpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodGhpcy5wcm9wcy51bm1vdW50T25FeGl0ICYmIHRoaXMuc3RhdGUuc3RhdHVzID09PSBFWElURUQpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzdGF0dXM6IFVOTU9VTlRFRFxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5wZXJmb3JtRW50ZXIgPSBmdW5jdGlvbiBwZXJmb3JtRW50ZXIobm9kZSwgbW91bnRpbmcpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBlbnRlciA9IHRoaXMucHJvcHMuZW50ZXI7XG4gICAgdmFyIGFwcGVhcmluZyA9IHRoaXMuY29udGV4dCA/IHRoaXMuY29udGV4dC5pc01vdW50aW5nIDogbW91bnRpbmc7XG4gICAgdmFyIHRpbWVvdXRzID0gdGhpcy5nZXRUaW1lb3V0cygpO1xuICAgIHZhciBlbnRlclRpbWVvdXQgPSBhcHBlYXJpbmcgPyB0aW1lb3V0cy5hcHBlYXIgOiB0aW1lb3V0cy5lbnRlcjsgLy8gbm8gZW50ZXIgYW5pbWF0aW9uIHNraXAgcmlnaHQgdG8gRU5URVJFRFxuICAgIC8vIGlmIHdlIGFyZSBtb3VudGluZyBhbmQgcnVubmluZyB0aGlzIGl0IG1lYW5zIGFwcGVhciBfbXVzdF8gYmUgc2V0XG5cbiAgICBpZiAoIW1vdW50aW5nICYmICFlbnRlciB8fCBjb25maWcuZGlzYWJsZWQpIHtcbiAgICAgIHRoaXMuc2FmZVNldFN0YXRlKHtcbiAgICAgICAgc3RhdHVzOiBFTlRFUkVEXG4gICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMi5wcm9wcy5vbkVudGVyZWQobm9kZSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnByb3BzLm9uRW50ZXIobm9kZSwgYXBwZWFyaW5nKTtcbiAgICB0aGlzLnNhZmVTZXRTdGF0ZSh7XG4gICAgICBzdGF0dXM6IEVOVEVSSU5HXG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMyLnByb3BzLm9uRW50ZXJpbmcobm9kZSwgYXBwZWFyaW5nKTtcblxuICAgICAgX3RoaXMyLm9uVHJhbnNpdGlvbkVuZChub2RlLCBlbnRlclRpbWVvdXQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLnNhZmVTZXRTdGF0ZSh7XG4gICAgICAgICAgc3RhdHVzOiBFTlRFUkVEXG4gICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpczIucHJvcHMub25FbnRlcmVkKG5vZGUsIGFwcGVhcmluZyk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLnBlcmZvcm1FeGl0ID0gZnVuY3Rpb24gcGVyZm9ybUV4aXQobm9kZSkge1xuICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgdmFyIGV4aXQgPSB0aGlzLnByb3BzLmV4aXQ7XG4gICAgdmFyIHRpbWVvdXRzID0gdGhpcy5nZXRUaW1lb3V0cygpOyAvLyBubyBleGl0IGFuaW1hdGlvbiBza2lwIHJpZ2h0IHRvIEVYSVRFRFxuXG4gICAgaWYgKCFleGl0IHx8IGNvbmZpZy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5zYWZlU2V0U3RhdGUoe1xuICAgICAgICBzdGF0dXM6IEVYSVRFRFxuICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczMucHJvcHMub25FeGl0ZWQobm9kZSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnByb3BzLm9uRXhpdChub2RlKTtcbiAgICB0aGlzLnNhZmVTZXRTdGF0ZSh7XG4gICAgICBzdGF0dXM6IEVYSVRJTkdcbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpczMucHJvcHMub25FeGl0aW5nKG5vZGUpO1xuXG4gICAgICBfdGhpczMub25UcmFuc2l0aW9uRW5kKG5vZGUsIHRpbWVvdXRzLmV4aXQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMzLnNhZmVTZXRTdGF0ZSh7XG4gICAgICAgICAgc3RhdHVzOiBFWElURURcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzMy5wcm9wcy5vbkV4aXRlZChub2RlKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBfcHJvdG8uY2FuY2VsTmV4dENhbGxiYWNrID0gZnVuY3Rpb24gY2FuY2VsTmV4dENhbGxiYWNrKCkge1xuICAgIGlmICh0aGlzLm5leHRDYWxsYmFjayAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5uZXh0Q2FsbGJhY2suY2FuY2VsKCk7XG4gICAgICB0aGlzLm5leHRDYWxsYmFjayA9IG51bGw7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5zYWZlU2V0U3RhdGUgPSBmdW5jdGlvbiBzYWZlU2V0U3RhdGUobmV4dFN0YXRlLCBjYWxsYmFjaykge1xuICAgIC8vIFRoaXMgc2hvdWxkbid0IGJlIG5lY2Vzc2FyeSwgYnV0IHRoZXJlIGFyZSB3ZWlyZCByYWNlIGNvbmRpdGlvbnMgd2l0aFxuICAgIC8vIHNldFN0YXRlIGNhbGxiYWNrcyBhbmQgdW5tb3VudGluZyBpbiB0ZXN0aW5nLCBzbyBhbHdheXMgbWFrZSBzdXJlIHRoYXRcbiAgICAvLyB3ZSBjYW4gY2FuY2VsIGFueSBwZW5kaW5nIHNldFN0YXRlIGNhbGxiYWNrcyBhZnRlciB3ZSB1bm1vdW50LlxuICAgIGNhbGxiYWNrID0gdGhpcy5zZXROZXh0Q2FsbGJhY2soY2FsbGJhY2spO1xuICAgIHRoaXMuc2V0U3RhdGUobmV4dFN0YXRlLCBjYWxsYmFjayk7XG4gIH07XG5cbiAgX3Byb3RvLnNldE5leHRDYWxsYmFjayA9IGZ1bmN0aW9uIHNldE5leHRDYWxsYmFjayhjYWxsYmFjaykge1xuICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgdmFyIGFjdGl2ZSA9IHRydWU7XG5cbiAgICB0aGlzLm5leHRDYWxsYmFjayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKGFjdGl2ZSkge1xuICAgICAgICBhY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgX3RoaXM0Lm5leHRDYWxsYmFjayA9IG51bGw7XG4gICAgICAgIGNhbGxiYWNrKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy5uZXh0Q2FsbGJhY2suY2FuY2VsID0gZnVuY3Rpb24gKCkge1xuICAgICAgYWN0aXZlID0gZmFsc2U7XG4gICAgfTtcblxuICAgIHJldHVybiB0aGlzLm5leHRDYWxsYmFjaztcbiAgfTtcblxuICBfcHJvdG8ub25UcmFuc2l0aW9uRW5kID0gZnVuY3Rpb24gb25UcmFuc2l0aW9uRW5kKG5vZGUsIHRpbWVvdXQsIGhhbmRsZXIpIHtcbiAgICB0aGlzLnNldE5leHRDYWxsYmFjayhoYW5kbGVyKTtcbiAgICB2YXIgZG9lc05vdEhhdmVUaW1lb3V0T3JMaXN0ZW5lciA9IHRpbWVvdXQgPT0gbnVsbCAmJiAhdGhpcy5wcm9wcy5hZGRFbmRMaXN0ZW5lcjtcblxuICAgIGlmICghbm9kZSB8fCBkb2VzTm90SGF2ZVRpbWVvdXRPckxpc3RlbmVyKSB7XG4gICAgICBzZXRUaW1lb3V0KHRoaXMubmV4dENhbGxiYWNrLCAwKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy5hZGRFbmRMaXN0ZW5lcikge1xuICAgICAgdGhpcy5wcm9wcy5hZGRFbmRMaXN0ZW5lcihub2RlLCB0aGlzLm5leHRDYWxsYmFjayk7XG4gICAgfVxuXG4gICAgaWYgKHRpbWVvdXQgIT0gbnVsbCkge1xuICAgICAgc2V0VGltZW91dCh0aGlzLm5leHRDYWxsYmFjaywgdGltZW91dCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIHN0YXR1cyA9IHRoaXMuc3RhdGUuc3RhdHVzO1xuXG4gICAgaWYgKHN0YXR1cyA9PT0gVU5NT1VOVEVEKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICBjaGlsZFByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcImNoaWxkcmVuXCJdKTsgLy8gZmlsdGVyIHByb3BzIGZvciBUcmFuc3RpdGlvblxuXG5cbiAgICBkZWxldGUgY2hpbGRQcm9wcy5pbjtcbiAgICBkZWxldGUgY2hpbGRQcm9wcy5tb3VudE9uRW50ZXI7XG4gICAgZGVsZXRlIGNoaWxkUHJvcHMudW5tb3VudE9uRXhpdDtcbiAgICBkZWxldGUgY2hpbGRQcm9wcy5hcHBlYXI7XG4gICAgZGVsZXRlIGNoaWxkUHJvcHMuZW50ZXI7XG4gICAgZGVsZXRlIGNoaWxkUHJvcHMuZXhpdDtcbiAgICBkZWxldGUgY2hpbGRQcm9wcy50aW1lb3V0O1xuICAgIGRlbGV0ZSBjaGlsZFByb3BzLmFkZEVuZExpc3RlbmVyO1xuICAgIGRlbGV0ZSBjaGlsZFByb3BzLm9uRW50ZXI7XG4gICAgZGVsZXRlIGNoaWxkUHJvcHMub25FbnRlcmluZztcbiAgICBkZWxldGUgY2hpbGRQcm9wcy5vbkVudGVyZWQ7XG4gICAgZGVsZXRlIGNoaWxkUHJvcHMub25FeGl0O1xuICAgIGRlbGV0ZSBjaGlsZFByb3BzLm9uRXhpdGluZztcbiAgICBkZWxldGUgY2hpbGRQcm9wcy5vbkV4aXRlZDtcblxuICAgIGlmICh0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIC8vIGFsbG93cyBmb3IgbmVzdGVkIFRyYW5zaXRpb25zXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2l0aW9uR3JvdXBDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBudWxsXG4gICAgICB9LCBjaGlsZHJlbihzdGF0dXMsIGNoaWxkUHJvcHMpKTtcbiAgICB9XG5cbiAgICB2YXIgY2hpbGQgPSBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKTtcbiAgICByZXR1cm4gKC8vIGFsbG93cyBmb3IgbmVzdGVkIFRyYW5zaXRpb25zXG4gICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRyYW5zaXRpb25Hcm91cENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IG51bGxcbiAgICAgIH0sIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZCwgY2hpbGRQcm9wcykpXG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gVHJhbnNpdGlvbjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuVHJhbnNpdGlvbi5jb250ZXh0VHlwZSA9IFRyYW5zaXRpb25Hcm91cENvbnRleHQ7XG5UcmFuc2l0aW9uLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHtcbiAgLyoqXG4gICAqIEEgYGZ1bmN0aW9uYCBjaGlsZCBjYW4gYmUgdXNlZCBpbnN0ZWFkIG9mIGEgUmVhY3QgZWxlbWVudC4gVGhpcyBmdW5jdGlvbiBpc1xuICAgKiBjYWxsZWQgd2l0aCB0aGUgY3VycmVudCB0cmFuc2l0aW9uIHN0YXR1cyAoYCdlbnRlcmluZydgLCBgJ2VudGVyZWQnYCxcbiAgICogYCdleGl0aW5nJ2AsIGAnZXhpdGVkJ2ApLCB3aGljaCBjYW4gYmUgdXNlZCB0byBhcHBseSBjb250ZXh0XG4gICAqIHNwZWNpZmljIHByb3BzIHRvIGEgY29tcG9uZW50LlxuICAgKlxuICAgKiBgYGBqc3hcbiAgICogPFRyYW5zaXRpb24gaW49e3RoaXMuc3RhdGUuaW59IHRpbWVvdXQ9ezE1MH0+XG4gICAqICAge3N0YXRlID0+IChcbiAgICogICAgIDxNeUNvbXBvbmVudCBjbGFzc05hbWU9e2BmYWRlIGZhZGUtJHtzdGF0ZX1gfSAvPlxuICAgKiAgICl9XG4gICAqIDwvVHJhbnNpdGlvbj5cbiAgICogYGBgXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCwgUHJvcFR5cGVzLmVsZW1lbnQuaXNSZXF1aXJlZF0pLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIFNob3cgdGhlIGNvbXBvbmVudDsgdHJpZ2dlcnMgdGhlIGVudGVyIG9yIGV4aXQgc3RhdGVzXG4gICAqL1xuICBpbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEJ5IGRlZmF1bHQgdGhlIGNoaWxkIGNvbXBvbmVudCBpcyBtb3VudGVkIGltbWVkaWF0ZWx5IGFsb25nIHdpdGhcbiAgICogdGhlIHBhcmVudCBgVHJhbnNpdGlvbmAgY29tcG9uZW50LiBJZiB5b3Ugd2FudCB0byBcImxhenkgbW91bnRcIiB0aGUgY29tcG9uZW50IG9uIHRoZVxuICAgKiBmaXJzdCBgaW49e3RydWV9YCB5b3UgY2FuIHNldCBgbW91bnRPbkVudGVyYC4gQWZ0ZXIgdGhlIGZpcnN0IGVudGVyIHRyYW5zaXRpb24gdGhlIGNvbXBvbmVudCB3aWxsIHN0YXlcbiAgICogbW91bnRlZCwgZXZlbiBvbiBcImV4aXRlZFwiLCB1bmxlc3MgeW91IGFsc28gc3BlY2lmeSBgdW5tb3VudE9uRXhpdGAuXG4gICAqL1xuICBtb3VudE9uRW50ZXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBCeSBkZWZhdWx0IHRoZSBjaGlsZCBjb21wb25lbnQgc3RheXMgbW91bnRlZCBhZnRlciBpdCByZWFjaGVzIHRoZSBgJ2V4aXRlZCdgIHN0YXRlLlxuICAgKiBTZXQgYHVubW91bnRPbkV4aXRgIGlmIHlvdSdkIHByZWZlciB0byB1bm1vdW50IHRoZSBjb21wb25lbnQgYWZ0ZXIgaXQgZmluaXNoZXMgZXhpdGluZy5cbiAgICovXG4gIHVubW91bnRPbkV4aXQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBOb3JtYWxseSBhIGNvbXBvbmVudCBpcyBub3QgdHJhbnNpdGlvbmVkIGlmIGl0IGlzIHNob3duIHdoZW4gdGhlIGA8VHJhbnNpdGlvbj5gIGNvbXBvbmVudCBtb3VudHMuXG4gICAqIElmIHlvdSB3YW50IHRvIHRyYW5zaXRpb24gb24gdGhlIGZpcnN0IG1vdW50IHNldCBgYXBwZWFyYCB0byBgdHJ1ZWAsIGFuZCB0aGVcbiAgICogY29tcG9uZW50IHdpbGwgdHJhbnNpdGlvbiBpbiBhcyBzb29uIGFzIHRoZSBgPFRyYW5zaXRpb24+YCBtb3VudHMuXG4gICAqXG4gICAqID4gTm90ZTogdGhlcmUgYXJlIG5vIHNwZWNpZmljIFwiYXBwZWFyXCIgc3RhdGVzLiBgYXBwZWFyYCBvbmx5IGFkZHMgYW4gYWRkaXRpb25hbCBgZW50ZXJgIHRyYW5zaXRpb24uXG4gICAqL1xuICBhcHBlYXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBFbmFibGUgb3IgZGlzYWJsZSBlbnRlciB0cmFuc2l0aW9ucy5cbiAgICovXG4gIGVudGVyOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogRW5hYmxlIG9yIGRpc2FibGUgZXhpdCB0cmFuc2l0aW9ucy5cbiAgICovXG4gIGV4aXQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgZHVyYXRpb24gb2YgdGhlIHRyYW5zaXRpb24sIGluIG1pbGxpc2Vjb25kcy5cbiAgICogUmVxdWlyZWQgdW5sZXNzIGBhZGRFbmRMaXN0ZW5lcmAgaXMgcHJvdmlkZWQuXG4gICAqXG4gICAqIFlvdSBtYXkgc3BlY2lmeSBhIHNpbmdsZSB0aW1lb3V0IGZvciBhbGwgdHJhbnNpdGlvbnM6XG4gICAqXG4gICAqIGBgYGpzeFxuICAgKiB0aW1lb3V0PXs1MDB9XG4gICAqIGBgYFxuICAgKlxuICAgKiBvciBpbmRpdmlkdWFsbHk6XG4gICAqXG4gICAqIGBgYGpzeFxuICAgKiB0aW1lb3V0PXt7XG4gICAqICBhcHBlYXI6IDUwMCxcbiAgICogIGVudGVyOiAzMDAsXG4gICAqICBleGl0OiA1MDAsXG4gICAqIH19XG4gICAqIGBgYFxuICAgKlxuICAgKiAtIGBhcHBlYXJgIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSBvZiBgZW50ZXJgXG4gICAqIC0gYGVudGVyYCBkZWZhdWx0cyB0byBgMGBcbiAgICogLSBgZXhpdGAgZGVmYXVsdHMgdG8gYDBgXG4gICAqXG4gICAqIEB0eXBlIHtudW1iZXIgfCB7IGVudGVyPzogbnVtYmVyLCBleGl0PzogbnVtYmVyLCBhcHBlYXI/OiBudW1iZXIgfX1cbiAgICovXG4gIHRpbWVvdXQ6IGZ1bmN0aW9uIHRpbWVvdXQocHJvcHMpIHtcbiAgICB2YXIgcHQgPSB0aW1lb3V0c1NoYXBlO1xuICAgIGlmICghcHJvcHMuYWRkRW5kTGlzdGVuZXIpIHB0ID0gcHQuaXNSZXF1aXJlZDtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBwdC5hcHBseSh2b2lkIDAsIFtwcm9wc10uY29uY2F0KGFyZ3MpKTtcbiAgfSxcblxuICAvKipcbiAgICogQWRkIGEgY3VzdG9tIHRyYW5zaXRpb24gZW5kIHRyaWdnZXIuIENhbGxlZCB3aXRoIHRoZSB0cmFuc2l0aW9uaW5nXG4gICAqIERPTSBub2RlIGFuZCBhIGBkb25lYCBjYWxsYmFjay4gQWxsb3dzIGZvciBtb3JlIGZpbmUgZ3JhaW5lZCB0cmFuc2l0aW9uIGVuZFxuICAgKiBsb2dpYy4gKipOb3RlOioqIFRpbWVvdXRzIGFyZSBzdGlsbCB1c2VkIGFzIGEgZmFsbGJhY2sgaWYgcHJvdmlkZWQuXG4gICAqXG4gICAqIGBgYGpzeFxuICAgKiBhZGRFbmRMaXN0ZW5lcj17KG5vZGUsIGRvbmUpID0+IHtcbiAgICogICAvLyB1c2UgdGhlIGNzcyB0cmFuc2l0aW9uZW5kIGV2ZW50IHRvIG1hcmsgdGhlIGZpbmlzaCBvZiBhIHRyYW5zaXRpb25cbiAgICogICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBkb25lLCBmYWxzZSk7XG4gICAqIH19XG4gICAqIGBgYFxuICAgKi9cbiAgYWRkRW5kTGlzdGVuZXI6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCBiZWZvcmUgdGhlIFwiZW50ZXJpbmdcIiBzdGF0dXMgaXMgYXBwbGllZC4gQW4gZXh0cmEgcGFyYW1ldGVyXG4gICAqIGBpc0FwcGVhcmluZ2AgaXMgc3VwcGxpZWQgdG8gaW5kaWNhdGUgaWYgdGhlIGVudGVyIHN0YWdlIGlzIG9jY3VycmluZyBvbiB0aGUgaW5pdGlhbCBtb3VudFxuICAgKlxuICAgKiBAdHlwZSBGdW5jdGlvbihub2RlOiBIdG1sRWxlbWVudCwgaXNBcHBlYXJpbmc6IGJvb2wpIC0+IHZvaWRcbiAgICovXG4gIG9uRW50ZXI6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCBhZnRlciB0aGUgXCJlbnRlcmluZ1wiIHN0YXR1cyBpcyBhcHBsaWVkLiBBbiBleHRyYSBwYXJhbWV0ZXJcbiAgICogYGlzQXBwZWFyaW5nYCBpcyBzdXBwbGllZCB0byBpbmRpY2F0ZSBpZiB0aGUgZW50ZXIgc3RhZ2UgaXMgb2NjdXJyaW5nIG9uIHRoZSBpbml0aWFsIG1vdW50XG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50LCBpc0FwcGVhcmluZzogYm9vbClcbiAgICovXG4gIG9uRW50ZXJpbmc6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCBhZnRlciB0aGUgXCJlbnRlcmVkXCIgc3RhdHVzIGlzIGFwcGxpZWQuIEFuIGV4dHJhIHBhcmFtZXRlclxuICAgKiBgaXNBcHBlYXJpbmdgIGlzIHN1cHBsaWVkIHRvIGluZGljYXRlIGlmIHRoZSBlbnRlciBzdGFnZSBpcyBvY2N1cnJpbmcgb24gdGhlIGluaXRpYWwgbW91bnRcbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQsIGlzQXBwZWFyaW5nOiBib29sKSAtPiB2b2lkXG4gICAqL1xuICBvbkVudGVyZWQ6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCBiZWZvcmUgdGhlIFwiZXhpdGluZ1wiIHN0YXR1cyBpcyBhcHBsaWVkLlxuICAgKlxuICAgKiBAdHlwZSBGdW5jdGlvbihub2RlOiBIdG1sRWxlbWVudCkgLT4gdm9pZFxuICAgKi9cbiAgb25FeGl0OiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYWZ0ZXIgdGhlIFwiZXhpdGluZ1wiIHN0YXR1cyBpcyBhcHBsaWVkLlxuICAgKlxuICAgKiBAdHlwZSBGdW5jdGlvbihub2RlOiBIdG1sRWxlbWVudCkgLT4gdm9pZFxuICAgKi9cbiAgb25FeGl0aW5nOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYWZ0ZXIgdGhlIFwiZXhpdGVkXCIgc3RhdHVzIGlzIGFwcGxpZWQuXG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50KSAtPiB2b2lkXG4gICAqL1xuICBvbkV4aXRlZDogUHJvcFR5cGVzLmZ1bmMgLy8gTmFtZSB0aGUgZnVuY3Rpb24gc28gaXQgaXMgY2xlYXJlciBpbiB0aGUgZG9jdW1lbnRhdGlvblxuXG59IDoge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5UcmFuc2l0aW9uLmRlZmF1bHRQcm9wcyA9IHtcbiAgaW46IGZhbHNlLFxuICBtb3VudE9uRW50ZXI6IGZhbHNlLFxuICB1bm1vdW50T25FeGl0OiBmYWxzZSxcbiAgYXBwZWFyOiBmYWxzZSxcbiAgZW50ZXI6IHRydWUsXG4gIGV4aXQ6IHRydWUsXG4gIG9uRW50ZXI6IG5vb3AsXG4gIG9uRW50ZXJpbmc6IG5vb3AsXG4gIG9uRW50ZXJlZDogbm9vcCxcbiAgb25FeGl0OiBub29wLFxuICBvbkV4aXRpbmc6IG5vb3AsXG4gIG9uRXhpdGVkOiBub29wXG59O1xuVHJhbnNpdGlvbi5VTk1PVU5URUQgPSAwO1xuVHJhbnNpdGlvbi5FWElURUQgPSAxO1xuVHJhbnNpdGlvbi5FTlRFUklORyA9IDI7XG5UcmFuc2l0aW9uLkVOVEVSRUQgPSAzO1xuVHJhbnNpdGlvbi5FWElUSU5HID0gNDtcbmV4cG9ydCBkZWZhdWx0IFRyYW5zaXRpb247IiwiLyoqXG4gKiBTYWZlIGNoYWluZWQgZnVuY3Rpb25cbiAqXG4gKiBXaWxsIG9ubHkgY3JlYXRlIGEgbmV3IGZ1bmN0aW9uIGlmIG5lZWRlZCxcbiAqIG90aGVyd2lzZSB3aWxsIHBhc3MgYmFjayBleGlzdGluZyBmdW5jdGlvbnMgb3IgbnVsbC5cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBmdW5jdGlvbnMgdG8gY2hhaW5cbiAqIEByZXR1cm5zIHtmdW5jdGlvbnxudWxsfVxuICovXG5mdW5jdGlvbiBjcmVhdGVDaGFpbmVkRnVuY3Rpb24oKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBmdW5jcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBmdW5jc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBmdW5jcy5maWx0ZXIoZnVuY3Rpb24gKGYpIHtcbiAgICByZXR1cm4gZiAhPSBudWxsO1xuICB9KS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgZikge1xuICAgIGlmICh0eXBlb2YgZiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIEFyZ3VtZW50IFR5cGUsIG11c3Qgb25seSBwcm92aWRlIGZ1bmN0aW9ucywgdW5kZWZpbmVkLCBvciBudWxsLicpO1xuICAgIH1cblxuICAgIGlmIChhY2MgPT09IG51bGwpIHJldHVybiBmO1xuICAgIHJldHVybiBmdW5jdGlvbiBjaGFpbmVkRnVuY3Rpb24oKSB7XG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICBhY2MuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICBmLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDaGFpbmVkRnVuY3Rpb247IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuXG52YXIgX2NvbGxhcHNlU3R5bGVzO1xuXG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBjc3MgZnJvbSAnZG9tLWhlbHBlcnMvc3R5bGUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBvbkVuZCBmcm9tICdkb20taGVscGVycy90cmFuc2l0aW9uL2VuZCc7XG5pbXBvcnQgVHJhbnNpdGlvbiwgeyBFWElURUQsIEVOVEVSRUQsIEVOVEVSSU5HLCBFWElUSU5HIH0gZnJvbSAncmVhY3QtdHJhbnNpdGlvbi1ncm91cC9UcmFuc2l0aW9uJztcbmltcG9ydCB0cmlnZ2VyQnJvd3NlclJlZmxvdyBmcm9tICcuL3V0aWxzL3RyaWdnZXJCcm93c2VyUmVmbG93JztcbmltcG9ydCBjcmVhdGVDaGFpbmVkRnVuY3Rpb24gZnJvbSAnLi91dGlscy9jcmVhdGVDaGFpbmVkRnVuY3Rpb24nO1xudmFyIE1BUkdJTlMgPSB7XG4gIGhlaWdodDogWydtYXJnaW5Ub3AnLCAnbWFyZ2luQm90dG9tJ10sXG4gIHdpZHRoOiBbJ21hcmdpbkxlZnQnLCAnbWFyZ2luUmlnaHQnXVxufTtcblxuZnVuY3Rpb24gZ2V0RGltZW5zaW9uVmFsdWUoZGltZW5zaW9uLCBlbGVtKSB7XG4gIHZhciBvZmZzZXQgPSBcIm9mZnNldFwiICsgZGltZW5zaW9uWzBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoMSk7XG4gIHZhciB2YWx1ZSA9IGVsZW1bb2Zmc2V0XTtcbiAgdmFyIG1hcmdpbnMgPSBNQVJHSU5TW2RpbWVuc2lvbl07XG4gIHJldHVybiB2YWx1ZSArIHBhcnNlSW50KGNzcyhlbGVtLCBtYXJnaW5zWzBdKSwgMTApICsgcGFyc2VJbnQoY3NzKGVsZW0sIG1hcmdpbnNbMV0pLCAxMCk7XG59XG5cbnZhciBjb2xsYXBzZVN0eWxlcyA9IChfY29sbGFwc2VTdHlsZXMgPSB7fSwgX2NvbGxhcHNlU3R5bGVzW0VYSVRFRF0gPSAnY29sbGFwc2UnLCBfY29sbGFwc2VTdHlsZXNbRVhJVElOR10gPSAnY29sbGFwc2luZycsIF9jb2xsYXBzZVN0eWxlc1tFTlRFUklOR10gPSAnY29sbGFwc2luZycsIF9jb2xsYXBzZVN0eWxlc1tFTlRFUkVEXSA9ICdjb2xsYXBzZSBzaG93JywgX2NvbGxhcHNlU3R5bGVzKTtcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIGluOiBmYWxzZSxcbiAgdGltZW91dDogMzAwLFxuICBtb3VudE9uRW50ZXI6IGZhbHNlLFxuICB1bm1vdW50T25FeGl0OiBmYWxzZSxcbiAgYXBwZWFyOiBmYWxzZSxcbiAgZGltZW5zaW9uOiAnaGVpZ2h0JyxcbiAgZ2V0RGltZW5zaW9uVmFsdWU6IGdldERpbWVuc2lvblZhbHVlXG59O1xuXG52YXIgQ29sbGFwc2UgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQ29sbGFwc2UsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIENvbGxhcHNlKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuaGFuZGxlRW50ZXIgPSBmdW5jdGlvbiAoZWxlbSkge1xuICAgICAgZWxlbS5zdHlsZVtfdGhpcy5nZXREaW1lbnNpb24oKV0gPSAnMCc7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUVudGVyaW5nID0gZnVuY3Rpb24gKGVsZW0pIHtcbiAgICAgIHZhciBkaW1lbnNpb24gPSBfdGhpcy5nZXREaW1lbnNpb24oKTtcblxuICAgICAgZWxlbS5zdHlsZVtkaW1lbnNpb25dID0gX3RoaXMuX2dldFNjcm9sbERpbWVuc2lvblZhbHVlKGVsZW0sIGRpbWVuc2lvbik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUVudGVyZWQgPSBmdW5jdGlvbiAoZWxlbSkge1xuICAgICAgZWxlbS5zdHlsZVtfdGhpcy5nZXREaW1lbnNpb24oKV0gPSBudWxsO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVFeGl0ID0gZnVuY3Rpb24gKGVsZW0pIHtcbiAgICAgIHZhciBkaW1lbnNpb24gPSBfdGhpcy5nZXREaW1lbnNpb24oKTtcblxuICAgICAgZWxlbS5zdHlsZVtkaW1lbnNpb25dID0gX3RoaXMucHJvcHMuZ2V0RGltZW5zaW9uVmFsdWUoZGltZW5zaW9uLCBlbGVtKSArIFwicHhcIjtcbiAgICAgIHRyaWdnZXJCcm93c2VyUmVmbG93KGVsZW0pO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVFeGl0aW5nID0gZnVuY3Rpb24gKGVsZW0pIHtcbiAgICAgIGVsZW0uc3R5bGVbX3RoaXMuZ2V0RGltZW5zaW9uKCldID0gbnVsbDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IENvbGxhcHNlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uZ2V0RGltZW5zaW9uID0gZnVuY3Rpb24gZ2V0RGltZW5zaW9uKCkge1xuICAgIHJldHVybiB0eXBlb2YgdGhpcy5wcm9wcy5kaW1lbnNpb24gPT09ICdmdW5jdGlvbicgPyB0aGlzLnByb3BzLmRpbWVuc2lvbigpIDogdGhpcy5wcm9wcy5kaW1lbnNpb247XG4gIH1cbiAgLyogLS0gRXhwYW5kaW5nIC0tICovXG4gIDtcblxuICAvLyBmb3IgdGVzdGluZ1xuICBfcHJvdG8uX2dldFNjcm9sbERpbWVuc2lvblZhbHVlID0gZnVuY3Rpb24gX2dldFNjcm9sbERpbWVuc2lvblZhbHVlKGVsZW0sIGRpbWVuc2lvbikge1xuICAgIHZhciBzY3JvbGwgPSBcInNjcm9sbFwiICsgZGltZW5zaW9uWzBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoMSk7XG4gICAgcmV0dXJuIGVsZW1bc2Nyb2xsXSArIFwicHhcIjtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgb25FbnRlciA9IF90aGlzJHByb3BzLm9uRW50ZXIsXG4gICAgICAgIG9uRW50ZXJpbmcgPSBfdGhpcyRwcm9wcy5vbkVudGVyaW5nLFxuICAgICAgICBvbkVudGVyZWQgPSBfdGhpcyRwcm9wcy5vbkVudGVyZWQsXG4gICAgICAgIG9uRXhpdCA9IF90aGlzJHByb3BzLm9uRXhpdCxcbiAgICAgICAgb25FeGl0aW5nID0gX3RoaXMkcHJvcHMub25FeGl0aW5nLFxuICAgICAgICBjbGFzc05hbWUgPSBfdGhpcyRwcm9wcy5jbGFzc05hbWUsXG4gICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcIm9uRW50ZXJcIiwgXCJvbkVudGVyaW5nXCIsIFwib25FbnRlcmVkXCIsIFwib25FeGl0XCIsIFwib25FeGl0aW5nXCIsIFwiY2xhc3NOYW1lXCIsIFwiY2hpbGRyZW5cIl0pO1xuXG4gICAgZGVsZXRlIHByb3BzLmRpbWVuc2lvbjtcbiAgICBkZWxldGUgcHJvcHMuZ2V0RGltZW5zaW9uVmFsdWU7XG4gICAgdmFyIGhhbmRsZUVudGVyID0gY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uKHRoaXMuaGFuZGxlRW50ZXIsIG9uRW50ZXIpO1xuICAgIHZhciBoYW5kbGVFbnRlcmluZyA9IGNyZWF0ZUNoYWluZWRGdW5jdGlvbih0aGlzLmhhbmRsZUVudGVyaW5nLCBvbkVudGVyaW5nKTtcbiAgICB2YXIgaGFuZGxlRW50ZXJlZCA9IGNyZWF0ZUNoYWluZWRGdW5jdGlvbih0aGlzLmhhbmRsZUVudGVyZWQsIG9uRW50ZXJlZCk7XG4gICAgdmFyIGhhbmRsZUV4aXQgPSBjcmVhdGVDaGFpbmVkRnVuY3Rpb24odGhpcy5oYW5kbGVFeGl0LCBvbkV4aXQpO1xuICAgIHZhciBoYW5kbGVFeGl0aW5nID0gY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uKHRoaXMuaGFuZGxlRXhpdGluZywgb25FeGl0aW5nKTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2l0aW9uLCBfZXh0ZW5kcyh7XG4gICAgICBhZGRFbmRMaXN0ZW5lcjogb25FbmRcbiAgICB9LCBwcm9wcywge1xuICAgICAgXCJhcmlhLWV4cGFuZGVkXCI6IHByb3BzLnJvbGUgPyBwcm9wcy5pbiA6IG51bGwsXG4gICAgICBvbkVudGVyOiBoYW5kbGVFbnRlcixcbiAgICAgIG9uRW50ZXJpbmc6IGhhbmRsZUVudGVyaW5nLFxuICAgICAgb25FbnRlcmVkOiBoYW5kbGVFbnRlcmVkLFxuICAgICAgb25FeGl0OiBoYW5kbGVFeGl0LFxuICAgICAgb25FeGl0aW5nOiBoYW5kbGVFeGl0aW5nXG4gICAgfSksIGZ1bmN0aW9uIChzdGF0ZSwgaW5uZXJQcm9wcykge1xuICAgICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZHJlbiwgX2V4dGVuZHMoe30sIGlubmVyUHJvcHMsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgY2hpbGRyZW4ucHJvcHMuY2xhc3NOYW1lLCBjb2xsYXBzZVN0eWxlc1tzdGF0ZV0sIF90aGlzMi5nZXREaW1lbnNpb24oKSA9PT0gJ3dpZHRoJyAmJiAnd2lkdGgnKVxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBDb2xsYXBzZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuQ29sbGFwc2UuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29sbGFwc2U7IiwiLy8gcmVhZGluZyBhIGRpbWVuc2lvbiBwcm9wIHdpbGwgY2F1c2UgdGhlIGJyb3dzZXIgdG8gcmVjYWxjdWxhdGUsXG4vLyB3aGljaCB3aWxsIGxldCBvdXIgYW5pbWF0aW9ucyB3b3JrXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmlnZ2VyQnJvd3NlclJlZmxvdyhub2RlKSB7XG4gIG5vZGUub2Zmc2V0SGVpZ2h0OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC1leHByZXNzaW9uc1xufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5leHBvcnQgZGVmYXVsdCBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IENvbGxhcHNlIGZyb20gJy4vQ29sbGFwc2UnO1xuaW1wb3J0IHsgdXNlQm9vdHN0cmFwUHJlZml4IH0gZnJvbSAnLi9UaGVtZVByb3ZpZGVyJztcbmltcG9ydCBOYXZiYXJDb250ZXh0IGZyb20gJy4vTmF2YmFyQ29udGV4dCc7XG52YXIgTmF2YmFyQ29sbGFwc2UgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCByZWYpIHtcbiAgdmFyIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbixcbiAgICAgIGJzUHJlZml4ID0gX3JlZi5ic1ByZWZpeCxcbiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiY2hpbGRyZW5cIiwgXCJic1ByZWZpeFwiXSk7XG5cbiAgYnNQcmVmaXggPSB1c2VCb290c3RyYXBQcmVmaXgoYnNQcmVmaXgsICduYXZiYXItY29sbGFwc2UnKTtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTmF2YmFyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb2xsYXBzZSwgX2V4dGVuZHMoe1xuICAgICAgaW46ICEhKGNvbnRleHQgJiYgY29udGV4dC5leHBhbmRlZClcbiAgICB9LCBwcm9wcyksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgcmVmOiByZWYsXG4gICAgICBjbGFzc05hbWU6IGJzUHJlZml4XG4gICAgfSwgY2hpbGRyZW4pKTtcbiAgfSk7XG59KTtcbk5hdmJhckNvbGxhcHNlLmRpc3BsYXlOYW1lID0gJ05hdmJhckNvbGxhcHNlJztcbmV4cG9ydCBkZWZhdWx0IE5hdmJhckNvbGxhcHNlOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUV2ZW50Q2FsbGJhY2sgZnJvbSAnQHJlc3RhcnQvaG9va3MvdXNlRXZlbnRDYWxsYmFjayc7XG5pbXBvcnQgeyB1c2VCb290c3RyYXBQcmVmaXggfSBmcm9tICcuL1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IE5hdmJhckNvbnRleHQgZnJvbSAnLi9OYXZiYXJDb250ZXh0JztcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIGxhYmVsOiAnVG9nZ2xlIG5hdmlnYXRpb24nXG59O1xudmFyIE5hdmJhclRvZ2dsZSA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYsIHJlZikge1xuICB2YXIgYnNQcmVmaXggPSBfcmVmLmJzUHJlZml4LFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sXG4gICAgICBsYWJlbCA9IF9yZWYubGFiZWwsXG4gICAgICBfcmVmJGFzID0gX3JlZi5hcyxcbiAgICAgIENvbXBvbmVudCA9IF9yZWYkYXMgPT09IHZvaWQgMCA/ICdidXR0b24nIDogX3JlZiRhcyxcbiAgICAgIG9uQ2xpY2sgPSBfcmVmLm9uQ2xpY2ssXG4gICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImJzUHJlZml4XCIsIFwiY2xhc3NOYW1lXCIsIFwiY2hpbGRyZW5cIiwgXCJsYWJlbFwiLCBcImFzXCIsIFwib25DbGlja1wiXSk7XG5cbiAgYnNQcmVmaXggPSB1c2VCb290c3RyYXBQcmVmaXgoYnNQcmVmaXgsICduYXZiYXItdG9nZ2xlcicpO1xuXG4gIHZhciBfcmVmMiA9IHVzZUNvbnRleHQoTmF2YmFyQ29udGV4dCkgfHwge30sXG4gICAgICBvblRvZ2dsZSA9IF9yZWYyLm9uVG9nZ2xlLFxuICAgICAgZXhwYW5kZWQgPSBfcmVmMi5leHBhbmRlZDtcblxuICB2YXIgaGFuZGxlQ2xpY2sgPSB1c2VFdmVudENhbGxiYWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgaWYgKG9uQ2xpY2spIG9uQ2xpY2soZSk7XG4gICAgaWYgKG9uVG9nZ2xlKSBvblRvZ2dsZSgpO1xuICB9KTtcblxuICBpZiAoQ29tcG9uZW50ID09PSAnYnV0dG9uJykge1xuICAgIHByb3BzLnR5cGUgPSAnYnV0dG9uJztcbiAgfVxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgcmVmOiByZWYsXG4gICAgb25DbGljazogaGFuZGxlQ2xpY2ssXG4gICAgXCJhcmlhLWxhYmVsXCI6IGxhYmVsLFxuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhjbGFzc05hbWUsIGJzUHJlZml4LCAhIWV4cGFuZGVkICYmICdjb2xsYXBzZWQnKVxuICB9KSwgY2hpbGRyZW4gfHwgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogYnNQcmVmaXggKyBcIi1pY29uXCJcbiAgfSkpO1xufSk7XG5OYXZiYXJUb2dnbGUuZGlzcGxheU5hbWUgPSAnTmF2YmFyVG9nZ2xlJztcbk5hdmJhclRvZ2dsZS5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBOYXZiYXJUb2dnbGU7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbnZhciBTZWxlY3RhYmxlQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoKTtcbmV4cG9ydCB2YXIgbWFrZUV2ZW50S2V5ID0gZnVuY3Rpb24gbWFrZUV2ZW50S2V5KGV2ZW50S2V5LCBocmVmKSB7XG4gIGlmIChldmVudEtleSAhPSBudWxsKSByZXR1cm4gU3RyaW5nKGV2ZW50S2V5KTtcbiAgcmV0dXJuIGhyZWYgfHwgbnVsbDtcbn07XG5leHBvcnQgZGVmYXVsdCBTZWxlY3RhYmxlQ29udGV4dDsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdW5jb250cm9sbGFibGUgZnJvbSAndW5jb250cm9sbGFibGUnO1xuaW1wb3J0IGNyZWF0ZVdpdGhCc1ByZWZpeCBmcm9tICcuL3V0aWxzL2NyZWF0ZVdpdGhCc1ByZWZpeCc7XG5pbXBvcnQgTmF2YmFyQnJhbmQgZnJvbSAnLi9OYXZiYXJCcmFuZCc7XG5pbXBvcnQgTmF2YmFyQ29sbGFwc2UgZnJvbSAnLi9OYXZiYXJDb2xsYXBzZSc7XG5pbXBvcnQgTmF2YmFyVG9nZ2xlIGZyb20gJy4vTmF2YmFyVG9nZ2xlJztcbmltcG9ydCB7IGNyZWF0ZUJvb3RzdHJhcENvbXBvbmVudCB9IGZyb20gJy4vVGhlbWVQcm92aWRlcic7XG5pbXBvcnQgTmF2YmFyQ29udGV4dCBmcm9tICcuL05hdmJhckNvbnRleHQnO1xuaW1wb3J0IFNlbGVjdGFibGVDb250ZXh0IGZyb20gJy4vU2VsZWN0YWJsZUNvbnRleHQnO1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgZXhwYW5kOiB0cnVlLFxuICB2YXJpYW50OiAnbGlnaHQnLFxuICBjb2xsYXBzZU9uU2VsZWN0OiBmYWxzZVxufTtcblxudmFyIE5hdmJhciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShOYXZiYXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE5hdmJhcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgX2FyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBfYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KF9hcmdzKSkgfHwgdGhpcztcblxuICAgIF90aGlzLmhhbmRsZUNvbGxhcHNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgb25Ub2dnbGUgPSBfdGhpcyRwcm9wcy5vblRvZ2dsZSxcbiAgICAgICAgICBleHBhbmRlZCA9IF90aGlzJHByb3BzLmV4cGFuZGVkLFxuICAgICAgICAgIGNvbGxhcHNlT25TZWxlY3QgPSBfdGhpcyRwcm9wcy5jb2xsYXBzZU9uU2VsZWN0LFxuICAgICAgICAgIG9uU2VsZWN0ID0gX3RoaXMkcHJvcHMub25TZWxlY3Q7XG4gICAgICBpZiAob25TZWxlY3QpIG9uU2VsZWN0LmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcblxuICAgICAgaWYgKGNvbGxhcHNlT25TZWxlY3QgJiYgZXhwYW5kZWQpIHtcbiAgICAgICAgb25Ub2dnbGUoZmFsc2UpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVUb2dnbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgb25Ub2dnbGUgPSBfdGhpcyRwcm9wczIub25Ub2dnbGUsXG4gICAgICAgICAgZXhwYW5kZWQgPSBfdGhpcyRwcm9wczIuZXhwYW5kZWQ7XG4gICAgICBvblRvZ2dsZSghZXhwYW5kZWQpO1xuICAgIH07XG5cbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG5hdmJhckNvbnRleHQ6IHtcbiAgICAgICAgb25Ub2dnbGU6IF90aGlzLmhhbmRsZVRvZ2dsZVxuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgTmF2YmFyLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyA9IGZ1bmN0aW9uIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhfcmVmLCBwcmV2U3RhdGUpIHtcbiAgICB2YXIgYnNQcmVmaXggPSBfcmVmLmJzUHJlZml4LFxuICAgICAgICBleHBhbmRlZCA9IF9yZWYuZXhwYW5kZWQ7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hdmJhckNvbnRleHQ6IF9leHRlbmRzKHt9LCBwcmV2U3RhdGUubmF2YmFyQ29udGV4dCwge1xuICAgICAgICBic1ByZWZpeDogYnNQcmVmaXgsXG4gICAgICAgIGV4cGFuZGVkOiBleHBhbmRlZFxuICAgICAgfSlcbiAgICB9O1xuICB9O1xuXG4gIHZhciBfcHJvdG8gPSBOYXZiYXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGJzUHJlZml4ID0gX3RoaXMkcHJvcHMzLmJzUHJlZml4LFxuICAgICAgICBleHBhbmQgPSBfdGhpcyRwcm9wczMuZXhwYW5kLFxuICAgICAgICB2YXJpYW50ID0gX3RoaXMkcHJvcHMzLnZhcmlhbnQsXG4gICAgICAgIGJnID0gX3RoaXMkcHJvcHMzLmJnLFxuICAgICAgICBmaXhlZCA9IF90aGlzJHByb3BzMy5maXhlZCxcbiAgICAgICAgc3RpY2t5ID0gX3RoaXMkcHJvcHMzLnN0aWNreSxcbiAgICAgICAgY2xhc3NOYW1lID0gX3RoaXMkcHJvcHMzLmNsYXNzTmFtZSxcbiAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wczMuY2hpbGRyZW4sXG4gICAgICAgIF90aGlzJHByb3BzMyRhcyA9IF90aGlzJHByb3BzMy5hcyxcbiAgICAgICAgQ29tcG9uZW50ID0gX3RoaXMkcHJvcHMzJGFzID09PSB2b2lkIDAgPyAnbmF2JyA6IF90aGlzJHByb3BzMyRhcyxcbiAgICAgICAgXzEgPSBfdGhpcyRwcm9wczMuZXhwYW5kZWQsXG4gICAgICAgIF8yID0gX3RoaXMkcHJvcHMzLm9uVG9nZ2xlLFxuICAgICAgICBfMyA9IF90aGlzJHByb3BzMy5vblNlbGVjdCxcbiAgICAgICAgXzQgPSBfdGhpcyRwcm9wczMuY29sbGFwc2VPblNlbGVjdCxcbiAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczMsIFtcImJzUHJlZml4XCIsIFwiZXhwYW5kXCIsIFwidmFyaWFudFwiLCBcImJnXCIsIFwiZml4ZWRcIiwgXCJzdGlja3lcIiwgXCJjbGFzc05hbWVcIiwgXCJjaGlsZHJlblwiLCBcImFzXCIsIFwiZXhwYW5kZWRcIiwgXCJvblRvZ2dsZVwiLCBcIm9uU2VsZWN0XCIsIFwiY29sbGFwc2VPblNlbGVjdFwiXSk7IC8vIHdpbGwgcmVzdWx0IGluIHNvbWUgZmFsc2UgcG9zaXRpdmVzIGJ1dCB0aGF0IHNlZW1zIGJldHRlclxuICAgIC8vIHRoYW4gZmFsc2UgbmVnYXRpdmVzLiBzdHJpY3QgYHVuZGVmaW5lZGAgY2hlY2sgYWxsb3dzIGV4cGxpY2l0XG4gICAgLy8gXCJudWxsaW5nXCIgb2YgdGhlIHJvbGUgaWYgdGhlIHVzZXIgcmVhbGx5IGRvZXNuJ3Qgd2FudCBvbmVcblxuXG4gICAgaWYgKHByb3BzLnJvbGUgPT09IHVuZGVmaW5lZCAmJiBDb21wb25lbnQgIT09ICduYXYnKSB7XG4gICAgICBwcm9wcy5yb2xlID0gJ25hdmlnYXRpb24nO1xuICAgIH1cblxuICAgIHZhciBleHBhbmRDbGFzcyA9IGJzUHJlZml4ICsgXCItZXhwYW5kXCI7XG4gICAgaWYgKHR5cGVvZiBleHBhbmQgPT09ICdzdHJpbmcnKSBleHBhbmRDbGFzcyA9IGV4cGFuZENsYXNzICsgXCItXCIgKyBleHBhbmQ7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTmF2YmFyQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IHRoaXMuc3RhdGUubmF2YmFyQ29udGV4dFxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2VsZWN0YWJsZUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiB0aGlzLmhhbmRsZUNvbGxhcHNlXG4gICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgYnNQcmVmaXgsIGV4cGFuZCAmJiBleHBhbmRDbGFzcywgdmFyaWFudCAmJiBic1ByZWZpeCArIFwiLVwiICsgdmFyaWFudCwgYmcgJiYgXCJiZy1cIiArIGJnLCBzdGlja3kgJiYgXCJzdGlja3ktXCIgKyBzdGlja3ksIGZpeGVkICYmIFwiZml4ZWQtXCIgKyBmaXhlZClcbiAgICB9KSwgY2hpbGRyZW4pKSk7XG4gIH07XG5cbiAgcmV0dXJuIE5hdmJhcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuTmF2YmFyLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbnZhciBEZWNvcmF0ZWROYXZiYXIgPSBjcmVhdGVCb290c3RyYXBDb21wb25lbnQodW5jb250cm9sbGFibGUoTmF2YmFyLCB7XG4gIGV4cGFuZGVkOiAnb25Ub2dnbGUnXG59KSwgJ25hdmJhcicpO1xuRGVjb3JhdGVkTmF2YmFyLkJyYW5kID0gTmF2YmFyQnJhbmQ7XG5EZWNvcmF0ZWROYXZiYXIuVG9nZ2xlID0gTmF2YmFyVG9nZ2xlO1xuRGVjb3JhdGVkTmF2YmFyLkNvbGxhcHNlID0gTmF2YmFyQ29sbGFwc2U7XG5EZWNvcmF0ZWROYXZiYXIuVGV4dCA9IGNyZWF0ZVdpdGhCc1ByZWZpeCgnbmF2YmFyLXRleHQnLCB7XG4gIENvbXBvbmVudDogJ3NwYW4nXG59KTtcbmV4cG9ydCBkZWZhdWx0IERlY29yYXRlZE5hdmJhcjsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBOYXZiYXIgfSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xyXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG5jbGFzcyBOYXYgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgcmVuZGVyICgpIHtcclxuICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHRoaXMucHJvcHMudXNlck5hbWU7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPE5hdmJhciBiZz1cImRhcmtcIiB2YXJpYW50PVwiZGFya1wiPlxyXG4gICAgICAgICAgICAgICAgPExpbmsgdG89e3sgcGF0aG5hbWU6ICcvJyB9fSB0aXRsZT1cIkxvZ29cIj5cclxuICAgICAgICAgICAgICAgICAgICA8TmF2YmFyLkJyYW5kIGhyZWY9XCIjaG9tZVwiPkxPR088L05hdmJhci5CcmFuZD5cclxuICAgICAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgICAgIDxOYXZiYXIuQ29sbGFwc2UgY2xhc3NOYW1lPVwianVzdGlmeS1jb250ZW50LWVuZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxOYXZiYXIuVGV4dD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgU2lnbmVkIGluIGFzOiA8YSBocmVmPVwiI2xvZ2luXCI+e3VzZXJOYW1lfTwvYT5cclxuICAgICAgICAgICAgICAgICAgICA8L05hdmJhci5UZXh0PlxyXG4gICAgICAgICAgICAgICAgPC9OYXZiYXIuQ29sbGFwc2U+XHJcbiAgICAgICAgICAgIDwvTmF2YmFyPlxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE5hdjtcclxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZFwiO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNyZWF0ZUNoYWluZWRGdW5jdGlvbiBmcm9tICcuL3V0aWxzL2NyZWF0ZUNoYWluZWRGdW5jdGlvbic7XG5cbmZ1bmN0aW9uIGlzVHJpdmlhbEhyZWYoaHJlZikge1xuICByZXR1cm4gIWhyZWYgfHwgaHJlZi50cmltKCkgPT09ICcjJztcbn1cbi8qKlxuICogVGhlcmUgYXJlIHNpdHVhdGlvbnMgZHVlIHRvIGJyb3dzZXIgcXVpcmtzIG9yIEJvb3RzdHJhcCBDU1Mgd2hlcmVcbiAqIGFuIGFuY2hvciB0YWcgaXMgbmVlZGVkLCB3aGVuIHNlbWFudGljYWxseSBhIGJ1dHRvbiB0YWcgaXMgdGhlXG4gKiBiZXR0ZXIgY2hvaWNlLiBTYWZlQW5jaG9yIGVuc3VyZXMgdGhhdCB3aGVuIGFuIGFuY2hvciBpcyB1c2VkIGxpa2UgYVxuICogYnV0dG9uIGl0cyBhY2Nlc3NpYmxlLiBJdCBhbHNvIGVtdWxhdGVzIGlucHV0IGBkaXNhYmxlZGAgYmVoYXZpb3IgZm9yXG4gKiBsaW5rcywgd2hpY2ggaXMgdXN1YWxseSBkZXNpcmFibGUgZm9yIEJ1dHRvbnMsIE5hdkl0ZW1zLCBEcm9wZG93bkl0ZW1zLCBldGMuXG4gKi9cblxuXG52YXIgU2FmZUFuY2hvciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTYWZlQW5jaG9yLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTYWZlQW5jaG9yKHByb3BzLCBjb250ZXh0KSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGFuZGxlQ2xpY2sgPSBfdGhpcy5oYW5kbGVDbGljay5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5oYW5kbGVLZXlEb3duID0gX3RoaXMuaGFuZGxlS2V5RG93bi5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU2FmZUFuY2hvci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmhhbmRsZUNsaWNrID0gZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBkaXNhYmxlZCA9IF90aGlzJHByb3BzLmRpc2FibGVkLFxuICAgICAgICBocmVmID0gX3RoaXMkcHJvcHMuaHJlZixcbiAgICAgICAgb25DbGljayA9IF90aGlzJHByb3BzLm9uQ2xpY2s7XG5cbiAgICBpZiAoZGlzYWJsZWQgfHwgaXNUcml2aWFsSHJlZihocmVmKSkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICBpZiAoZGlzYWJsZWQpIHtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChvbkNsaWNrKSB7XG4gICAgICBvbkNsaWNrKGV2ZW50KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmhhbmRsZUtleURvd24gPSBmdW5jdGlvbiBoYW5kbGVLZXlEb3duKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJyAnKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5oYW5kbGVDbGljayhldmVudCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzMiRhcyA9IF90aGlzJHByb3BzMi5hcyxcbiAgICAgICAgQ29tcG9uZW50ID0gX3RoaXMkcHJvcHMyJGFzID09PSB2b2lkIDAgPyAnYScgOiBfdGhpcyRwcm9wczIkYXMsXG4gICAgICAgIGRpc2FibGVkID0gX3RoaXMkcHJvcHMyLmRpc2FibGVkLFxuICAgICAgICBvbktleURvd24gPSBfdGhpcyRwcm9wczIub25LZXlEb3duLFxuICAgICAgICBpbm5lclJlZiA9IF90aGlzJHByb3BzMi5pbm5lclJlZixcbiAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImFzXCIsIFwiZGlzYWJsZWRcIiwgXCJvbktleURvd25cIiwgXCJpbm5lclJlZlwiXSk7XG5cbiAgICBpZiAoaXNUcml2aWFsSHJlZihwcm9wcy5ocmVmKSkge1xuICAgICAgcHJvcHMucm9sZSA9IHByb3BzLnJvbGUgfHwgJ2J1dHRvbic7IC8vIHdlIHdhbnQgdG8gbWFrZSBzdXJlIHRoZXJlIGlzIGEgaHJlZiBhdHRyaWJ1dGUgb24gdGhlIG5vZGVcbiAgICAgIC8vIG90aGVyd2lzZSwgdGhlIGN1cnNvciBpbmNvcnJlY3RseSBzdHlsZWQgKGV4Y2VwdCB3aXRoIHJvbGU9J2J1dHRvbicpXG5cbiAgICAgIHByb3BzLmhyZWYgPSBwcm9wcy5ocmVmIHx8ICcjJztcbiAgICB9XG5cbiAgICBpZiAoZGlzYWJsZWQpIHtcbiAgICAgIHByb3BzLnRhYkluZGV4ID0gLTE7XG4gICAgICBwcm9wc1snYXJpYS1kaXNhYmxlZCddID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoaW5uZXJSZWYpIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLFxuICAgICAgb25LZXlEb3duOiBjcmVhdGVDaGFpbmVkRnVuY3Rpb24odGhpcy5oYW5kbGVLZXlEb3duLCBvbktleURvd24pXG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBTYWZlQW5jaG9yO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5leHBvcnQgZGVmYXVsdCBTYWZlQW5jaG9yOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VCb290c3RyYXBQcmVmaXggfSBmcm9tICcuL1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IFNhZmVBbmNob3IgZnJvbSAnLi9TYWZlQW5jaG9yJztcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIHZhcmlhbnQ6ICdwcmltYXJ5JyxcbiAgYWN0aXZlOiBmYWxzZSxcbiAgZGlzYWJsZWQ6IGZhbHNlLFxuICB0eXBlOiAnYnV0dG9uJ1xufTtcbnZhciBCdXR0b24gPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCByZWYpIHtcbiAgdmFyIGJzUHJlZml4ID0gX3JlZi5ic1ByZWZpeCxcbiAgICAgIHZhcmlhbnQgPSBfcmVmLnZhcmlhbnQsXG4gICAgICBzaXplID0gX3JlZi5zaXplLFxuICAgICAgYWN0aXZlID0gX3JlZi5hY3RpdmUsXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGJsb2NrID0gX3JlZi5ibG9jayxcbiAgICAgIHR5cGUgPSBfcmVmLnR5cGUsXG4gICAgICBhcyA9IF9yZWYuYXMsXG4gICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImJzUHJlZml4XCIsIFwidmFyaWFudFwiLCBcInNpemVcIiwgXCJhY3RpdmVcIiwgXCJjbGFzc05hbWVcIiwgXCJibG9ja1wiLCBcInR5cGVcIiwgXCJhc1wiXSk7XG5cbiAgdmFyIHByZWZpeCA9IHVzZUJvb3RzdHJhcFByZWZpeChic1ByZWZpeCwgJ2J0bicpO1xuICB2YXIgY2xhc3NlcyA9IGNsYXNzTmFtZXMoY2xhc3NOYW1lLCBwcmVmaXgsIGFjdGl2ZSAmJiAnYWN0aXZlJywgcHJlZml4ICsgXCItXCIgKyB2YXJpYW50LCBibG9jayAmJiBwcmVmaXggKyBcIi1ibG9ja1wiLCBzaXplICYmIHByZWZpeCArIFwiLVwiICsgc2l6ZSk7XG5cbiAgaWYgKHByb3BzLmhyZWYpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTYWZlQW5jaG9yLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgIGFzOiBhcyxcbiAgICAgIGlubmVyUmVmOiByZWYsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMoY2xhc3NlcywgcHJvcHMuZGlzYWJsZWQgJiYgJ2Rpc2FibGVkJylcbiAgICB9KSk7XG4gIH1cblxuICB2YXIgQ29tcG9uZW50ID0gYXMgfHwgJ2J1dHRvbic7XG4gIGlmIChyZWYpIHByb3BzLnJlZiA9IHJlZjtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICB0eXBlOiB0eXBlLFxuICAgIGNsYXNzTmFtZTogY2xhc3Nlc1xuICB9KSk7XG59KTtcbkJ1dHRvbi5kaXNwbGF5TmFtZSA9ICdCdXR0b24nO1xuQnV0dG9uLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xyXG5cclxuY2xhc3MgQ29tbW9uQnV0dG9uIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICAgIGNvbnN0cnVjdG9yIChwcm9wcykge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgICB0aGlzLmhhbmRsZUNsaWNrID0gdGhpcy5oYW5kbGVDbGljay5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGhhbmRsZUNsaWNrIChlKSB7XHJcblx0ICAgIHRoaXMucHJvcHMuaGFuZGxlQ2xpY2soZSk7XHJcbiAgICB9XHJcbiAgICByZW5kZXIgKCkge1xyXG5cdCAgICBjb25zdCB7IHN0eWxlTmFtZSwgZGlzYWJsZWQsIGxhYmVsLCB2YWx1ZSB9ID0gdGhpcy5wcm9wcztcclxuXHQgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPEJ1dHRvblxyXG4gICAgICAgICAgICAgICAgdmFyaWFudD17c3R5bGVOYW1lfVxyXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxyXG4gICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5oYW5kbGVDbGlja31cclxuICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAge2xhYmVsfVxyXG4gICAgICAgICAgICA8L0J1dHRvbj5cclxuXHQgICAgKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29tbW9uQnV0dG9uO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0IE5hdiBmcm9tICcuL05hdic7XHJcbmltcG9ydCBDb21tb25CdXR0b24gZnJvbSAnLi4vY29tbW9uL2J1dHRvbi9Db21tb25CdXR0b24nO1xyXG5pbXBvcnQgeyB3aXRoUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG5jbGFzcyBIZWFkZXIgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IgKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlQWRkQ2xpY2sgPSB0aGlzLmhhbmRsZUFkZENsaWNrLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgaGFuZGxlQWRkQ2xpY2sgKCkge1xyXG4gICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKHtcclxuICAgICAgICAgICAgcGF0aG5hbWU6IGAvYWRkYCxcclxuICAgICAgICAgICAgc2VhcmNoOiAnP3VzZXJuYW1lPScgKyB0aGlzLnByb3BzLnVzZXJOYW1lXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyICgpIHtcclxuICAgICAgICBjb25zdCB7IHBhZ2VUaXRsZSwgc2hvd0J1dHRvbiwgdXNlck5hbWUgfSA9IHRoaXMucHJvcHM7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxyXG4gICAgICAgICAgICAgICAgPE5hdiB1c2VyTmFtZT17dXNlck5hbWV9IC8+XHJcbiAgICAgICAgICAgICAgICA8SGVhZGVyV3JhcHBlcj5cclxuICAgICAgICAgICAgICAgICAgICA8aDE+e3BhZ2VUaXRsZX08L2gxPlxyXG4gICAgICAgICAgICAgICAgICAgIHtzaG93QnV0dG9uICYmXHJcbiAgICAgICAgICAgICAgICAgICAgIDxDb21tb25CdXR0b24gbGFiZWw9XCJBZGRcIiBoYW5kbGVDbGljaz17dGhpcy5oYW5kbGVBZGRDbGlja30gc3R5bGVOYW1lPVwicHJpbWFyeVwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgPC9IZWFkZXJXcmFwcGVyPlxyXG4gICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoSGVhZGVyKTtcclxuXHJcbmNvbnN0IEhlYWRlcldyYXBwZXIgPSBzdHlsZWQuc2VjdGlvbmBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcGFkZGluZzogLjVyZW0gMXJlbTtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYjliOWI5O1xyXG5cclxuICAgIC5idG57XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICB9XHJcbmA7XHJcbiIsImltcG9ydCBvYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCIuL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0gb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTtcbiAgdmFyIGtleSwgaTtcblxuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IHNvdXJjZVN5bWJvbEtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07XG4gICAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoc291cmNlLCBrZXkpKSBjb250aW51ZTtcbiAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJpbXBvcnQgYXJyYXlXaXRob3V0SG9sZXMgZnJvbSBcIi4vYXJyYXlXaXRob3V0SG9sZXNcIjtcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXkgZnJvbSBcIi4vaXRlcmFibGVUb0FycmF5XCI7XG5pbXBvcnQgbm9uSXRlcmFibGVTcHJlYWQgZnJvbSBcIi4vbm9uSXRlcmFibGVTcHJlYWRcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIGFycmF5V2l0aG91dEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5KGFycikgfHwgbm9uSXRlcmFibGVTcHJlYWQoKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgYXJyMltpXSA9IGFycltpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09IFwiW29iamVjdCBBcmd1bWVudHNdXCIpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSIsImltcG9ydCBkZWZpbmVQcm9wZXJ0eSBmcm9tIFwiLi9kZWZpbmVQcm9wZXJ0eVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTtcbiAgICB2YXIgb3duS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG5cbiAgICBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIG93bktleXMgPSBvd25LZXlzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSkuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBzeW0pLmVudW1lcmFibGU7XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgb3duS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59IiwiZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgcmV0dXJuIENvbnN0cnVjdG9yO1xufSIsImZ1bmN0aW9uIF90eXBlb2YyKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZjIgPSBmdW5jdGlvbiBfdHlwZW9mMihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YyID0gZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mMihvYmopOyB9XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgX3R5cGVvZjIoU3ltYm9sLml0ZXJhdG9yKSA9PT0gXCJzeW1ib2xcIikge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIF90eXBlb2YyKG9iaik7XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiBfdHlwZW9mMihvYmopO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX3R5cGVvZihvYmopO1xufSIsImltcG9ydCBfdHlwZW9mIGZyb20gXCIuLi8uLi9oZWxwZXJzL2VzbS90eXBlb2ZcIjtcbmltcG9ydCBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH1cblxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgfTtcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn0iLCJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vc2V0UHJvdG90eXBlT2ZcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn0iLCIvKlxuXG5CYXNlZCBvZmYgZ2xhbW9yJ3MgU3R5bGVTaGVldCwgdGhhbmtzIFN1bmlsIOKdpO+4j1xuXG5oaWdoIHBlcmZvcm1hbmNlIFN0eWxlU2hlZXQgZm9yIGNzcy1pbi1qcyBzeXN0ZW1zXG5cbi0gdXNlcyBtdWx0aXBsZSBzdHlsZSB0YWdzIGJlaGluZCB0aGUgc2NlbmVzIGZvciBtaWxsaW9ucyBvZiBydWxlc1xuLSB1c2VzIGBpbnNlcnRSdWxlYCBmb3IgYXBwZW5kaW5nIGluIHByb2R1Y3Rpb24gZm9yICptdWNoKiBmYXN0ZXIgcGVyZm9ybWFuY2VcblxuLy8gdXNhZ2VcblxuaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ0BlbW90aW9uL3NoZWV0J1xuXG5sZXQgc3R5bGVTaGVldCA9IG5ldyBTdHlsZVNoZWV0KHsga2V5OiAnJywgY29udGFpbmVyOiBkb2N1bWVudC5oZWFkIH0pXG5cbnN0eWxlU2hlZXQuaW5zZXJ0KCcjYm94IHsgYm9yZGVyOiAxcHggc29saWQgcmVkOyB9Jylcbi0gYXBwZW5kcyBhIGNzcyBydWxlIGludG8gdGhlIHN0eWxlc2hlZXRcblxuc3R5bGVTaGVldC5mbHVzaCgpXG4tIGVtcHRpZXMgdGhlIHN0eWxlc2hlZXQgb2YgYWxsIGl0cyBjb250ZW50c1xuXG4qL1xuLy8gJEZsb3dGaXhNZVxuZnVuY3Rpb24gc2hlZXRGb3JUYWcodGFnKSB7XG4gIGlmICh0YWcuc2hlZXQpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgcmV0dXJuIHRhZy5zaGVldDtcbiAgfSAvLyB0aGlzIHdlaXJkbmVzcyBicm91Z2h0IHRvIHlvdSBieSBmaXJlZm94XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cblxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZG9jdW1lbnQuc3R5bGVTaGVldHNbaV0ub3duZXJOb2RlID09PSB0YWcpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHJldHVybiBkb2N1bWVudC5zdHlsZVNoZWV0c1tpXTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHRhZy5zZXRBdHRyaWJ1dGUoJ2RhdGEtZW1vdGlvbicsIG9wdGlvbnMua2V5KTtcblxuICBpZiAob3B0aW9ucy5ub25jZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdGFnLnNldEF0dHJpYnV0ZSgnbm9uY2UnLCBvcHRpb25zLm5vbmNlKTtcbiAgfVxuXG4gIHRhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJykpO1xuICByZXR1cm4gdGFnO1xufVxuXG52YXIgU3R5bGVTaGVldCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFN0eWxlU2hlZXQob3B0aW9ucykge1xuICAgIHRoaXMuaXNTcGVlZHkgPSBvcHRpb25zLnNwZWVkeSA9PT0gdW5kZWZpbmVkID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA6IG9wdGlvbnMuc3BlZWR5O1xuICAgIHRoaXMudGFncyA9IFtdO1xuICAgIHRoaXMuY3RyID0gMDtcbiAgICB0aGlzLm5vbmNlID0gb3B0aW9ucy5ub25jZTsgLy8ga2V5IGlzIHRoZSB2YWx1ZSBvZiB0aGUgZGF0YS1lbW90aW9uIGF0dHJpYnV0ZSwgaXQncyB1c2VkIHRvIGlkZW50aWZ5IGRpZmZlcmVudCBzaGVldHNcblxuICAgIHRoaXMua2V5ID0gb3B0aW9ucy5rZXk7XG4gICAgdGhpcy5jb250YWluZXIgPSBvcHRpb25zLmNvbnRhaW5lcjtcbiAgICB0aGlzLmJlZm9yZSA9IG51bGw7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3R5bGVTaGVldC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmluc2VydCA9IGZ1bmN0aW9uIGluc2VydChydWxlKSB7XG4gICAgLy8gdGhlIG1heCBsZW5ndGggaXMgaG93IG1hbnkgcnVsZXMgd2UgaGF2ZSBwZXIgc3R5bGUgdGFnLCBpdCdzIDY1MDAwIGluIHNwZWVkeSBtb2RlXG4gICAgLy8gaXQncyAxIGluIGRldiBiZWNhdXNlIHdlIGluc2VydCBzb3VyY2UgbWFwcyB0aGF0IG1hcCBhIHNpbmdsZSBydWxlIHRvIGEgbG9jYXRpb25cbiAgICAvLyBhbmQgeW91IGNhbiBvbmx5IGhhdmUgb25lIHNvdXJjZSBtYXAgcGVyIHN0eWxlIHRhZ1xuICAgIGlmICh0aGlzLmN0ciAlICh0aGlzLmlzU3BlZWR5ID8gNjUwMDAgOiAxKSA9PT0gMCkge1xuICAgICAgdmFyIF90YWcgPSBjcmVhdGVTdHlsZUVsZW1lbnQodGhpcyk7XG5cbiAgICAgIHZhciBiZWZvcmU7XG5cbiAgICAgIGlmICh0aGlzLnRhZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGJlZm9yZSA9IHRoaXMuYmVmb3JlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYmVmb3JlID0gdGhpcy50YWdzW3RoaXMudGFncy5sZW5ndGggLSAxXS5uZXh0U2libGluZztcbiAgICAgIH1cblxuICAgICAgdGhpcy5jb250YWluZXIuaW5zZXJ0QmVmb3JlKF90YWcsIGJlZm9yZSk7XG4gICAgICB0aGlzLnRhZ3MucHVzaChfdGFnKTtcbiAgICB9XG5cbiAgICB2YXIgdGFnID0gdGhpcy50YWdzW3RoaXMudGFncy5sZW5ndGggLSAxXTtcblxuICAgIGlmICh0aGlzLmlzU3BlZWR5KSB7XG4gICAgICB2YXIgc2hlZXQgPSBzaGVldEZvclRhZyh0YWcpO1xuXG4gICAgICB0cnkge1xuICAgICAgICAvLyB0aGlzIGlzIGEgcmVhbGx5IGhvdCBwYXRoXG4gICAgICAgIC8vIHdlIGNoZWNrIHRoZSBzZWNvbmQgY2hhcmFjdGVyIGZpcnN0IGJlY2F1c2UgaGF2aW5nIFwiaVwiXG4gICAgICAgIC8vIGFzIHRoZSBzZWNvbmQgY2hhcmFjdGVyIHdpbGwgaGFwcGVuIGxlc3Mgb2Z0ZW4gdGhhblxuICAgICAgICAvLyBoYXZpbmcgXCJAXCIgYXMgdGhlIGZpcnN0IGNoYXJhY3RlclxuICAgICAgICB2YXIgaXNJbXBvcnRSdWxlID0gcnVsZS5jaGFyQ29kZUF0KDEpID09PSAxMDUgJiYgcnVsZS5jaGFyQ29kZUF0KDApID09PSA2NDsgLy8gdGhpcyBpcyB0aGUgdWx0cmFmYXN0IHZlcnNpb24sIHdvcmtzIGFjcm9zcyBicm93c2Vyc1xuICAgICAgICAvLyB0aGUgYmlnIGRyYXdiYWNrIGlzIHRoYXQgdGhlIGNzcyB3b24ndCBiZSBlZGl0YWJsZSBpbiBkZXZ0b29sc1xuXG4gICAgICAgIHNoZWV0Lmluc2VydFJ1bGUocnVsZSwgLy8gd2UgbmVlZCB0byBpbnNlcnQgQGltcG9ydCBydWxlcyBiZWZvcmUgYW55dGhpbmcgZWxzZVxuICAgICAgICAvLyBvdGhlcndpc2UgdGhlcmUgd2lsbCBiZSBhbiBlcnJvclxuICAgICAgICAvLyB0ZWNobmljYWxseSB0aGlzIG1lYW5zIHRoYXQgdGhlIEBpbXBvcnQgcnVsZXMgd2lsbFxuICAgICAgICAvLyBfdXN1YWxseV8obm90IGFsd2F5cyBzaW5jZSB0aGVyZSBjb3VsZCBiZSBtdWx0aXBsZSBzdHlsZSB0YWdzKVxuICAgICAgICAvLyBiZSB0aGUgZmlyc3Qgb25lcyBpbiBwcm9kIGFuZCBnZW5lcmFsbHkgbGF0ZXIgaW4gZGV2XG4gICAgICAgIC8vIHRoaXMgc2hvdWxkbid0IHJlYWxseSBtYXR0ZXIgaW4gdGhlIHJlYWwgd29ybGQgdGhvdWdoXG4gICAgICAgIC8vIEBpbXBvcnQgaXMgZ2VuZXJhbGx5IG9ubHkgdXNlZCBmb3IgZm9udCBmYWNlcyBmcm9tIGdvb2dsZSBmb250cyBhbmQgZXRjLlxuICAgICAgICAvLyBzbyB3aGlsZSB0aGlzIGNvdWxkIGJlIHRlY2huaWNhbGx5IGNvcnJlY3QgdGhlbiBpdCB3b3VsZCBiZSBzbG93ZXIgYW5kIGxhcmdlclxuICAgICAgICAvLyBmb3IgYSB0aW55IGJpdCBvZiBjb3JyZWN0bmVzcyB0aGF0IHdvbid0IG1hdHRlciBpbiB0aGUgcmVhbCB3b3JsZFxuICAgICAgICBpc0ltcG9ydFJ1bGUgPyAwIDogc2hlZXQuY3NzUnVsZXMubGVuZ3RoKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXCJUaGVyZSB3YXMgYSBwcm9ibGVtIGluc2VydGluZyB0aGUgZm9sbG93aW5nIHJ1bGU6IFxcXCJcIiArIHJ1bGUgKyBcIlxcXCJcIiwgZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGFnLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHJ1bGUpKTtcbiAgICB9XG5cbiAgICB0aGlzLmN0cisrO1xuICB9O1xuXG4gIF9wcm90by5mbHVzaCA9IGZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICB0aGlzLnRhZ3MuZm9yRWFjaChmdW5jdGlvbiAodGFnKSB7XG4gICAgICByZXR1cm4gdGFnLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGFnKTtcbiAgICB9KTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmN0ciA9IDA7XG4gIH07XG5cbiAgcmV0dXJuIFN0eWxlU2hlZXQ7XG59KCk7XG5cbmV4cG9ydCB7IFN0eWxlU2hlZXQgfTtcbiIsImZ1bmN0aW9uIHN0eWxpc19taW4gKFcpIHtcbiAgZnVuY3Rpb24gTShkLCBjLCBlLCBoLCBhKSB7XG4gICAgZm9yICh2YXIgbSA9IDAsIGIgPSAwLCB2ID0gMCwgbiA9IDAsIHEsIGcsIHggPSAwLCBLID0gMCwgaywgdSA9IGsgPSBxID0gMCwgbCA9IDAsIHIgPSAwLCBJID0gMCwgdCA9IDAsIEIgPSBlLmxlbmd0aCwgSiA9IEIgLSAxLCB5LCBmID0gJycsIHAgPSAnJywgRiA9ICcnLCBHID0gJycsIEM7IGwgPCBCOykge1xuICAgICAgZyA9IGUuY2hhckNvZGVBdChsKTtcbiAgICAgIGwgPT09IEogJiYgMCAhPT0gYiArIG4gKyB2ICsgbSAmJiAoMCAhPT0gYiAmJiAoZyA9IDQ3ID09PSBiID8gMTAgOiA0NyksIG4gPSB2ID0gbSA9IDAsIEIrKywgSisrKTtcblxuICAgICAgaWYgKDAgPT09IGIgKyBuICsgdiArIG0pIHtcbiAgICAgICAgaWYgKGwgPT09IEogJiYgKDAgPCByICYmIChmID0gZi5yZXBsYWNlKE4sICcnKSksIDAgPCBmLnRyaW0oKS5sZW5ndGgpKSB7XG4gICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgICAgIGNhc2UgMTM6XG4gICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgZiArPSBlLmNoYXJBdChsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBnID0gNTk7XG4gICAgICAgIH1cblxuICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICBjYXNlIDEyMzpcbiAgICAgICAgICAgIGYgPSBmLnRyaW0oKTtcbiAgICAgICAgICAgIHEgPSBmLmNoYXJDb2RlQXQoMCk7XG4gICAgICAgICAgICBrID0gMTtcblxuICAgICAgICAgICAgZm9yICh0ID0gKytsOyBsIDwgQjspIHtcbiAgICAgICAgICAgICAgc3dpdGNoIChnID0gZS5jaGFyQ29kZUF0KGwpKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAxMjM6XG4gICAgICAgICAgICAgICAgICBrKys7XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgICAgICAgICAgay0tO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgc3dpdGNoIChnID0gZS5jaGFyQ29kZUF0KGwgKyAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgICAgIGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodSA9IGwgKyAxOyB1IDwgSjsgKyt1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoZS5jaGFyQ29kZUF0KHUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg0MiA9PT0gZyAmJiA0MiA9PT0gZS5jaGFyQ29kZUF0KHUgLSAxKSAmJiBsICsgMiAhPT0gdSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gdSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg0NyA9PT0gZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gdSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBsID0gdTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDkxOlxuICAgICAgICAgICAgICAgICAgZysrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgICAgICAgIGcrKztcblxuICAgICAgICAgICAgICAgIGNhc2UgMzQ6XG4gICAgICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgICAgIGZvciAoOyBsKysgPCBKICYmIGUuY2hhckNvZGVBdChsKSAhPT0gZzspIHtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKDAgPT09IGspIGJyZWFrO1xuICAgICAgICAgICAgICBsKys7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGsgPSBlLnN1YnN0cmluZyh0LCBsKTtcbiAgICAgICAgICAgIDAgPT09IHEgJiYgKHEgPSAoZiA9IGYucmVwbGFjZShjYSwgJycpLnRyaW0oKSkuY2hhckNvZGVBdCgwKSk7XG5cbiAgICAgICAgICAgIHN3aXRjaCAocSkge1xuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIDAgPCByICYmIChmID0gZi5yZXBsYWNlKE4sICcnKSk7XG4gICAgICAgICAgICAgICAgZyA9IGYuY2hhckNvZGVBdCgxKTtcblxuICAgICAgICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgICAgICAgY2FzZSAxMDA6XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwOTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgY2FzZSA0NTpcbiAgICAgICAgICAgICAgICAgICAgciA9IGM7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByID0gTztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBrID0gTShjLCByLCBrLCBnLCBhICsgMSk7XG4gICAgICAgICAgICAgICAgdCA9IGsubGVuZ3RoO1xuICAgICAgICAgICAgICAgIDAgPCBBICYmIChyID0gWChPLCBmLCBJKSwgQyA9IEgoMywgaywgciwgYywgRCwgeiwgdCwgZywgYSwgaCksIGYgPSByLmpvaW4oJycpLCB2b2lkIDAgIT09IEMgJiYgMCA9PT0gKHQgPSAoayA9IEMudHJpbSgpKS5sZW5ndGgpICYmIChnID0gMCwgayA9ICcnKSk7XG4gICAgICAgICAgICAgICAgaWYgKDAgPCB0KSBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgICBmID0gZi5yZXBsYWNlKGRhLCBlYSk7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgMTAwOlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDk6XG4gICAgICAgICAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArICd7JyArIGsgKyAnfSc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIDEwNzpcbiAgICAgICAgICAgICAgICAgICAgZiA9IGYucmVwbGFjZShmYSwgJyQxICQyJyk7XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgJ3snICsgayArICd9JztcbiAgICAgICAgICAgICAgICAgICAgayA9IDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKCdAJyArIGssIDMpID8gJ0Atd2Via2l0LScgKyBrICsgJ0AnICsgayA6ICdAJyArIGs7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArIGssIDExMiA9PT0gaCAmJiAoayA9IChwICs9IGssICcnKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGsgPSAnJztcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGsgPSBNKGMsIFgoYywgZiwgSSksIGssIGgsIGEgKyAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgRiArPSBrO1xuICAgICAgICAgICAgayA9IEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgZiA9ICgwIDwgciA/IGYucmVwbGFjZShOLCAnJykgOiBmKS50cmltKCk7XG4gICAgICAgICAgICBpZiAoMSA8ICh0ID0gZi5sZW5ndGgpKSBzd2l0Y2ggKDAgPT09IHUgJiYgKHEgPSBmLmNoYXJDb2RlQXQoMCksIDQ1ID09PSBxIHx8IDk2IDwgcSAmJiAxMjMgPiBxKSAmJiAodCA9IChmID0gZi5yZXBsYWNlKCcgJywgJzonKSkubGVuZ3RoKSwgMCA8IEEgJiYgdm9pZCAwICE9PSAoQyA9IEgoMSwgZiwgYywgZCwgRCwgeiwgcC5sZW5ndGgsIGgsIGEsIGgpKSAmJiAwID09PSAodCA9IChmID0gQy50cmltKCkpLmxlbmd0aCkgJiYgKGYgPSAnXFx4MDBcXHgwMCcpLCBxID0gZi5jaGFyQ29kZUF0KDApLCBnID0gZi5jaGFyQ29kZUF0KDEpLCBxKSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIGlmICgxMDUgPT09IGcgfHwgOTkgPT09IGcpIHtcbiAgICAgICAgICAgICAgICAgIEcgKz0gZiArIGUuY2hhckF0KGwpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgNTggIT09IGYuY2hhckNvZGVBdCh0IC0gMSkgJiYgKHAgKz0gUChmLCBxLCBnLCBmLmNoYXJDb2RlQXQoMikpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICBjYXNlIDEzOlxuICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIDQ3ID09PSBiID8gYiA9IDAgOiAwID09PSAxICsgcSAmJiAxMDcgIT09IGggJiYgMCA8IGYubGVuZ3RoICYmIChyID0gMSwgZiArPSAnXFx4MDAnKTtcbiAgICAgICAgICAwIDwgQSAqIFkgJiYgSCgwLCBmLCBjLCBkLCBELCB6LCBwLmxlbmd0aCwgaCwgYSwgaCk7XG4gICAgICAgICAgeiA9IDE7XG4gICAgICAgICAgRCsrO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgNTk6XG4gICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgIGlmICgwID09PSBiICsgbiArIHYgKyBtKSB7XG4gICAgICAgICAgICB6Kys7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB6Kys7XG4gICAgICAgICAgeSA9IGUuY2hhckF0KGwpO1xuXG4gICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIG0gKyBiKSBzd2l0Y2ggKHgpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICAgICAgICB5ID0gJyc7XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAzMiAhPT0gZyAmJiAoeSA9ICcgJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcMCc7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFxmJztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXHYnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIChyID0gSSA9IDEsIHkgPSAnXFxmJyArIHkpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMDg6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0gKyBFICYmIDAgPCB1KSBzd2l0Y2ggKGwgLSB1KSB7XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgMTEyID09PSB4ICYmIDU4ID09PSBlLmNoYXJDb2RlQXQobCAtIDMpICYmIChFID0geCk7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgICAxMTEgPT09IEsgJiYgKEUgPSBLKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA1ODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmICh1ID0gbCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAwID09PSBiICsgdiArIG4gKyBtICYmIChyID0gMSwgeSArPSAnXFxyJyk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgMCA9PT0gYiAmJiAobiA9IG4gPT09IGcgPyAwIDogMCA9PT0gbiA/IGcgOiBuKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgdiAmJiBtKys7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDkzOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIHYgJiYgbS0tO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MTpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIHYtLTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0pIHtcbiAgICAgICAgICAgICAgICBpZiAoMCA9PT0gcSkgc3dpdGNoICgyICogeCArIDMgKiBLKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDUzMzpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHEgPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2Kys7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgMCA9PT0gYiArIHYgKyBuICsgbSArIHUgKyBrICYmIChrID0gMSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgaWYgKCEoMCA8IG4gKyBtICsgdikpIHN3aXRjaCAoYikge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgIHN3aXRjaCAoMiAqIGcgKyAzICogZS5jaGFyQ29kZUF0KGwgKyAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDIzNTpcbiAgICAgICAgICAgICAgICAgICAgICBiID0gNDc7XG4gICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMjA6XG4gICAgICAgICAgICAgICAgICAgICAgdCA9IGwsIGIgPSA0MjtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgICAgICAgNDcgPT09IGcgJiYgNDIgPT09IHggJiYgdCArIDIgIT09IGwgJiYgKDMzID09PSBlLmNoYXJDb2RlQXQodCArIDIpICYmIChwICs9IGUuc3Vic3RyaW5nKHQsIGwgKyAxKSksIHkgPSAnJywgYiA9IDApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgMCA9PT0gYiAmJiAoZiArPSB5KTtcbiAgICAgIH1cblxuICAgICAgSyA9IHg7XG4gICAgICB4ID0gZztcbiAgICAgIGwrKztcbiAgICB9XG5cbiAgICB0ID0gcC5sZW5ndGg7XG5cbiAgICBpZiAoMCA8IHQpIHtcbiAgICAgIHIgPSBjO1xuICAgICAgaWYgKDAgPCBBICYmIChDID0gSCgyLCBwLCByLCBkLCBELCB6LCB0LCBoLCBhLCBoKSwgdm9pZCAwICE9PSBDICYmIDAgPT09IChwID0gQykubGVuZ3RoKSkgcmV0dXJuIEcgKyBwICsgRjtcbiAgICAgIHAgPSByLmpvaW4oJywnKSArICd7JyArIHAgKyAnfSc7XG5cbiAgICAgIGlmICgwICE9PSB3ICogRSkge1xuICAgICAgICAyICE9PSB3IHx8IEwocCwgMikgfHwgKEUgPSAwKTtcblxuICAgICAgICBzd2l0Y2ggKEUpIHtcbiAgICAgICAgICBjYXNlIDExMTpcbiAgICAgICAgICAgIHAgPSBwLnJlcGxhY2UoaGEsICc6LW1vei0kMScpICsgcDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTI6XG4gICAgICAgICAgICBwID0gcC5yZXBsYWNlKFEsICc6Oi13ZWJraXQtaW5wdXQtJDEnKSArIHAucmVwbGFjZShRLCAnOjotbW96LSQxJykgKyBwLnJlcGxhY2UoUSwgJzotbXMtaW5wdXQtJDEnKSArIHA7XG4gICAgICAgIH1cblxuICAgICAgICBFID0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gRyArIHAgKyBGO1xuICB9XG5cbiAgZnVuY3Rpb24gWChkLCBjLCBlKSB7XG4gICAgdmFyIGggPSBjLnRyaW0oKS5zcGxpdChpYSk7XG4gICAgYyA9IGg7XG4gICAgdmFyIGEgPSBoLmxlbmd0aCxcbiAgICAgICAgbSA9IGQubGVuZ3RoO1xuXG4gICAgc3dpdGNoIChtKSB7XG4gICAgICBjYXNlIDA6XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHZhciBiID0gMDtcblxuICAgICAgICBmb3IgKGQgPSAwID09PSBtID8gJycgOiBkWzBdICsgJyAnOyBiIDwgYTsgKytiKSB7XG4gICAgICAgICAgY1tiXSA9IFooZCwgY1tiXSwgZSwgbSkudHJpbSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHZhciB2ID0gYiA9IDA7XG5cbiAgICAgICAgZm9yIChjID0gW107IGIgPCBhOyArK2IpIHtcbiAgICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8IG07ICsrbikge1xuICAgICAgICAgICAgY1t2KytdID0gWihkW25dICsgJyAnLCBoW2JdLCBlLCBtKS50cmltKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICByZXR1cm4gYztcbiAgfVxuXG4gIGZ1bmN0aW9uIFooZCwgYywgZSkge1xuICAgIHZhciBoID0gYy5jaGFyQ29kZUF0KDApO1xuICAgIDMzID4gaCAmJiAoaCA9IChjID0gYy50cmltKCkpLmNoYXJDb2RlQXQoMCkpO1xuXG4gICAgc3dpdGNoIChoKSB7XG4gICAgICBjYXNlIDM4OlxuICAgICAgICByZXR1cm4gYy5yZXBsYWNlKEYsICckMScgKyBkLnRyaW0oKSk7XG5cbiAgICAgIGNhc2UgNTg6XG4gICAgICAgIHJldHVybiBkLnRyaW0oKSArIGMucmVwbGFjZShGLCAnJDEnICsgZC50cmltKCkpO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoMCA8IDEgKiBlICYmIDAgPCBjLmluZGV4T2YoJ1xcZicpKSByZXR1cm4gYy5yZXBsYWNlKEYsICg1OCA9PT0gZC5jaGFyQ29kZUF0KDApID8gJycgOiAnJDEnKSArIGQudHJpbSgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZCArIGM7XG4gIH1cblxuICBmdW5jdGlvbiBQKGQsIGMsIGUsIGgpIHtcbiAgICB2YXIgYSA9IGQgKyAnOycsXG4gICAgICAgIG0gPSAyICogYyArIDMgKiBlICsgNCAqIGg7XG5cbiAgICBpZiAoOTQ0ID09PSBtKSB7XG4gICAgICBkID0gYS5pbmRleE9mKCc6JywgOSkgKyAxO1xuICAgICAgdmFyIGIgPSBhLnN1YnN0cmluZyhkLCBhLmxlbmd0aCAtIDEpLnRyaW0oKTtcbiAgICAgIGIgPSBhLnN1YnN0cmluZygwLCBkKS50cmltKCkgKyBiICsgJzsnO1xuICAgICAgcmV0dXJuIDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKGIsIDEpID8gJy13ZWJraXQtJyArIGIgKyBiIDogYjtcbiAgICB9XG5cbiAgICBpZiAoMCA9PT0gdyB8fCAyID09PSB3ICYmICFMKGEsIDEpKSByZXR1cm4gYTtcblxuICAgIHN3aXRjaCAobSkge1xuICAgICAgY2FzZSAxMDE1OlxuICAgICAgICByZXR1cm4gOTcgPT09IGEuY2hhckNvZGVBdCgxMCkgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDk1MTpcbiAgICAgICAgcmV0dXJuIDExNiA9PT0gYS5jaGFyQ29kZUF0KDMpID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSA5NjM6XG4gICAgICAgIHJldHVybiAxMTAgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgMTAwOTpcbiAgICAgICAgaWYgKDEwMCAhPT0gYS5jaGFyQ29kZUF0KDQpKSBicmVhaztcblxuICAgICAgY2FzZSA5Njk6XG4gICAgICBjYXNlIDk0MjpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcblxuICAgICAgY2FzZSA5Nzg6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgYTtcblxuICAgICAgY2FzZSAxMDE5OlxuICAgICAgY2FzZSA5ODM6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgODgzOlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg4KSkgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcbiAgICAgICAgaWYgKDAgPCBhLmluZGV4T2YoJ2ltYWdlLXNldCgnLCAxMSkpIHJldHVybiBhLnJlcGxhY2UoamEsICckMS13ZWJraXQtJDInKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDkzMjpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoNCkpIHN3aXRjaCAoYS5jaGFyQ29kZUF0KDUpKSB7XG4gICAgICAgICAgY2FzZSAxMDM6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtYm94LScgKyBhLnJlcGxhY2UoJy1ncm93JywgJycpICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ2dyb3cnLCAncG9zaXRpdmUnKSArIGE7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnc2hyaW5rJywgJ25lZ2F0aXZlJykgKyBhO1xuXG4gICAgICAgICAgY2FzZSA5ODpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnYmFzaXMnLCAncHJlZmVycmVkLXNpemUnKSArIGE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgOTY0OlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDEwMjM6XG4gICAgICAgIGlmICg5OSAhPT0gYS5jaGFyQ29kZUF0KDgpKSBicmVhaztcbiAgICAgICAgYiA9IGEuc3Vic3RyaW5nKGEuaW5kZXhPZignOicsIDE1KSkucmVwbGFjZSgnZmxleC0nLCAnJykucmVwbGFjZSgnc3BhY2UtYmV0d2VlbicsICdqdXN0aWZ5Jyk7XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC1ib3gtcGFjaycgKyBiICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtcGFjaycgKyBiICsgYTtcblxuICAgICAgY2FzZSAxMDA1OlxuICAgICAgICByZXR1cm4ga2EudGVzdChhKSA/IGEucmVwbGFjZShhYSwgJzotd2Via2l0LScpICsgYS5yZXBsYWNlKGFhLCAnOi1tb3otJykgKyBhIDogYTtcblxuICAgICAgY2FzZSAxZTM6XG4gICAgICAgIGIgPSBhLnN1YnN0cmluZygxMykudHJpbSgpO1xuICAgICAgICBjID0gYi5pbmRleE9mKCctJykgKyAxO1xuXG4gICAgICAgIHN3aXRjaCAoYi5jaGFyQ29kZUF0KDApICsgYi5jaGFyQ29kZUF0KGMpKSB7XG4gICAgICAgICAgY2FzZSAyMjY6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICd0YicpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIzMjpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ3RiLXJsJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjIwOlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAnbHInKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYiArIGE7XG5cbiAgICAgIGNhc2UgMTAxNzpcbiAgICAgICAgaWYgKC0xID09PSBhLmluZGV4T2YoJ3N0aWNreScsIDkpKSBicmVhaztcblxuICAgICAgY2FzZSA5NzU6XG4gICAgICAgIGMgPSAoYSA9IGQpLmxlbmd0aCAtIDEwO1xuICAgICAgICBiID0gKDMzID09PSBhLmNoYXJDb2RlQXQoYykgPyBhLnN1YnN0cmluZygwLCBjKSA6IGEpLnN1YnN0cmluZyhkLmluZGV4T2YoJzonLCA3KSArIDEpLnRyaW0oKTtcblxuICAgICAgICBzd2l0Y2ggKG0gPSBiLmNoYXJDb2RlQXQoMCkgKyAoYi5jaGFyQ29kZUF0KDcpIHwgMCkpIHtcbiAgICAgICAgICBjYXNlIDIwMzpcbiAgICAgICAgICAgIGlmICgxMTEgPiBiLmNoYXJDb2RlQXQoOCkpIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICBhID0gYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArICc7JyArIGE7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjA3OlxuICAgICAgICAgIGNhc2UgMTAyOlxuICAgICAgICAgICAgYSA9IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgKDEwMiA8IG0gPyAnaW5saW5lLScgOiAnJykgKyAnYm94JykgKyAnOycgKyBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgJzsnICsgYS5yZXBsYWNlKGIsICctbXMtJyArIGIgKyAnYm94JykgKyAnOycgKyBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGEgKyAnOyc7XG5cbiAgICAgIGNhc2UgOTM4OlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg1KSkgc3dpdGNoIChhLmNoYXJDb2RlQXQoNikpIHtcbiAgICAgICAgICBjYXNlIDEwNTpcbiAgICAgICAgICAgIHJldHVybiBiID0gYS5yZXBsYWNlKCctaXRlbXMnLCAnJyksICctd2Via2l0LScgKyBhICsgJy13ZWJraXQtYm94LScgKyBiICsgJy1tcy1mbGV4LScgKyBiICsgYTtcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LWl0ZW0tJyArIGEucmVwbGFjZShiYSwgJycpICsgYTtcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtbGluZS1wYWNrJyArIGEucmVwbGFjZSgnYWxpZ24tY29udGVudCcsICcnKS5yZXBsYWNlKGJhLCAnJykgKyBhO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk3MzpcbiAgICAgIGNhc2UgOTg5OlxuICAgICAgICBpZiAoNDUgIT09IGEuY2hhckNvZGVBdCgzKSB8fCAxMjIgPT09IGEuY2hhckNvZGVBdCg0KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTMxOlxuICAgICAgY2FzZSA5NTM6XG4gICAgICAgIGlmICghMCA9PT0gbGEudGVzdChkKSkgcmV0dXJuIDExNSA9PT0gKGIgPSBkLnN1YnN0cmluZyhkLmluZGV4T2YoJzonKSArIDEpKS5jaGFyQ29kZUF0KDApID8gUChkLnJlcGxhY2UoJ3N0cmV0Y2gnLCAnZmlsbC1hdmFpbGFibGUnKSwgYywgZSwgaCkucmVwbGFjZSgnOmZpbGwtYXZhaWxhYmxlJywgJzpzdHJldGNoJykgOiBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgYS5yZXBsYWNlKGIsICctbW96LScgKyBiLnJlcGxhY2UoJ2ZpbGwtJywgJycpKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk2MjpcbiAgICAgICAgaWYgKGEgPSAnLXdlYmtpdC0nICsgYSArICgxMDIgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctbXMtJyArIGEgOiAnJykgKyBhLCAyMTEgPT09IGUgKyBoICYmIDEwNSA9PT0gYS5jaGFyQ29kZUF0KDEzKSAmJiAwIDwgYS5pbmRleE9mKCd0cmFuc2Zvcm0nLCAxMCkpIHJldHVybiBhLnN1YnN0cmluZygwLCBhLmluZGV4T2YoJzsnLCAyNykgKyAxKS5yZXBsYWNlKG1hLCAnJDEtd2Via2l0LSQyJykgKyBhO1xuICAgIH1cblxuICAgIHJldHVybiBhO1xuICB9XG5cbiAgZnVuY3Rpb24gTChkLCBjKSB7XG4gICAgdmFyIGUgPSBkLmluZGV4T2YoMSA9PT0gYyA/ICc6JyA6ICd7JyksXG4gICAgICAgIGggPSBkLnN1YnN0cmluZygwLCAzICE9PSBjID8gZSA6IDEwKTtcbiAgICBlID0gZC5zdWJzdHJpbmcoZSArIDEsIGQubGVuZ3RoIC0gMSk7XG4gICAgcmV0dXJuIFIoMiAhPT0gYyA/IGggOiBoLnJlcGxhY2UobmEsICckMScpLCBlLCBjKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGVhKGQsIGMpIHtcbiAgICB2YXIgZSA9IFAoYywgYy5jaGFyQ29kZUF0KDApLCBjLmNoYXJDb2RlQXQoMSksIGMuY2hhckNvZGVBdCgyKSk7XG4gICAgcmV0dXJuIGUgIT09IGMgKyAnOycgPyBlLnJlcGxhY2Uob2EsICcgb3IgKCQxKScpLnN1YnN0cmluZyg0KSA6ICcoJyArIGMgKyAnKSc7XG4gIH1cblxuICBmdW5jdGlvbiBIKGQsIGMsIGUsIGgsIGEsIG0sIGIsIHYsIG4sIHEpIHtcbiAgICBmb3IgKHZhciBnID0gMCwgeCA9IGMsIHc7IGcgPCBBOyArK2cpIHtcbiAgICAgIHN3aXRjaCAodyA9IFNbZ10uY2FsbChCLCBkLCB4LCBlLCBoLCBhLCBtLCBiLCB2LCBuLCBxKSkge1xuICAgICAgICBjYXNlIHZvaWQgMDpcbiAgICAgICAgY2FzZSAhMTpcbiAgICAgICAgY2FzZSAhMDpcbiAgICAgICAgY2FzZSBudWxsOlxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgeCA9IHc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHggIT09IGMpIHJldHVybiB4O1xuICB9XG5cbiAgZnVuY3Rpb24gVChkKSB7XG4gICAgc3dpdGNoIChkKSB7XG4gICAgICBjYXNlIHZvaWQgMDpcbiAgICAgIGNhc2UgbnVsbDpcbiAgICAgICAgQSA9IFMubGVuZ3RoID0gMDtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZCkgU1tBKytdID0gZDtlbHNlIGlmICgnb2JqZWN0JyA9PT0gdHlwZW9mIGQpIGZvciAodmFyIGMgPSAwLCBlID0gZC5sZW5ndGg7IGMgPCBlOyArK2MpIHtcbiAgICAgICAgICBUKGRbY10pO1xuICAgICAgICB9IGVsc2UgWSA9ICEhZCB8IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIFQ7XG4gIH1cblxuICBmdW5jdGlvbiBVKGQpIHtcbiAgICBkID0gZC5wcmVmaXg7XG4gICAgdm9pZCAwICE9PSBkICYmIChSID0gbnVsbCwgZCA/ICdmdW5jdGlvbicgIT09IHR5cGVvZiBkID8gdyA9IDEgOiAodyA9IDIsIFIgPSBkKSA6IHcgPSAwKTtcbiAgICByZXR1cm4gVTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEIoZCwgYykge1xuICAgIHZhciBlID0gZDtcbiAgICAzMyA+IGUuY2hhckNvZGVBdCgwKSAmJiAoZSA9IGUudHJpbSgpKTtcbiAgICBWID0gZTtcbiAgICBlID0gW1ZdO1xuXG4gICAgaWYgKDAgPCBBKSB7XG4gICAgICB2YXIgaCA9IEgoLTEsIGMsIGUsIGUsIEQsIHosIDAsIDAsIDAsIDApO1xuICAgICAgdm9pZCAwICE9PSBoICYmICdzdHJpbmcnID09PSB0eXBlb2YgaCAmJiAoYyA9IGgpO1xuICAgIH1cblxuICAgIHZhciBhID0gTShPLCBlLCBjLCAwLCAwKTtcbiAgICAwIDwgQSAmJiAoaCA9IEgoLTIsIGEsIGUsIGUsIEQsIHosIGEubGVuZ3RoLCAwLCAwLCAwKSwgdm9pZCAwICE9PSBoICYmIChhID0gaCkpO1xuICAgIFYgPSAnJztcbiAgICBFID0gMDtcbiAgICB6ID0gRCA9IDE7XG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICB2YXIgY2EgPSAvXlxcMCsvZyxcbiAgICAgIE4gPSAvW1xcMFxcclxcZl0vZyxcbiAgICAgIGFhID0gLzogKi9nLFxuICAgICAga2EgPSAvem9vfGdyYS8sXG4gICAgICBtYSA9IC8oWyw6IF0pKHRyYW5zZm9ybSkvZyxcbiAgICAgIGlhID0gLyxcXHIrPy9nLFxuICAgICAgRiA9IC8oW1xcdFxcclxcbiBdKSpcXGY/Ji9nLFxuICAgICAgZmEgPSAvQChrXFx3KylcXHMqKFxcUyopXFxzKi8sXG4gICAgICBRID0gLzo6KHBsYWNlKS9nLFxuICAgICAgaGEgPSAvOihyZWFkLW9ubHkpL2csXG4gICAgICBHID0gL1tzdmhdXFx3Ky1bdGJscl17Mn0vLFxuICAgICAgZGEgPSAvXFwoXFxzKiguKilcXHMqXFwpL2csXG4gICAgICBvYSA9IC8oW1xcc1xcU10qPyk7L2csXG4gICAgICBiYSA9IC8tc2VsZnxmbGV4LS9nLFxuICAgICAgbmEgPSAvW15dKj8oOltycF1bZWxdYVtcXHctXSspW15dKi8sXG4gICAgICBsYSA9IC9zdHJldGNofDpcXHMqXFx3K1xcLSg/OmNvbnRlfGF2YWlsKS8sXG4gICAgICBqYSA9IC8oW14tXSkoaW1hZ2Utc2V0XFwoKS8sXG4gICAgICB6ID0gMSxcbiAgICAgIEQgPSAxLFxuICAgICAgRSA9IDAsXG4gICAgICB3ID0gMSxcbiAgICAgIE8gPSBbXSxcbiAgICAgIFMgPSBbXSxcbiAgICAgIEEgPSAwLFxuICAgICAgUiA9IG51bGwsXG4gICAgICBZID0gMCxcbiAgICAgIFYgPSAnJztcbiAgQi51c2UgPSBUO1xuICBCLnNldCA9IFU7XG4gIHZvaWQgMCAhPT0gVyAmJiBVKFcpO1xuICByZXR1cm4gQjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGlzX21pbjtcbiIsImltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdAZW1vdGlvbi9zaGVldCc7XG5pbXBvcnQgU3R5bGlzIGZyb20gJ0BlbW90aW9uL3N0eWxpcyc7XG5pbXBvcnQgJ0BlbW90aW9uL3dlYWstbWVtb2l6ZSc7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90aHlzdWx0YW4vc3R5bGlzLmpzL3RyZWUvbWFzdGVyL3BsdWdpbnMvcnVsZS1zaGVldFxuLy8gaW5saW5lZCB0byBhdm9pZCB1bWQgd3JhcHBlciBhbmQgcGVlckRlcCB3YXJuaW5ncy9pbnN0YWxsaW5nIHN0eWxpc1xuLy8gc2luY2Ugd2UgdXNlIHN0eWxpcyBhZnRlciBjbG9zdXJlIGNvbXBpbGVyXG52YXIgZGVsaW1pdGVyID0gJy8qfCovJztcbnZhciBuZWVkbGUgPSBkZWxpbWl0ZXIgKyAnfSc7XG5cbmZ1bmN0aW9uIHRvU2hlZXQoYmxvY2spIHtcbiAgaWYgKGJsb2NrKSB7XG4gICAgU2hlZXQuY3VycmVudC5pbnNlcnQoYmxvY2sgKyAnfScpO1xuICB9XG59XG5cbnZhciBTaGVldCA9IHtcbiAgY3VycmVudDogbnVsbFxufTtcbnZhciBydWxlU2hlZXQgPSBmdW5jdGlvbiBydWxlU2hlZXQoY29udGV4dCwgY29udGVudCwgc2VsZWN0b3JzLCBwYXJlbnRzLCBsaW5lLCBjb2x1bW4sIGxlbmd0aCwgbnMsIGRlcHRoLCBhdCkge1xuICBzd2l0Y2ggKGNvbnRleHQpIHtcbiAgICAvLyBwcm9wZXJ0eVxuICAgIGNhc2UgMTpcbiAgICAgIHtcbiAgICAgICAgc3dpdGNoIChjb250ZW50LmNoYXJDb2RlQXQoMCkpIHtcbiAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAvLyBAaW1wb3J0XG4gICAgICAgICAgICAgIFNoZWV0LmN1cnJlbnQuaW5zZXJ0KGNvbnRlbnQgKyAnOycpO1xuICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgLy8gY2hhcmNvZGUgZm9yIGxcblxuICAgICAgICAgIGNhc2UgMTA4OlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAvLyBjaGFyY29kZSBmb3IgYlxuICAgICAgICAgICAgICAvLyB0aGlzIGlnbm9yZXMgbGFiZWxcbiAgICAgICAgICAgICAgaWYgKGNvbnRlbnQuY2hhckNvZGVBdCgyKSA9PT0gOTgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIC8vIHNlbGVjdG9yXG5cbiAgICBjYXNlIDI6XG4gICAgICB7XG4gICAgICAgIGlmIChucyA9PT0gMCkgcmV0dXJuIGNvbnRlbnQgKyBkZWxpbWl0ZXI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIC8vIGF0LXJ1bGVcblxuICAgIGNhc2UgMzpcbiAgICAgIHtcbiAgICAgICAgc3dpdGNoIChucykge1xuICAgICAgICAgIC8vIEBmb250LWZhY2UsIEBwYWdlXG4gICAgICAgICAgY2FzZSAxMDI6XG4gICAgICAgICAgY2FzZSAxMTI6XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIFNoZWV0LmN1cnJlbnQuaW5zZXJ0KHNlbGVjdG9yc1swXSArIGNvbnRlbnQpO1xuICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICByZXR1cm4gY29udGVudCArIChhdCA9PT0gMCA/IGRlbGltaXRlciA6ICcnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgY2FzZSAtMjpcbiAgICAgIHtcbiAgICAgICAgY29udGVudC5zcGxpdChuZWVkbGUpLmZvckVhY2godG9TaGVldCk7XG4gICAgICB9XG4gIH1cbn07XG5cbnZhciBjcmVhdGVDYWNoZSA9IGZ1bmN0aW9uIGNyZWF0ZUNhY2hlKG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHVuZGVmaW5lZCkgb3B0aW9ucyA9IHt9O1xuICB2YXIga2V5ID0gb3B0aW9ucy5rZXkgfHwgJ2Nzcyc7XG4gIHZhciBzdHlsaXNPcHRpb25zO1xuXG4gIGlmIChvcHRpb25zLnByZWZpeCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgc3R5bGlzT3B0aW9ucyA9IHtcbiAgICAgIHByZWZpeDogb3B0aW9ucy5wcmVmaXhcbiAgICB9O1xuICB9XG5cbiAgdmFyIHN0eWxpcyA9IG5ldyBTdHlsaXMoc3R5bGlzT3B0aW9ucyk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgaWYgKC9bXmEtei1dLy50ZXN0KGtleSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkVtb3Rpb24ga2V5IG11c3Qgb25seSBjb250YWluIGxvd2VyIGNhc2UgYWxwaGFiZXRpY2FsIGNoYXJhY3RlcnMgYW5kIC0gYnV0IFxcXCJcIiArIGtleSArIFwiXFxcIiB3YXMgcGFzc2VkXCIpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbnNlcnRlZCA9IHt9OyAvLyAkRmxvd0ZpeE1lXG5cbiAgdmFyIGNvbnRhaW5lcjtcblxuICB7XG4gICAgY29udGFpbmVyID0gb3B0aW9ucy5jb250YWluZXIgfHwgZG9jdW1lbnQuaGVhZDtcbiAgICB2YXIgbm9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwic3R5bGVbZGF0YS1lbW90aW9uLVwiICsga2V5ICsgXCJdXCIpO1xuICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwobm9kZXMsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICB2YXIgYXR0cmliID0gbm9kZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWVtb3Rpb24tXCIgKyBrZXkpOyAvLyAkRmxvd0ZpeE1lXG5cbiAgICAgIGF0dHJpYi5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgIGluc2VydGVkW2lkXSA9IHRydWU7XG4gICAgICB9KTtcblxuICAgICAgaWYgKG5vZGUucGFyZW50Tm9kZSAhPT0gY29udGFpbmVyKSB7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChub2RlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHZhciBfaW5zZXJ0O1xuXG4gIHtcbiAgICBzdHlsaXMudXNlKG9wdGlvbnMuc3R5bGlzUGx1Z2lucykocnVsZVNoZWV0KTtcblxuICAgIF9pbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQoc2VsZWN0b3IsIHNlcmlhbGl6ZWQsIHNoZWV0LCBzaG91bGRDYWNoZSkge1xuICAgICAgdmFyIG5hbWUgPSBzZXJpYWxpemVkLm5hbWU7XG4gICAgICBTaGVldC5jdXJyZW50ID0gc2hlZXQ7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHNlcmlhbGl6ZWQubWFwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdmFyIG1hcCA9IHNlcmlhbGl6ZWQubWFwO1xuICAgICAgICBTaGVldC5jdXJyZW50ID0ge1xuICAgICAgICAgIGluc2VydDogZnVuY3Rpb24gaW5zZXJ0KHJ1bGUpIHtcbiAgICAgICAgICAgIHNoZWV0Lmluc2VydChydWxlICsgbWFwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHN0eWxpcyhzZWxlY3Rvciwgc2VyaWFsaXplZC5zdHlsZXMpO1xuXG4gICAgICBpZiAoc2hvdWxkQ2FjaGUpIHtcbiAgICAgICAgY2FjaGUuaW5zZXJ0ZWRbbmFtZV0gPSB0cnVlO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIGh0dHBzOi8vZXNiZW5jaC5jb20vYmVuY2gvNWJmNzM3MWE0Y2Q3ZTYwMDllZjYxZDBhXG4gICAgdmFyIGNvbW1lbnRTdGFydCA9IC9cXC9cXCovZztcbiAgICB2YXIgY29tbWVudEVuZCA9IC9cXCpcXC8vZztcbiAgICBzdHlsaXMudXNlKGZ1bmN0aW9uIChjb250ZXh0LCBjb250ZW50KSB7XG4gICAgICBzd2l0Y2ggKGNvbnRleHQpIHtcbiAgICAgICAgY2FzZSAtMTpcbiAgICAgICAgICB7XG4gICAgICAgICAgICB3aGlsZSAoY29tbWVudFN0YXJ0LnRlc3QoY29udGVudCkpIHtcbiAgICAgICAgICAgICAgY29tbWVudEVuZC5sYXN0SW5kZXggPSBjb21tZW50U3RhcnQubGFzdEluZGV4O1xuXG4gICAgICAgICAgICAgIGlmIChjb21tZW50RW5kLnRlc3QoY29udGVudCkpIHtcbiAgICAgICAgICAgICAgICBjb21tZW50U3RhcnQubGFzdEluZGV4ID0gY29tbWVudEVuZC5sYXN0SW5kZXg7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdXIgc3R5bGVzIGhhdmUgYW4gdW50ZXJtaW5hdGVkIGNvbW1lbnQgKFwiLypcIiB3aXRob3V0IGNvcnJlc3BvbmRpbmcgXCIqL1wiKS4nKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29tbWVudFN0YXJ0Lmxhc3RJbmRleCA9IDA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gICAgc3R5bGlzLnVzZShmdW5jdGlvbiAoY29udGV4dCwgY29udGVudCwgc2VsZWN0b3JzKSB7XG4gICAgICBzd2l0Y2ggKGNvbnRleHQpIHtcbiAgICAgICAgY2FzZSAtMTpcbiAgICAgICAgICB7XG4gICAgICAgICAgICB2YXIgZmxhZyA9ICdlbW90aW9uLWRpc2FibGUtc2VydmVyLXJlbmRlcmluZy11bnNhZmUtc2VsZWN0b3Itd2FybmluZy1wbGVhc2UtZG8tbm90LXVzZS10aGlzLXRoZS13YXJuaW5nLWV4aXN0cy1mb3ItYS1yZWFzb24nO1xuICAgICAgICAgICAgdmFyIHVuc2FmZVBzZXVkb0NsYXNzZXMgPSBjb250ZW50Lm1hdGNoKC8oOmZpcnN0fDpudGh8Om50aC1sYXN0KS1jaGlsZC9nKTtcblxuICAgICAgICAgICAgaWYgKHVuc2FmZVBzZXVkb0NsYXNzZXMpIHtcbiAgICAgICAgICAgICAgdW5zYWZlUHNldWRvQ2xhc3Nlcy5mb3JFYWNoKGZ1bmN0aW9uICh1bnNhZmVQc2V1ZG9DbGFzcykge1xuICAgICAgICAgICAgICAgIHZhciBpZ25vcmVSZWdFeHAgPSBuZXcgUmVnRXhwKHVuc2FmZVBzZXVkb0NsYXNzICsgXCIuKlxcXFwvXFxcXCogXCIgKyBmbGFnICsgXCIgXFxcXCpcXFxcL1wiKTtcbiAgICAgICAgICAgICAgICB2YXIgaWdub3JlID0gaWdub3JlUmVnRXhwLnRlc3QoY29udGVudCk7XG5cbiAgICAgICAgICAgICAgICBpZiAodW5zYWZlUHNldWRvQ2xhc3MgJiYgIWlnbm9yZSkge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlRoZSBwc2V1ZG8gY2xhc3MgXFxcIlwiICsgdW5zYWZlUHNldWRvQ2xhc3MgKyBcIlxcXCIgaXMgcG90ZW50aWFsbHkgdW5zYWZlIHdoZW4gZG9pbmcgc2VydmVyLXNpZGUgcmVuZGVyaW5nLiBUcnkgY2hhbmdpbmcgaXQgdG8gXFxcIlwiICsgdW5zYWZlUHNldWRvQ2xhc3Muc3BsaXQoJy1jaGlsZCcpWzBdICsgXCItb2YtdHlwZVxcXCIuXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHZhciBjYWNoZSA9IHtcbiAgICBrZXk6IGtleSxcbiAgICBzaGVldDogbmV3IFN0eWxlU2hlZXQoe1xuICAgICAga2V5OiBrZXksXG4gICAgICBjb250YWluZXI6IGNvbnRhaW5lcixcbiAgICAgIG5vbmNlOiBvcHRpb25zLm5vbmNlLFxuICAgICAgc3BlZWR5OiBvcHRpb25zLnNwZWVkeVxuICAgIH0pLFxuICAgIG5vbmNlOiBvcHRpb25zLm5vbmNlLFxuICAgIGluc2VydGVkOiBpbnNlcnRlZCxcbiAgICByZWdpc3RlcmVkOiB7fSxcbiAgICBpbnNlcnQ6IF9pbnNlcnRcbiAgfTtcbiAgcmV0dXJuIGNhY2hlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQ2FjaGU7XG4iLCJ2YXIgaXNCcm93c2VyID0gXCJvYmplY3RcIiAhPT0gJ3VuZGVmaW5lZCc7XG5mdW5jdGlvbiBnZXRSZWdpc3RlcmVkU3R5bGVzKHJlZ2lzdGVyZWQsIHJlZ2lzdGVyZWRTdHlsZXMsIGNsYXNzTmFtZXMpIHtcbiAgdmFyIHJhd0NsYXNzTmFtZSA9ICcnO1xuICBjbGFzc05hbWVzLnNwbGl0KCcgJykuZm9yRWFjaChmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgaWYgKHJlZ2lzdGVyZWRbY2xhc3NOYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZWdpc3RlcmVkU3R5bGVzLnB1c2gocmVnaXN0ZXJlZFtjbGFzc05hbWVdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmF3Q2xhc3NOYW1lICs9IGNsYXNzTmFtZSArIFwiIFwiO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByYXdDbGFzc05hbWU7XG59XG52YXIgaW5zZXJ0U3R5bGVzID0gZnVuY3Rpb24gaW5zZXJ0U3R5bGVzKGNhY2hlLCBzZXJpYWxpemVkLCBpc1N0cmluZ1RhZykge1xuICB2YXIgY2xhc3NOYW1lID0gY2FjaGUua2V5ICsgXCItXCIgKyBzZXJpYWxpemVkLm5hbWU7XG5cbiAgaWYgKCAvLyB3ZSBvbmx5IG5lZWQgdG8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIHJlZ2lzdGVyZWQgY2FjaGUgaWYgdGhlXG4gIC8vIGNsYXNzIG5hbWUgY291bGQgYmUgdXNlZCBmdXJ0aGVyIGRvd25cbiAgLy8gdGhlIHRyZWUgYnV0IGlmIGl0J3MgYSBzdHJpbmcgdGFnLCB3ZSBrbm93IGl0IHdvbid0XG4gIC8vIHNvIHdlIGRvbid0IGhhdmUgdG8gYWRkIGl0IHRvIHJlZ2lzdGVyZWQgY2FjaGUuXG4gIC8vIHRoaXMgaW1wcm92ZXMgbWVtb3J5IHVzYWdlIHNpbmNlIHdlIGNhbiBhdm9pZCBzdG9yaW5nIHRoZSB3aG9sZSBzdHlsZSBzdHJpbmdcbiAgKGlzU3RyaW5nVGFnID09PSBmYWxzZSB8fCAvLyB3ZSBuZWVkIHRvIGFsd2F5cyBzdG9yZSBpdCBpZiB3ZSdyZSBpbiBjb21wYXQgbW9kZSBhbmRcbiAgLy8gaW4gbm9kZSBzaW5jZSBlbW90aW9uLXNlcnZlciByZWxpZXMgb24gd2hldGhlciBhIHN0eWxlIGlzIGluXG4gIC8vIHRoZSByZWdpc3RlcmVkIGNhY2hlIHRvIGtub3cgd2hldGhlciBhIHN0eWxlIGlzIGdsb2JhbCBvciBub3RcbiAgLy8gYWxzbywgbm90ZSB0aGF0IHRoaXMgY2hlY2sgd2lsbCBiZSBkZWFkIGNvZGUgZWxpbWluYXRlZCBpbiB0aGUgYnJvd3NlclxuICBpc0Jyb3dzZXIgPT09IGZhbHNlICYmIGNhY2hlLmNvbXBhdCAhPT0gdW5kZWZpbmVkKSAmJiBjYWNoZS5yZWdpc3RlcmVkW2NsYXNzTmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgIGNhY2hlLnJlZ2lzdGVyZWRbY2xhc3NOYW1lXSA9IHNlcmlhbGl6ZWQuc3R5bGVzO1xuICB9XG5cbiAgaWYgKGNhY2hlLmluc2VydGVkW3NlcmlhbGl6ZWQubmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBjdXJyZW50ID0gc2VyaWFsaXplZDtcblxuICAgIGRvIHtcbiAgICAgIHZhciBtYXliZVN0eWxlcyA9IGNhY2hlLmluc2VydChcIi5cIiArIGNsYXNzTmFtZSwgY3VycmVudCwgY2FjaGUuc2hlZXQsIHRydWUpO1xuXG4gICAgICBjdXJyZW50ID0gY3VycmVudC5uZXh0O1xuICAgIH0gd2hpbGUgKGN1cnJlbnQgIT09IHVuZGVmaW5lZCk7XG4gIH1cbn07XG5cbmV4cG9ydCB7IGdldFJlZ2lzdGVyZWRTdHlsZXMsIGluc2VydFN0eWxlcyB9O1xuIiwiLyogZXNsaW50LWRpc2FibGUgKi9cbi8vIG11cm11cmhhc2gyIHZpYSBodHRwczovL2dpdGh1Yi5jb20vZ2FyeWNvdXJ0L211cm11cmhhc2gtanMvYmxvYi9tYXN0ZXIvbXVybXVyaGFzaDJfZ2MuanNcbmZ1bmN0aW9uIG11cm11cmhhc2gyXzMyX2djKHN0cikge1xuICB2YXIgbCA9IHN0ci5sZW5ndGgsXG4gICAgICBoID0gbCBeIGwsXG4gICAgICBpID0gMCxcbiAgICAgIGs7XG5cbiAgd2hpbGUgKGwgPj0gNCkge1xuICAgIGsgPSBzdHIuY2hhckNvZGVBdChpKSAmIDB4ZmYgfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDggfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDE2IHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCAyNDtcbiAgICBrID0gKGsgJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoKGsgPj4+IDE2KSAqIDB4NWJkMWU5OTUgJiAweGZmZmYpIDw8IDE2KTtcbiAgICBrIF49IGsgPj4+IDI0O1xuICAgIGsgPSAoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKCgoayA+Pj4gMTYpICogMHg1YmQxZTk5NSAmIDB4ZmZmZikgPDwgMTYpO1xuICAgIGggPSAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKCgoaCA+Pj4gMTYpICogMHg1YmQxZTk5NSAmIDB4ZmZmZikgPDwgMTYpIF4gaztcbiAgICBsIC09IDQ7XG4gICAgKytpO1xuICB9XG5cbiAgc3dpdGNoIChsKSB7XG4gICAgY2FzZSAzOlxuICAgICAgaCBePSAoc3RyLmNoYXJDb2RlQXQoaSArIDIpICYgMHhmZikgPDwgMTY7XG5cbiAgICBjYXNlIDI6XG4gICAgICBoIF49IChzdHIuY2hhckNvZGVBdChpICsgMSkgJiAweGZmKSA8PCA4O1xuXG4gICAgY2FzZSAxOlxuICAgICAgaCBePSBzdHIuY2hhckNvZGVBdChpKSAmIDB4ZmY7XG4gICAgICBoID0gKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoKGggPj4+IDE2KSAqIDB4NWJkMWU5OTUgJiAweGZmZmYpIDw8IDE2KTtcbiAgfVxuXG4gIGggXj0gaCA+Pj4gMTM7XG4gIGggPSAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKCgoaCA+Pj4gMTYpICogMHg1YmQxZTk5NSAmIDB4ZmZmZikgPDwgMTYpO1xuICBoIF49IGggPj4+IDE1O1xuICByZXR1cm4gKGggPj4+IDApLnRvU3RyaW5nKDM2KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbXVybXVyaGFzaDJfMzJfZ2M7XG4iLCJpbXBvcnQgaGFzaFN0cmluZyBmcm9tICdAZW1vdGlvbi9oYXNoJztcbmltcG9ydCB1bml0bGVzcyBmcm9tICdAZW1vdGlvbi91bml0bGVzcyc7XG5pbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcblxudmFyIGh5cGhlbmF0ZVJlZ2V4ID0gL1tBLVpdfF5tcy9nO1xudmFyIGFuaW1hdGlvblJlZ2V4ID0gL19FTU9fKFteX10rPylfKFteXSo/KV9FTU9fL2c7XG52YXIgcHJvY2Vzc1N0eWxlTmFtZSA9IG1lbW9pemUoZnVuY3Rpb24gKHN0eWxlTmFtZSkge1xuICByZXR1cm4gc3R5bGVOYW1lLnJlcGxhY2UoaHlwaGVuYXRlUmVnZXgsICctJCYnKS50b0xvd2VyQ2FzZSgpO1xufSk7XG5cbnZhciBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwgfHwgdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBzd2l0Y2ggKGtleSkge1xuICAgIGNhc2UgJ2FuaW1hdGlvbic6XG4gICAgY2FzZSAnYW5pbWF0aW9uTmFtZSc6XG4gICAgICB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKGFuaW1hdGlvblJlZ2V4LCBmdW5jdGlvbiAobWF0Y2gsIHAxLCBwMikge1xuICAgICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgICBuYW1lOiBwMSxcbiAgICAgICAgICAgICAgc3R5bGVzOiBwMixcbiAgICAgICAgICAgICAgbmV4dDogY3Vyc29yXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHAxO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gIH1cblxuICBpZiAodW5pdGxlc3Nba2V5XSAhPT0gMSAmJiBrZXkuY2hhckNvZGVBdCgxKSAhPT0gNDUgJiYgLy8gY3VzdG9tIHByb3BlcnRpZXNcbiAgdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiB2YWx1ZSAhPT0gMCkge1xuICAgIHJldHVybiB2YWx1ZSArICdweCc7XG4gIH1cblxuICByZXR1cm4gdmFsdWU7XG59O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgY29udGVudFZhbHVlUGF0dGVybiA9IC8oYXR0cnxjYWxjfGNvdW50ZXJzP3x1cmwpXFwoLztcbiAgdmFyIGNvbnRlbnRWYWx1ZXMgPSBbJ25vcm1hbCcsICdub25lJywgJ2NvdW50ZXInLCAnb3Blbi1xdW90ZScsICdjbG9zZS1xdW90ZScsICduby1vcGVuLXF1b3RlJywgJ25vLWNsb3NlLXF1b3RlJywgJ2luaXRpYWwnLCAnaW5oZXJpdCcsICd1bnNldCddO1xuICB2YXIgb2xkUHJvY2Vzc1N0eWxlVmFsdWUgPSBwcm9jZXNzU3R5bGVWYWx1ZTtcbiAgdmFyIG1zUGF0dGVybiA9IC9eLW1zLS87XG4gIHZhciBoeXBoZW5QYXR0ZXJuID0gLy0oLikvZztcbiAgdmFyIGh5cGhlbmF0ZWRDYWNoZSA9IHt9O1xuXG4gIHByb2Nlc3NTdHlsZVZhbHVlID0gZnVuY3Rpb24gcHJvY2Vzc1N0eWxlVmFsdWUoa2V5LCB2YWx1ZSkge1xuICAgIGlmIChrZXkgPT09ICdjb250ZW50Jykge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycgfHwgY29udGVudFZhbHVlcy5pbmRleE9mKHZhbHVlKSA9PT0gLTEgJiYgIWNvbnRlbnRWYWx1ZVBhdHRlcm4udGVzdCh2YWx1ZSkgJiYgKHZhbHVlLmNoYXJBdCgwKSAhPT0gdmFsdWUuY2hhckF0KHZhbHVlLmxlbmd0aCAtIDEpIHx8IHZhbHVlLmNoYXJBdCgwKSAhPT0gJ1wiJyAmJiB2YWx1ZS5jaGFyQXQoMCkgIT09IFwiJ1wiKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiWW91IHNlZW0gdG8gYmUgdXNpbmcgYSB2YWx1ZSBmb3IgJ2NvbnRlbnQnIHdpdGhvdXQgcXVvdGVzLCB0cnkgcmVwbGFjaW5nIGl0IHdpdGggYGNvbnRlbnQ6ICdcXFwiXCIgKyB2YWx1ZSArIFwiXFxcIidgXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcm9jZXNzZWQgPSBvbGRQcm9jZXNzU3R5bGVWYWx1ZShrZXksIHZhbHVlKTtcbiAgICB2YXIgaXNDc3NWYXJpYWJsZSA9IGtleS5jaGFyQ29kZUF0KDEpID09PSA0NTtcblxuICAgIGlmIChwcm9jZXNzZWQgIT09ICcnICYmICFpc0Nzc1ZhcmlhYmxlICYmIGtleS5pbmRleE9mKCctJykgIT09IC0xICYmIGh5cGhlbmF0ZWRDYWNoZVtrZXldID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGh5cGhlbmF0ZWRDYWNoZVtrZXldID0gdHJ1ZTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJVc2luZyBrZWJhYi1jYXNlIGZvciBjc3MgcHJvcGVydGllcyBpbiBvYmplY3RzIGlzIG5vdCBzdXBwb3J0ZWQuIERpZCB5b3UgbWVhbiBcIiArIGtleS5yZXBsYWNlKG1zUGF0dGVybiwgJ21zLScpLnJlcGxhY2UoaHlwaGVuUGF0dGVybiwgZnVuY3Rpb24gKHN0ciwgY2hhcikge1xuICAgICAgICByZXR1cm4gY2hhci50b1VwcGVyQ2FzZSgpO1xuICAgICAgfSkgKyBcIj9cIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb2Nlc3NlZDtcbiAgfTtcbn1cblxudmFyIHNob3VsZFdhcm5BYm91dEludGVycG9sYXRpbmdDbGFzc05hbWVGcm9tQ3NzID0gdHJ1ZTtcblxuZnVuY3Rpb24gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgaW50ZXJwb2xhdGlvbiwgY291bGRCZVNlbGVjdG9ySW50ZXJwb2xhdGlvbikge1xuICBpZiAoaW50ZXJwb2xhdGlvbiA9PSBudWxsKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgaWYgKGludGVycG9sYXRpb24uX19lbW90aW9uX3N0eWxlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgaW50ZXJwb2xhdGlvbi50b1N0cmluZygpID09PSAnTk9fQ09NUE9ORU5UX1NFTEVDVE9SJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb21wb25lbnQgc2VsZWN0b3JzIGNhbiBvbmx5IGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBiYWJlbC1wbHVnaW4tZW1vdGlvbi4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW50ZXJwb2xhdGlvbjtcbiAgfVxuXG4gIHN3aXRjaCAodHlwZW9mIGludGVycG9sYXRpb24pIHtcbiAgICBjYXNlICdib29sZWFuJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgICAgfVxuXG4gICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgIHtcbiAgICAgICAgaWYgKGludGVycG9sYXRpb24uYW5pbSA9PT0gMSkge1xuICAgICAgICAgIGN1cnNvciA9IHtcbiAgICAgICAgICAgIG5hbWU6IGludGVycG9sYXRpb24ubmFtZSxcbiAgICAgICAgICAgIHN0eWxlczogaW50ZXJwb2xhdGlvbi5zdHlsZXMsXG4gICAgICAgICAgICBuZXh0OiBjdXJzb3JcbiAgICAgICAgICB9O1xuICAgICAgICAgIHJldHVybiBpbnRlcnBvbGF0aW9uLm5hbWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW50ZXJwb2xhdGlvbi5zdHlsZXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHZhciBuZXh0ID0gaW50ZXJwb2xhdGlvbi5uZXh0O1xuXG4gICAgICAgICAgaWYgKG5leHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gbm90IHRoZSBtb3N0IGVmZmljaWVudCB0aGluZyBldmVyIGJ1dCB0aGlzIGlzIGEgcHJldHR5IHJhcmUgY2FzZVxuICAgICAgICAgICAgLy8gYW5kIHRoZXJlIHdpbGwgYmUgdmVyeSBmZXcgaXRlcmF0aW9ucyBvZiB0aGlzIGdlbmVyYWxseVxuICAgICAgICAgICAgd2hpbGUgKG5leHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICBjdXJzb3IgPSB7XG4gICAgICAgICAgICAgICAgbmFtZTogbmV4dC5uYW1lLFxuICAgICAgICAgICAgICAgIHN0eWxlczogbmV4dC5zdHlsZXMsXG4gICAgICAgICAgICAgICAgbmV4dDogY3Vyc29yXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIG5leHQgPSBuZXh0Lm5leHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIHN0eWxlcyA9IGludGVycG9sYXRpb24uc3R5bGVzO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgaW50ZXJwb2xhdGlvbi5tYXAgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc3R5bGVzICs9IGludGVycG9sYXRpb24ubWFwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBzdHlsZXM7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY3JlYXRlU3RyaW5nRnJvbU9iamVjdChtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgaW50ZXJwb2xhdGlvbik7XG4gICAgICB9XG5cbiAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICB7XG4gICAgICAgIGlmIChtZXJnZWRQcm9wcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmFyIHByZXZpb3VzQ3Vyc29yID0gY3Vyc29yO1xuICAgICAgICAgIHZhciByZXN1bHQgPSBpbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzKTtcbiAgICAgICAgICBjdXJzb3IgPSBwcmV2aW91c0N1cnNvcjtcbiAgICAgICAgICByZXR1cm4gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgcmVzdWx0LCBjb3VsZEJlU2VsZWN0b3JJbnRlcnBvbGF0aW9uKTtcbiAgICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRnVuY3Rpb25zIHRoYXQgYXJlIGludGVycG9sYXRlZCBpbiBjc3MgY2FsbHMgd2lsbCBiZSBzdHJpbmdpZmllZC5cXG4nICsgJ0lmIHlvdSB3YW50IHRvIGhhdmUgYSBjc3MgY2FsbCBiYXNlZCBvbiBwcm9wcywgY3JlYXRlIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgY3NzIGNhbGwgbGlrZSB0aGlzXFxuJyArICdsZXQgZHluYW1pY1N0eWxlID0gKHByb3BzKSA9PiBjc3NgY29sb3I6ICR7cHJvcHMuY29sb3J9YFxcbicgKyAnSXQgY2FuIGJlIGNhbGxlZCBkaXJlY3RseSB3aXRoIHByb3BzIG9yIGludGVycG9sYXRlZCBpbiBhIHN0eWxlZCBjYWxsIGxpa2UgdGhpc1xcbicgKyBcImxldCBTb21lQ29tcG9uZW50ID0gc3R5bGVkKCdkaXYnKWAke2R5bmFtaWNTdHlsZX1gXCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWZhbGx0aHJvdWdoXG5cbiAgICBkZWZhdWx0OlxuICAgICAge1xuICAgICAgICBpZiAocmVnaXN0ZXJlZCA9PSBudWxsKSB7XG4gICAgICAgICAgcmV0dXJuIGludGVycG9sYXRpb247XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgY2FjaGVkID0gcmVnaXN0ZXJlZFtpbnRlcnBvbGF0aW9uXTtcblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBjb3VsZEJlU2VsZWN0b3JJbnRlcnBvbGF0aW9uICYmIHNob3VsZFdhcm5BYm91dEludGVycG9sYXRpbmdDbGFzc05hbWVGcm9tQ3NzICYmIGNhY2hlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignSW50ZXJwb2xhdGluZyBhIGNsYXNzTmFtZSBmcm9tIGNzc2BgIGlzIG5vdCByZWNvbW1lbmRlZCBhbmQgd2lsbCBjYXVzZSBwcm9ibGVtcyB3aXRoIGNvbXBvc2l0aW9uLlxcbicgKyAnSW50ZXJwb2xhdGluZyBhIGNsYXNzTmFtZSBmcm9tIGNzc2BgIHdpbGwgYmUgY29tcGxldGVseSB1bnN1cHBvcnRlZCBpbiBhIGZ1dHVyZSBtYWpvciB2ZXJzaW9uIG9mIEVtb3Rpb24nKTtcbiAgICAgICAgICBzaG91bGRXYXJuQWJvdXRJbnRlcnBvbGF0aW5nQ2xhc3NOYW1lRnJvbUNzcyA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNhY2hlZCAhPT0gdW5kZWZpbmVkICYmICFjb3VsZEJlU2VsZWN0b3JJbnRlcnBvbGF0aW9uID8gY2FjaGVkIDogaW50ZXJwb2xhdGlvbjtcbiAgICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHJpbmdGcm9tT2JqZWN0KG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBvYmopIHtcbiAgdmFyIHN0cmluZyA9ICcnO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgc3RyaW5nICs9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIG9ialtpXSwgZmFsc2UpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKHZhciBfa2V5IGluIG9iaikge1xuICAgICAgdmFyIHZhbHVlID0gb2JqW19rZXldO1xuXG4gICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAocmVnaXN0ZXJlZCAhPSBudWxsICYmIHJlZ2lzdGVyZWRbdmFsdWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBzdHJpbmcgKz0gX2tleSArIFwie1wiICsgcmVnaXN0ZXJlZFt2YWx1ZV0gKyBcIn1cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdHJpbmcgKz0gcHJvY2Vzc1N0eWxlTmFtZShfa2V5KSArIFwiOlwiICsgcHJvY2Vzc1N0eWxlVmFsdWUoX2tleSwgdmFsdWUpICsgXCI7XCI7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChfa2V5ID09PSAnTk9fQ09NUE9ORU5UX1NFTEVDVE9SJyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb21wb25lbnQgc2VsZWN0b3JzIGNhbiBvbmx5IGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBiYWJlbC1wbHVnaW4tZW1vdGlvbi4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB0eXBlb2YgdmFsdWVbMF0gPT09ICdzdHJpbmcnICYmIChyZWdpc3RlcmVkID09IG51bGwgfHwgcmVnaXN0ZXJlZFt2YWx1ZVswXV0gPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgdmFsdWUubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBzdHJpbmcgKz0gcHJvY2Vzc1N0eWxlTmFtZShfa2V5KSArIFwiOlwiICsgcHJvY2Vzc1N0eWxlVmFsdWUoX2tleSwgdmFsdWVbX2ldKSArIFwiO1wiO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdHJpbmcgKz0gX2tleSArIFwie1wiICsgaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgdmFsdWUsIGZhbHNlKSArIFwifVwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZztcbn1cblxudmFyIGxhYmVsUGF0dGVybiA9IC9sYWJlbDpcXHMqKFteXFxzO1xcbntdKylcXHMqOy9nO1xudmFyIHNvdXJjZU1hcFBhdHRlcm47XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHNvdXJjZU1hcFBhdHRlcm4gPSAvXFwvXFwqI1xcc3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvblxcL2pzb247XFxTK1xccytcXCpcXC8vO1xufSAvLyB0aGlzIGlzIHRoZSBjdXJzb3IgZm9yIGtleWZyYW1lc1xuLy8ga2V5ZnJhbWVzIGFyZSBzdG9yZWQgb24gdGhlIFNlcmlhbGl6ZWRTdHlsZXMgb2JqZWN0IGFzIGEgbGlua2VkIGxpc3RcblxuXG52YXIgY3Vyc29yO1xudmFyIHNlcmlhbGl6ZVN0eWxlcyA9IGZ1bmN0aW9uIHNlcmlhbGl6ZVN0eWxlcyhhcmdzLCByZWdpc3RlcmVkLCBtZXJnZWRQcm9wcykge1xuICBpZiAoYXJncy5sZW5ndGggPT09IDEgJiYgdHlwZW9mIGFyZ3NbMF0gPT09ICdvYmplY3QnICYmIGFyZ3NbMF0gIT09IG51bGwgJiYgYXJnc1swXS5zdHlsZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBhcmdzWzBdO1xuICB9XG5cbiAgdmFyIHN0cmluZ01vZGUgPSB0cnVlO1xuICB2YXIgc3R5bGVzID0gJyc7XG4gIGN1cnNvciA9IHVuZGVmaW5lZDtcbiAgdmFyIHN0cmluZ3MgPSBhcmdzWzBdO1xuXG4gIGlmIChzdHJpbmdzID09IG51bGwgfHwgc3RyaW5ncy5yYXcgPT09IHVuZGVmaW5lZCkge1xuICAgIHN0cmluZ01vZGUgPSBmYWxzZTtcbiAgICBzdHlsZXMgKz0gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgc3RyaW5ncywgZmFsc2UpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlcyArPSBzdHJpbmdzWzBdO1xuICB9IC8vIHdlIHN0YXJ0IGF0IDEgc2luY2Ugd2UndmUgYWxyZWFkeSBoYW5kbGVkIHRoZSBmaXJzdCBhcmdcblxuXG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgIHN0eWxlcyArPSBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBhcmdzW2ldLCBzdHlsZXMuY2hhckNvZGVBdChzdHlsZXMubGVuZ3RoIC0gMSkgPT09IDQ2KTtcblxuICAgIGlmIChzdHJpbmdNb2RlKSB7XG4gICAgICBzdHlsZXMgKz0gc3RyaW5nc1tpXTtcbiAgICB9XG4gIH1cblxuICB2YXIgc291cmNlTWFwO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgc3R5bGVzID0gc3R5bGVzLnJlcGxhY2Uoc291cmNlTWFwUGF0dGVybiwgZnVuY3Rpb24gKG1hdGNoKSB7XG4gICAgICBzb3VyY2VNYXAgPSBtYXRjaDtcbiAgICAgIHJldHVybiAnJztcbiAgICB9KTtcbiAgfSAvLyB1c2luZyBhIGdsb2JhbCByZWdleCB3aXRoIC5leGVjIGlzIHN0YXRlZnVsIHNvIGxhc3RJbmRleCBoYXMgdG8gYmUgcmVzZXQgZWFjaCB0aW1lXG5cblxuICBsYWJlbFBhdHRlcm4ubGFzdEluZGV4ID0gMDtcbiAgdmFyIGlkZW50aWZpZXJOYW1lID0gJyc7XG4gIHZhciBtYXRjaDsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YjgwOWMyY2YyOTQ5ODAwYTBmNjFmYjVcblxuICB3aGlsZSAoKG1hdGNoID0gbGFiZWxQYXR0ZXJuLmV4ZWMoc3R5bGVzKSkgIT09IG51bGwpIHtcbiAgICBpZGVudGlmaWVyTmFtZSArPSAnLScgKyAvLyAkRmxvd0ZpeE1lIHdlIGtub3cgaXQncyBub3QgbnVsbFxuICAgIG1hdGNoWzFdO1xuICB9XG5cbiAgdmFyIG5hbWUgPSBoYXNoU3RyaW5nKHN0eWxlcykgKyBpZGVudGlmaWVyTmFtZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAgc3R5bGVzOiBzdHlsZXMsXG4gICAgICBtYXA6IHNvdXJjZU1hcCxcbiAgICAgIG5leHQ6IGN1cnNvclxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgc3R5bGVzOiBzdHlsZXMsXG4gICAgbmV4dDogY3Vyc29yXG4gIH07XG59O1xuXG5leHBvcnQgeyBzZXJpYWxpemVTdHlsZXMgfTtcbiIsImltcG9ydCB7IHNlcmlhbGl6ZVN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3NlcmlhbGl6ZSc7XG5cbmZ1bmN0aW9uIGNzcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBzZXJpYWxpemVTdHlsZXMoYXJncyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNzcztcbiIsImltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIGNyZWF0ZUVsZW1lbnQsIGZvcndhcmRSZWYsIENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjcmVhdGVDYWNoZSBmcm9tICdAZW1vdGlvbi9jYWNoZSc7XG5pbXBvcnQgeyBnZXRSZWdpc3RlcmVkU3R5bGVzLCBpbnNlcnRTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi91dGlscyc7XG5pbXBvcnQgeyBzZXJpYWxpemVTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi9zZXJpYWxpemUnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ0BlbW90aW9uL3NoZWV0JztcbmltcG9ydCBjc3MgZnJvbSAnQGVtb3Rpb24vY3NzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG52YXIgRW1vdGlvbkNhY2hlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoY3JlYXRlQ2FjaGUoKSk7XG52YXIgVGhlbWVDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh7fSk7XG52YXIgQ2FjaGVQcm92aWRlciA9IEVtb3Rpb25DYWNoZUNvbnRleHQuUHJvdmlkZXI7XG5cbnZhciB3aXRoRW1vdGlvbkNhY2hlID0gZnVuY3Rpb24gd2l0aEVtb3Rpb25DYWNoZShmdW5jKSB7XG4gIHZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIocHJvcHMsIHJlZikge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KEVtb3Rpb25DYWNoZUNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uICggLy8gJEZsb3dGaXhNZSB3ZSBrbm93IGl0IHdvbid0IGJlIG51bGxcbiAgICBjYWNoZSkge1xuICAgICAgcmV0dXJuIGZ1bmMocHJvcHMsIGNhY2hlLCByZWYpO1xuICAgIH0pO1xuICB9OyAvLyAkRmxvd0ZpeE1lXG5cblxuICByZXR1cm4gZm9yd2FyZFJlZihyZW5kZXIpO1xufTtcblxudmFyIHR5cGVQcm9wTmFtZSA9ICdfX0VNT1RJT05fVFlQRV9QTEVBU0VfRE9fTk9UX1VTRV9fJztcbnZhciBsYWJlbFByb3BOYW1lID0gJ19fRU1PVElPTl9MQUJFTF9QTEVBU0VfRE9fTk9UX1VTRV9fJztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbnZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoY2FjaGUsIHByb3BzLCB0aGVtZSwgcmVmKSB7XG4gIHZhciB0eXBlID0gcHJvcHNbdHlwZVByb3BOYW1lXTtcbiAgdmFyIHJlZ2lzdGVyZWRTdHlsZXMgPSBbXTtcbiAgdmFyIGNsYXNzTmFtZSA9ICcnO1xuICB2YXIgY3NzUHJvcCA9IHRoZW1lID09PSBudWxsID8gcHJvcHMuY3NzIDogcHJvcHMuY3NzKHRoZW1lKTsgLy8gc28gdGhhdCB1c2luZyBgY3NzYCBmcm9tIGBlbW90aW9uYCBhbmQgcGFzc2luZyB0aGUgcmVzdWx0IHRvIHRoZSBjc3MgcHJvcCB3b3Jrc1xuICAvLyBub3QgcGFzc2luZyB0aGUgcmVnaXN0ZXJlZCBjYWNoZSB0byBzZXJpYWxpemVTdHlsZXMgYmVjYXVzZSBpdCB3b3VsZFxuICAvLyBtYWtlIGNlcnRhaW4gYmFiZWwgb3B0aW1pc2F0aW9ucyBub3QgcG9zc2libGVcblxuICBpZiAodHlwZW9mIGNzc1Byb3AgPT09ICdzdHJpbmcnICYmIGNhY2hlLnJlZ2lzdGVyZWRbY3NzUHJvcF0gIT09IHVuZGVmaW5lZCkge1xuICAgIGNzc1Byb3AgPSBjYWNoZS5yZWdpc3RlcmVkW2Nzc1Byb3BdO1xuICB9XG5cbiAgcmVnaXN0ZXJlZFN0eWxlcy5wdXNoKGNzc1Byb3ApO1xuXG4gIGlmIChwcm9wcy5jbGFzc05hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgIGNsYXNzTmFtZSA9IGdldFJlZ2lzdGVyZWRTdHlsZXMoY2FjaGUucmVnaXN0ZXJlZCwgcmVnaXN0ZXJlZFN0eWxlcywgcHJvcHMuY2xhc3NOYW1lKTtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKHJlZ2lzdGVyZWRTdHlsZXMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHNlcmlhbGl6ZWQubmFtZS5pbmRleE9mKCctJykgPT09IC0xKSB7XG4gICAgdmFyIGxhYmVsRnJvbVN0YWNrID0gcHJvcHNbbGFiZWxQcm9wTmFtZV07XG5cbiAgICBpZiAobGFiZWxGcm9tU3RhY2spIHtcbiAgICAgIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoW3NlcmlhbGl6ZWQsICdsYWJlbDonICsgbGFiZWxGcm9tU3RhY2sgKyAnOyddKTtcbiAgICB9XG4gIH1cblxuICB2YXIgcnVsZXMgPSBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyk7XG4gIGNsYXNzTmFtZSArPSBjYWNoZS5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcbiAgdmFyIG5ld1Byb3BzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIHByb3BzKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwocHJvcHMsIGtleSkgJiYga2V5ICE9PSAnY3NzJyAmJiBrZXkgIT09IHR5cGVQcm9wTmFtZSAmJiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyB8fCBrZXkgIT09IGxhYmVsUHJvcE5hbWUpKSB7XG4gICAgICBuZXdQcm9wc1trZXldID0gcHJvcHNba2V5XTtcbiAgICB9XG4gIH1cblxuICBuZXdQcm9wcy5yZWYgPSByZWY7XG4gIG5ld1Byb3BzLmNsYXNzTmFtZSA9IGNsYXNzTmFtZTtcbiAgdmFyIGVsZSA9IGNyZWF0ZUVsZW1lbnQodHlwZSwgbmV3UHJvcHMpO1xuXG4gIHJldHVybiBlbGU7XG59O1xuXG52YXIgRW1vdGlvbiA9IHdpdGhFbW90aW9uQ2FjaGUoZnVuY3Rpb24gKHByb3BzLCBjYWNoZSwgcmVmKSB7XG4gIC8vIHVzZSBDb250ZXh0LnJlYWQgZm9yIHRoZSB0aGVtZSB3aGVuIGl0J3Mgc3RhYmxlXG4gIGlmICh0eXBlb2YgcHJvcHMuY3NzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoVGhlbWVDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAodGhlbWUpIHtcbiAgICAgIHJldHVybiByZW5kZXIoY2FjaGUsIHByb3BzLCB0aGVtZSwgcmVmKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiByZW5kZXIoY2FjaGUsIHByb3BzLCBudWxsLCByZWYpO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIEVtb3Rpb24uZGlzcGxheU5hbWUgPSAnRW1vdGlvbkNzc1Byb3BJbnRlcm5hbCc7XG59IC8vICRGbG93Rml4TWVcblxuXG52YXIganN4ID0gZnVuY3Rpb24ganN4KHR5cGUsIHByb3BzKSB7XG4gIHZhciBhcmdzID0gYXJndW1lbnRzO1xuXG4gIGlmIChwcm9wcyA9PSBudWxsIHx8IHByb3BzLmNzcyA9PSBudWxsKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50LmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgcHJvcHMuY3NzID09PSAnc3RyaW5nJyAmJiAvLyBjaGVjayBpZiB0aGVyZSBpcyBhIGNzcyBkZWNsYXJhdGlvblxuICBwcm9wcy5jc3MuaW5kZXhPZignOicpICE9PSAtMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlN0cmluZ3MgYXJlIG5vdCBhbGxvd2VkIGFzIGNzcyBwcm9wIHZhbHVlcywgcGxlYXNlIHdyYXAgaXQgaW4gYSBjc3MgdGVtcGxhdGUgbGl0ZXJhbCBmcm9tICdAZW1vdGlvbi9jc3MnIGxpa2UgdGhpczogY3NzYFwiICsgcHJvcHMuY3NzICsgXCJgXCIpO1xuICB9XG5cbiAgdmFyIGFyZ3NMZW5ndGggPSBhcmdzLmxlbmd0aDtcbiAgdmFyIGNyZWF0ZUVsZW1lbnRBcmdBcnJheSA9IG5ldyBBcnJheShhcmdzTGVuZ3RoKTtcbiAgY3JlYXRlRWxlbWVudEFyZ0FycmF5WzBdID0gRW1vdGlvbjtcbiAgdmFyIG5ld1Byb3BzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIHByb3BzKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwocHJvcHMsIGtleSkpIHtcbiAgICAgIG5ld1Byb3BzW2tleV0gPSBwcm9wc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIG5ld1Byb3BzW3R5cGVQcm9wTmFtZV0gPSB0eXBlO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdmFyIGVycm9yID0gbmV3IEVycm9yKCk7XG5cbiAgICBpZiAoZXJyb3Iuc3RhY2spIHtcbiAgICAgIC8vIGNocm9tZVxuICAgICAgdmFyIG1hdGNoID0gZXJyb3Iuc3RhY2subWF0Y2goL2F0IGpzeC4qXFxuXFxzK2F0IChbQS1aXVtBLVphLXpdKykgLyk7XG5cbiAgICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgLy8gc2FmYXJpIGFuZCBmaXJlZm94XG4gICAgICAgIG1hdGNoID0gZXJyb3Iuc3RhY2subWF0Y2goL14uKlxcbihbQS1aXVtBLVphLXpdKylALyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICBuZXdQcm9wc1tsYWJlbFByb3BOYW1lXSA9IG1hdGNoWzFdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNyZWF0ZUVsZW1lbnRBcmdBcnJheVsxXSA9IG5ld1Byb3BzO1xuXG4gIGZvciAodmFyIGkgPSAyOyBpIDwgYXJnc0xlbmd0aDsgaSsrKSB7XG4gICAgY3JlYXRlRWxlbWVudEFyZ0FycmF5W2ldID0gYXJnc1tpXTtcbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICByZXR1cm4gY3JlYXRlRWxlbWVudC5hcHBseShudWxsLCBjcmVhdGVFbGVtZW50QXJnQXJyYXkpO1xufTtcblxudmFyIHdhcm5lZEFib3V0Q3NzUHJvcEZvckdsb2JhbCA9IGZhbHNlO1xudmFyIEdsb2JhbCA9XG4vKiAjX19QVVJFX18gKi9cbndpdGhFbW90aW9uQ2FjaGUoZnVuY3Rpb24gKHByb3BzLCBjYWNoZSkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhd2FybmVkQWJvdXRDc3NQcm9wRm9yR2xvYmFsICYmICggLy8gY2hlY2sgZm9yIGNsYXNzTmFtZSBhcyB3ZWxsIHNpbmNlIHRoZSB1c2VyIGlzXG4gIC8vIHByb2JhYmx5IHVzaW5nIHRoZSBjdXN0b20gY3JlYXRlRWxlbWVudCB3aGljaFxuICAvLyBtZWFucyBpdCB3aWxsIGJlIHR1cm5lZCBpbnRvIGEgY2xhc3NOYW1lIHByb3BcbiAgLy8gJEZsb3dGaXhNZSBJIGRvbid0IHJlYWxseSB3YW50IHRvIGFkZCBpdCB0byB0aGUgdHlwZSBzaW5jZSBpdCBzaG91bGRuJ3QgYmUgdXNlZFxuICBwcm9wcy5jbGFzc05hbWUgfHwgcHJvcHMuY3NzKSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJJdCBsb29rcyBsaWtlIHlvdSdyZSB1c2luZyB0aGUgY3NzIHByb3Agb24gR2xvYmFsLCBkaWQgeW91IG1lYW4gdG8gdXNlIHRoZSBzdHlsZXMgcHJvcCBpbnN0ZWFkP1wiKTtcbiAgICB3YXJuZWRBYm91dENzc1Byb3BGb3JHbG9iYWwgPSB0cnVlO1xuICB9XG5cbiAgdmFyIHN0eWxlcyA9IHByb3BzLnN0eWxlcztcblxuICBpZiAodHlwZW9mIHN0eWxlcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFRoZW1lQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKHRoZW1lKSB7XG4gICAgICB2YXIgc2VyaWFsaXplZCA9IHNlcmlhbGl6ZVN0eWxlcyhbc3R5bGVzKHRoZW1lKV0pO1xuICAgICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoSW5uZXJHbG9iYWwsIHtcbiAgICAgICAgc2VyaWFsaXplZDogc2VyaWFsaXplZCxcbiAgICAgICAgY2FjaGU6IGNhY2hlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKFtzdHlsZXNdKTtcbiAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoSW5uZXJHbG9iYWwsIHtcbiAgICBzZXJpYWxpemVkOiBzZXJpYWxpemVkLFxuICAgIGNhY2hlOiBjYWNoZVxuICB9KTtcbn0pO1xuXG4vLyBtYWludGFpbiBwbGFjZSBvdmVyIHJlcmVuZGVycy5cbi8vIGluaXRpYWwgcmVuZGVyIGZyb20gYnJvd3NlciwgaW5zZXJ0QmVmb3JlIGNvbnRleHQuc2hlZXQudGFnc1swXSBvciBpZiBhIHN0eWxlIGhhc24ndCBiZWVuIGluc2VydGVkIHRoZXJlIHlldCwgYXBwZW5kQ2hpbGRcbi8vIGluaXRpYWwgY2xpZW50LXNpZGUgcmVuZGVyIGZyb20gU1NSLCB1c2UgcGxhY2Ugb2YgaHlkcmF0aW5nIHRhZ1xudmFyIElubmVyR2xvYmFsID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKElubmVyR2xvYmFsLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBJbm5lckdsb2JhbChwcm9wcywgY29udGV4dCwgdXBkYXRlcikge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQsIHVwZGF0ZXIpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSW5uZXJHbG9iYWwucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuc2hlZXQgPSBuZXcgU3R5bGVTaGVldCh7XG4gICAgICBrZXk6IHRoaXMucHJvcHMuY2FjaGUua2V5ICsgXCItZ2xvYmFsXCIsXG4gICAgICBub25jZTogdGhpcy5wcm9wcy5jYWNoZS5zaGVldC5ub25jZSxcbiAgICAgIGNvbnRhaW5lcjogdGhpcy5wcm9wcy5jYWNoZS5zaGVldC5jb250YWluZXJcbiAgICB9KTsgLy8gJEZsb3dGaXhNZVxuXG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1lbW90aW9uLVwiICsgdGhpcy5wcm9wcy5jYWNoZS5rZXkgKyBcIj1cXFwiXCIgKyB0aGlzLnByb3BzLnNlcmlhbGl6ZWQubmFtZSArIFwiXFxcIl1cIik7XG5cbiAgICBpZiAobm9kZSAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5zaGVldC50YWdzLnB1c2gobm9kZSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMuY2FjaGUuc2hlZXQudGFncy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuc2hlZXQuYmVmb3JlID0gdGhpcy5wcm9wcy5jYWNoZS5zaGVldC50YWdzWzBdO1xuICAgIH1cblxuICAgIHRoaXMuaW5zZXJ0U3R5bGVzKCk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAocHJldlByb3BzLnNlcmlhbGl6ZWQubmFtZSAhPT0gdGhpcy5wcm9wcy5zZXJpYWxpemVkLm5hbWUpIHtcbiAgICAgIHRoaXMuaW5zZXJ0U3R5bGVzKCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5pbnNlcnRTdHlsZXMgPSBmdW5jdGlvbiBpbnNlcnRTdHlsZXMkJDEoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuc2VyaWFsaXplZC5uZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIGluc2VydCBrZXlmcmFtZXNcbiAgICAgIGluc2VydFN0eWxlcyh0aGlzLnByb3BzLmNhY2hlLCB0aGlzLnByb3BzLnNlcmlhbGl6ZWQubmV4dCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc2hlZXQudGFncy5sZW5ndGgpIHtcbiAgICAgIC8vIGlmIHRoaXMgZG9lc24ndCBleGlzdCB0aGVuIGl0IHdpbGwgYmUgbnVsbCBzbyB0aGUgc3R5bGUgZWxlbWVudCB3aWxsIGJlIGFwcGVuZGVkXG4gICAgICB2YXIgZWxlbWVudCA9IHRoaXMuc2hlZXQudGFnc1t0aGlzLnNoZWV0LnRhZ3MubGVuZ3RoIC0gMV0ubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgICAgdGhpcy5zaGVldC5iZWZvcmUgPSBlbGVtZW50O1xuICAgICAgdGhpcy5zaGVldC5mbHVzaCgpO1xuICAgIH1cblxuICAgIHRoaXMucHJvcHMuY2FjaGUuaW5zZXJ0KFwiXCIsIHRoaXMucHJvcHMuc2VyaWFsaXplZCwgdGhpcy5zaGVldCwgZmFsc2UpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMuc2hlZXQuZmx1c2goKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIElubmVyR2xvYmFsO1xufShDb21wb25lbnQpO1xuXG52YXIga2V5ZnJhbWVzID0gZnVuY3Rpb24ga2V5ZnJhbWVzKCkge1xuICB2YXIgaW5zZXJ0YWJsZSA9IGNzcy5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gIHZhciBuYW1lID0gXCJhbmltYXRpb24tXCIgKyBpbnNlcnRhYmxlLm5hbWU7IC8vICRGbG93Rml4TWVcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgc3R5bGVzOiBcIkBrZXlmcmFtZXMgXCIgKyBuYW1lICsgXCJ7XCIgKyBpbnNlcnRhYmxlLnN0eWxlcyArIFwifVwiLFxuICAgIGFuaW06IDEsXG4gICAgdG9TdHJpbmc6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgcmV0dXJuIFwiX0VNT19cIiArIHRoaXMubmFtZSArIFwiX1wiICsgdGhpcy5zdHlsZXMgKyBcIl9FTU9fXCI7XG4gICAgfVxuICB9O1xufTtcblxudmFyIGNsYXNzbmFtZXMgPSBmdW5jdGlvbiBjbGFzc25hbWVzKGFyZ3MpIHtcbiAgdmFyIGxlbiA9IGFyZ3MubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBjbHMgPSAnJztcblxuICBmb3IgKDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgdmFyIGFyZyA9IGFyZ3NbaV07XG4gICAgaWYgKGFyZyA9PSBudWxsKSBjb250aW51ZTtcbiAgICB2YXIgdG9BZGQgPSB2b2lkIDA7XG5cbiAgICBzd2l0Y2ggKHR5cGVvZiBhcmcpIHtcbiAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAge1xuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcbiAgICAgICAgICAgIHRvQWRkID0gY2xhc3NuYW1lcyhhcmcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0b0FkZCA9ICcnO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBrIGluIGFyZykge1xuICAgICAgICAgICAgICBpZiAoYXJnW2tdICYmIGspIHtcbiAgICAgICAgICAgICAgICB0b0FkZCAmJiAodG9BZGQgKz0gJyAnKTtcbiAgICAgICAgICAgICAgICB0b0FkZCArPSBrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAge1xuICAgICAgICAgIHRvQWRkID0gYXJnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRvQWRkKSB7XG4gICAgICBjbHMgJiYgKGNscyArPSAnICcpO1xuICAgICAgY2xzICs9IHRvQWRkO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjbHM7XG59O1xuXG5mdW5jdGlvbiBtZXJnZShyZWdpc3RlcmVkLCBjc3MkJDEsIGNsYXNzTmFtZSkge1xuICB2YXIgcmVnaXN0ZXJlZFN0eWxlcyA9IFtdO1xuICB2YXIgcmF3Q2xhc3NOYW1lID0gZ2V0UmVnaXN0ZXJlZFN0eWxlcyhyZWdpc3RlcmVkLCByZWdpc3RlcmVkU3R5bGVzLCBjbGFzc05hbWUpO1xuXG4gIGlmIChyZWdpc3RlcmVkU3R5bGVzLmxlbmd0aCA8IDIpIHtcbiAgICByZXR1cm4gY2xhc3NOYW1lO1xuICB9XG5cbiAgcmV0dXJuIHJhd0NsYXNzTmFtZSArIGNzcyQkMShyZWdpc3RlcmVkU3R5bGVzKTtcbn1cblxudmFyIENsYXNzTmFtZXMgPSB3aXRoRW1vdGlvbkNhY2hlKGZ1bmN0aW9uIChwcm9wcywgY29udGV4dCkge1xuICByZXR1cm4gY3JlYXRlRWxlbWVudChUaGVtZUNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uICh0aGVtZSkge1xuICAgIHZhciBoYXNSZW5kZXJlZCA9IGZhbHNlO1xuXG4gICAgdmFyIGNzcyQkMSA9IGZ1bmN0aW9uIGNzcyQkMSgpIHtcbiAgICAgIGlmIChoYXNSZW5kZXJlZCAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignY3NzIGNhbiBvbmx5IGJlIHVzZWQgZHVyaW5nIHJlbmRlcicpO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgdmFyIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoYXJncywgY29udGV4dC5yZWdpc3RlcmVkKTtcblxuICAgICAge1xuICAgICAgICBpbnNlcnRTdHlsZXMoY29udGV4dCwgc2VyaWFsaXplZCwgZmFsc2UpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGV4dC5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcbiAgICB9O1xuXG4gICAgdmFyIGN4ID0gZnVuY3Rpb24gY3goKSB7XG4gICAgICBpZiAoaGFzUmVuZGVyZWQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2N4IGNhbiBvbmx5IGJlIHVzZWQgZHVyaW5nIHJlbmRlcicpO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbWVyZ2UoY29udGV4dC5yZWdpc3RlcmVkLCBjc3MkJDEsIGNsYXNzbmFtZXMoYXJncykpO1xuICAgIH07XG5cbiAgICB2YXIgY29udGVudCA9IHtcbiAgICAgIGNzczogY3NzJCQxLFxuICAgICAgY3g6IGN4LFxuICAgICAgdGhlbWU6IHRoZW1lXG4gICAgfTtcbiAgICB2YXIgZWxlID0gcHJvcHMuY2hpbGRyZW4oY29udGVudCk7XG4gICAgaGFzUmVuZGVyZWQgPSB0cnVlO1xuXG4gICAgcmV0dXJuIGVsZTtcbiAgfSk7XG59KTtcblxuZXhwb3J0IHsgd2l0aEVtb3Rpb25DYWNoZSwgQ2FjaGVQcm92aWRlciwgVGhlbWVDb250ZXh0LCBqc3gsIEdsb2JhbCwga2V5ZnJhbWVzLCBDbGFzc05hbWVzIH07XG4iLCJpbXBvcnQgX3R5cGVvZiBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YnO1xuaW1wb3J0IHJhZiBmcm9tICdyYWYnO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIE5PIE9QXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbnZhciBub29wID0gZnVuY3Rpb24gbm9vcCgpIHt9O1xuLy8gQ2xhc3MgTmFtZSBQcmVmaXhlclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKlxuIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBjb21wb25lbnQgc3RhdGUgZm9yIHN0eWxpbmcgd2l0aCBjbGFzcyBuYW1lcy5cblxuIEV4cGVjdHMgYW4gYXJyYXkgb2Ygc3RyaW5ncyBPUiBhIHN0cmluZy9vYmplY3QgcGFpcjpcbiAtIGNsYXNzTmFtZShbJ2NvbXAnLCAnY29tcC1hcmcnLCAnY29tcC1hcmctMiddKVxuICAgQHJldHVybnMgJ3JlYWN0LXNlbGVjdF9fY29tcCByZWFjdC1zZWxlY3RfX2NvbXAtYXJnIHJlYWN0LXNlbGVjdF9fY29tcC1hcmctMidcbiAtIGNsYXNzTmFtZSgnY29tcCcsIHsgc29tZTogdHJ1ZSwgc3RhdGU6IGZhbHNlIH0pXG4gICBAcmV0dXJucyAncmVhY3Qtc2VsZWN0X19jb21wIHJlYWN0LXNlbGVjdF9fY29tcC0tc29tZSdcbiovXG5cbmZ1bmN0aW9uIGFwcGx5UHJlZml4VG9OYW1lKHByZWZpeCwgbmFtZSkge1xuICBpZiAoIW5hbWUpIHtcbiAgICByZXR1cm4gcHJlZml4O1xuICB9IGVsc2UgaWYgKG5hbWVbMF0gPT09ICctJykge1xuICAgIHJldHVybiBwcmVmaXggKyBuYW1lO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBwcmVmaXggKyAnX18nICsgbmFtZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjbGFzc05hbWVzKHByZWZpeCwgc3RhdGUsIGNsYXNzTmFtZSkge1xuICB2YXIgYXJyID0gW2NsYXNzTmFtZV07XG5cbiAgaWYgKHN0YXRlICYmIHByZWZpeCkge1xuICAgIGZvciAodmFyIGtleSBpbiBzdGF0ZSkge1xuICAgICAgaWYgKHN0YXRlLmhhc093blByb3BlcnR5KGtleSkgJiYgc3RhdGVba2V5XSkge1xuICAgICAgICBhcnIucHVzaChcIlwiLmNvbmNhdChhcHBseVByZWZpeFRvTmFtZShwcmVmaXgsIGtleSkpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXJyLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBpO1xuICB9KS5tYXAoZnVuY3Rpb24gKGkpIHtcbiAgICByZXR1cm4gU3RyaW5nKGkpLnRyaW0oKTtcbiAgfSkuam9pbignICcpO1xufSAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENsZWFuIFZhbHVlXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIGNsZWFuVmFsdWUgPSBmdW5jdGlvbiBjbGVhblZhbHVlKHZhbHVlKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkgcmV0dXJuIHZhbHVlLmZpbHRlcihCb29sZWFuKTtcbiAgaWYgKF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbCkgcmV0dXJuIFt2YWx1ZV07XG4gIHJldHVybiBbXTtcbn07IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gSGFuZGxlIElucHV0IENoYW5nZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmZ1bmN0aW9uIGhhbmRsZUlucHV0Q2hhbmdlKGlucHV0VmFsdWUsIGFjdGlvbk1ldGEsIG9uSW5wdXRDaGFuZ2UpIHtcbiAgaWYgKG9uSW5wdXRDaGFuZ2UpIHtcbiAgICB2YXIgbmV3VmFsdWUgPSBvbklucHV0Q2hhbmdlKGlucHV0VmFsdWUsIGFjdGlvbk1ldGEpO1xuICAgIGlmICh0eXBlb2YgbmV3VmFsdWUgPT09ICdzdHJpbmcnKSByZXR1cm4gbmV3VmFsdWU7XG4gIH1cblxuICByZXR1cm4gaW5wdXRWYWx1ZTtcbn0gLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTY3JvbGwgSGVscGVyc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmZ1bmN0aW9uIGlzRG9jdW1lbnRFbGVtZW50KGVsKSB7XG4gIHJldHVybiBbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCBkb2N1bWVudC5ib2R5LCB3aW5kb3ddLmluZGV4T2YoZWwpID4gLTE7XG59IC8vIE5vcm1hbGl6ZWQgU2Nyb2xsIFRvcFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGdldFNjcm9sbFRvcChlbCkge1xuICBpZiAoaXNEb2N1bWVudEVsZW1lbnQoZWwpKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5wYWdlWU9mZnNldDtcbiAgfVxuXG4gIHJldHVybiBlbC5zY3JvbGxUb3A7XG59XG5mdW5jdGlvbiBzY3JvbGxUbyhlbCwgdG9wKSB7XG4gIC8vIHdpdGggYSBzY3JvbGwgZGlzdGFuY2UsIHdlIHBlcmZvcm0gc2Nyb2xsIG9uIHRoZSBlbGVtZW50XG4gIGlmIChpc0RvY3VtZW50RWxlbWVudChlbCkpIHtcbiAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgdG9wKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBlbC5zY3JvbGxUb3AgPSB0b3A7XG59IC8vIEdldCBTY3JvbGwgUGFyZW50XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gZ2V0U2Nyb2xsUGFyZW50KGVsZW1lbnQpIHtcbiAgdmFyIHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTtcbiAgdmFyIGV4Y2x1ZGVTdGF0aWNQYXJlbnQgPSBzdHlsZS5wb3NpdGlvbiA9PT0gJ2Fic29sdXRlJztcbiAgdmFyIG92ZXJmbG93UnggPSAvKGF1dG98c2Nyb2xsKS87XG4gIHZhciBkb2NFbCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDsgLy8gc3VjayBpdCwgZmxvdy4uLlxuXG4gIGlmIChzdHlsZS5wb3NpdGlvbiA9PT0gJ2ZpeGVkJykgcmV0dXJuIGRvY0VsO1xuXG4gIGZvciAodmFyIHBhcmVudCA9IGVsZW1lbnQ7IHBhcmVudCA9IHBhcmVudC5wYXJlbnRFbGVtZW50Oykge1xuICAgIHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShwYXJlbnQpO1xuXG4gICAgaWYgKGV4Y2x1ZGVTdGF0aWNQYXJlbnQgJiYgc3R5bGUucG9zaXRpb24gPT09ICdzdGF0aWMnKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAob3ZlcmZsb3dSeC50ZXN0KHN0eWxlLm92ZXJmbG93ICsgc3R5bGUub3ZlcmZsb3dZICsgc3R5bGUub3ZlcmZsb3dYKSkge1xuICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZG9jRWw7XG59IC8vIEFuaW1hdGVkIFNjcm9sbCBUb1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qKlxuICBAcGFyYW0gdDogdGltZSAoZWxhcHNlZClcbiAgQHBhcmFtIGI6IGluaXRpYWwgdmFsdWVcbiAgQHBhcmFtIGM6IGFtb3VudCBvZiBjaGFuZ2VcbiAgQHBhcmFtIGQ6IGR1cmF0aW9uXG4qL1xuXG5mdW5jdGlvbiBlYXNlT3V0Q3ViaWModCwgYiwgYywgZCkge1xuICByZXR1cm4gYyAqICgodCA9IHQgLyBkIC0gMSkgKiB0ICogdCArIDEpICsgYjtcbn1cblxuZnVuY3Rpb24gYW5pbWF0ZWRTY3JvbGxUbyhlbGVtZW50LCB0bykge1xuICB2YXIgZHVyYXRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IDIwMDtcbiAgdmFyIGNhbGxiYWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiBub29wO1xuICB2YXIgc3RhcnQgPSBnZXRTY3JvbGxUb3AoZWxlbWVudCk7XG4gIHZhciBjaGFuZ2UgPSB0byAtIHN0YXJ0O1xuICB2YXIgaW5jcmVtZW50ID0gMTA7XG4gIHZhciBjdXJyZW50VGltZSA9IDA7XG5cbiAgZnVuY3Rpb24gYW5pbWF0ZVNjcm9sbCgpIHtcbiAgICBjdXJyZW50VGltZSArPSBpbmNyZW1lbnQ7XG4gICAgdmFyIHZhbCA9IGVhc2VPdXRDdWJpYyhjdXJyZW50VGltZSwgc3RhcnQsIGNoYW5nZSwgZHVyYXRpb24pO1xuICAgIHNjcm9sbFRvKGVsZW1lbnQsIHZhbCk7XG5cbiAgICBpZiAoY3VycmVudFRpbWUgPCBkdXJhdGlvbikge1xuICAgICAgcmFmKGFuaW1hdGVTY3JvbGwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayhlbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICBhbmltYXRlU2Nyb2xsKCk7XG59IC8vIFNjcm9sbCBJbnRvIFZpZXdcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBzY3JvbGxJbnRvVmlldyhtZW51RWwsIGZvY3VzZWRFbCkge1xuICB2YXIgbWVudVJlY3QgPSBtZW51RWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciBmb2N1c2VkUmVjdCA9IGZvY3VzZWRFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgdmFyIG92ZXJTY3JvbGwgPSBmb2N1c2VkRWwub2Zmc2V0SGVpZ2h0IC8gMztcblxuICBpZiAoZm9jdXNlZFJlY3QuYm90dG9tICsgb3ZlclNjcm9sbCA+IG1lbnVSZWN0LmJvdHRvbSkge1xuICAgIHNjcm9sbFRvKG1lbnVFbCwgTWF0aC5taW4oZm9jdXNlZEVsLm9mZnNldFRvcCArIGZvY3VzZWRFbC5jbGllbnRIZWlnaHQgLSBtZW51RWwub2Zmc2V0SGVpZ2h0ICsgb3ZlclNjcm9sbCwgbWVudUVsLnNjcm9sbEhlaWdodCkpO1xuICB9IGVsc2UgaWYgKGZvY3VzZWRSZWN0LnRvcCAtIG92ZXJTY3JvbGwgPCBtZW51UmVjdC50b3ApIHtcbiAgICBzY3JvbGxUbyhtZW51RWwsIE1hdGgubWF4KGZvY3VzZWRFbC5vZmZzZXRUb3AgLSBvdmVyU2Nyb2xsLCAwKSk7XG4gIH1cbn0gLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBHZXQgYm91bmRpbmcgY2xpZW50IG9iamVjdFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBjYW5ub3QgZ2V0IGtleXMgdXNpbmcgYXJyYXkgbm90YXRpb24gd2l0aCBET01SZWN0XG5cbmZ1bmN0aW9uIGdldEJvdW5kaW5nQ2xpZW50T2JqKGVsZW1lbnQpIHtcbiAgdmFyIHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICByZXR1cm4ge1xuICAgIGJvdHRvbTogcmVjdC5ib3R0b20sXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodCxcbiAgICBsZWZ0OiByZWN0LmxlZnQsXG4gICAgcmlnaHQ6IHJlY3QucmlnaHQsXG4gICAgdG9wOiByZWN0LnRvcCxcbiAgICB3aWR0aDogcmVjdC53aWR0aFxuICB9O1xufVxuLy8gVG91Y2ggQ2FwYWJpbGl0eSBEZXRlY3RvclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmZ1bmN0aW9uIGlzVG91Y2hDYXBhYmxlKCkge1xuICB0cnkge1xuICAgIGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdUb3VjaEV2ZW50Jyk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0gLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBNb2JpbGUgRGV2aWNlIERldGVjdG9yXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZnVuY3Rpb24gaXNNb2JpbGVEZXZpY2UoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIC9BbmRyb2lkfHdlYk9TfGlQaG9uZXxpUGFkfGlQb2R8QmxhY2tCZXJyeXxJRU1vYmlsZXxPcGVyYSBNaW5pL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgeyBnZXRTY3JvbGxQYXJlbnQgYXMgYSwgZ2V0U2Nyb2xsVG9wIGFzIGIsIGFuaW1hdGVkU2Nyb2xsVG8gYXMgYywgaXNNb2JpbGVEZXZpY2UgYXMgZCwgaXNEb2N1bWVudEVsZW1lbnQgYXMgZSwgY2xlYW5WYWx1ZSBhcyBmLCBnZXRCb3VuZGluZ0NsaWVudE9iaiBhcyBnLCBzY3JvbGxJbnRvVmlldyBhcyBoLCBpc1RvdWNoQ2FwYWJsZSBhcyBpLCBjbGFzc05hbWVzIGFzIGosIGhhbmRsZUlucHV0Q2hhbmdlIGFzIGssIG5vb3AgYXMgbiwgc2Nyb2xsVG8gYXMgcyB9O1xuIiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllcyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQnO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayc7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzJztcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJztcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YnO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyc7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQnO1xuaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSc7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3gsIGtleWZyYW1lcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgY3JlYXRlUG9ydGFsIH0gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgX3R5cGVvZiBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YnO1xuaW1wb3J0IHsgZyBhcyBnZXRCb3VuZGluZ0NsaWVudE9iaiwgYSBhcyBnZXRTY3JvbGxQYXJlbnQsIGIgYXMgZ2V0U2Nyb2xsVG9wLCBjIGFzIGFuaW1hdGVkU2Nyb2xsVG8sIHMgYXMgc2Nyb2xsVG8gfSBmcm9tICcuL2NodW5rLWU4YWU0YjBmLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCBfY3NzIGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90YWdnZWRUZW1wbGF0ZUxpdGVyYWwnO1xuaW1wb3J0IEF1dG9zaXplSW5wdXQgZnJvbSAncmVhY3QtaW5wdXQtYXV0b3NpemUnO1xuXG5mdW5jdGlvbiBnZXRNZW51UGxhY2VtZW50KF9yZWYpIHtcbiAgdmFyIG1heEhlaWdodCA9IF9yZWYubWF4SGVpZ2h0LFxuICAgICAgbWVudUVsID0gX3JlZi5tZW51RWwsXG4gICAgICBtaW5IZWlnaHQgPSBfcmVmLm1pbkhlaWdodCxcbiAgICAgIHBsYWNlbWVudCA9IF9yZWYucGxhY2VtZW50LFxuICAgICAgc2hvdWxkU2Nyb2xsID0gX3JlZi5zaG91bGRTY3JvbGwsXG4gICAgICBpc0ZpeGVkUG9zaXRpb24gPSBfcmVmLmlzRml4ZWRQb3NpdGlvbixcbiAgICAgIHRoZW1lID0gX3JlZi50aGVtZTtcbiAgdmFyIHNwYWNpbmcgPSB0aGVtZS5zcGFjaW5nO1xuICB2YXIgc2Nyb2xsUGFyZW50ID0gZ2V0U2Nyb2xsUGFyZW50KG1lbnVFbCk7XG4gIHZhciBkZWZhdWx0U3RhdGUgPSB7XG4gICAgcGxhY2VtZW50OiAnYm90dG9tJyxcbiAgICBtYXhIZWlnaHQ6IG1heEhlaWdodFxuICB9OyAvLyBzb21ldGhpbmcgd2VudCB3cm9uZywgcmV0dXJuIGRlZmF1bHQgc3RhdGVcblxuICBpZiAoIW1lbnVFbCB8fCAhbWVudUVsLm9mZnNldFBhcmVudCkgcmV0dXJuIGRlZmF1bHRTdGF0ZTsgLy8gd2UgY2FuJ3QgdHJ1c3QgYHNjcm9sbFBhcmVudC5zY3JvbGxIZWlnaHRgIC0tPiBpdCBtYXkgaW5jcmVhc2Ugd2hlblxuICAvLyB0aGUgbWVudSBpcyByZW5kZXJlZFxuXG4gIHZhciBfc2Nyb2xsUGFyZW50JGdldEJvdW4gPSBzY3JvbGxQYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICBzY3JvbGxIZWlnaHQgPSBfc2Nyb2xsUGFyZW50JGdldEJvdW4uaGVpZ2h0O1xuXG4gIHZhciBfbWVudUVsJGdldEJvdW5kaW5nQ2wgPSBtZW51RWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICBtZW51Qm90dG9tID0gX21lbnVFbCRnZXRCb3VuZGluZ0NsLmJvdHRvbSxcbiAgICAgIG1lbnVIZWlnaHQgPSBfbWVudUVsJGdldEJvdW5kaW5nQ2wuaGVpZ2h0LFxuICAgICAgbWVudVRvcCA9IF9tZW51RWwkZ2V0Qm91bmRpbmdDbC50b3A7XG5cbiAgdmFyIF9tZW51RWwkb2Zmc2V0UGFyZW50JCA9IG1lbnVFbC5vZmZzZXRQYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICBjb250YWluZXJUb3AgPSBfbWVudUVsJG9mZnNldFBhcmVudCQudG9wO1xuXG4gIHZhciB2aWV3SGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuICB2YXIgc2Nyb2xsVG9wID0gZ2V0U2Nyb2xsVG9wKHNjcm9sbFBhcmVudCk7XG4gIHZhciBtYXJnaW5Cb3R0b20gPSBwYXJzZUludChnZXRDb21wdXRlZFN0eWxlKG1lbnVFbCkubWFyZ2luQm90dG9tLCAxMCk7XG4gIHZhciBtYXJnaW5Ub3AgPSBwYXJzZUludChnZXRDb21wdXRlZFN0eWxlKG1lbnVFbCkubWFyZ2luVG9wLCAxMCk7XG4gIHZhciB2aWV3U3BhY2VBYm92ZSA9IGNvbnRhaW5lclRvcCAtIG1hcmdpblRvcDtcbiAgdmFyIHZpZXdTcGFjZUJlbG93ID0gdmlld0hlaWdodCAtIG1lbnVUb3A7XG4gIHZhciBzY3JvbGxTcGFjZUFib3ZlID0gdmlld1NwYWNlQWJvdmUgKyBzY3JvbGxUb3A7XG4gIHZhciBzY3JvbGxTcGFjZUJlbG93ID0gc2Nyb2xsSGVpZ2h0IC0gc2Nyb2xsVG9wIC0gbWVudVRvcDtcbiAgdmFyIHNjcm9sbERvd24gPSBtZW51Qm90dG9tIC0gdmlld0hlaWdodCArIHNjcm9sbFRvcCArIG1hcmdpbkJvdHRvbTtcbiAgdmFyIHNjcm9sbFVwID0gc2Nyb2xsVG9wICsgbWVudVRvcCAtIG1hcmdpblRvcDtcbiAgdmFyIHNjcm9sbER1cmF0aW9uID0gMTYwO1xuXG4gIHN3aXRjaCAocGxhY2VtZW50KSB7XG4gICAgY2FzZSAnYXV0byc6XG4gICAgY2FzZSAnYm90dG9tJzpcbiAgICAgIC8vIDE6IHRoZSBtZW51IHdpbGwgZml0LCBkbyBub3RoaW5nXG4gICAgICBpZiAodmlld1NwYWNlQmVsb3cgPj0gbWVudUhlaWdodCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBsYWNlbWVudDogJ2JvdHRvbScsXG4gICAgICAgICAgbWF4SGVpZ2h0OiBtYXhIZWlnaHRcbiAgICAgICAgfTtcbiAgICAgIH0gLy8gMjogdGhlIG1lbnUgd2lsbCBmaXQsIGlmIHNjcm9sbGVkXG5cblxuICAgICAgaWYgKHNjcm9sbFNwYWNlQmVsb3cgPj0gbWVudUhlaWdodCAmJiAhaXNGaXhlZFBvc2l0aW9uKSB7XG4gICAgICAgIGlmIChzaG91bGRTY3JvbGwpIHtcbiAgICAgICAgICBhbmltYXRlZFNjcm9sbFRvKHNjcm9sbFBhcmVudCwgc2Nyb2xsRG93biwgc2Nyb2xsRHVyYXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwbGFjZW1lbnQ6ICdib3R0b20nLFxuICAgICAgICAgIG1heEhlaWdodDogbWF4SGVpZ2h0XG4gICAgICAgIH07XG4gICAgICB9IC8vIDM6IHRoZSBtZW51IHdpbGwgZml0LCBpZiBjb25zdHJhaW5lZFxuXG5cbiAgICAgIGlmICghaXNGaXhlZFBvc2l0aW9uICYmIHNjcm9sbFNwYWNlQmVsb3cgPj0gbWluSGVpZ2h0IHx8IGlzRml4ZWRQb3NpdGlvbiAmJiB2aWV3U3BhY2VCZWxvdyA+PSBtaW5IZWlnaHQpIHtcbiAgICAgICAgaWYgKHNob3VsZFNjcm9sbCkge1xuICAgICAgICAgIGFuaW1hdGVkU2Nyb2xsVG8oc2Nyb2xsUGFyZW50LCBzY3JvbGxEb3duLCBzY3JvbGxEdXJhdGlvbik7XG4gICAgICAgIH0gLy8gd2Ugd2FudCB0byBwcm92aWRlIGFzIG11Y2ggb2YgdGhlIG1lbnUgYXMgcG9zc2libGUgdG8gdGhlIHVzZXIsXG4gICAgICAgIC8vIHNvIGdpdmUgdGhlbSB3aGF0ZXZlciBpcyBhdmFpbGFibGUgYmVsb3cgcmF0aGVyIHRoYW4gdGhlIG1pbkhlaWdodC5cblxuXG4gICAgICAgIHZhciBjb25zdHJhaW5lZEhlaWdodCA9IGlzRml4ZWRQb3NpdGlvbiA/IHZpZXdTcGFjZUJlbG93IC0gbWFyZ2luQm90dG9tIDogc2Nyb2xsU3BhY2VCZWxvdyAtIG1hcmdpbkJvdHRvbTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwbGFjZW1lbnQ6ICdib3R0b20nLFxuICAgICAgICAgIG1heEhlaWdodDogY29uc3RyYWluZWRIZWlnaHRcbiAgICAgICAgfTtcbiAgICAgIH0gLy8gNC4gRm9ya2VkIGJldmlvdXIgd2hlbiB0aGVyZSBpc24ndCBlbm91Z2ggc3BhY2UgYmVsb3dcbiAgICAgIC8vIEFVVE86IGZsaXAgdGhlIG1lbnUsIHJlbmRlciBhYm92ZVxuXG5cbiAgICAgIGlmIChwbGFjZW1lbnQgPT09ICdhdXRvJyB8fCBpc0ZpeGVkUG9zaXRpb24pIHtcbiAgICAgICAgLy8gbWF5IG5lZWQgdG8gYmUgY29uc3RyYWluZWQgYWZ0ZXIgZmxpcHBpbmdcbiAgICAgICAgdmFyIF9jb25zdHJhaW5lZEhlaWdodCA9IG1heEhlaWdodDtcbiAgICAgICAgdmFyIHNwYWNlQWJvdmUgPSBpc0ZpeGVkUG9zaXRpb24gPyB2aWV3U3BhY2VBYm92ZSA6IHNjcm9sbFNwYWNlQWJvdmU7XG5cbiAgICAgICAgaWYgKHNwYWNlQWJvdmUgPj0gbWluSGVpZ2h0KSB7XG4gICAgICAgICAgX2NvbnN0cmFpbmVkSGVpZ2h0ID0gTWF0aC5taW4oc3BhY2VBYm92ZSAtIG1hcmdpbkJvdHRvbSAtIHNwYWNpbmcuY29udHJvbEhlaWdodCwgbWF4SGVpZ2h0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcGxhY2VtZW50OiAndG9wJyxcbiAgICAgICAgICBtYXhIZWlnaHQ6IF9jb25zdHJhaW5lZEhlaWdodFxuICAgICAgICB9O1xuICAgICAgfSAvLyBCT1RUT006IGFsbG93IGJyb3dzZXIgdG8gaW5jcmVhc2Ugc2Nyb2xsYWJsZSBhcmVhIGFuZCBpbW1lZGlhdGVseSBzZXQgc2Nyb2xsXG5cblxuICAgICAgaWYgKHBsYWNlbWVudCA9PT0gJ2JvdHRvbScpIHtcbiAgICAgICAgc2Nyb2xsVG8oc2Nyb2xsUGFyZW50LCBzY3JvbGxEb3duKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwbGFjZW1lbnQ6ICdib3R0b20nLFxuICAgICAgICAgIG1heEhlaWdodDogbWF4SGVpZ2h0XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAndG9wJzpcbiAgICAgIC8vIDE6IHRoZSBtZW51IHdpbGwgZml0LCBkbyBub3RoaW5nXG4gICAgICBpZiAodmlld1NwYWNlQWJvdmUgPj0gbWVudUhlaWdodCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBsYWNlbWVudDogJ3RvcCcsXG4gICAgICAgICAgbWF4SGVpZ2h0OiBtYXhIZWlnaHRcbiAgICAgICAgfTtcbiAgICAgIH0gLy8gMjogdGhlIG1lbnUgd2lsbCBmaXQsIGlmIHNjcm9sbGVkXG5cblxuICAgICAgaWYgKHNjcm9sbFNwYWNlQWJvdmUgPj0gbWVudUhlaWdodCAmJiAhaXNGaXhlZFBvc2l0aW9uKSB7XG4gICAgICAgIGlmIChzaG91bGRTY3JvbGwpIHtcbiAgICAgICAgICBhbmltYXRlZFNjcm9sbFRvKHNjcm9sbFBhcmVudCwgc2Nyb2xsVXAsIHNjcm9sbER1cmF0aW9uKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcGxhY2VtZW50OiAndG9wJyxcbiAgICAgICAgICBtYXhIZWlnaHQ6IG1heEhlaWdodFxuICAgICAgICB9O1xuICAgICAgfSAvLyAzOiB0aGUgbWVudSB3aWxsIGZpdCwgaWYgY29uc3RyYWluZWRcblxuXG4gICAgICBpZiAoIWlzRml4ZWRQb3NpdGlvbiAmJiBzY3JvbGxTcGFjZUFib3ZlID49IG1pbkhlaWdodCB8fCBpc0ZpeGVkUG9zaXRpb24gJiYgdmlld1NwYWNlQWJvdmUgPj0gbWluSGVpZ2h0KSB7XG4gICAgICAgIHZhciBfY29uc3RyYWluZWRIZWlnaHQyID0gbWF4SGVpZ2h0OyAvLyB3ZSB3YW50IHRvIHByb3ZpZGUgYXMgbXVjaCBvZiB0aGUgbWVudSBhcyBwb3NzaWJsZSB0byB0aGUgdXNlcixcbiAgICAgICAgLy8gc28gZ2l2ZSB0aGVtIHdoYXRldmVyIGlzIGF2YWlsYWJsZSBiZWxvdyByYXRoZXIgdGhhbiB0aGUgbWluSGVpZ2h0LlxuXG4gICAgICAgIGlmICghaXNGaXhlZFBvc2l0aW9uICYmIHNjcm9sbFNwYWNlQWJvdmUgPj0gbWluSGVpZ2h0IHx8IGlzRml4ZWRQb3NpdGlvbiAmJiB2aWV3U3BhY2VBYm92ZSA+PSBtaW5IZWlnaHQpIHtcbiAgICAgICAgICBfY29uc3RyYWluZWRIZWlnaHQyID0gaXNGaXhlZFBvc2l0aW9uID8gdmlld1NwYWNlQWJvdmUgLSBtYXJnaW5Ub3AgOiBzY3JvbGxTcGFjZUFib3ZlIC0gbWFyZ2luVG9wO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNob3VsZFNjcm9sbCkge1xuICAgICAgICAgIGFuaW1hdGVkU2Nyb2xsVG8oc2Nyb2xsUGFyZW50LCBzY3JvbGxVcCwgc2Nyb2xsRHVyYXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwbGFjZW1lbnQ6ICd0b3AnLFxuICAgICAgICAgIG1heEhlaWdodDogX2NvbnN0cmFpbmVkSGVpZ2h0MlxuICAgICAgICB9O1xuICAgICAgfSAvLyA0LiBub3QgZW5vdWdoIHNwYWNlLCB0aGUgYnJvd3NlciBXSUxMIE5PVCBpbmNyZWFzZSBzY3JvbGxhYmxlIGFyZWEgd2hlblxuICAgICAgLy8gYWJzb2x1dGVseSBwb3NpdGlvbmVkIGVsZW1lbnQgcmVuZGVyZWQgYWJvdmUgdGhlIHZpZXdwb3J0IChvbmx5IGJlbG93KS5cbiAgICAgIC8vIEZsaXAgdGhlIG1lbnUsIHJlbmRlciBiZWxvd1xuXG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBsYWNlbWVudDogJ2JvdHRvbScsXG4gICAgICAgIG1heEhlaWdodDogbWF4SGVpZ2h0XG4gICAgICB9O1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcGxhY2VtZW50IHByb3ZpZGVkIFxcXCJcIi5jb25jYXQocGxhY2VtZW50LCBcIlxcXCIuXCIpKTtcbiAgfSAvLyBmdWxmaWwgY29udHJhY3Qgd2l0aCBmbG93OiBpbXBsaWNpdCByZXR1cm4gdmFsdWUgb2YgdW5kZWZpbmVkXG5cblxuICByZXR1cm4gZGVmYXVsdFN0YXRlO1xufSAvLyBNZW51IENvbXBvbmVudFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGFsaWduVG9Db250cm9sKHBsYWNlbWVudCkge1xuICB2YXIgcGxhY2VtZW50VG9DU1NQcm9wID0ge1xuICAgIGJvdHRvbTogJ3RvcCcsXG4gICAgdG9wOiAnYm90dG9tJ1xuICB9O1xuICByZXR1cm4gcGxhY2VtZW50ID8gcGxhY2VtZW50VG9DU1NQcm9wW3BsYWNlbWVudF0gOiAnYm90dG9tJztcbn1cblxudmFyIGNvZXJjZVBsYWNlbWVudCA9IGZ1bmN0aW9uIGNvZXJjZVBsYWNlbWVudChwKSB7XG4gIHJldHVybiBwID09PSAnYXV0bycgPyAnYm90dG9tJyA6IHA7XG59O1xuXG52YXIgbWVudUNTUyA9IGZ1bmN0aW9uIG1lbnVDU1MoX3JlZjIpIHtcbiAgdmFyIF9yZWYzO1xuXG4gIHZhciBwbGFjZW1lbnQgPSBfcmVmMi5wbGFjZW1lbnQsXG4gICAgICBfcmVmMiR0aGVtZSA9IF9yZWYyLnRoZW1lLFxuICAgICAgYm9yZGVyUmFkaXVzID0gX3JlZjIkdGhlbWUuYm9yZGVyUmFkaXVzLFxuICAgICAgc3BhY2luZyA9IF9yZWYyJHRoZW1lLnNwYWNpbmcsXG4gICAgICBjb2xvcnMgPSBfcmVmMiR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiBfcmVmMyA9IHtcbiAgICBsYWJlbDogJ21lbnUnXG4gIH0sIF9kZWZpbmVQcm9wZXJ0eShfcmVmMywgYWxpZ25Ub0NvbnRyb2wocGxhY2VtZW50KSwgJzEwMCUnKSwgX2RlZmluZVByb3BlcnR5KF9yZWYzLCBcImJhY2tncm91bmRDb2xvclwiLCBjb2xvcnMubmV1dHJhbDApLCBfZGVmaW5lUHJvcGVydHkoX3JlZjMsIFwiYm9yZGVyUmFkaXVzXCIsIGJvcmRlclJhZGl1cyksIF9kZWZpbmVQcm9wZXJ0eShfcmVmMywgXCJib3hTaGFkb3dcIiwgJzAgMCAwIDFweCBoc2xhKDAsIDAlLCAwJSwgMC4xKSwgMCA0cHggMTFweCBoc2xhKDAsIDAlLCAwJSwgMC4xKScpLCBfZGVmaW5lUHJvcGVydHkoX3JlZjMsIFwibWFyZ2luQm90dG9tXCIsIHNwYWNpbmcubWVudUd1dHRlciksIF9kZWZpbmVQcm9wZXJ0eShfcmVmMywgXCJtYXJnaW5Ub3BcIiwgc3BhY2luZy5tZW51R3V0dGVyKSwgX2RlZmluZVByb3BlcnR5KF9yZWYzLCBcInBvc2l0aW9uXCIsICdhYnNvbHV0ZScpLCBfZGVmaW5lUHJvcGVydHkoX3JlZjMsIFwid2lkdGhcIiwgJzEwMCUnKSwgX2RlZmluZVByb3BlcnR5KF9yZWYzLCBcInpJbmRleFwiLCAxKSwgX3JlZjM7XG59OyAvLyBOT1RFOiBpbnRlcm5hbCBvbmx5XG5cbnZhciBNZW51UGxhY2VyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhNZW51UGxhY2VyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW51UGxhY2VyKCkge1xuICAgIHZhciBfZ2V0UHJvdG90eXBlT2YyO1xuXG4gICAgdmFyIF90aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1lbnVQbGFjZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKF9nZXRQcm90b3R5cGVPZjIgPSBfZ2V0UHJvdG90eXBlT2YoTWVudVBsYWNlcikpLmNhbGwuYXBwbHkoX2dldFByb3RvdHlwZU9mMiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcInN0YXRlXCIsIHtcbiAgICAgIG1heEhlaWdodDogX3RoaXMucHJvcHMubWF4TWVudUhlaWdodCxcbiAgICAgIHBsYWNlbWVudDogbnVsbFxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcImdldFBsYWNlbWVudFwiLCBmdW5jdGlvbiAocmVmKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBtaW5NZW51SGVpZ2h0ID0gX3RoaXMkcHJvcHMubWluTWVudUhlaWdodCxcbiAgICAgICAgICBtYXhNZW51SGVpZ2h0ID0gX3RoaXMkcHJvcHMubWF4TWVudUhlaWdodCxcbiAgICAgICAgICBtZW51UGxhY2VtZW50ID0gX3RoaXMkcHJvcHMubWVudVBsYWNlbWVudCxcbiAgICAgICAgICBtZW51UG9zaXRpb24gPSBfdGhpcyRwcm9wcy5tZW51UG9zaXRpb24sXG4gICAgICAgICAgbWVudVNob3VsZFNjcm9sbEludG9WaWV3ID0gX3RoaXMkcHJvcHMubWVudVNob3VsZFNjcm9sbEludG9WaWV3LFxuICAgICAgICAgIHRoZW1lID0gX3RoaXMkcHJvcHMudGhlbWU7XG4gICAgICB2YXIgZ2V0UG9ydGFsUGxhY2VtZW50ID0gX3RoaXMuY29udGV4dC5nZXRQb3J0YWxQbGFjZW1lbnQ7XG4gICAgICBpZiAoIXJlZikgcmV0dXJuOyAvLyBETyBOT1Qgc2Nyb2xsIGlmIHBvc2l0aW9uIGlzIGZpeGVkXG5cbiAgICAgIHZhciBpc0ZpeGVkUG9zaXRpb24gPSBtZW51UG9zaXRpb24gPT09ICdmaXhlZCc7XG4gICAgICB2YXIgc2hvdWxkU2Nyb2xsID0gbWVudVNob3VsZFNjcm9sbEludG9WaWV3ICYmICFpc0ZpeGVkUG9zaXRpb247XG4gICAgICB2YXIgc3RhdGUgPSBnZXRNZW51UGxhY2VtZW50KHtcbiAgICAgICAgbWF4SGVpZ2h0OiBtYXhNZW51SGVpZ2h0LFxuICAgICAgICBtZW51RWw6IHJlZixcbiAgICAgICAgbWluSGVpZ2h0OiBtaW5NZW51SGVpZ2h0LFxuICAgICAgICBwbGFjZW1lbnQ6IG1lbnVQbGFjZW1lbnQsXG4gICAgICAgIHNob3VsZFNjcm9sbDogc2hvdWxkU2Nyb2xsLFxuICAgICAgICBpc0ZpeGVkUG9zaXRpb246IGlzRml4ZWRQb3NpdGlvbixcbiAgICAgICAgdGhlbWU6IHRoZW1lXG4gICAgICB9KTtcbiAgICAgIGlmIChnZXRQb3J0YWxQbGFjZW1lbnQpIGdldFBvcnRhbFBsYWNlbWVudChzdGF0ZSk7XG5cbiAgICAgIF90aGlzLnNldFN0YXRlKHN0YXRlKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJnZXRVcGRhdGVkUHJvcHNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIG1lbnVQbGFjZW1lbnQgPSBfdGhpcy5wcm9wcy5tZW51UGxhY2VtZW50O1xuICAgICAgdmFyIHBsYWNlbWVudCA9IF90aGlzLnN0YXRlLnBsYWNlbWVudCB8fCBjb2VyY2VQbGFjZW1lbnQobWVudVBsYWNlbWVudCk7XG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgX3RoaXMucHJvcHMsIHtcbiAgICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQsXG4gICAgICAgIG1heEhlaWdodDogX3RoaXMuc3RhdGUubWF4SGVpZ2h0XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhNZW51UGxhY2VyLCBbe1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICAgIHJldHVybiBjaGlsZHJlbih7XG4gICAgICAgIHJlZjogdGhpcy5nZXRQbGFjZW1lbnQsXG4gICAgICAgIHBsYWNlclByb3BzOiB0aGlzLmdldFVwZGF0ZWRQcm9wcygpXG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTWVudVBsYWNlcjtcbn0oQ29tcG9uZW50KTtcblxuX2RlZmluZVByb3BlcnR5KE1lbnVQbGFjZXIsIFwiY29udGV4dFR5cGVzXCIsIHtcbiAgZ2V0UG9ydGFsUGxhY2VtZW50OiBQcm9wVHlwZXMuZnVuY1xufSk7XG5cbnZhciBNZW51ID0gZnVuY3Rpb24gTWVudShwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpbm5lclJlZiA9IHByb3BzLmlubmVyUmVmLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHM7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMoe1xuICAgIGNzczogZ2V0U3R5bGVzKCdtZW51JywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgbWVudTogdHJ1ZVxuICAgIH0sIGNsYXNzTmFtZSlcbiAgfSwgaW5uZXJQcm9wcywge1xuICAgIHJlZjogaW5uZXJSZWZcbiAgfSksIGNoaWxkcmVuKTtcbn07XG4vLyBNZW51IExpc3Rcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG52YXIgbWVudUxpc3RDU1MgPSBmdW5jdGlvbiBtZW51TGlzdENTUyhfcmVmNCkge1xuICB2YXIgbWF4SGVpZ2h0ID0gX3JlZjQubWF4SGVpZ2h0LFxuICAgICAgYmFzZVVuaXQgPSBfcmVmNC50aGVtZS5zcGFjaW5nLmJhc2VVbml0O1xuICByZXR1cm4ge1xuICAgIG1heEhlaWdodDogbWF4SGVpZ2h0LFxuICAgIG92ZXJmbG93WTogJ2F1dG8nLFxuICAgIHBhZGRpbmdCb3R0b206IGJhc2VVbml0LFxuICAgIHBhZGRpbmdUb3A6IGJhc2VVbml0LFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIC8vIHJlcXVpcmVkIGZvciBvZmZzZXRbSGVpZ2h0LCBUb3BdID4ga2V5Ym9hcmQgc2Nyb2xsXG4gICAgV2Via2l0T3ZlcmZsb3dTY3JvbGxpbmc6ICd0b3VjaCdcbiAgfTtcbn07XG52YXIgTWVudUxpc3QgPSBmdW5jdGlvbiBNZW51TGlzdChwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpc011bHRpID0gcHJvcHMuaXNNdWx0aSxcbiAgICAgIGlubmVyUmVmID0gcHJvcHMuaW5uZXJSZWY7XG4gIHJldHVybiBqc3goXCJkaXZcIiwge1xuICAgIGNzczogZ2V0U3R5bGVzKCdtZW51TGlzdCcsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgICdtZW51LWxpc3QnOiB0cnVlLFxuICAgICAgJ21lbnUtbGlzdC0taXMtbXVsdGknOiBpc011bHRpXG4gICAgfSwgY2xhc3NOYW1lKSxcbiAgICByZWY6IGlubmVyUmVmXG4gIH0sIGNoaWxkcmVuKTtcbn07IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTWVudSBOb3RpY2VzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIG5vdGljZUNTUyA9IGZ1bmN0aW9uIG5vdGljZUNTUyhfcmVmNSkge1xuICB2YXIgX3JlZjUkdGhlbWUgPSBfcmVmNS50aGVtZSxcbiAgICAgIGJhc2VVbml0ID0gX3JlZjUkdGhlbWUuc3BhY2luZy5iYXNlVW5pdCxcbiAgICAgIGNvbG9ycyA9IF9yZWY1JHRoZW1lLmNvbG9ycztcbiAgcmV0dXJuIHtcbiAgICBjb2xvcjogY29sb3JzLm5ldXRyYWw0MCxcbiAgICBwYWRkaW5nOiBcIlwiLmNvbmNhdChiYXNlVW5pdCAqIDIsIFwicHggXCIpLmNvbmNhdChiYXNlVW5pdCAqIDMsIFwicHhcIiksXG4gICAgdGV4dEFsaWduOiAnY2VudGVyJ1xuICB9O1xufTtcblxudmFyIG5vT3B0aW9uc01lc3NhZ2VDU1MgPSBub3RpY2VDU1M7XG52YXIgbG9hZGluZ01lc3NhZ2VDU1MgPSBub3RpY2VDU1M7XG52YXIgTm9PcHRpb25zTWVzc2FnZSA9IGZ1bmN0aW9uIE5vT3B0aW9uc01lc3NhZ2UocHJvcHMpIHtcbiAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjeCA9IHByb3BzLmN4LFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHM7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMoe1xuICAgIGNzczogZ2V0U3R5bGVzKCdub09wdGlvbnNNZXNzYWdlJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgJ21lbnUtbm90aWNlJzogdHJ1ZSxcbiAgICAgICdtZW51LW5vdGljZS0tbm8tb3B0aW9ucyc6IHRydWVcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0sIGlubmVyUHJvcHMpLCBjaGlsZHJlbik7XG59O1xuTm9PcHRpb25zTWVzc2FnZS5kZWZhdWx0UHJvcHMgPSB7XG4gIGNoaWxkcmVuOiAnTm8gb3B0aW9ucydcbn07XG52YXIgTG9hZGluZ01lc3NhZ2UgPSBmdW5jdGlvbiBMb2FkaW5nTWVzc2FnZShwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpbm5lclByb3BzID0gcHJvcHMuaW5uZXJQcm9wcztcbiAgcmV0dXJuIGpzeChcImRpdlwiLCBfZXh0ZW5kcyh7XG4gICAgY3NzOiBnZXRTdHlsZXMoJ2xvYWRpbmdNZXNzYWdlJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgJ21lbnUtbm90aWNlJzogdHJ1ZSxcbiAgICAgICdtZW51LW5vdGljZS0tbG9hZGluZyc6IHRydWVcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0sIGlubmVyUHJvcHMpLCBjaGlsZHJlbik7XG59O1xuTG9hZGluZ01lc3NhZ2UuZGVmYXVsdFByb3BzID0ge1xuICBjaGlsZHJlbjogJ0xvYWRpbmcuLi4nXG59OyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIE1lbnUgUG9ydGFsXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIG1lbnVQb3J0YWxDU1MgPSBmdW5jdGlvbiBtZW51UG9ydGFsQ1NTKF9yZWY2KSB7XG4gIHZhciByZWN0ID0gX3JlZjYucmVjdCxcbiAgICAgIG9mZnNldCA9IF9yZWY2Lm9mZnNldCxcbiAgICAgIHBvc2l0aW9uID0gX3JlZjYucG9zaXRpb247XG4gIHJldHVybiB7XG4gICAgbGVmdDogcmVjdC5sZWZ0LFxuICAgIHBvc2l0aW9uOiBwb3NpdGlvbixcbiAgICB0b3A6IG9mZnNldCxcbiAgICB3aWR0aDogcmVjdC53aWR0aCxcbiAgICB6SW5kZXg6IDFcbiAgfTtcbn07XG52YXIgTWVudVBvcnRhbCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgX2luaGVyaXRzKE1lbnVQb3J0YWwsIF9Db21wb25lbnQyKTtcblxuICBmdW5jdGlvbiBNZW51UG9ydGFsKCkge1xuICAgIHZhciBfZ2V0UHJvdG90eXBlT2YzO1xuXG4gICAgdmFyIF90aGlzMjtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNZW51UG9ydGFsKTtcblxuICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgIH1cblxuICAgIF90aGlzMiA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChfZ2V0UHJvdG90eXBlT2YzID0gX2dldFByb3RvdHlwZU9mKE1lbnVQb3J0YWwpKS5jYWxsLmFwcGx5KF9nZXRQcm90b3R5cGVPZjMsIFt0aGlzXS5jb25jYXQoYXJncykpKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMyKSksIFwic3RhdGVcIiwge1xuICAgICAgcGxhY2VtZW50OiBudWxsXG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzMikpLCBcImdldFBvcnRhbFBsYWNlbWVudFwiLCBmdW5jdGlvbiAoX3JlZjcpIHtcbiAgICAgIHZhciBwbGFjZW1lbnQgPSBfcmVmNy5wbGFjZW1lbnQ7XG4gICAgICB2YXIgaW5pdGlhbFBsYWNlbWVudCA9IGNvZXJjZVBsYWNlbWVudChfdGhpczIucHJvcHMubWVudVBsYWNlbWVudCk7IC8vIGF2b2lkIHJlLXJlbmRlcnMgaWYgdGhlIHBsYWNlbWVudCBoYXMgbm90IGNoYW5nZWRcblxuICAgICAgaWYgKHBsYWNlbWVudCAhPT0gaW5pdGlhbFBsYWNlbWVudCkge1xuICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIF90aGlzMjtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhNZW51UG9ydGFsLCBbe1xuICAgIGtleTogXCJnZXRDaGlsZENvbnRleHRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0UG9ydGFsUGxhY2VtZW50OiB0aGlzLmdldFBvcnRhbFBsYWNlbWVudFxuICAgICAgfTtcbiAgICB9IC8vIGNhbGxiYWNrIGZvciBvY2Nhc3Npb25zIHdoZXJlIHRoZSBtZW51IG11c3QgXCJmbGlwXCJcblxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBhcHBlbmRUbyA9IF90aGlzJHByb3BzMi5hcHBlbmRUbyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzMi5jaGlsZHJlbixcbiAgICAgICAgICBjb250cm9sRWxlbWVudCA9IF90aGlzJHByb3BzMi5jb250cm9sRWxlbWVudCxcbiAgICAgICAgICBtZW51UGxhY2VtZW50ID0gX3RoaXMkcHJvcHMyLm1lbnVQbGFjZW1lbnQsXG4gICAgICAgICAgcG9zaXRpb24gPSBfdGhpcyRwcm9wczIubWVudVBvc2l0aW9uLFxuICAgICAgICAgIGdldFN0eWxlcyA9IF90aGlzJHByb3BzMi5nZXRTdHlsZXM7XG4gICAgICB2YXIgaXNGaXhlZCA9IHBvc2l0aW9uID09PSAnZml4ZWQnOyAvLyBiYWlsIGVhcmx5IGlmIHJlcXVpcmVkIGVsZW1lbnRzIGFyZW4ndCBwcmVzZW50XG5cbiAgICAgIGlmICghYXBwZW5kVG8gJiYgIWlzRml4ZWQgfHwgIWNvbnRyb2xFbGVtZW50KSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgcGxhY2VtZW50ID0gdGhpcy5zdGF0ZS5wbGFjZW1lbnQgfHwgY29lcmNlUGxhY2VtZW50KG1lbnVQbGFjZW1lbnQpO1xuICAgICAgdmFyIHJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudE9iaihjb250cm9sRWxlbWVudCk7XG4gICAgICB2YXIgc2Nyb2xsRGlzdGFuY2UgPSBpc0ZpeGVkID8gMCA6IHdpbmRvdy5wYWdlWU9mZnNldDtcbiAgICAgIHZhciBvZmZzZXQgPSByZWN0W3BsYWNlbWVudF0gKyBzY3JvbGxEaXN0YW5jZTtcbiAgICAgIHZhciBzdGF0ZSA9IHtcbiAgICAgICAgb2Zmc2V0OiBvZmZzZXQsXG4gICAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbixcbiAgICAgICAgcmVjdDogcmVjdFxuICAgICAgfTsgLy8gc2FtZSB3cmFwcGVyIGVsZW1lbnQgd2hldGhlciBmaXhlZCBvciBwb3J0YWxsZWRcblxuICAgICAgdmFyIG1lbnVXcmFwcGVyID0ganN4KFwiZGl2XCIsIHtcbiAgICAgICAgY3NzOiBnZXRTdHlsZXMoJ21lbnVQb3J0YWwnLCBzdGF0ZSlcbiAgICAgIH0sIGNoaWxkcmVuKTtcbiAgICAgIHJldHVybiBhcHBlbmRUbyA/IGNyZWF0ZVBvcnRhbChtZW51V3JhcHBlciwgYXBwZW5kVG8pIDogbWVudVdyYXBwZXI7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIE1lbnVQb3J0YWw7XG59KENvbXBvbmVudCk7XG5cbl9kZWZpbmVQcm9wZXJ0eShNZW51UG9ydGFsLCBcImNoaWxkQ29udGV4dFR5cGVzXCIsIHtcbiAgZ2V0UG9ydGFsUGxhY2VtZW50OiBQcm9wVHlwZXMuZnVuY1xufSk7XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbnZhciBrZXlMaXN0ID0gT2JqZWN0LmtleXM7XG52YXIgaGFzUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGVxdWFsKGEsIGIpIHtcbiAgLy8gZmFzdC1kZWVwLWVxdWFsIGluZGV4LmpzIDIuMC4xXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSAmJiBiICYmIF90eXBlb2YoYSkgPT0gJ29iamVjdCcgJiYgX3R5cGVvZihiKSA9PSAnb2JqZWN0Jykge1xuICAgIHZhciBhcnJBID0gaXNBcnJheShhKSxcbiAgICAgICAgYXJyQiA9IGlzQXJyYXkoYiksXG4gICAgICAgIGksXG4gICAgICAgIGxlbmd0aCxcbiAgICAgICAga2V5O1xuXG4gICAgaWYgKGFyckEgJiYgYXJyQikge1xuICAgICAgbGVuZ3RoID0gYS5sZW5ndGg7XG4gICAgICBpZiAobGVuZ3RoICE9IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykge1xuICAgICAgICBpZiAoIWVxdWFsKGFbaV0sIGJbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmIChhcnJBICE9IGFyckIpIHJldHVybiBmYWxzZTtcbiAgICB2YXIgZGF0ZUEgPSBhIGluc3RhbmNlb2YgRGF0ZSxcbiAgICAgICAgZGF0ZUIgPSBiIGluc3RhbmNlb2YgRGF0ZTtcbiAgICBpZiAoZGF0ZUEgIT0gZGF0ZUIpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoZGF0ZUEgJiYgZGF0ZUIpIHJldHVybiBhLmdldFRpbWUoKSA9PSBiLmdldFRpbWUoKTtcbiAgICB2YXIgcmVnZXhwQSA9IGEgaW5zdGFuY2VvZiBSZWdFeHAsXG4gICAgICAgIHJlZ2V4cEIgPSBiIGluc3RhbmNlb2YgUmVnRXhwO1xuICAgIGlmIChyZWdleHBBICE9IHJlZ2V4cEIpIHJldHVybiBmYWxzZTtcbiAgICBpZiAocmVnZXhwQSAmJiByZWdleHBCKSByZXR1cm4gYS50b1N0cmluZygpID09IGIudG9TdHJpbmcoKTtcbiAgICB2YXIga2V5cyA9IGtleUxpc3QoYSk7XG4gICAgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG5cbiAgICBpZiAobGVuZ3RoICE9PSBrZXlMaXN0KGIpLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykge1xuICAgICAgaWYgKCFoYXNQcm9wLmNhbGwoYiwga2V5c1tpXSkpIHJldHVybiBmYWxzZTtcbiAgICB9IC8vIGVuZCBmYXN0LWRlZXAtZXF1YWxcbiAgICAvLyBDdXN0b20gaGFuZGxpbmcgZm9yIFJlYWN0XG5cblxuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykge1xuICAgICAga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKGtleSA9PT0gJ19vd25lcicgJiYgYS4kJHR5cGVvZikge1xuICAgICAgICAvLyBSZWFjdC1zcGVjaWZpYzogYXZvaWQgdHJhdmVyc2luZyBSZWFjdCBlbGVtZW50cycgX293bmVyLlxuICAgICAgICAvLyAgX293bmVyIGNvbnRhaW5zIGNpcmN1bGFyIHJlZmVyZW5jZXNcbiAgICAgICAgLy8gYW5kIGlzIG5vdCBuZWVkZWQgd2hlbiBjb21wYXJpbmcgdGhlIGFjdHVhbCBlbGVtZW50cyAoYW5kIG5vdCB0aGVpciBvd25lcnMpXG4gICAgICAgIC8vIC4kJHR5cGVvZiBhbmQgLl9zdG9yZSBvbiBqdXN0IHJlYXNvbmFibGUgbWFya2VycyBvZiBhIHJlYWN0IGVsZW1lbnRcbiAgICAgICAgY29udGludWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBhbGwgb3RoZXIgcHJvcGVydGllcyBzaG91bGQgYmUgdHJhdmVyc2VkIGFzIHVzdWFsXG4gICAgICAgIGlmICghZXF1YWwoYVtrZXldLCBiW2tleV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSAvLyBmYXN0LWRlZXAtZXF1YWwgaW5kZXguanMgMi4wLjFcblxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gYSAhPT0gYSAmJiBiICE9PSBiO1xufSAvLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cblxuZnVuY3Rpb24gZXhwb3J0ZWRFcXVhbChhLCBiKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVxdWFsKGEsIGIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmIChlcnJvci5tZXNzYWdlICYmIGVycm9yLm1lc3NhZ2UubWF0Y2goL3N0YWNrfHJlY3Vyc2lvbi9pKSkge1xuICAgICAgLy8gd2FybiBvbiBjaXJjdWxhciByZWZlcmVuY2VzLCBkb24ndCBjcmFzaFxuICAgICAgLy8gYnJvd3NlcnMgZ2l2ZSB0aGlzIGRpZmZlcmVudCBlcnJvcnMgbmFtZSBhbmQgbWVzc2FnZXM6XG4gICAgICAvLyBjaHJvbWUvc2FmYXJpOiBcIlJhbmdlRXJyb3JcIiwgXCJNYXhpbXVtIGNhbGwgc3RhY2sgc2l6ZSBleGNlZWRlZFwiXG4gICAgICAvLyBmaXJlZm94OiBcIkludGVybmFsRXJyb3JcIiwgdG9vIG11Y2ggcmVjdXJzaW9uXCJcbiAgICAgIC8vIGVkZ2U6IFwiRXJyb3JcIiwgXCJPdXQgb2Ygc3RhY2sgc3BhY2VcIlxuICAgICAgY29uc29sZS53YXJuKCdXYXJuaW5nOiByZWFjdC1mYXN0LWNvbXBhcmUgZG9lcyBub3QgaGFuZGxlIGNpcmN1bGFyIHJlZmVyZW5jZXMuJywgZXJyb3IubmFtZSwgZXJyb3IubWVzc2FnZSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSAvLyBzb21lIG90aGVyIGVycm9yLiB3ZSBzaG91bGQgZGVmaW5pdGVseSBrbm93IGFib3V0IHRoZXNlXG5cblxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbnZhciBjb250YWluZXJDU1MgPSBmdW5jdGlvbiBjb250YWluZXJDU1MoX3JlZikge1xuICB2YXIgaXNEaXNhYmxlZCA9IF9yZWYuaXNEaXNhYmxlZCxcbiAgICAgIGlzUnRsID0gX3JlZi5pc1J0bDtcbiAgcmV0dXJuIHtcbiAgICBsYWJlbDogJ2NvbnRhaW5lcicsXG4gICAgZGlyZWN0aW9uOiBpc1J0bCA/ICdydGwnIDogbnVsbCxcbiAgICBwb2ludGVyRXZlbnRzOiBpc0Rpc2FibGVkID8gJ25vbmUnIDogbnVsbCxcbiAgICAvLyBjYW5jZWwgbW91c2UgZXZlbnRzIHdoZW4gZGlzYWJsZWRcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJ1xuICB9O1xufTtcbnZhciBTZWxlY3RDb250YWluZXIgPSBmdW5jdGlvbiBTZWxlY3RDb250YWluZXIocHJvcHMpIHtcbiAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjeCA9IHByb3BzLmN4LFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHMsXG4gICAgICBpc0Rpc2FibGVkID0gcHJvcHMuaXNEaXNhYmxlZCxcbiAgICAgIGlzUnRsID0gcHJvcHMuaXNSdGw7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMoe1xuICAgIGNzczogZ2V0U3R5bGVzKCdjb250YWluZXInLCBwcm9wcyksXG4gICAgY2xhc3NOYW1lOiBjeCh7XG4gICAgICAnLS1pcy1kaXNhYmxlZCc6IGlzRGlzYWJsZWQsXG4gICAgICAnLS1pcy1ydGwnOiBpc1J0bFxuICAgIH0sIGNsYXNzTmFtZSlcbiAgfSwgaW5uZXJQcm9wcyksIGNoaWxkcmVuKTtcbn07IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVmFsdWUgQ29udGFpbmVyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIHZhbHVlQ29udGFpbmVyQ1NTID0gZnVuY3Rpb24gdmFsdWVDb250YWluZXJDU1MoX3JlZjIpIHtcbiAgdmFyIHNwYWNpbmcgPSBfcmVmMi50aGVtZS5zcGFjaW5nO1xuICByZXR1cm4ge1xuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBmbGV4OiAxLFxuICAgIGZsZXhXcmFwOiAnd3JhcCcsXG4gICAgcGFkZGluZzogXCJcIi5jb25jYXQoc3BhY2luZy5iYXNlVW5pdCAvIDIsIFwicHggXCIpLmNvbmNhdChzcGFjaW5nLmJhc2VVbml0ICogMiwgXCJweFwiKSxcbiAgICBXZWJraXRPdmVyZmxvd1Njcm9sbGluZzogJ3RvdWNoJyxcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbidcbiAgfTtcbn07XG52YXIgVmFsdWVDb250YWluZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFZhbHVlQ29udGFpbmVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBWYWx1ZUNvbnRhaW5lcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVmFsdWVDb250YWluZXIpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihWYWx1ZUNvbnRhaW5lcikuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoVmFsdWVDb250YWluZXIsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgICAgY2xhc3NOYW1lID0gX3RoaXMkcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgICAgIGN4ID0gX3RoaXMkcHJvcHMuY3gsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzLmlzTXVsdGksXG4gICAgICAgICAgZ2V0U3R5bGVzID0gX3RoaXMkcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgICAgIGhhc1ZhbHVlID0gX3RoaXMkcHJvcHMuaGFzVmFsdWU7XG4gICAgICByZXR1cm4ganN4KFwiZGl2XCIsIHtcbiAgICAgICAgY3NzOiBnZXRTdHlsZXMoJ3ZhbHVlQ29udGFpbmVyJywgdGhpcy5wcm9wcyksXG4gICAgICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgICAgICd2YWx1ZS1jb250YWluZXInOiB0cnVlLFxuICAgICAgICAgICd2YWx1ZS1jb250YWluZXItLWlzLW11bHRpJzogaXNNdWx0aSxcbiAgICAgICAgICAndmFsdWUtY29udGFpbmVyLS1oYXMtdmFsdWUnOiBoYXNWYWx1ZVxuICAgICAgICB9LCBjbGFzc05hbWUpXG4gICAgICB9LCBjaGlsZHJlbik7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFZhbHVlQ29udGFpbmVyO1xufShDb21wb25lbnQpOyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEluZGljYXRvciBDb250YWluZXJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG52YXIgaW5kaWNhdG9yc0NvbnRhaW5lckNTUyA9IGZ1bmN0aW9uIGluZGljYXRvcnNDb250YWluZXJDU1MoKSB7XG4gIHJldHVybiB7XG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgYWxpZ25TZWxmOiAnc3RyZXRjaCcsXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIGZsZXhTaHJpbms6IDBcbiAgfTtcbn07XG52YXIgSW5kaWNhdG9yc0NvbnRhaW5lciA9IGZ1bmN0aW9uIEluZGljYXRvcnNDb250YWluZXIocHJvcHMpIHtcbiAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjeCA9IHByb3BzLmN4LFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIHtcbiAgICBjc3M6IGdldFN0eWxlcygnaW5kaWNhdG9yc0NvbnRhaW5lcicsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgIGluZGljYXRvcnM6IHRydWVcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0sIGNoaWxkcmVuKTtcbn07XG5cbmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHtcbiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFtcIlxcbiAgMCUsIDgwJSwgMTAwJSB7IG9wYWNpdHk6IDA7IH1cXG4gIDQwJSB7IG9wYWNpdHk6IDE7IH1cXG5cIl0pO1xuXG4gIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHtcbiAgICByZXR1cm4gZGF0YTtcbiAgfTtcblxuICByZXR1cm4gZGF0YTtcbn1cblxudmFyIF9yZWYyID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8ge1xuICBuYW1lOiBcIjE5YnFoMnJcIixcbiAgc3R5bGVzOiBcImRpc3BsYXk6aW5saW5lLWJsb2NrO2ZpbGw6Y3VycmVudENvbG9yO2xpbmUtaGVpZ2h0OjE7c3Ryb2tlOmN1cnJlbnRDb2xvcjtzdHJva2Utd2lkdGg6MDtcIlxufSA6IHtcbiAgbmFtZTogXCIxOWJxaDJyXCIsXG4gIHN0eWxlczogXCJkaXNwbGF5OmlubGluZS1ibG9jaztmaWxsOmN1cnJlbnRDb2xvcjtsaW5lLWhlaWdodDoxO3N0cm9rZTpjdXJyZW50Q29sb3I7c3Ryb2tlLXdpZHRoOjA7XCIsXG4gIG1hcDogXCIvKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1WkdsallYUnZjbk11YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQmEwSkpJaXdpWm1sc1pTSTZJbWx1WkdsallYUnZjbk11YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUJBWm14dmQxeHVMeW9xSUVCcWMzZ2dhbk40SUNvdlhHNXBiWEJ2Y25RZ2V5QjBlWEJsSUU1dlpHVWdmU0JtY205dElDZHlaV0ZqZENjN1hHNXBiWEJ2Y25RZ2V5QnFjM2dzSUd0bGVXWnlZVzFsY3lCOUlHWnliMjBnSjBCbGJXOTBhVzl1TDJOdmNtVW5PMXh1WEc1cGJYQnZjblFnZEhsd1pTQjdJRU52YlcxdmJsQnliM0J6TENCVWFHVnRaU0I5SUdaeWIyMGdKeTR1TDNSNWNHVnpKenRjYmx4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0dkx5QkVjbTl3Wkc5M2JpQW1JRU5zWldGeUlFbGpiMjV6WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmx4dVkyOXVjM1FnVTNabklEMGdLSHNnYzJsNlpTd2dMaTR1Y0hKdmNITWdmVG9nZXlCemFYcGxPaUJ1ZFcxaVpYSWdmU2tnUFQ0Z0tGeHVJQ0E4YzNablhHNGdJQ0FnYUdWcFoyaDBQWHR6YVhwbGZWeHVJQ0FnSUhkcFpIUm9QWHR6YVhwbGZWeHVJQ0FnSUhacFpYZENiM2c5WENJd0lEQWdNakFnTWpCY0lseHVJQ0FnSUdGeWFXRXRhR2xrWkdWdVBWd2lkSEoxWlZ3aVhHNGdJQ0FnWm05amRYTmhZbXhsUFZ3aVptRnNjMlZjSWx4dUlDQWdJR056Y3oxN2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ0oybHViR2x1WlMxaWJHOWpheWNzWEc0Z0lDQWdJQ0JtYVd4c09pQW5ZM1Z5Y21WdWRFTnZiRzl5Snl4Y2JpQWdJQ0FnSUd4cGJtVklaV2xuYUhRNklERXNYRzRnSUNBZ0lDQnpkSEp2YTJVNklDZGpkWEp5Wlc1MFEyOXNiM0luTEZ4dUlDQWdJQ0FnYzNSeWIydGxWMmxrZEdnNklEQXNYRzRnSUNBZ2ZYMWNiaUFnSUNCN0xpNHVjSEp2Y0hOOVhHNGdJQzgrWEc0cE8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1EzSnZjM05KWTI5dUlEMGdLSEJ5YjNCek9pQmhibmtwSUQwK0lDaGNiaUFnUEZOMlp5QnphWHBsUFhzeU1IMGdleTR1TG5CeWIzQnpmVDVjYmlBZ0lDQThjR0YwYUNCa1BWd2lUVEUwTGpNME9DQXhOQzQ0TkRsakxUQXVORFk1SURBdU5EWTVMVEV1TWpJNUlEQXVORFk1TFRFdU5qazNJREJzTFRJdU5qVXhMVE11TURNd0xUSXVOalV4SURNdU1ESTVZeTB3TGpRMk9TQXdMalEyT1MweExqSXlPU0F3TGpRMk9TMHhMalk1TnlBd0xUQXVORFk1TFRBdU5EWTVMVEF1TkRZNUxURXVNakk1SURBdE1TNDJPVGRzTWk0M05UZ3RNeTR4TlMweUxqYzFPUzB6TGpFMU1tTXRNQzQwTmprdE1DNDBOamt0TUM0ME5qa3RNUzR5TWpnZ01DMHhMalk1TjNNeExqSXlPQzB3TGpRMk9TQXhMalk1TnlBd2JESXVOalV5SURNdU1ETXhJREl1TmpVeExUTXVNRE14WXpBdU5EWTVMVEF1TkRZNUlERXVNakk0TFRBdU5EWTVJREV1TmprM0lEQnpNQzQwTmprZ01TNHlNamtnTUNBeExqWTVOMnd0TWk0M05UZ2dNeTR4TlRJZ01pNDNOVGdnTXk0eE5XTXdMalEyT1NBd0xqUTJPU0F3TGpRMk9TQXhMakl5T1NBd0lERXVOams0ZWx3aUlDOCtYRzRnSUR3dlUzWm5QbHh1S1R0Y2JtVjRjRzl5ZENCamIyNXpkQ0JFYjNkdVEyaGxkbkp2YmlBOUlDaHdjbTl3Y3pvZ1lXNTVLU0E5UGlBb1hHNGdJRHhUZG1jZ2MybDZaVDE3TWpCOUlIc3VMaTV3Y205d2MzMCtYRzRnSUNBZ1BIQmhkR2dnWkQxY0lrMDBMalV4TmlBM0xqVTBPR013TGpRek5pMHdMalEwTmlBeExqQTBNeTB3TGpRNE1TQXhMalUzTmlBd2JETXVPVEE0SURNdU56UTNJRE11T1RBNExUTXVOelEzWXpBdU5UTXpMVEF1TkRneElERXVNVFF4TFRBdU5EUTJJREV1TlRjMElEQWdNQzQwTXpZZ01DNDBORFVnTUM0ME1EZ2dNUzR4T1RjZ01DQXhMall4TlMwd0xqUXdOaUF3TGpReE9DMDBMalk1TlNBMExqVXdNaTAwTGpZNU5TQTBMalV3TWkwd0xqSXhOeUF3TGpJeU15MHdMalV3TWlBd0xqTXpOUzB3TGpjNE55QXdMak16TlhNdE1DNDFOeTB3TGpFeE1pMHdMamM0T1Mwd0xqTXpOV013SURBdE5DNHlPRGN0TkM0d09EUXROQzQyT1RVdE5DNDFNREp6TFRBdU5ETTJMVEV1TVRjZ01DMHhMall4TlhwY0lpQXZQbHh1SUNBOEwxTjJaejVjYmlrN1hHNWNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnUkhKdmNHUnZkMjRnSmlCRGJHVmhjaUJDZFhSMGIyNXpYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNibHh1Wlhod2IzSjBJSFI1Y0dVZ1NXNWthV05oZEc5eVVISnZjSE1nUFNCRGIyMXRiMjVRY205d2N5QW1JSHRjYmlBZ0x5b3FJRlJvWlNCamFHbHNaSEpsYmlCMGJ5QmlaU0J5Wlc1a1pYSmxaQ0JwYm5OcFpHVWdkR2hsSUdsdVpHbGpZWFJ2Y2k0Z0tpOWNiaUFnWTJocGJHUnlaVzQ2SUU1dlpHVXNYRzRnSUM4cUtpQlFjbTl3Y3lCMGFHRjBJSGRwYkd3Z1ltVWdjR0Z6YzJWa0lHOXVJSFJ2SUhSb1pTQmphR2xzWkhKbGJpNGdLaTljYmlBZ2FXNXVaWEpRY205d2N6b2dZVzU1TEZ4dUlDQXZLaW9nVkdobElHWnZZM1Z6WldRZ2MzUmhkR1VnYjJZZ2RHaGxJSE5sYkdWamRDNGdLaTljYmlBZ2FYTkdiMk4xYzJWa09pQmliMjlzWldGdUxGeHVJQ0F2S2lvZ1YyaGxkR2hsY2lCMGFHVWdkR1Y0ZENCcGN5QnlhV2RvZENCMGJ5QnNaV1owSUNvdlhHNGdJR2x6VW5Sc09pQmliMjlzWldGdUxGeHVmVHRjYmx4dVkyOXVjM1FnWW1GelpVTlRVeUE5SUNoN1hHNGdJR2x6Um05amRYTmxaQ3hjYmlBZ2RHaGxiV1U2SUh0Y2JpQWdJQ0J6Y0dGamFXNW5PaUI3SUdKaGMyVlZibWwwSUgwc1hHNGdJQ0FnWTI5c2IzSnpMRnh1SUNCOUxGeHVmVG9nU1c1a2FXTmhkRzl5VUhKdmNITXBJRDArSUNoN1hHNGdJR3hoWW1Wc09pQW5hVzVrYVdOaGRHOXlRMjl1ZEdGcGJtVnlKeXhjYmlBZ1kyOXNiM0k2SUdselJtOWpkWE5sWkNBL0lHTnZiRzl5Y3k1dVpYVjBjbUZzTmpBZ09pQmpiMnh2Y25NdWJtVjFkSEpoYkRJd0xGeHVJQ0JrYVhOd2JHRjVPaUFuWm14bGVDY3NYRzRnSUhCaFpHUnBibWM2SUdKaGMyVlZibWwwSUNvZ01peGNiaUFnZEhKaGJuTnBkR2x2YmpvZ0oyTnZiRzl5SURFMU1HMXpKeXhjYmx4dUlDQW5PbWh2ZG1WeUp6b2dlMXh1SUNBZ0lHTnZiRzl5T2lCcGMwWnZZM1Z6WldRZ1B5QmpiMnh2Y25NdWJtVjFkSEpoYkRnd0lEb2dZMjlzYjNKekxtNWxkWFJ5WVd3ME1DeGNiaUFnZlN4Y2JuMHBPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdaSEp2Y0dSdmQyNUpibVJwWTJGMGIzSkRVMU1nUFNCaVlYTmxRMU5UTzF4dVpYaHdiM0owSUdOdmJuTjBJRVJ5YjNCa2IzZHVTVzVrYVdOaGRHOXlJRDBnS0hCeWIzQnpPaUJKYm1ScFkyRjBiM0pRY205d2N5a2dQVDRnZTF4dUlDQmpiMjV6ZENCN0lHTm9hV3hrY21WdUxDQmpiR0Z6YzA1aGJXVXNJR040TENCblpYUlRkSGxzWlhNc0lHbHVibVZ5VUhKdmNITWdmU0E5SUhCeWIzQnpPMXh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHhrYVhaY2JpQWdJQ0FnSUhzdUxpNXBibTVsY2xCeWIzQnpmVnh1SUNBZ0lDQWdZM056UFh0blpYUlRkSGxzWlhNb0oyUnliM0JrYjNkdVNXNWthV05oZEc5eUp5d2djSEp2Y0hNcGZWeHVJQ0FnSUNBZ1kyeGhjM05PWVcxbFBYdGplQ2hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lHbHVaR2xqWVhSdmNqb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ0lDQW5aSEp2Y0dSdmQyNHRhVzVrYVdOaGRHOXlKem9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnWTJ4aGMzTk9ZVzFsWEc0Z0lDQWdJQ0FwZlZ4dUlDQWdJRDVjYmlBZ0lDQWdJSHRqYUdsc1pISmxiaUI4ZkNBOFJHOTNia05vWlhaeWIyNGdMejU5WEc0Z0lDQWdQQzlrYVhZK1hHNGdJQ2s3WEc1OU8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1kyeGxZWEpKYm1ScFkyRjBiM0pEVTFNZ1BTQmlZWE5sUTFOVE8xeHVaWGh3YjNKMElHTnZibk4wSUVOc1pXRnlTVzVrYVdOaGRHOXlJRDBnS0hCeWIzQnpPaUJKYm1ScFkyRjBiM0pRY205d2N5a2dQVDRnZTF4dUlDQmpiMjV6ZENCN0lHTm9hV3hrY21WdUxDQmpiR0Z6YzA1aGJXVXNJR040TENCblpYUlRkSGxzWlhNc0lHbHVibVZ5VUhKdmNITWdmU0E5SUhCeWIzQnpPMXh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHhrYVhaY2JpQWdJQ0FnSUhzdUxpNXBibTVsY2xCeWIzQnpmVnh1SUNBZ0lDQWdZM056UFh0blpYUlRkSGxzWlhNb0oyTnNaV0Z5U1c1a2FXTmhkRzl5Snl3Z2NISnZjSE1wZlZ4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFh0amVDaGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUdsdVpHbGpZWFJ2Y2pvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnSUNBblkyeGxZWEl0YVc1a2FXTmhkRzl5SnpvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ1kyeGhjM05PWVcxbFhHNGdJQ0FnSUNBcGZWeHVJQ0FnSUQ1Y2JpQWdJQ0FnSUh0amFHbHNaSEpsYmlCOGZDQThRM0p2YzNOSlkyOXVJQzgrZlZ4dUlDQWdJRHd2WkdsMlBseHVJQ0FwTzF4dWZUdGNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzR2THlCVFpYQmhjbUYwYjNKY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNTBlWEJsSUZObGNHRnlZWFJ2Y2xOMFlYUmxJRDBnZXlCcGMwUnBjMkZpYkdWa09pQmliMjlzWldGdUlIMDdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnBibVJwWTJGMGIzSlRaWEJoY21GMGIzSkRVMU1nUFNBb2UxeHVJQ0JwYzBScGMyRmliR1ZrTEZ4dUlDQjBhR1Z0WlRvZ2UxeHVJQ0FnSUhOd1lXTnBibWM2SUhzZ1ltRnpaVlZ1YVhRZ2ZTeGNiaUFnSUNCamIyeHZjbk1zWEc0Z0lIMHNYRzU5T2lCRGIyMXRiMjVRY205d2N5QW1JRk5sY0dGeVlYUnZjbE4wWVhSbEtTQTlQaUFvZTF4dUlDQnNZV0psYkRvZ0oybHVaR2xqWVhSdmNsTmxjR0Z5WVhSdmNpY3NYRzRnSUdGc2FXZHVVMlZzWmpvZ0ozTjBjbVYwWTJnbkxGeHVJQ0JpWVdOclozSnZkVzVrUTI5c2IzSTZJR2x6UkdsellXSnNaV1FnUHlCamIyeHZjbk11Ym1WMWRISmhiREV3SURvZ1kyOXNiM0p6TG01bGRYUnlZV3d5TUN4Y2JpQWdiV0Z5WjJsdVFtOTBkRzl0T2lCaVlYTmxWVzVwZENBcUlESXNYRzRnSUcxaGNtZHBibFJ2Y0RvZ1ltRnpaVlZ1YVhRZ0tpQXlMRnh1SUNCM2FXUjBhRG9nTVN4Y2JuMHBPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdTVzVrYVdOaGRHOXlVMlZ3WVhKaGRHOXlJRDBnS0hCeWIzQnpPaUJKYm1ScFkyRjBiM0pRY205d2N5a2dQVDRnZTF4dUlDQmpiMjV6ZENCN0lHTnNZWE56VG1GdFpTd2dZM2dzSUdkbGRGTjBlV3hsY3l3Z2FXNXVaWEpRY205d2N5QjlJRDBnY0hKdmNITTdYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQSE53WVc1Y2JpQWdJQ0FnSUhzdUxpNXBibTVsY2xCeWIzQnpmVnh1SUNBZ0lDQWdZM056UFh0blpYUlRkSGxzWlhNb0oybHVaR2xqWVhSdmNsTmxjR0Z5WVhSdmNpY3NJSEJ5YjNCektYMWNiaUFnSUNBZ0lHTnNZWE56VG1GdFpUMTdZM2dvZXlBbmFXNWthV05oZEc5eUxYTmxjR0Z5WVhSdmNpYzZJSFJ5ZFdVZ2ZTd2dZMnhoYzNOT1lXMWxLWDFjYmlBZ0lDQXZQbHh1SUNBcE8xeHVmVHRjYmx4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0dkx5Qk1iMkZrYVc1blhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseHVZMjl1YzNRZ2JHOWhaR2x1WjBSdmRFRnVhVzFoZEdsdmJuTWdQU0JyWlhsbWNtRnRaWE5nWEc0Z0lEQWxMQ0E0TUNVc0lERXdNQ1VnZXlCdmNHRmphWFI1T2lBd095QjlYRzRnSURRd0pTQjdJRzl3WVdOcGRIazZJREU3SUgxY2JtQTdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnNiMkZrYVc1blNXNWthV05oZEc5eVExTlRJRDBnS0h0Y2JpQWdhWE5HYjJOMWMyVmtMRnh1SUNCemFYcGxMRnh1SUNCMGFHVnRaVG9nZTF4dUlDQWdJR052Ykc5eWN5eGNiaUFnSUNCemNHRmphVzVuT2lCN0lHSmhjMlZWYm1sMElIMHNYRzRnSUgwc1hHNTlPaUI3WEc0Z0lHbHpSbTlqZFhObFpEb2dZbTl2YkdWaGJpeGNiaUFnYzJsNlpUb2diblZ0WW1WeUxGeHVJQ0IwYUdWdFpUb2dWR2hsYldVc1hHNTlLU0E5UGlBb2UxeHVJQ0JzWVdKbGJEb2dKMnh2WVdScGJtZEpibVJwWTJGMGIzSW5MRnh1SUNCamIyeHZjam9nYVhOR2IyTjFjMlZrSUQ4Z1kyOXNiM0p6TG01bGRYUnlZV3cyTUNBNklHTnZiRzl5Y3k1dVpYVjBjbUZzTWpBc1hHNGdJR1JwYzNCc1lYazZJQ2RtYkdWNEp5eGNiaUFnY0dGa1pHbHVaem9nWW1GelpWVnVhWFFnS2lBeUxGeHVJQ0IwY21GdWMybDBhVzl1T2lBblkyOXNiM0lnTVRVd2JYTW5MRnh1SUNCaGJHbG5ibE5sYkdZNklDZGpaVzUwWlhJbkxGeHVJQ0JtYjI1MFUybDZaVG9nYzJsNlpTeGNiaUFnYkdsdVpVaGxhV2RvZERvZ01TeGNiaUFnYldGeVoybHVVbWxuYUhRNklITnBlbVVzWEc0Z0lIUmxlSFJCYkdsbmJqb2dKMk5sYm5SbGNpY3NYRzRnSUhabGNuUnBZMkZzUVd4cFoyNDZJQ2R0YVdSa2JHVW5MRnh1ZlNrN1hHNWNiblI1Y0dVZ1JHOTBVSEp2Y0hNZ1BTQjdJR052Ykc5eU9pQnpkSEpwYm1jc0lHUmxiR0Y1T2lCdWRXMWlaWElzSUc5bVpuTmxkRG9nWW05dmJHVmhiaUI5TzF4dVkyOXVjM1FnVEc5aFpHbHVaMFJ2ZENBOUlDaDdJR052Ykc5eUxDQmtaV3hoZVN3Z2IyWm1jMlYwSUgwNklFUnZkRkJ5YjNCektTQTlQaUFvWEc0Z0lEeHpjR0Z1WEc0Z0lDQWdZM056UFh0N1hHNGdJQ0FnSUNCaGJtbHRZWFJwYjI0NklHQWtlMnh2WVdScGJtZEViM1JCYm1sdFlYUnBiMjV6ZlNBeGN5QmxZWE5sTFdsdUxXOTFkQ0FrZTJSbGJHRjVmVzF6SUdsdVptbHVhWFJsTzJBc1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a1EyOXNiM0k2SUdOdmJHOXlMRnh1SUNBZ0lDQWdZbTl5WkdWeVVtRmthWFZ6T2lBbk1XVnRPeWNzWEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUFuYVc1c2FXNWxMV0pzYjJOck95Y3NYRzRnSUNBZ0lDQnRZWEpuYVc1TVpXWjBPaUJ2Wm1aelpYUWdQeUFuTVdWdE95Y2dPaUJ1ZFd4c0xGeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBbk1XVnRPeWNzWEc0Z0lDQWdJQ0IyWlhKMGFXTmhiRUZzYVdkdU9pQW5kRzl3T3ljc1hHNGdJQ0FnSUNCM2FXUjBhRG9nSnpGbGJUc25MRnh1SUNBZ0lIMTlYRzRnSUM4K1hHNHBPMXh1WEc1bGVIQnZjblFnZEhsd1pTQk1iMkZrYVc1blNXTnZibEJ5YjNCeklEMGdlMXh1SUNBdktpb2dVSEp2Y0hNZ2RHaGhkQ0IzYVd4c0lHSmxJSEJoYzNObFpDQnZiaUIwYnlCMGFHVWdZMmhwYkdSeVpXNHVJQ292WEc0Z0lHbHVibVZ5VUhKdmNITTZJR0Z1ZVN4Y2JpQWdMeW9xSUZSb1pTQm1iMk4xYzJWa0lITjBZWFJsSUc5bUlIUm9aU0J6Wld4bFkzUXVJQ292WEc0Z0lHbHpSbTlqZFhObFpEb2dZbTl2YkdWaGJpeGNiaUFnTHlvcUlGZG9aWFJvWlhJZ2RHaGxJSFJsZUhRZ2FYTWdjbWxuYUhRZ2RHOGdiR1ZtZENBcUwxeHVJQ0JwYzFKMGJEb2dZbTl2YkdWaGJpeGNibjBnSmlCRGIyMXRiMjVRY205d2N5QW1JSHRjYmlBZ0lDQXZLaW9nVTJWMElITnBlbVVnYjJZZ2RHaGxJR052Ym5SaGFXNWxjaTRnS2k5Y2JpQWdJQ0J6YVhwbE9pQnVkVzFpWlhJc1hHNGdJSDA3WEc1bGVIQnZjblFnWTI5dWMzUWdURzloWkdsdVowbHVaR2xqWVhSdmNpQTlJQ2h3Y205d2N6b2dURzloWkdsdVowbGpiMjVRY205d2N5a2dQVDRnZTF4dUlDQmpiMjV6ZENCN1hHNGdJQ0FnWTJ4aGMzTk9ZVzFsTEZ4dUlDQWdJR040TEZ4dUlDQWdJR2RsZEZOMGVXeGxjeXhjYmlBZ0lDQnBibTVsY2xCeWIzQnpMRnh1SUNBZ0lHbHpSbTlqZFhObFpDeGNiaUFnSUNCcGMxSjBiQ3hjYmlBZ0lDQjBhR1Z0WlRvZ2V5QmpiMnh2Y25NZ2ZTeGNiaUFnZlNBOUlIQnliM0J6TzF4dUlDQmpiMjV6ZENCamIyeHZjaUE5SUdselJtOWpkWE5sWkNBL0lHTnZiRzl5Y3k1dVpYVjBjbUZzT0RBZ09pQmpiMnh2Y25NdWJtVjFkSEpoYkRJd08xeHVYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQR1JwZGx4dUlDQWdJQ0FnZXk0dUxtbHVibVZ5VUhKdmNITjlYRzRnSUNBZ0lDQmpjM005ZTJkbGRGTjBlV3hsY3lnbmJHOWhaR2x1WjBsdVpHbGpZWFJ2Y2ljc0lIQnliM0J6S1gxY2JpQWdJQ0FnSUdOc1lYTnpUbUZ0WlQxN1kzZ29YRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNCcGJtUnBZMkYwYjNJNklIUnlkV1VzWEc0Z0lDQWdJQ0FnSUNBZ0oyeHZZV1JwYm1jdGFXNWthV05oZEc5eUp6b2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdZMnhoYzNOT1lXMWxYRzRnSUNBZ0lDQXBmVnh1SUNBZ0lENWNiaUFnSUNBZ0lEeE1iMkZrYVc1blJHOTBJR052Ykc5eVBYdGpiMnh2Y24wZ1pHVnNZWGs5ZXpCOUlHOW1abk5sZEQxN2FYTlNkR3g5SUM4K1hHNGdJQ0FnSUNBOFRHOWhaR2x1WjBSdmRDQmpiMnh2Y2oxN1kyOXNiM0o5SUdSbGJHRjVQWHN4TmpCOUlHOW1abk5sZENBdlBseHVJQ0FnSUNBZ1BFeHZZV1JwYm1kRWIzUWdZMjlzYjNJOWUyTnZiRzl5ZlNCa1pXeGhlVDE3TXpJd2ZTQnZabVp6WlhROWV5RnBjMUowYkgwZ0x6NWNiaUFnSUNBOEwyUnBkajVjYmlBZ0tUdGNibjA3WEc1TWIyRmthVzVuU1c1a2FXTmhkRzl5TG1SbFptRjFiSFJRY205d2N5QTlJSHNnYzJsNlpUb2dOQ0I5TzF4dUlsMTkgKi9cIlxufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBEcm9wZG93biAmIENsZWFyIEljb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbnZhciBTdmcgPSBmdW5jdGlvbiBTdmcoX3JlZikge1xuICB2YXIgc2l6ZSA9IF9yZWYuc2l6ZSxcbiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFtcInNpemVcIl0pO1xuXG4gIHJldHVybiBqc3goXCJzdmdcIiwgX2V4dGVuZHMoe1xuICAgIGhlaWdodDogc2l6ZSxcbiAgICB3aWR0aDogc2l6ZSxcbiAgICB2aWV3Qm94OiBcIjAgMCAyMCAyMFwiLFxuICAgIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIsXG4gICAgZm9jdXNhYmxlOiBcImZhbHNlXCIsXG4gICAgY3NzOiBfcmVmMlxuICB9LCBwcm9wcykpO1xufTtcblxudmFyIENyb3NzSWNvbiA9IGZ1bmN0aW9uIENyb3NzSWNvbihwcm9wcykge1xuICByZXR1cm4ganN4KFN2ZywgX2V4dGVuZHMoe1xuICAgIHNpemU6IDIwXG4gIH0sIHByb3BzKSwganN4KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTQuMzQ4IDE0Ljg0OWMtMC40NjkgMC40NjktMS4yMjkgMC40NjktMS42OTcgMGwtMi42NTEtMy4wMzAtMi42NTEgMy4wMjljLTAuNDY5IDAuNDY5LTEuMjI5IDAuNDY5LTEuNjk3IDAtMC40NjktMC40NjktMC40NjktMS4yMjkgMC0xLjY5N2wyLjc1OC0zLjE1LTIuNzU5LTMuMTUyYy0wLjQ2OS0wLjQ2OS0wLjQ2OS0xLjIyOCAwLTEuNjk3czEuMjI4LTAuNDY5IDEuNjk3IDBsMi42NTIgMy4wMzEgMi42NTEtMy4wMzFjMC40NjktMC40NjkgMS4yMjgtMC40NjkgMS42OTcgMHMwLjQ2OSAxLjIyOSAwIDEuNjk3bC0yLjc1OCAzLjE1MiAyLjc1OCAzLjE1YzAuNDY5IDAuNDY5IDAuNDY5IDEuMjI5IDAgMS42OTh6XCJcbiAgfSkpO1xufTtcbnZhciBEb3duQ2hldnJvbiA9IGZ1bmN0aW9uIERvd25DaGV2cm9uKHByb3BzKSB7XG4gIHJldHVybiBqc3goU3ZnLCBfZXh0ZW5kcyh7XG4gICAgc2l6ZTogMjBcbiAgfSwgcHJvcHMpLCBqc3goXCJwYXRoXCIsIHtcbiAgICBkOiBcIk00LjUxNiA3LjU0OGMwLjQzNi0wLjQ0NiAxLjA0My0wLjQ4MSAxLjU3NiAwbDMuOTA4IDMuNzQ3IDMuOTA4LTMuNzQ3YzAuNTMzLTAuNDgxIDEuMTQxLTAuNDQ2IDEuNTc0IDAgMC40MzYgMC40NDUgMC40MDggMS4xOTcgMCAxLjYxNS0wLjQwNiAwLjQxOC00LjY5NSA0LjUwMi00LjY5NSA0LjUwMi0wLjIxNyAwLjIyMy0wLjUwMiAwLjMzNS0wLjc4NyAwLjMzNXMtMC41Ny0wLjExMi0wLjc4OS0wLjMzNWMwIDAtNC4yODctNC4wODQtNC42OTUtNC41MDJzLTAuNDM2LTEuMTcgMC0xLjYxNXpcIlxuICB9KSk7XG59OyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIERyb3Bkb3duICYgQ2xlYXIgQnV0dG9uc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbnZhciBiYXNlQ1NTID0gZnVuY3Rpb24gYmFzZUNTUyhfcmVmMykge1xuICB2YXIgaXNGb2N1c2VkID0gX3JlZjMuaXNGb2N1c2VkLFxuICAgICAgX3JlZjMkdGhlbWUgPSBfcmVmMy50aGVtZSxcbiAgICAgIGJhc2VVbml0ID0gX3JlZjMkdGhlbWUuc3BhY2luZy5iYXNlVW5pdCxcbiAgICAgIGNvbG9ycyA9IF9yZWYzJHRoZW1lLmNvbG9ycztcbiAgcmV0dXJuIHtcbiAgICBsYWJlbDogJ2luZGljYXRvckNvbnRhaW5lcicsXG4gICAgY29sb3I6IGlzRm9jdXNlZCA/IGNvbG9ycy5uZXV0cmFsNjAgOiBjb2xvcnMubmV1dHJhbDIwLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBwYWRkaW5nOiBiYXNlVW5pdCAqIDIsXG4gICAgdHJhbnNpdGlvbjogJ2NvbG9yIDE1MG1zJyxcbiAgICAnOmhvdmVyJzoge1xuICAgICAgY29sb3I6IGlzRm9jdXNlZCA/IGNvbG9ycy5uZXV0cmFsODAgOiBjb2xvcnMubmV1dHJhbDQwXG4gICAgfVxuICB9O1xufTtcblxudmFyIGRyb3Bkb3duSW5kaWNhdG9yQ1NTID0gYmFzZUNTUztcbnZhciBEcm9wZG93bkluZGljYXRvciA9IGZ1bmN0aW9uIERyb3Bkb3duSW5kaWNhdG9yKHByb3BzKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGdldFN0eWxlcyA9IHByb3BzLmdldFN0eWxlcyxcbiAgICAgIGlubmVyUHJvcHMgPSBwcm9wcy5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzKHt9LCBpbm5lclByb3BzLCB7XG4gICAgY3NzOiBnZXRTdHlsZXMoJ2Ryb3Bkb3duSW5kaWNhdG9yJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgaW5kaWNhdG9yOiB0cnVlLFxuICAgICAgJ2Ryb3Bkb3duLWluZGljYXRvcic6IHRydWVcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0pLCBjaGlsZHJlbiB8fCBqc3goRG93bkNoZXZyb24sIG51bGwpKTtcbn07XG52YXIgY2xlYXJJbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xudmFyIENsZWFySW5kaWNhdG9yID0gZnVuY3Rpb24gQ2xlYXJJbmRpY2F0b3IocHJvcHMpIHtcbiAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjeCA9IHByb3BzLmN4LFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHM7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMoe30sIGlubmVyUHJvcHMsIHtcbiAgICBjc3M6IGdldFN0eWxlcygnY2xlYXJJbmRpY2F0b3InLCBwcm9wcyksXG4gICAgY2xhc3NOYW1lOiBjeCh7XG4gICAgICBpbmRpY2F0b3I6IHRydWUsXG4gICAgICAnY2xlYXItaW5kaWNhdG9yJzogdHJ1ZVxuICAgIH0sIGNsYXNzTmFtZSlcbiAgfSksIGNoaWxkcmVuIHx8IGpzeChDcm9zc0ljb24sIG51bGwpKTtcbn07IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gU2VwYXJhdG9yXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIGluZGljYXRvclNlcGFyYXRvckNTUyA9IGZ1bmN0aW9uIGluZGljYXRvclNlcGFyYXRvckNTUyhfcmVmNCkge1xuICB2YXIgaXNEaXNhYmxlZCA9IF9yZWY0LmlzRGlzYWJsZWQsXG4gICAgICBfcmVmNCR0aGVtZSA9IF9yZWY0LnRoZW1lLFxuICAgICAgYmFzZVVuaXQgPSBfcmVmNCR0aGVtZS5zcGFjaW5nLmJhc2VVbml0LFxuICAgICAgY29sb3JzID0gX3JlZjQkdGhlbWUuY29sb3JzO1xuICByZXR1cm4ge1xuICAgIGxhYmVsOiAnaW5kaWNhdG9yU2VwYXJhdG9yJyxcbiAgICBhbGlnblNlbGY6ICdzdHJldGNoJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDEwIDogY29sb3JzLm5ldXRyYWwyMCxcbiAgICBtYXJnaW5Cb3R0b206IGJhc2VVbml0ICogMixcbiAgICBtYXJnaW5Ub3A6IGJhc2VVbml0ICogMixcbiAgICB3aWR0aDogMVxuICB9O1xufTtcbnZhciBJbmRpY2F0b3JTZXBhcmF0b3IgPSBmdW5jdGlvbiBJbmRpY2F0b3JTZXBhcmF0b3IocHJvcHMpIHtcbiAgdmFyIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpbm5lclByb3BzID0gcHJvcHMuaW5uZXJQcm9wcztcbiAgcmV0dXJuIGpzeChcInNwYW5cIiwgX2V4dGVuZHMoe30sIGlubmVyUHJvcHMsIHtcbiAgICBjc3M6IGdldFN0eWxlcygnaW5kaWNhdG9yU2VwYXJhdG9yJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgJ2luZGljYXRvci1zZXBhcmF0b3InOiB0cnVlXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9KSk7XG59OyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIExvYWRpbmdcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG52YXIgbG9hZGluZ0RvdEFuaW1hdGlvbnMgPSBrZXlmcmFtZXMoX3RlbXBsYXRlT2JqZWN0KCkpO1xudmFyIGxvYWRpbmdJbmRpY2F0b3JDU1MgPSBmdW5jdGlvbiBsb2FkaW5nSW5kaWNhdG9yQ1NTKF9yZWY1KSB7XG4gIHZhciBpc0ZvY3VzZWQgPSBfcmVmNS5pc0ZvY3VzZWQsXG4gICAgICBzaXplID0gX3JlZjUuc2l6ZSxcbiAgICAgIF9yZWY1JHRoZW1lID0gX3JlZjUudGhlbWUsXG4gICAgICBjb2xvcnMgPSBfcmVmNSR0aGVtZS5jb2xvcnMsXG4gICAgICBiYXNlVW5pdCA9IF9yZWY1JHRoZW1lLnNwYWNpbmcuYmFzZVVuaXQ7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdsb2FkaW5nSW5kaWNhdG9yJyxcbiAgICBjb2xvcjogaXNGb2N1c2VkID8gY29sb3JzLm5ldXRyYWw2MCA6IGNvbG9ycy5uZXV0cmFsMjAsXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIHBhZGRpbmc6IGJhc2VVbml0ICogMixcbiAgICB0cmFuc2l0aW9uOiAnY29sb3IgMTUwbXMnLFxuICAgIGFsaWduU2VsZjogJ2NlbnRlcicsXG4gICAgZm9udFNpemU6IHNpemUsXG4gICAgbGluZUhlaWdodDogMSxcbiAgICBtYXJnaW5SaWdodDogc2l6ZSxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnXG4gIH07XG59O1xuXG52YXIgTG9hZGluZ0RvdCA9IGZ1bmN0aW9uIExvYWRpbmdEb3QoX3JlZjYpIHtcbiAgdmFyIGNvbG9yID0gX3JlZjYuY29sb3IsXG4gICAgICBkZWxheSA9IF9yZWY2LmRlbGF5LFxuICAgICAgb2Zmc2V0ID0gX3JlZjYub2Zmc2V0O1xuICByZXR1cm4ganN4KFwic3BhblwiLCB7XG4gICAgY3NzOlxuICAgIC8qI19fUFVSRV9fKi9cbiAgICBfY3NzKHtcbiAgICAgIGFuaW1hdGlvbjogXCJcIi5jb25jYXQobG9hZGluZ0RvdEFuaW1hdGlvbnMsIFwiIDFzIGVhc2UtaW4tb3V0IFwiKS5jb25jYXQoZGVsYXksIFwibXMgaW5maW5pdGU7XCIpLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcixcbiAgICAgIGJvcmRlclJhZGl1czogJzFlbTsnLFxuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jazsnLFxuICAgICAgbWFyZ2luTGVmdDogb2Zmc2V0ID8gJzFlbTsnIDogbnVsbCxcbiAgICAgIGhlaWdodDogJzFlbTsnLFxuICAgICAgdmVydGljYWxBbGlnbjogJ3RvcDsnLFxuICAgICAgd2lkdGg6ICcxZW07J1xuICAgIH0sIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IFwiXCIgOiBcIi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltbHVaR2xqWVhSdmNuTXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCYzB4Sklpd2labWxzWlNJNkltbHVaR2xqWVhSdmNuTXVhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdkx5QkFabXh2ZDF4dUx5b3FJRUJxYzNnZ2FuTjRJQ292WEc1cGJYQnZjblFnZXlCMGVYQmxJRTV2WkdVZ2ZTQm1jbTl0SUNkeVpXRmpkQ2M3WEc1cGJYQnZjblFnZXlCcWMzZ3NJR3RsZVdaeVlXMWxjeUI5SUdaeWIyMGdKMEJsYlc5MGFXOXVMMk52Y21Vbk8xeHVYRzVwYlhCdmNuUWdkSGx3WlNCN0lFTnZiVzF2YmxCeWIzQnpMQ0JVYUdWdFpTQjlJR1p5YjIwZ0p5NHVMM1I1Y0dWekp6dGNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzR2THlCRWNtOXdaRzkzYmlBbUlFTnNaV0Z5SUVsamIyNXpYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNibHh1WTI5dWMzUWdVM1puSUQwZ0tIc2djMmw2WlN3Z0xpNHVjSEp2Y0hNZ2ZUb2dleUJ6YVhwbE9pQnVkVzFpWlhJZ2ZTa2dQVDRnS0Z4dUlDQThjM1puWEc0Z0lDQWdhR1ZwWjJoMFBYdHphWHBsZlZ4dUlDQWdJSGRwWkhSb1BYdHphWHBsZlZ4dUlDQWdJSFpwWlhkQ2IzZzlYQ0l3SURBZ01qQWdNakJjSWx4dUlDQWdJR0Z5YVdFdGFHbGtaR1Z1UFZ3aWRISjFaVndpWEc0Z0lDQWdabTlqZFhOaFlteGxQVndpWm1Gc2MyVmNJbHh1SUNBZ0lHTnpjejE3ZTF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nSjJsdWJHbHVaUzFpYkc5amF5Y3NYRzRnSUNBZ0lDQm1hV3hzT2lBblkzVnljbVZ1ZEVOdmJHOXlKeXhjYmlBZ0lDQWdJR3hwYm1WSVpXbG5hSFE2SURFc1hHNGdJQ0FnSUNCemRISnZhMlU2SUNkamRYSnlaVzUwUTI5c2IzSW5MRnh1SUNBZ0lDQWdjM1J5YjJ0bFYybGtkR2c2SURBc1hHNGdJQ0FnZlgxY2JpQWdJQ0I3TGk0dWNISnZjSE45WEc0Z0lDOCtYRzRwTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnUTNKdmMzTkpZMjl1SUQwZ0tIQnliM0J6T2lCaGJua3BJRDArSUNoY2JpQWdQRk4yWnlCemFYcGxQWHN5TUgwZ2V5NHVMbkJ5YjNCemZUNWNiaUFnSUNBOGNHRjBhQ0JrUFZ3aVRURTBMak0wT0NBeE5DNDRORGxqTFRBdU5EWTVJREF1TkRZNUxURXVNakk1SURBdU5EWTVMVEV1TmprM0lEQnNMVEl1TmpVeExUTXVNRE13TFRJdU5qVXhJRE11TURJNVl5MHdMalEyT1NBd0xqUTJPUzB4TGpJeU9TQXdMalEyT1MweExqWTVOeUF3TFRBdU5EWTVMVEF1TkRZNUxUQXVORFk1TFRFdU1qSTVJREF0TVM0Mk9UZHNNaTQzTlRndE15NHhOUzB5TGpjMU9TMHpMakUxTW1NdE1DNDBOamt0TUM0ME5qa3RNQzQwTmprdE1TNHlNamdnTUMweExqWTVOM014TGpJeU9DMHdMalEyT1NBeExqWTVOeUF3YkRJdU5qVXlJRE11TURNeElESXVOalV4TFRNdU1ETXhZekF1TkRZNUxUQXVORFk1SURFdU1qSTRMVEF1TkRZNUlERXVOamszSURCek1DNDBOamtnTVM0eU1qa2dNQ0F4TGpZNU4yd3RNaTQzTlRnZ015NHhOVElnTWk0M05UZ2dNeTR4TldNd0xqUTJPU0F3TGpRMk9TQXdMalEyT1NBeExqSXlPU0F3SURFdU5qazRlbHdpSUM4K1hHNGdJRHd2VTNablBseHVLVHRjYm1WNGNHOXlkQ0JqYjI1emRDQkViM2R1UTJobGRuSnZiaUE5SUNod2NtOXdjem9nWVc1NUtTQTlQaUFvWEc0Z0lEeFRkbWNnYzJsNlpUMTdNakI5SUhzdUxpNXdjbTl3YzMwK1hHNGdJQ0FnUEhCaGRHZ2daRDFjSWswMExqVXhOaUEzTGpVME9HTXdMalF6Tmkwd0xqUTBOaUF4TGpBME15MHdMalE0TVNBeExqVTNOaUF3YkRNdU9UQTRJRE11TnpRM0lETXVPVEE0TFRNdU56UTNZekF1TlRNekxUQXVORGd4SURFdU1UUXhMVEF1TkRRMklERXVOVGMwSURBZ01DNDBNellnTUM0ME5EVWdNQzQwTURnZ01TNHhPVGNnTUNBeExqWXhOUzB3TGpRd05pQXdMalF4T0MwMExqWTVOU0EwTGpVd01pMDBMalk1TlNBMExqVXdNaTB3TGpJeE55QXdMakl5TXkwd0xqVXdNaUF3TGpNek5TMHdMamM0TnlBd0xqTXpOWE10TUM0MU55MHdMakV4TWkwd0xqYzRPUzB3TGpNek5XTXdJREF0TkM0eU9EY3ROQzR3T0RRdE5DNDJPVFV0TkM0MU1ESnpMVEF1TkRNMkxURXVNVGNnTUMweExqWXhOWHBjSWlBdlBseHVJQ0E4TDFOMlp6NWNiaWs3WEc1Y2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dUx5OGdSSEp2Y0dSdmQyNGdKaUJEYkdWaGNpQkNkWFIwYjI1elhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseHVaWGh3YjNKMElIUjVjR1VnU1c1a2FXTmhkRzl5VUhKdmNITWdQU0JEYjIxdGIyNVFjbTl3Y3lBbUlIdGNiaUFnTHlvcUlGUm9aU0JqYUdsc1pISmxiaUIwYnlCaVpTQnlaVzVrWlhKbFpDQnBibk5wWkdVZ2RHaGxJR2x1WkdsallYUnZjaTRnS2k5Y2JpQWdZMmhwYkdSeVpXNDZJRTV2WkdVc1hHNGdJQzhxS2lCUWNtOXdjeUIwYUdGMElIZHBiR3dnWW1VZ2NHRnpjMlZrSUc5dUlIUnZJSFJvWlNCamFHbHNaSEpsYmk0Z0tpOWNiaUFnYVc1dVpYSlFjbTl3Y3pvZ1lXNTVMRnh1SUNBdktpb2dWR2hsSUdadlkzVnpaV1FnYzNSaGRHVWdiMllnZEdobElITmxiR1ZqZEM0Z0tpOWNiaUFnYVhOR2IyTjFjMlZrT2lCaWIyOXNaV0Z1TEZ4dUlDQXZLaW9nVjJobGRHaGxjaUIwYUdVZ2RHVjRkQ0JwY3lCeWFXZG9kQ0IwYnlCc1pXWjBJQ292WEc0Z0lHbHpVblJzT2lCaWIyOXNaV0Z1TEZ4dWZUdGNibHh1WTI5dWMzUWdZbUZ6WlVOVFV5QTlJQ2g3WEc0Z0lHbHpSbTlqZFhObFpDeGNiaUFnZEdobGJXVTZJSHRjYmlBZ0lDQnpjR0ZqYVc1bk9pQjdJR0poYzJWVmJtbDBJSDBzWEc0Z0lDQWdZMjlzYjNKekxGeHVJQ0I5TEZ4dWZUb2dTVzVrYVdOaGRHOXlVSEp2Y0hNcElEMCtJQ2g3WEc0Z0lHeGhZbVZzT2lBbmFXNWthV05oZEc5eVEyOXVkR0ZwYm1WeUp5eGNiaUFnWTI5c2IzSTZJR2x6Um05amRYTmxaQ0EvSUdOdmJHOXljeTV1WlhWMGNtRnNOakFnT2lCamIyeHZjbk11Ym1WMWRISmhiREl3TEZ4dUlDQmthWE53YkdGNU9pQW5abXhsZUNjc1hHNGdJSEJoWkdScGJtYzZJR0poYzJWVmJtbDBJQ29nTWl4Y2JpQWdkSEpoYm5OcGRHbHZiam9nSjJOdmJHOXlJREUxTUcxekp5eGNibHh1SUNBbk9taHZkbVZ5SnpvZ2UxeHVJQ0FnSUdOdmJHOXlPaUJwYzBadlkzVnpaV1FnUHlCamIyeHZjbk11Ym1WMWRISmhiRGd3SURvZ1kyOXNiM0p6TG01bGRYUnlZV3cwTUN4Y2JpQWdmU3hjYm4wcE8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1pISnZjR1J2ZDI1SmJtUnBZMkYwYjNKRFUxTWdQU0JpWVhObFExTlRPMXh1Wlhod2IzSjBJR052Ym5OMElFUnliM0JrYjNkdVNXNWthV05oZEc5eUlEMGdLSEJ5YjNCek9pQkpibVJwWTJGMGIzSlFjbTl3Y3lrZ1BUNGdlMXh1SUNCamIyNXpkQ0I3SUdOb2FXeGtjbVZ1TENCamJHRnpjMDVoYldVc0lHTjRMQ0JuWlhSVGRIbHNaWE1zSUdsdWJtVnlVSEp2Y0hNZ2ZTQTlJSEJ5YjNCek8xeHVJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lEeGthWFpjYmlBZ0lDQWdJSHN1TGk1cGJtNWxjbEJ5YjNCemZWeHVJQ0FnSUNBZ1kzTnpQWHRuWlhSVGRIbHNaWE1vSjJSeWIzQmtiM2R1U1c1a2FXTmhkRzl5Snl3Z2NISnZjSE1wZlZ4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFh0amVDaGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUdsdVpHbGpZWFJ2Y2pvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnSUNBblpISnZjR1J2ZDI0dGFXNWthV05oZEc5eUp6b2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdZMnhoYzNOT1lXMWxYRzRnSUNBZ0lDQXBmVnh1SUNBZ0lENWNiaUFnSUNBZ0lIdGphR2xzWkhKbGJpQjhmQ0E4Ukc5M2JrTm9aWFp5YjI0Z0x6NTlYRzRnSUNBZ1BDOWthWFkrWEc0Z0lDazdYRzU5TzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnWTJ4bFlYSkpibVJwWTJGMGIzSkRVMU1nUFNCaVlYTmxRMU5UTzF4dVpYaHdiM0owSUdOdmJuTjBJRU5zWldGeVNXNWthV05oZEc5eUlEMGdLSEJ5YjNCek9pQkpibVJwWTJGMGIzSlFjbTl3Y3lrZ1BUNGdlMXh1SUNCamIyNXpkQ0I3SUdOb2FXeGtjbVZ1TENCamJHRnpjMDVoYldVc0lHTjRMQ0JuWlhSVGRIbHNaWE1zSUdsdWJtVnlVSEp2Y0hNZ2ZTQTlJSEJ5YjNCek8xeHVJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lEeGthWFpjYmlBZ0lDQWdJSHN1TGk1cGJtNWxjbEJ5YjNCemZWeHVJQ0FnSUNBZ1kzTnpQWHRuWlhSVGRIbHNaWE1vSjJOc1pXRnlTVzVrYVdOaGRHOXlKeXdnY0hKdmNITXBmVnh1SUNBZ0lDQWdZMnhoYzNOT1lXMWxQWHRqZUNoY2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJR2x1WkdsallYUnZjam9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdJQ0FuWTJ4bFlYSXRhVzVrYVdOaGRHOXlKem9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnWTJ4aGMzTk9ZVzFsWEc0Z0lDQWdJQ0FwZlZ4dUlDQWdJRDVjYmlBZ0lDQWdJSHRqYUdsc1pISmxiaUI4ZkNBOFEzSnZjM05KWTI5dUlDOCtmVnh1SUNBZ0lEd3ZaR2wyUGx4dUlDQXBPMXh1ZlR0Y2JseHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNHZMeUJUWlhCaGNtRjBiM0pjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1WEc1MGVYQmxJRk5sY0dGeVlYUnZjbE4wWVhSbElEMGdleUJwYzBScGMyRmliR1ZrT2lCaWIyOXNaV0Z1SUgwN1hHNWNibVY0Y0c5eWRDQmpiMjV6ZENCcGJtUnBZMkYwYjNKVFpYQmhjbUYwYjNKRFUxTWdQU0FvZTF4dUlDQnBjMFJwYzJGaWJHVmtMRnh1SUNCMGFHVnRaVG9nZTF4dUlDQWdJSE53WVdOcGJtYzZJSHNnWW1GelpWVnVhWFFnZlN4Y2JpQWdJQ0JqYjJ4dmNuTXNYRzRnSUgwc1hHNTlPaUJEYjIxdGIyNVFjbTl3Y3lBbUlGTmxjR0Z5WVhSdmNsTjBZWFJsS1NBOVBpQW9lMXh1SUNCc1lXSmxiRG9nSjJsdVpHbGpZWFJ2Y2xObGNHRnlZWFJ2Y2ljc1hHNGdJR0ZzYVdkdVUyVnNaam9nSjNOMGNtVjBZMmduTEZ4dUlDQmlZV05yWjNKdmRXNWtRMjlzYjNJNklHbHpSR2x6WVdKc1pXUWdQeUJqYjJ4dmNuTXVibVYxZEhKaGJERXdJRG9nWTI5c2IzSnpMbTVsZFhSeVlXd3lNQ3hjYmlBZ2JXRnlaMmx1UW05MGRHOXRPaUJpWVhObFZXNXBkQ0FxSURJc1hHNGdJRzFoY21kcGJsUnZjRG9nWW1GelpWVnVhWFFnS2lBeUxGeHVJQ0IzYVdSMGFEb2dNU3hjYm4wcE8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1NXNWthV05oZEc5eVUyVndZWEpoZEc5eUlEMGdLSEJ5YjNCek9pQkpibVJwWTJGMGIzSlFjbTl3Y3lrZ1BUNGdlMXh1SUNCamIyNXpkQ0I3SUdOc1lYTnpUbUZ0WlN3Z1kzZ3NJR2RsZEZOMGVXeGxjeXdnYVc1dVpYSlFjbTl3Y3lCOUlEMGdjSEp2Y0hNN1hHNGdJSEpsZEhWeWJpQW9YRzRnSUNBZ1BITndZVzVjYmlBZ0lDQWdJSHN1TGk1cGJtNWxjbEJ5YjNCemZWeHVJQ0FnSUNBZ1kzTnpQWHRuWlhSVGRIbHNaWE1vSjJsdVpHbGpZWFJ2Y2xObGNHRnlZWFJ2Y2ljc0lIQnliM0J6S1gxY2JpQWdJQ0FnSUdOc1lYTnpUbUZ0WlQxN1kzZ29leUFuYVc1a2FXTmhkRzl5TFhObGNHRnlZWFJ2Y2ljNklIUnlkV1VnZlN3Z1kyeGhjM05PWVcxbEtYMWNiaUFnSUNBdlBseHVJQ0FwTzF4dWZUdGNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzR2THlCTWIyRmthVzVuWEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmx4dVkyOXVjM1FnYkc5aFpHbHVaMFJ2ZEVGdWFXMWhkR2x2Ym5NZ1BTQnJaWGxtY21GdFpYTmdYRzRnSURBbExDQTRNQ1VzSURFd01DVWdleUJ2Y0dGamFYUjVPaUF3T3lCOVhHNGdJRFF3SlNCN0lHOXdZV05wZEhrNklERTdJSDFjYm1BN1hHNWNibVY0Y0c5eWRDQmpiMjV6ZENCc2IyRmthVzVuU1c1a2FXTmhkRzl5UTFOVElEMGdLSHRjYmlBZ2FYTkdiMk4xYzJWa0xGeHVJQ0J6YVhwbExGeHVJQ0IwYUdWdFpUb2dlMXh1SUNBZ0lHTnZiRzl5Y3l4Y2JpQWdJQ0J6Y0dGamFXNW5PaUI3SUdKaGMyVlZibWwwSUgwc1hHNGdJSDBzWEc1OU9pQjdYRzRnSUdselJtOWpkWE5sWkRvZ1ltOXZiR1ZoYml4Y2JpQWdjMmw2WlRvZ2JuVnRZbVZ5TEZ4dUlDQjBhR1Z0WlRvZ1ZHaGxiV1VzWEc1OUtTQTlQaUFvZTF4dUlDQnNZV0psYkRvZ0oyeHZZV1JwYm1kSmJtUnBZMkYwYjNJbkxGeHVJQ0JqYjJ4dmNqb2dhWE5HYjJOMWMyVmtJRDhnWTI5c2IzSnpMbTVsZFhSeVlXdzJNQ0E2SUdOdmJHOXljeTV1WlhWMGNtRnNNakFzWEc0Z0lHUnBjM0JzWVhrNklDZG1iR1Y0Snl4Y2JpQWdjR0ZrWkdsdVp6b2dZbUZ6WlZWdWFYUWdLaUF5TEZ4dUlDQjBjbUZ1YzJsMGFXOXVPaUFuWTI5c2IzSWdNVFV3YlhNbkxGeHVJQ0JoYkdsbmJsTmxiR1k2SUNkalpXNTBaWEluTEZ4dUlDQm1iMjUwVTJsNlpUb2djMmw2WlN4Y2JpQWdiR2x1WlVobGFXZG9kRG9nTVN4Y2JpQWdiV0Z5WjJsdVVtbG5hSFE2SUhOcGVtVXNYRzRnSUhSbGVIUkJiR2xuYmpvZ0oyTmxiblJsY2ljc1hHNGdJSFpsY25ScFkyRnNRV3hwWjI0NklDZHRhV1JrYkdVbkxGeHVmU2s3WEc1Y2JuUjVjR1VnUkc5MFVISnZjSE1nUFNCN0lHTnZiRzl5T2lCemRISnBibWNzSUdSbGJHRjVPaUJ1ZFcxaVpYSXNJRzltWm5ObGREb2dZbTl2YkdWaGJpQjlPMXh1WTI5dWMzUWdURzloWkdsdVowUnZkQ0E5SUNoN0lHTnZiRzl5TENCa1pXeGhlU3dnYjJabWMyVjBJSDA2SUVSdmRGQnliM0J6S1NBOVBpQW9YRzRnSUR4emNHRnVYRzRnSUNBZ1kzTnpQWHQ3WEc0Z0lDQWdJQ0JoYm1sdFlYUnBiMjQ2SUdBa2UyeHZZV1JwYm1kRWIzUkJibWx0WVhScGIyNXpmU0F4Y3lCbFlYTmxMV2x1TFc5MWRDQWtlMlJsYkdGNWZXMXpJR2x1Wm1sdWFYUmxPMkFzWEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrUTI5c2IzSTZJR052Ykc5eUxGeHVJQ0FnSUNBZ1ltOXlaR1Z5VW1Ga2FYVnpPaUFuTVdWdE95Y3NYRzRnSUNBZ0lDQmthWE53YkdGNU9pQW5hVzVzYVc1bExXSnNiMk5yT3ljc1hHNGdJQ0FnSUNCdFlYSm5hVzVNWldaME9pQnZabVp6WlhRZ1B5QW5NV1Z0T3ljZ09pQnVkV3hzTEZ4dUlDQWdJQ0FnYUdWcFoyaDBPaUFuTVdWdE95Y3NYRzRnSUNBZ0lDQjJaWEowYVdOaGJFRnNhV2R1T2lBbmRHOXdPeWNzWEc0Z0lDQWdJQ0IzYVdSMGFEb2dKekZsYlRzbkxGeHVJQ0FnSUgxOVhHNGdJQzgrWEc0cE8xeHVYRzVsZUhCdmNuUWdkSGx3WlNCTWIyRmthVzVuU1dOdmJsQnliM0J6SUQwZ2UxeHVJQ0F2S2lvZ1VISnZjSE1nZEdoaGRDQjNhV3hzSUdKbElIQmhjM05sWkNCdmJpQjBieUIwYUdVZ1kyaHBiR1J5Wlc0dUlDb3ZYRzRnSUdsdWJtVnlVSEp2Y0hNNklHRnVlU3hjYmlBZ0x5b3FJRlJvWlNCbWIyTjFjMlZrSUhOMFlYUmxJRzltSUhSb1pTQnpaV3hsWTNRdUlDb3ZYRzRnSUdselJtOWpkWE5sWkRvZ1ltOXZiR1ZoYml4Y2JpQWdMeW9xSUZkb1pYUm9aWElnZEdobElIUmxlSFFnYVhNZ2NtbG5hSFFnZEc4Z2JHVm1kQ0FxTDF4dUlDQnBjMUowYkRvZ1ltOXZiR1ZoYml4Y2JuMGdKaUJEYjIxdGIyNVFjbTl3Y3lBbUlIdGNiaUFnSUNBdktpb2dVMlYwSUhOcGVtVWdiMllnZEdobElHTnZiblJoYVc1bGNpNGdLaTljYmlBZ0lDQnphWHBsT2lCdWRXMWlaWElzWEc0Z0lIMDdYRzVsZUhCdmNuUWdZMjl1YzNRZ1RHOWhaR2x1WjBsdVpHbGpZWFJ2Y2lBOUlDaHdjbTl3Y3pvZ1RHOWhaR2x1WjBsamIyNVFjbTl3Y3lrZ1BUNGdlMXh1SUNCamIyNXpkQ0I3WEc0Z0lDQWdZMnhoYzNOT1lXMWxMRnh1SUNBZ0lHTjRMRnh1SUNBZ0lHZGxkRk4wZVd4bGN5eGNiaUFnSUNCcGJtNWxjbEJ5YjNCekxGeHVJQ0FnSUdselJtOWpkWE5sWkN4Y2JpQWdJQ0JwYzFKMGJDeGNiaUFnSUNCMGFHVnRaVG9nZXlCamIyeHZjbk1nZlN4Y2JpQWdmU0E5SUhCeWIzQnpPMXh1SUNCamIyNXpkQ0JqYjJ4dmNpQTlJR2x6Um05amRYTmxaQ0EvSUdOdmJHOXljeTV1WlhWMGNtRnNPREFnT2lCamIyeHZjbk11Ym1WMWRISmhiREl3TzF4dVhHNGdJSEpsZEhWeWJpQW9YRzRnSUNBZ1BHUnBkbHh1SUNBZ0lDQWdleTR1TG1sdWJtVnlVSEp2Y0hOOVhHNGdJQ0FnSUNCamMzTTllMmRsZEZOMGVXeGxjeWduYkc5aFpHbHVaMGx1WkdsallYUnZjaWNzSUhCeWIzQnpLWDFjYmlBZ0lDQWdJR05zWVhOelRtRnRaVDE3WTNnb1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0JwYm1ScFkyRjBiM0k2SUhSeWRXVXNYRzRnSUNBZ0lDQWdJQ0FnSjJ4dllXUnBibWN0YVc1a2FXTmhkRzl5SnpvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ1kyeGhjM05PWVcxbFhHNGdJQ0FnSUNBcGZWeHVJQ0FnSUQ1Y2JpQWdJQ0FnSUR4TWIyRmthVzVuUkc5MElHTnZiRzl5UFh0amIyeHZjbjBnWkdWc1lYazllekI5SUc5bVpuTmxkRDE3YVhOU2RHeDlJQzgrWEc0Z0lDQWdJQ0E4VEc5aFpHbHVaMFJ2ZENCamIyeHZjajE3WTI5c2IzSjlJR1JsYkdGNVBYc3hOakI5SUc5bVpuTmxkQ0F2UGx4dUlDQWdJQ0FnUEV4dllXUnBibWRFYjNRZ1kyOXNiM0k5ZTJOdmJHOXlmU0JrWld4aGVUMTdNekl3ZlNCdlptWnpaWFE5ZXlGcGMxSjBiSDBnTHo1Y2JpQWdJQ0E4TDJScGRqNWNiaUFnS1R0Y2JuMDdYRzVNYjJGa2FXNW5TVzVrYVdOaGRHOXlMbVJsWm1GMWJIUlFjbTl3Y3lBOUlIc2djMmw2WlRvZ05DQjlPMXh1SWwxOSAqL1wiKVxuICB9KTtcbn07XG5cbnZhciBMb2FkaW5nSW5kaWNhdG9yID0gZnVuY3Rpb24gTG9hZGluZ0luZGljYXRvcihwcm9wcykge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGdldFN0eWxlcyA9IHByb3BzLmdldFN0eWxlcyxcbiAgICAgIGlubmVyUHJvcHMgPSBwcm9wcy5pbm5lclByb3BzLFxuICAgICAgaXNGb2N1c2VkID0gcHJvcHMuaXNGb2N1c2VkLFxuICAgICAgaXNSdGwgPSBwcm9wcy5pc1J0bCxcbiAgICAgIGNvbG9ycyA9IHByb3BzLnRoZW1lLmNvbG9ycztcbiAgdmFyIGNvbG9yID0gaXNGb2N1c2VkID8gY29sb3JzLm5ldXRyYWw4MCA6IGNvbG9ycy5uZXV0cmFsMjA7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMoe30sIGlubmVyUHJvcHMsIHtcbiAgICBjc3M6IGdldFN0eWxlcygnbG9hZGluZ0luZGljYXRvcicsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICdsb2FkaW5nLWluZGljYXRvcic6IHRydWVcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0pLCBqc3goTG9hZGluZ0RvdCwge1xuICAgIGNvbG9yOiBjb2xvcixcbiAgICBkZWxheTogMCxcbiAgICBvZmZzZXQ6IGlzUnRsXG4gIH0pLCBqc3goTG9hZGluZ0RvdCwge1xuICAgIGNvbG9yOiBjb2xvcixcbiAgICBkZWxheTogMTYwLFxuICAgIG9mZnNldDogdHJ1ZVxuICB9KSwganN4KExvYWRpbmdEb3QsIHtcbiAgICBjb2xvcjogY29sb3IsXG4gICAgZGVsYXk6IDMyMCxcbiAgICBvZmZzZXQ6ICFpc1J0bFxuICB9KSk7XG59O1xuTG9hZGluZ0luZGljYXRvci5kZWZhdWx0UHJvcHMgPSB7XG4gIHNpemU6IDRcbn07XG5cbnZhciBjc3MgPSBmdW5jdGlvbiBjc3MoX3JlZikge1xuICB2YXIgaXNEaXNhYmxlZCA9IF9yZWYuaXNEaXNhYmxlZCxcbiAgICAgIGlzRm9jdXNlZCA9IF9yZWYuaXNGb2N1c2VkLFxuICAgICAgX3JlZiR0aGVtZSA9IF9yZWYudGhlbWUsXG4gICAgICBjb2xvcnMgPSBfcmVmJHRoZW1lLmNvbG9ycyxcbiAgICAgIGJvcmRlclJhZGl1cyA9IF9yZWYkdGhlbWUuYm9yZGVyUmFkaXVzLFxuICAgICAgc3BhY2luZyA9IF9yZWYkdGhlbWUuc3BhY2luZztcbiAgcmV0dXJuIHtcbiAgICBsYWJlbDogJ2NvbnRyb2wnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGJhY2tncm91bmRDb2xvcjogaXNEaXNhYmxlZCA/IGNvbG9ycy5uZXV0cmFsNSA6IGNvbG9ycy5uZXV0cmFsMCxcbiAgICBib3JkZXJDb2xvcjogaXNEaXNhYmxlZCA/IGNvbG9ycy5uZXV0cmFsMTAgOiBpc0ZvY3VzZWQgPyBjb2xvcnMucHJpbWFyeSA6IGNvbG9ycy5uZXV0cmFsMjAsXG4gICAgYm9yZGVyUmFkaXVzOiBib3JkZXJSYWRpdXMsXG4gICAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gICAgYm9yZGVyV2lkdGg6IDEsXG4gICAgYm94U2hhZG93OiBpc0ZvY3VzZWQgPyBcIjAgMCAwIDFweCBcIi5jb25jYXQoY29sb3JzLnByaW1hcnkpIDogbnVsbCxcbiAgICBjdXJzb3I6ICdkZWZhdWx0JyxcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgZmxleFdyYXA6ICd3cmFwJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgIG1pbkhlaWdodDogc3BhY2luZy5jb250cm9sSGVpZ2h0LFxuICAgIG91dGxpbmU6ICcwICFpbXBvcnRhbnQnLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIHRyYW5zaXRpb246ICdhbGwgMTAwbXMnLFxuICAgICcmOmhvdmVyJzoge1xuICAgICAgYm9yZGVyQ29sb3I6IGlzRm9jdXNlZCA/IGNvbG9ycy5wcmltYXJ5IDogY29sb3JzLm5ldXRyYWwzMFxuICAgIH1cbiAgfTtcbn07XG5cbnZhciBDb250cm9sID0gZnVuY3Rpb24gQ29udHJvbChwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBpc0Rpc2FibGVkID0gcHJvcHMuaXNEaXNhYmxlZCxcbiAgICAgIGlzRm9jdXNlZCA9IHByb3BzLmlzRm9jdXNlZCxcbiAgICAgIGlubmVyUmVmID0gcHJvcHMuaW5uZXJSZWYsXG4gICAgICBpbm5lclByb3BzID0gcHJvcHMuaW5uZXJQcm9wcyxcbiAgICAgIG1lbnVJc09wZW4gPSBwcm9wcy5tZW51SXNPcGVuO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzKHtcbiAgICByZWY6IGlubmVyUmVmLFxuICAgIGNzczogZ2V0U3R5bGVzKCdjb250cm9sJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgY29udHJvbDogdHJ1ZSxcbiAgICAgICdjb250cm9sLS1pcy1kaXNhYmxlZCc6IGlzRGlzYWJsZWQsXG4gICAgICAnY29udHJvbC0taXMtZm9jdXNlZCc6IGlzRm9jdXNlZCxcbiAgICAgICdjb250cm9sLS1tZW51LWlzLW9wZW4nOiBtZW51SXNPcGVuXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBpbm5lclByb3BzKSwgY2hpbGRyZW4pO1xufTtcblxudmFyIGdyb3VwQ1NTID0gZnVuY3Rpb24gZ3JvdXBDU1MoX3JlZikge1xuICB2YXIgc3BhY2luZyA9IF9yZWYudGhlbWUuc3BhY2luZztcbiAgcmV0dXJuIHtcbiAgICBwYWRkaW5nQm90dG9tOiBzcGFjaW5nLmJhc2VVbml0ICogMixcbiAgICBwYWRkaW5nVG9wOiBzcGFjaW5nLmJhc2VVbml0ICogMlxuICB9O1xufTtcblxudmFyIEdyb3VwID0gZnVuY3Rpb24gR3JvdXAocHJvcHMpIHtcbiAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjeCA9IHByb3BzLmN4LFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgSGVhZGluZyA9IHByb3BzLkhlYWRpbmcsXG4gICAgICBoZWFkaW5nUHJvcHMgPSBwcm9wcy5oZWFkaW5nUHJvcHMsXG4gICAgICBsYWJlbCA9IHByb3BzLmxhYmVsLFxuICAgICAgdGhlbWUgPSBwcm9wcy50aGVtZSxcbiAgICAgIHNlbGVjdFByb3BzID0gcHJvcHMuc2VsZWN0UHJvcHM7XG4gIHJldHVybiBqc3goXCJkaXZcIiwge1xuICAgIGNzczogZ2V0U3R5bGVzKCdncm91cCcsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgIGdyb3VwOiB0cnVlXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBqc3goSGVhZGluZywgX2V4dGVuZHMoe30sIGhlYWRpbmdQcm9wcywge1xuICAgIHNlbGVjdFByb3BzOiBzZWxlY3RQcm9wcyxcbiAgICB0aGVtZTogdGhlbWUsXG4gICAgZ2V0U3R5bGVzOiBnZXRTdHlsZXMsXG4gICAgY3g6IGN4XG4gIH0pLCBsYWJlbCksIGpzeChcImRpdlwiLCBudWxsLCBjaGlsZHJlbikpO1xufTtcblxudmFyIGdyb3VwSGVhZGluZ0NTUyA9IGZ1bmN0aW9uIGdyb3VwSGVhZGluZ0NTUyhfcmVmMikge1xuICB2YXIgc3BhY2luZyA9IF9yZWYyLnRoZW1lLnNwYWNpbmc7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdncm91cCcsXG4gICAgY29sb3I6ICcjOTk5JyxcbiAgICBjdXJzb3I6ICdkZWZhdWx0JyxcbiAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgIGZvbnRTaXplOiAnNzUlJyxcbiAgICBmb250V2VpZ2h0OiAnNTAwJyxcbiAgICBtYXJnaW5Cb3R0b206ICcwLjI1ZW0nLFxuICAgIHBhZGRpbmdMZWZ0OiBzcGFjaW5nLmJhc2VVbml0ICogMyxcbiAgICBwYWRkaW5nUmlnaHQ6IHNwYWNpbmcuYmFzZVVuaXQgKiAzLFxuICAgIHRleHRUcmFuc2Zvcm06ICd1cHBlcmNhc2UnXG4gIH07XG59O1xudmFyIEdyb3VwSGVhZGluZyA9IGZ1bmN0aW9uIEdyb3VwSGVhZGluZyhwcm9wcykge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGdldFN0eWxlcyA9IHByb3BzLmdldFN0eWxlcyxcbiAgICAgIHRoZW1lID0gcHJvcHMudGhlbWUsXG4gICAgICBzZWxlY3RQcm9wcyA9IHByb3BzLnNlbGVjdFByb3BzLFxuICAgICAgY2xlYW5Qcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiY2xhc3NOYW1lXCIsIFwiY3hcIiwgXCJnZXRTdHlsZXNcIiwgXCJ0aGVtZVwiLCBcInNlbGVjdFByb3BzXCJdKTtcblxuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzKHtcbiAgICBjc3M6IGdldFN0eWxlcygnZ3JvdXBIZWFkaW5nJywgX29iamVjdFNwcmVhZCh7XG4gICAgICB0aGVtZTogdGhlbWVcbiAgICB9LCBjbGVhblByb3BzKSksXG4gICAgY2xhc3NOYW1lOiBjeCh7XG4gICAgICAnZ3JvdXAtaGVhZGluZyc6IHRydWVcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0sIGNsZWFuUHJvcHMpKTtcbn07XG5cbnZhciBpbnB1dENTUyA9IGZ1bmN0aW9uIGlucHV0Q1NTKF9yZWYpIHtcbiAgdmFyIGlzRGlzYWJsZWQgPSBfcmVmLmlzRGlzYWJsZWQsXG4gICAgICBfcmVmJHRoZW1lID0gX3JlZi50aGVtZSxcbiAgICAgIHNwYWNpbmcgPSBfcmVmJHRoZW1lLnNwYWNpbmcsXG4gICAgICBjb2xvcnMgPSBfcmVmJHRoZW1lLmNvbG9ycztcbiAgcmV0dXJuIHtcbiAgICBtYXJnaW46IHNwYWNpbmcuYmFzZVVuaXQgLyAyLFxuICAgIHBhZGRpbmdCb3R0b206IHNwYWNpbmcuYmFzZVVuaXQgLyAyLFxuICAgIHBhZGRpbmdUb3A6IHNwYWNpbmcuYmFzZVVuaXQgLyAyLFxuICAgIHZpc2liaWxpdHk6IGlzRGlzYWJsZWQgPyAnaGlkZGVuJyA6ICd2aXNpYmxlJyxcbiAgICBjb2xvcjogY29sb3JzLm5ldXRyYWw4MFxuICB9O1xufTtcblxudmFyIGlucHV0U3R5bGUgPSBmdW5jdGlvbiBpbnB1dFN0eWxlKGlzSGlkZGVuKSB7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdpbnB1dCcsXG4gICAgYmFja2dyb3VuZDogMCxcbiAgICBib3JkZXI6IDAsXG4gICAgZm9udFNpemU6ICdpbmhlcml0JyxcbiAgICBvcGFjaXR5OiBpc0hpZGRlbiA/IDAgOiAxLFxuICAgIG91dGxpbmU6IDAsXG4gICAgcGFkZGluZzogMCxcbiAgICBjb2xvcjogJ2luaGVyaXQnXG4gIH07XG59O1xuXG52YXIgSW5wdXQgPSBmdW5jdGlvbiBJbnB1dChfcmVmMikge1xuICB2YXIgY2xhc3NOYW1lID0gX3JlZjIuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBfcmVmMi5jeCxcbiAgICAgIGdldFN0eWxlcyA9IF9yZWYyLmdldFN0eWxlcyxcbiAgICAgIGlubmVyUmVmID0gX3JlZjIuaW5uZXJSZWYsXG4gICAgICBpc0hpZGRlbiA9IF9yZWYyLmlzSGlkZGVuLFxuICAgICAgaXNEaXNhYmxlZCA9IF9yZWYyLmlzRGlzYWJsZWQsXG4gICAgICB0aGVtZSA9IF9yZWYyLnRoZW1lLFxuICAgICAgc2VsZWN0UHJvcHMgPSBfcmVmMi5zZWxlY3RQcm9wcyxcbiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYyLCBbXCJjbGFzc05hbWVcIiwgXCJjeFwiLCBcImdldFN0eWxlc1wiLCBcImlubmVyUmVmXCIsIFwiaXNIaWRkZW5cIiwgXCJpc0Rpc2FibGVkXCIsIFwidGhlbWVcIiwgXCJzZWxlY3RQcm9wc1wiXSk7XG5cbiAgcmV0dXJuIGpzeChcImRpdlwiLCB7XG4gICAgY3NzOiBnZXRTdHlsZXMoJ2lucHV0JywgX29iamVjdFNwcmVhZCh7XG4gICAgICB0aGVtZTogdGhlbWVcbiAgICB9LCBwcm9wcykpXG4gIH0sIGpzeChBdXRvc2l6ZUlucHV0LCBfZXh0ZW5kcyh7XG4gICAgY2xhc3NOYW1lOiBjeCh7XG4gICAgICBpbnB1dDogdHJ1ZVxuICAgIH0sIGNsYXNzTmFtZSksXG4gICAgaW5wdXRSZWY6IGlubmVyUmVmLFxuICAgIGlucHV0U3R5bGU6IGlucHV0U3R5bGUoaXNIaWRkZW4pLFxuICAgIGRpc2FibGVkOiBpc0Rpc2FibGVkXG4gIH0sIHByb3BzKSkpO1xufTtcblxudmFyIG11bHRpVmFsdWVDU1MgPSBmdW5jdGlvbiBtdWx0aVZhbHVlQ1NTKF9yZWYpIHtcbiAgdmFyIF9yZWYkdGhlbWUgPSBfcmVmLnRoZW1lLFxuICAgICAgc3BhY2luZyA9IF9yZWYkdGhlbWUuc3BhY2luZyxcbiAgICAgIGJvcmRlclJhZGl1cyA9IF9yZWYkdGhlbWUuYm9yZGVyUmFkaXVzLFxuICAgICAgY29sb3JzID0gX3JlZiR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdtdWx0aVZhbHVlJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5uZXV0cmFsMTAsXG4gICAgYm9yZGVyUmFkaXVzOiBib3JkZXJSYWRpdXMgLyAyLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBtYXJnaW46IHNwYWNpbmcuYmFzZVVuaXQgLyAyLFxuICAgIG1pbldpZHRoOiAwIC8vIHJlc29sdmVzIGZsZXgvdGV4dC1vdmVyZmxvdyBidWdcblxuICB9O1xufTtcbnZhciBtdWx0aVZhbHVlTGFiZWxDU1MgPSBmdW5jdGlvbiBtdWx0aVZhbHVlTGFiZWxDU1MoX3JlZjIpIHtcbiAgdmFyIF9yZWYyJHRoZW1lID0gX3JlZjIudGhlbWUsXG4gICAgICBib3JkZXJSYWRpdXMgPSBfcmVmMiR0aGVtZS5ib3JkZXJSYWRpdXMsXG4gICAgICBjb2xvcnMgPSBfcmVmMiR0aGVtZS5jb2xvcnMsXG4gICAgICBjcm9wV2l0aEVsbGlwc2lzID0gX3JlZjIuY3JvcFdpdGhFbGxpcHNpcztcbiAgcmV0dXJuIHtcbiAgICBib3JkZXJSYWRpdXM6IGJvcmRlclJhZGl1cyAvIDIsXG4gICAgY29sb3I6IGNvbG9ycy5uZXV0cmFsODAsXG4gICAgZm9udFNpemU6ICc4NSUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICBwYWRkaW5nOiAzLFxuICAgIHBhZGRpbmdMZWZ0OiA2LFxuICAgIHRleHRPdmVyZmxvdzogY3JvcFdpdGhFbGxpcHNpcyA/ICdlbGxpcHNpcycgOiBudWxsLFxuICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnXG4gIH07XG59O1xudmFyIG11bHRpVmFsdWVSZW1vdmVDU1MgPSBmdW5jdGlvbiBtdWx0aVZhbHVlUmVtb3ZlQ1NTKF9yZWYzKSB7XG4gIHZhciBfcmVmMyR0aGVtZSA9IF9yZWYzLnRoZW1lLFxuICAgICAgc3BhY2luZyA9IF9yZWYzJHRoZW1lLnNwYWNpbmcsXG4gICAgICBib3JkZXJSYWRpdXMgPSBfcmVmMyR0aGVtZS5ib3JkZXJSYWRpdXMsXG4gICAgICBjb2xvcnMgPSBfcmVmMyR0aGVtZS5jb2xvcnMsXG4gICAgICBpc0ZvY3VzZWQgPSBfcmVmMy5pc0ZvY3VzZWQ7XG4gIHJldHVybiB7XG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgYm9yZGVyUmFkaXVzOiBib3JkZXJSYWRpdXMgLyAyLFxuICAgIGJhY2tncm91bmRDb2xvcjogaXNGb2N1c2VkICYmIGNvbG9ycy5kYW5nZXJMaWdodCxcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgcGFkZGluZ0xlZnQ6IHNwYWNpbmcuYmFzZVVuaXQsXG4gICAgcGFkZGluZ1JpZ2h0OiBzcGFjaW5nLmJhc2VVbml0LFxuICAgICc6aG92ZXInOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5kYW5nZXJMaWdodCxcbiAgICAgIGNvbG9yOiBjb2xvcnMuZGFuZ2VyXG4gICAgfVxuICB9O1xufTtcbnZhciBNdWx0aVZhbHVlR2VuZXJpYyA9IGZ1bmN0aW9uIE11bHRpVmFsdWVHZW5lcmljKF9yZWY0KSB7XG4gIHZhciBjaGlsZHJlbiA9IF9yZWY0LmNoaWxkcmVuLFxuICAgICAgaW5uZXJQcm9wcyA9IF9yZWY0LmlubmVyUHJvcHM7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgaW5uZXJQcm9wcywgY2hpbGRyZW4pO1xufTtcbnZhciBNdWx0aVZhbHVlQ29udGFpbmVyID0gTXVsdGlWYWx1ZUdlbmVyaWM7XG52YXIgTXVsdGlWYWx1ZUxhYmVsID0gTXVsdGlWYWx1ZUdlbmVyaWM7XG52YXIgTXVsdGlWYWx1ZVJlbW92ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoTXVsdGlWYWx1ZVJlbW92ZSwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTXVsdGlWYWx1ZVJlbW92ZSgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTXVsdGlWYWx1ZVJlbW92ZSk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKE11bHRpVmFsdWVSZW1vdmUpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKE11bHRpVmFsdWVSZW1vdmUsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgICAgaW5uZXJQcm9wcyA9IF90aGlzJHByb3BzLmlubmVyUHJvcHM7XG4gICAgICByZXR1cm4ganN4KFwiZGl2XCIsIGlubmVyUHJvcHMsIGNoaWxkcmVuIHx8IGpzeChDcm9zc0ljb24sIHtcbiAgICAgICAgc2l6ZTogMTRcbiAgICAgIH0pKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTXVsdGlWYWx1ZVJlbW92ZTtcbn0oQ29tcG9uZW50KTtcblxudmFyIE11bHRpVmFsdWUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gIF9pbmhlcml0cyhNdWx0aVZhbHVlLCBfQ29tcG9uZW50Mik7XG5cbiAgZnVuY3Rpb24gTXVsdGlWYWx1ZSgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTXVsdGlWYWx1ZSk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKE11bHRpVmFsdWUpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKE11bHRpVmFsdWUsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzMi5jaGlsZHJlbixcbiAgICAgICAgICBjbGFzc05hbWUgPSBfdGhpcyRwcm9wczIuY2xhc3NOYW1lLFxuICAgICAgICAgIGNvbXBvbmVudHMgPSBfdGhpcyRwcm9wczIuY29tcG9uZW50cyxcbiAgICAgICAgICBjeCA9IF90aGlzJHByb3BzMi5jeCxcbiAgICAgICAgICBkYXRhID0gX3RoaXMkcHJvcHMyLmRhdGEsXG4gICAgICAgICAgZ2V0U3R5bGVzID0gX3RoaXMkcHJvcHMyLmdldFN0eWxlcyxcbiAgICAgICAgICBpbm5lclByb3BzID0gX3RoaXMkcHJvcHMyLmlubmVyUHJvcHMsXG4gICAgICAgICAgaXNEaXNhYmxlZCA9IF90aGlzJHByb3BzMi5pc0Rpc2FibGVkLFxuICAgICAgICAgIHJlbW92ZVByb3BzID0gX3RoaXMkcHJvcHMyLnJlbW92ZVByb3BzLFxuICAgICAgICAgIHNlbGVjdFByb3BzID0gX3RoaXMkcHJvcHMyLnNlbGVjdFByb3BzO1xuICAgICAgdmFyIENvbnRhaW5lciA9IGNvbXBvbmVudHMuQ29udGFpbmVyLFxuICAgICAgICAgIExhYmVsID0gY29tcG9uZW50cy5MYWJlbCxcbiAgICAgICAgICBSZW1vdmUgPSBjb21wb25lbnRzLlJlbW92ZTtcbiAgICAgIHJldHVybiBqc3goQ2xhc3NOYW1lcywgbnVsbCwgZnVuY3Rpb24gKF9yZWY1KSB7XG4gICAgICAgIHZhciBjc3MgPSBfcmVmNS5jc3MsXG4gICAgICAgICAgICBlbW90aW9uQ3ggPSBfcmVmNS5jeDtcbiAgICAgICAgcmV0dXJuIGpzeChDb250YWluZXIsIHtcbiAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgIGlubmVyUHJvcHM6IF9vYmplY3RTcHJlYWQoe30sIGlubmVyUHJvcHMsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogZW1vdGlvbkN4KGNzcyhnZXRTdHlsZXMoJ211bHRpVmFsdWUnLCBfdGhpcy5wcm9wcykpLCBjeCh7XG4gICAgICAgICAgICAgICdtdWx0aS12YWx1ZSc6IHRydWUsXG4gICAgICAgICAgICAgICdtdWx0aS12YWx1ZS0taXMtZGlzYWJsZWQnOiBpc0Rpc2FibGVkXG4gICAgICAgICAgICB9LCBjbGFzc05hbWUpKVxuICAgICAgICAgIH0pLFxuICAgICAgICAgIHNlbGVjdFByb3BzOiBzZWxlY3RQcm9wc1xuICAgICAgICB9LCBqc3goTGFiZWwsIHtcbiAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgIGlubmVyUHJvcHM6IHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogZW1vdGlvbkN4KGNzcyhnZXRTdHlsZXMoJ211bHRpVmFsdWVMYWJlbCcsIF90aGlzLnByb3BzKSksIGN4KHtcbiAgICAgICAgICAgICAgJ211bHRpLXZhbHVlX19sYWJlbCc6IHRydWVcbiAgICAgICAgICAgIH0sIGNsYXNzTmFtZSkpXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzZWxlY3RQcm9wczogc2VsZWN0UHJvcHNcbiAgICAgICAgfSwgY2hpbGRyZW4pLCBqc3goUmVtb3ZlLCB7XG4gICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICBpbm5lclByb3BzOiBfb2JqZWN0U3ByZWFkKHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogZW1vdGlvbkN4KGNzcyhnZXRTdHlsZXMoJ211bHRpVmFsdWVSZW1vdmUnLCBfdGhpcy5wcm9wcykpLCBjeCh7XG4gICAgICAgICAgICAgICdtdWx0aS12YWx1ZV9fcmVtb3ZlJzogdHJ1ZVxuICAgICAgICAgICAgfSwgY2xhc3NOYW1lKSlcbiAgICAgICAgICB9LCByZW1vdmVQcm9wcyksXG4gICAgICAgICAgc2VsZWN0UHJvcHM6IHNlbGVjdFByb3BzXG4gICAgICAgIH0pKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNdWx0aVZhbHVlO1xufShDb21wb25lbnQpO1xuXG5fZGVmaW5lUHJvcGVydHkoTXVsdGlWYWx1ZSwgXCJkZWZhdWx0UHJvcHNcIiwge1xuICBjcm9wV2l0aEVsbGlwc2lzOiB0cnVlXG59KTtcblxudmFyIG9wdGlvbkNTUyA9IGZ1bmN0aW9uIG9wdGlvbkNTUyhfcmVmKSB7XG4gIHZhciBpc0Rpc2FibGVkID0gX3JlZi5pc0Rpc2FibGVkLFxuICAgICAgaXNGb2N1c2VkID0gX3JlZi5pc0ZvY3VzZWQsXG4gICAgICBpc1NlbGVjdGVkID0gX3JlZi5pc1NlbGVjdGVkLFxuICAgICAgX3JlZiR0aGVtZSA9IF9yZWYudGhlbWUsXG4gICAgICBzcGFjaW5nID0gX3JlZiR0aGVtZS5zcGFjaW5nLFxuICAgICAgY29sb3JzID0gX3JlZiR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdvcHRpb24nLFxuICAgIGJhY2tncm91bmRDb2xvcjogaXNTZWxlY3RlZCA/IGNvbG9ycy5wcmltYXJ5IDogaXNGb2N1c2VkID8gY29sb3JzLnByaW1hcnkyNSA6ICd0cmFuc3BhcmVudCcsXG4gICAgY29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDIwIDogaXNTZWxlY3RlZCA/IGNvbG9ycy5uZXV0cmFsMCA6ICdpbmhlcml0JyxcbiAgICBjdXJzb3I6ICdkZWZhdWx0JyxcbiAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgIGZvbnRTaXplOiAnaW5oZXJpdCcsXG4gICAgcGFkZGluZzogXCJcIi5jb25jYXQoc3BhY2luZy5iYXNlVW5pdCAqIDIsIFwicHggXCIpLmNvbmNhdChzcGFjaW5nLmJhc2VVbml0ICogMywgXCJweFwiKSxcbiAgICB3aWR0aDogJzEwMCUnLFxuICAgIHVzZXJTZWxlY3Q6ICdub25lJyxcbiAgICBXZWJraXRUYXBIaWdobGlnaHRDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMCknLFxuICAgIC8vIHByb3ZpZGUgc29tZSBhZmZvcmRhbmNlIG9uIHRvdWNoIGRldmljZXNcbiAgICAnOmFjdGl2ZSc6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogIWlzRGlzYWJsZWQgJiYgKGlzU2VsZWN0ZWQgPyBjb2xvcnMucHJpbWFyeSA6IGNvbG9ycy5wcmltYXJ5NTApXG4gICAgfVxuICB9O1xufTtcblxudmFyIE9wdGlvbiA9IGZ1bmN0aW9uIE9wdGlvbihwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpc0Rpc2FibGVkID0gcHJvcHMuaXNEaXNhYmxlZCxcbiAgICAgIGlzRm9jdXNlZCA9IHByb3BzLmlzRm9jdXNlZCxcbiAgICAgIGlzU2VsZWN0ZWQgPSBwcm9wcy5pc1NlbGVjdGVkLFxuICAgICAgaW5uZXJSZWYgPSBwcm9wcy5pbm5lclJlZixcbiAgICAgIGlubmVyUHJvcHMgPSBwcm9wcy5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzKHtcbiAgICBjc3M6IGdldFN0eWxlcygnb3B0aW9uJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgb3B0aW9uOiB0cnVlLFxuICAgICAgJ29wdGlvbi0taXMtZGlzYWJsZWQnOiBpc0Rpc2FibGVkLFxuICAgICAgJ29wdGlvbi0taXMtZm9jdXNlZCc6IGlzRm9jdXNlZCxcbiAgICAgICdvcHRpb24tLWlzLXNlbGVjdGVkJzogaXNTZWxlY3RlZFxuICAgIH0sIGNsYXNzTmFtZSksXG4gICAgcmVmOiBpbm5lclJlZlxuICB9LCBpbm5lclByb3BzKSwgY2hpbGRyZW4pO1xufTtcblxudmFyIHBsYWNlaG9sZGVyQ1NTID0gZnVuY3Rpb24gcGxhY2Vob2xkZXJDU1MoX3JlZikge1xuICB2YXIgX3JlZiR0aGVtZSA9IF9yZWYudGhlbWUsXG4gICAgICBzcGFjaW5nID0gX3JlZiR0aGVtZS5zcGFjaW5nLFxuICAgICAgY29sb3JzID0gX3JlZiR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdwbGFjZWhvbGRlcicsXG4gICAgY29sb3I6IGNvbG9ycy5uZXV0cmFsNTAsXG4gICAgbWFyZ2luTGVmdDogc3BhY2luZy5iYXNlVW5pdCAvIDIsXG4gICAgbWFyZ2luUmlnaHQ6IHNwYWNpbmcuYmFzZVVuaXQgLyAyLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogJzUwJScsXG4gICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtNTAlKSdcbiAgfTtcbn07XG5cbnZhciBQbGFjZWhvbGRlciA9IGZ1bmN0aW9uIFBsYWNlaG9sZGVyKHByb3BzKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGdldFN0eWxlcyA9IHByb3BzLmdldFN0eWxlcyxcbiAgICAgIGlubmVyUHJvcHMgPSBwcm9wcy5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzKHtcbiAgICBjc3M6IGdldFN0eWxlcygncGxhY2Vob2xkZXInLCBwcm9wcyksXG4gICAgY2xhc3NOYW1lOiBjeCh7XG4gICAgICBwbGFjZWhvbGRlcjogdHJ1ZVxuICAgIH0sIGNsYXNzTmFtZSlcbiAgfSwgaW5uZXJQcm9wcyksIGNoaWxkcmVuKTtcbn07XG5cbnZhciBjc3MkMSA9IGZ1bmN0aW9uIGNzcyhfcmVmKSB7XG4gIHZhciBpc0Rpc2FibGVkID0gX3JlZi5pc0Rpc2FibGVkLFxuICAgICAgX3JlZiR0aGVtZSA9IF9yZWYudGhlbWUsXG4gICAgICBzcGFjaW5nID0gX3JlZiR0aGVtZS5zcGFjaW5nLFxuICAgICAgY29sb3JzID0gX3JlZiR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdzaW5nbGVWYWx1ZScsXG4gICAgY29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDQwIDogY29sb3JzLm5ldXRyYWw4MCxcbiAgICBtYXJnaW5MZWZ0OiBzcGFjaW5nLmJhc2VVbml0IC8gMixcbiAgICBtYXJnaW5SaWdodDogc3BhY2luZy5iYXNlVW5pdCAvIDIsXG4gICAgbWF4V2lkdGg6IFwiY2FsYygxMDAlIC0gXCIuY29uY2F0KHNwYWNpbmcuYmFzZVVuaXQgKiAyLCBcInB4KVwiKSxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgdGV4dE92ZXJmbG93OiAnZWxsaXBzaXMnLFxuICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIHRvcDogJzUwJScsXG4gICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtNTAlKSdcbiAgfTtcbn07XG5cbnZhciBTaW5nbGVWYWx1ZSA9IGZ1bmN0aW9uIFNpbmdsZVZhbHVlKHByb3BzKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGdldFN0eWxlcyA9IHByb3BzLmdldFN0eWxlcyxcbiAgICAgIGlzRGlzYWJsZWQgPSBwcm9wcy5pc0Rpc2FibGVkLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHM7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMoe1xuICAgIGNzczogZ2V0U3R5bGVzKCdzaW5nbGVWYWx1ZScsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgICdzaW5nbGUtdmFsdWUnOiB0cnVlLFxuICAgICAgJ3NpbmdsZS12YWx1ZS0taXMtZGlzYWJsZWQnOiBpc0Rpc2FibGVkXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBpbm5lclByb3BzKSwgY2hpbGRyZW4pO1xufTtcblxudmFyIGNvbXBvbmVudHMgPSB7XG4gIENsZWFySW5kaWNhdG9yOiBDbGVhckluZGljYXRvcixcbiAgQ29udHJvbDogQ29udHJvbCxcbiAgRHJvcGRvd25JbmRpY2F0b3I6IERyb3Bkb3duSW5kaWNhdG9yLFxuICBEb3duQ2hldnJvbjogRG93bkNoZXZyb24sXG4gIENyb3NzSWNvbjogQ3Jvc3NJY29uLFxuICBHcm91cDogR3JvdXAsXG4gIEdyb3VwSGVhZGluZzogR3JvdXBIZWFkaW5nLFxuICBJbmRpY2F0b3JzQ29udGFpbmVyOiBJbmRpY2F0b3JzQ29udGFpbmVyLFxuICBJbmRpY2F0b3JTZXBhcmF0b3I6IEluZGljYXRvclNlcGFyYXRvcixcbiAgSW5wdXQ6IElucHV0LFxuICBMb2FkaW5nSW5kaWNhdG9yOiBMb2FkaW5nSW5kaWNhdG9yLFxuICBNZW51OiBNZW51LFxuICBNZW51TGlzdDogTWVudUxpc3QsXG4gIE1lbnVQb3J0YWw6IE1lbnVQb3J0YWwsXG4gIExvYWRpbmdNZXNzYWdlOiBMb2FkaW5nTWVzc2FnZSxcbiAgTm9PcHRpb25zTWVzc2FnZTogTm9PcHRpb25zTWVzc2FnZSxcbiAgTXVsdGlWYWx1ZTogTXVsdGlWYWx1ZSxcbiAgTXVsdGlWYWx1ZUNvbnRhaW5lcjogTXVsdGlWYWx1ZUNvbnRhaW5lcixcbiAgTXVsdGlWYWx1ZUxhYmVsOiBNdWx0aVZhbHVlTGFiZWwsXG4gIE11bHRpVmFsdWVSZW1vdmU6IE11bHRpVmFsdWVSZW1vdmUsXG4gIE9wdGlvbjogT3B0aW9uLFxuICBQbGFjZWhvbGRlcjogUGxhY2Vob2xkZXIsXG4gIFNlbGVjdENvbnRhaW5lcjogU2VsZWN0Q29udGFpbmVyLFxuICBTaW5nbGVWYWx1ZTogU2luZ2xlVmFsdWUsXG4gIFZhbHVlQ29udGFpbmVyOiBWYWx1ZUNvbnRhaW5lclxufTtcbnZhciBkZWZhdWx0Q29tcG9uZW50cyA9IGZ1bmN0aW9uIGRlZmF1bHRDb21wb25lbnRzKHByb3BzKSB7XG4gIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBjb21wb25lbnRzLCBwcm9wcy5jb21wb25lbnRzKTtcbn07XG5cbmV4cG9ydCB7IE1lbnVQbGFjZXIgYXMgTSwgY29udGFpbmVyQ1NTIGFzIGEsIGNzcyBhcyBiLCBjbGVhckluZGljYXRvckNTUyBhcyBjLCBkcm9wZG93bkluZGljYXRvckNTUyBhcyBkLCBncm91cEhlYWRpbmdDU1MgYXMgZSwgaW5kaWNhdG9yU2VwYXJhdG9yQ1NTIGFzIGYsIGdyb3VwQ1NTIGFzIGcsIGlucHV0Q1NTIGFzIGgsIGluZGljYXRvcnNDb250YWluZXJDU1MgYXMgaSwgbG9hZGluZ01lc3NhZ2VDU1MgYXMgaiwgbWVudUxpc3RDU1MgYXMgaywgbG9hZGluZ0luZGljYXRvckNTUyBhcyBsLCBtZW51Q1NTIGFzIG0sIG1lbnVQb3J0YWxDU1MgYXMgbiwgbXVsdGlWYWx1ZUNTUyBhcyBvLCBtdWx0aVZhbHVlTGFiZWxDU1MgYXMgcCwgbXVsdGlWYWx1ZVJlbW92ZUNTUyBhcyBxLCBub09wdGlvbnNNZXNzYWdlQ1NTIGFzIHIsIG9wdGlvbkNTUyBhcyBzLCBwbGFjZWhvbGRlckNTUyBhcyB0LCBjc3MkMSBhcyB1LCB2YWx1ZUNvbnRhaW5lckNTUyBhcyB2LCBkZWZhdWx0Q29tcG9uZW50cyBhcyB3LCBleHBvcnRlZEVxdWFsIGFzIHgsIGNvbXBvbmVudHMgYXMgeSB9O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChzdHJpbmdzLCByYXcpIHtcbiAgaWYgKCFyYXcpIHtcbiAgICByYXcgPSBzdHJpbmdzLnNsaWNlKDApO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5mcmVlemUoT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoc3RyaW5ncywge1xuICAgIHJhdzoge1xuICAgICAgdmFsdWU6IE9iamVjdC5mcmVlemUocmF3KVxuICAgIH1cbiAgfSkpO1xufSIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSc7XG5pbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQnO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayc7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzJztcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJztcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YnO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyc7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQnO1xuaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IG1lbW9pemVPbmUgZnJvbSAnbWVtb2l6ZS1vbmUnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBmaW5kRE9NTm9kZSB9IGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyBpIGFzIGlzVG91Y2hDYXBhYmxlLCBkIGFzIGlzTW9iaWxlRGV2aWNlLCBlIGFzIGlzRG9jdW1lbnRFbGVtZW50LCBmIGFzIGNsZWFuVmFsdWUsIGggYXMgc2Nyb2xsSW50b1ZpZXcsIGogYXMgY2xhc3NOYW1lcywgbiBhcyBub29wIH0gZnJvbSAnLi4vLi4vY2h1bmstZThhZTRiMGYuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgYyBhcyBjbGVhckluZGljYXRvckNTUywgYSBhcyBjb250YWluZXJDU1MsIGIgYXMgY3NzLCBkIGFzIGRyb3Bkb3duSW5kaWNhdG9yQ1NTLCBnIGFzIGdyb3VwQ1NTLCBlIGFzIGdyb3VwSGVhZGluZ0NTUywgaSBhcyBpbmRpY2F0b3JzQ29udGFpbmVyQ1NTLCBmIGFzIGluZGljYXRvclNlcGFyYXRvckNTUywgaCBhcyBpbnB1dENTUywgbCBhcyBsb2FkaW5nSW5kaWNhdG9yQ1NTLCBqIGFzIGxvYWRpbmdNZXNzYWdlQ1NTLCBtIGFzIG1lbnVDU1MsIGsgYXMgbWVudUxpc3RDU1MsIG4gYXMgbWVudVBvcnRhbENTUywgbyBhcyBtdWx0aVZhbHVlQ1NTLCBwIGFzIG11bHRpVmFsdWVMYWJlbENTUywgcSBhcyBtdWx0aVZhbHVlUmVtb3ZlQ1NTLCByIGFzIG5vT3B0aW9uc01lc3NhZ2VDU1MsIHMgYXMgb3B0aW9uQ1NTLCB0IGFzIHBsYWNlaG9sZGVyQ1NTLCB1IGFzIGNzcyQxLCB2IGFzIHZhbHVlQ29udGFpbmVyQ1NTLCB3IGFzIGRlZmF1bHRDb21wb25lbnRzLCB4IGFzIGV4cG9ydGVkRXF1YWwsIE0gYXMgTWVudVBsYWNlciB9IGZyb20gJy4uLy4uL2NodW5rLTVkMjAwYTQxLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCBfY3NzIGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5cbnZhciBkaWFjcml0aWNzID0gW3tcbiAgYmFzZTogJ0EnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNDFcXHUyNEI2XFx1RkYyMVxcdTAwQzBcXHUwMEMxXFx1MDBDMlxcdTFFQTZcXHUxRUE0XFx1MUVBQVxcdTFFQThcXHUwMEMzXFx1MDEwMFxcdTAxMDJcXHUxRUIwXFx1MUVBRVxcdTFFQjRcXHUxRUIyXFx1MDIyNlxcdTAxRTBcXHUwMEM0XFx1MDFERVxcdTFFQTJcXHUwMEM1XFx1MDFGQVxcdTAxQ0RcXHUwMjAwXFx1MDIwMlxcdTFFQTBcXHUxRUFDXFx1MUVCNlxcdTFFMDBcXHUwMTA0XFx1MDIzQVxcdTJDNkZdL2dcbn0sIHtcbiAgYmFzZTogJ0FBJyxcbiAgbGV0dGVyczogL1tcXHVBNzMyXS9nXG59LCB7XG4gIGJhc2U6ICdBRScsXG4gIGxldHRlcnM6IC9bXFx1MDBDNlxcdTAxRkNcXHUwMUUyXS9nXG59LCB7XG4gIGJhc2U6ICdBTycsXG4gIGxldHRlcnM6IC9bXFx1QTczNF0vZ1xufSwge1xuICBiYXNlOiAnQVUnLFxuICBsZXR0ZXJzOiAvW1xcdUE3MzZdL2dcbn0sIHtcbiAgYmFzZTogJ0FWJyxcbiAgbGV0dGVyczogL1tcXHVBNzM4XFx1QTczQV0vZ1xufSwge1xuICBiYXNlOiAnQVknLFxuICBsZXR0ZXJzOiAvW1xcdUE3M0NdL2dcbn0sIHtcbiAgYmFzZTogJ0InLFxuICBsZXR0ZXJzOiAvW1xcdTAwNDJcXHUyNEI3XFx1RkYyMlxcdTFFMDJcXHUxRTA0XFx1MUUwNlxcdTAyNDNcXHUwMTgyXFx1MDE4MV0vZ1xufSwge1xuICBiYXNlOiAnQycsXG4gIGxldHRlcnM6IC9bXFx1MDA0M1xcdTI0QjhcXHVGRjIzXFx1MDEwNlxcdTAxMDhcXHUwMTBBXFx1MDEwQ1xcdTAwQzdcXHUxRTA4XFx1MDE4N1xcdTAyM0JcXHVBNzNFXS9nXG59LCB7XG4gIGJhc2U6ICdEJyxcbiAgbGV0dGVyczogL1tcXHUwMDQ0XFx1MjRCOVxcdUZGMjRcXHUxRTBBXFx1MDEwRVxcdTFFMENcXHUxRTEwXFx1MUUxMlxcdTFFMEVcXHUwMTEwXFx1MDE4QlxcdTAxOEFcXHUwMTg5XFx1QTc3OV0vZ1xufSwge1xuICBiYXNlOiAnRFonLFxuICBsZXR0ZXJzOiAvW1xcdTAxRjFcXHUwMUM0XS9nXG59LCB7XG4gIGJhc2U6ICdEeicsXG4gIGxldHRlcnM6IC9bXFx1MDFGMlxcdTAxQzVdL2dcbn0sIHtcbiAgYmFzZTogJ0UnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNDVcXHUyNEJBXFx1RkYyNVxcdTAwQzhcXHUwMEM5XFx1MDBDQVxcdTFFQzBcXHUxRUJFXFx1MUVDNFxcdTFFQzJcXHUxRUJDXFx1MDExMlxcdTFFMTRcXHUxRTE2XFx1MDExNFxcdTAxMTZcXHUwMENCXFx1MUVCQVxcdTAxMUFcXHUwMjA0XFx1MDIwNlxcdTFFQjhcXHUxRUM2XFx1MDIyOFxcdTFFMUNcXHUwMTE4XFx1MUUxOFxcdTFFMUFcXHUwMTkwXFx1MDE4RV0vZ1xufSwge1xuICBiYXNlOiAnRicsXG4gIGxldHRlcnM6IC9bXFx1MDA0NlxcdTI0QkJcXHVGRjI2XFx1MUUxRVxcdTAxOTFcXHVBNzdCXS9nXG59LCB7XG4gIGJhc2U6ICdHJyxcbiAgbGV0dGVyczogL1tcXHUwMDQ3XFx1MjRCQ1xcdUZGMjdcXHUwMUY0XFx1MDExQ1xcdTFFMjBcXHUwMTFFXFx1MDEyMFxcdTAxRTZcXHUwMTIyXFx1MDFFNFxcdTAxOTNcXHVBN0EwXFx1QTc3RFxcdUE3N0VdL2dcbn0sIHtcbiAgYmFzZTogJ0gnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNDhcXHUyNEJEXFx1RkYyOFxcdTAxMjRcXHUxRTIyXFx1MUUyNlxcdTAyMUVcXHUxRTI0XFx1MUUyOFxcdTFFMkFcXHUwMTI2XFx1MkM2N1xcdTJDNzVcXHVBNzhEXS9nXG59LCB7XG4gIGJhc2U6ICdJJyxcbiAgbGV0dGVyczogL1tcXHUwMDQ5XFx1MjRCRVxcdUZGMjlcXHUwMENDXFx1MDBDRFxcdTAwQ0VcXHUwMTI4XFx1MDEyQVxcdTAxMkNcXHUwMTMwXFx1MDBDRlxcdTFFMkVcXHUxRUM4XFx1MDFDRlxcdTAyMDhcXHUwMjBBXFx1MUVDQVxcdTAxMkVcXHUxRTJDXFx1MDE5N10vZ1xufSwge1xuICBiYXNlOiAnSicsXG4gIGxldHRlcnM6IC9bXFx1MDA0QVxcdTI0QkZcXHVGRjJBXFx1MDEzNFxcdTAyNDhdL2dcbn0sIHtcbiAgYmFzZTogJ0snLFxuICBsZXR0ZXJzOiAvW1xcdTAwNEJcXHUyNEMwXFx1RkYyQlxcdTFFMzBcXHUwMUU4XFx1MUUzMlxcdTAxMzZcXHUxRTM0XFx1MDE5OFxcdTJDNjlcXHVBNzQwXFx1QTc0MlxcdUE3NDRcXHVBN0EyXS9nXG59LCB7XG4gIGJhc2U6ICdMJyxcbiAgbGV0dGVyczogL1tcXHUwMDRDXFx1MjRDMVxcdUZGMkNcXHUwMTNGXFx1MDEzOVxcdTAxM0RcXHUxRTM2XFx1MUUzOFxcdTAxM0JcXHUxRTNDXFx1MUUzQVxcdTAxNDFcXHUwMjNEXFx1MkM2MlxcdTJDNjBcXHVBNzQ4XFx1QTc0NlxcdUE3ODBdL2dcbn0sIHtcbiAgYmFzZTogJ0xKJyxcbiAgbGV0dGVyczogL1tcXHUwMUM3XS9nXG59LCB7XG4gIGJhc2U6ICdMaicsXG4gIGxldHRlcnM6IC9bXFx1MDFDOF0vZ1xufSwge1xuICBiYXNlOiAnTScsXG4gIGxldHRlcnM6IC9bXFx1MDA0RFxcdTI0QzJcXHVGRjJEXFx1MUUzRVxcdTFFNDBcXHUxRTQyXFx1MkM2RVxcdTAxOUNdL2dcbn0sIHtcbiAgYmFzZTogJ04nLFxuICBsZXR0ZXJzOiAvW1xcdTAwNEVcXHUyNEMzXFx1RkYyRVxcdTAxRjhcXHUwMTQzXFx1MDBEMVxcdTFFNDRcXHUwMTQ3XFx1MUU0NlxcdTAxNDVcXHUxRTRBXFx1MUU0OFxcdTAyMjBcXHUwMTlEXFx1QTc5MFxcdUE3QTRdL2dcbn0sIHtcbiAgYmFzZTogJ05KJyxcbiAgbGV0dGVyczogL1tcXHUwMUNBXS9nXG59LCB7XG4gIGJhc2U6ICdOaicsXG4gIGxldHRlcnM6IC9bXFx1MDFDQl0vZ1xufSwge1xuICBiYXNlOiAnTycsXG4gIGxldHRlcnM6IC9bXFx1MDA0RlxcdTI0QzRcXHVGRjJGXFx1MDBEMlxcdTAwRDNcXHUwMEQ0XFx1MUVEMlxcdTFFRDBcXHUxRUQ2XFx1MUVENFxcdTAwRDVcXHUxRTRDXFx1MDIyQ1xcdTFFNEVcXHUwMTRDXFx1MUU1MFxcdTFFNTJcXHUwMTRFXFx1MDIyRVxcdTAyMzBcXHUwMEQ2XFx1MDIyQVxcdTFFQ0VcXHUwMTUwXFx1MDFEMVxcdTAyMENcXHUwMjBFXFx1MDFBMFxcdTFFRENcXHUxRURBXFx1MUVFMFxcdTFFREVcXHUxRUUyXFx1MUVDQ1xcdTFFRDhcXHUwMUVBXFx1MDFFQ1xcdTAwRDhcXHUwMUZFXFx1MDE4NlxcdTAxOUZcXHVBNzRBXFx1QTc0Q10vZ1xufSwge1xuICBiYXNlOiAnT0knLFxuICBsZXR0ZXJzOiAvW1xcdTAxQTJdL2dcbn0sIHtcbiAgYmFzZTogJ09PJyxcbiAgbGV0dGVyczogL1tcXHVBNzRFXS9nXG59LCB7XG4gIGJhc2U6ICdPVScsXG4gIGxldHRlcnM6IC9bXFx1MDIyMl0vZ1xufSwge1xuICBiYXNlOiAnUCcsXG4gIGxldHRlcnM6IC9bXFx1MDA1MFxcdTI0QzVcXHVGRjMwXFx1MUU1NFxcdTFFNTZcXHUwMUE0XFx1MkM2M1xcdUE3NTBcXHVBNzUyXFx1QTc1NF0vZ1xufSwge1xuICBiYXNlOiAnUScsXG4gIGxldHRlcnM6IC9bXFx1MDA1MVxcdTI0QzZcXHVGRjMxXFx1QTc1NlxcdUE3NThcXHUwMjRBXS9nXG59LCB7XG4gIGJhc2U6ICdSJyxcbiAgbGV0dGVyczogL1tcXHUwMDUyXFx1MjRDN1xcdUZGMzJcXHUwMTU0XFx1MUU1OFxcdTAxNThcXHUwMjEwXFx1MDIxMlxcdTFFNUFcXHUxRTVDXFx1MDE1NlxcdTFFNUVcXHUwMjRDXFx1MkM2NFxcdUE3NUFcXHVBN0E2XFx1QTc4Ml0vZ1xufSwge1xuICBiYXNlOiAnUycsXG4gIGxldHRlcnM6IC9bXFx1MDA1M1xcdTI0QzhcXHVGRjMzXFx1MUU5RVxcdTAxNUFcXHUxRTY0XFx1MDE1Q1xcdTFFNjBcXHUwMTYwXFx1MUU2NlxcdTFFNjJcXHUxRTY4XFx1MDIxOFxcdTAxNUVcXHUyQzdFXFx1QTdBOFxcdUE3ODRdL2dcbn0sIHtcbiAgYmFzZTogJ1QnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNTRcXHUyNEM5XFx1RkYzNFxcdTFFNkFcXHUwMTY0XFx1MUU2Q1xcdTAyMUFcXHUwMTYyXFx1MUU3MFxcdTFFNkVcXHUwMTY2XFx1MDFBQ1xcdTAxQUVcXHUwMjNFXFx1QTc4Nl0vZ1xufSwge1xuICBiYXNlOiAnVFonLFxuICBsZXR0ZXJzOiAvW1xcdUE3MjhdL2dcbn0sIHtcbiAgYmFzZTogJ1UnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNTVcXHUyNENBXFx1RkYzNVxcdTAwRDlcXHUwMERBXFx1MDBEQlxcdTAxNjhcXHUxRTc4XFx1MDE2QVxcdTFFN0FcXHUwMTZDXFx1MDBEQ1xcdTAxREJcXHUwMUQ3XFx1MDFENVxcdTAxRDlcXHUxRUU2XFx1MDE2RVxcdTAxNzBcXHUwMUQzXFx1MDIxNFxcdTAyMTZcXHUwMUFGXFx1MUVFQVxcdTFFRThcXHUxRUVFXFx1MUVFQ1xcdTFFRjBcXHUxRUU0XFx1MUU3MlxcdTAxNzJcXHUxRTc2XFx1MUU3NFxcdTAyNDRdL2dcbn0sIHtcbiAgYmFzZTogJ1YnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNTZcXHUyNENCXFx1RkYzNlxcdTFFN0NcXHUxRTdFXFx1MDFCMlxcdUE3NUVcXHUwMjQ1XS9nXG59LCB7XG4gIGJhc2U6ICdWWScsXG4gIGxldHRlcnM6IC9bXFx1QTc2MF0vZ1xufSwge1xuICBiYXNlOiAnVycsXG4gIGxldHRlcnM6IC9bXFx1MDA1N1xcdTI0Q0NcXHVGRjM3XFx1MUU4MFxcdTFFODJcXHUwMTc0XFx1MUU4NlxcdTFFODRcXHUxRTg4XFx1MkM3Ml0vZ1xufSwge1xuICBiYXNlOiAnWCcsXG4gIGxldHRlcnM6IC9bXFx1MDA1OFxcdTI0Q0RcXHVGRjM4XFx1MUU4QVxcdTFFOENdL2dcbn0sIHtcbiAgYmFzZTogJ1knLFxuICBsZXR0ZXJzOiAvW1xcdTAwNTlcXHUyNENFXFx1RkYzOVxcdTFFRjJcXHUwMEREXFx1MDE3NlxcdTFFRjhcXHUwMjMyXFx1MUU4RVxcdTAxNzhcXHUxRUY2XFx1MUVGNFxcdTAxQjNcXHUwMjRFXFx1MUVGRV0vZ1xufSwge1xuICBiYXNlOiAnWicsXG4gIGxldHRlcnM6IC9bXFx1MDA1QVxcdTI0Q0ZcXHVGRjNBXFx1MDE3OVxcdTFFOTBcXHUwMTdCXFx1MDE3RFxcdTFFOTJcXHUxRTk0XFx1MDFCNVxcdTAyMjRcXHUyQzdGXFx1MkM2QlxcdUE3NjJdL2dcbn0sIHtcbiAgYmFzZTogJ2EnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjFcXHUyNEQwXFx1RkY0MVxcdTFFOUFcXHUwMEUwXFx1MDBFMVxcdTAwRTJcXHUxRUE3XFx1MUVBNVxcdTFFQUJcXHUxRUE5XFx1MDBFM1xcdTAxMDFcXHUwMTAzXFx1MUVCMVxcdTFFQUZcXHUxRUI1XFx1MUVCM1xcdTAyMjdcXHUwMUUxXFx1MDBFNFxcdTAxREZcXHUxRUEzXFx1MDBFNVxcdTAxRkJcXHUwMUNFXFx1MDIwMVxcdTAyMDNcXHUxRUExXFx1MUVBRFxcdTFFQjdcXHUxRTAxXFx1MDEwNVxcdTJDNjVcXHUwMjUwXS9nXG59LCB7XG4gIGJhc2U6ICdhYScsXG4gIGxldHRlcnM6IC9bXFx1QTczM10vZ1xufSwge1xuICBiYXNlOiAnYWUnLFxuICBsZXR0ZXJzOiAvW1xcdTAwRTZcXHUwMUZEXFx1MDFFM10vZ1xufSwge1xuICBiYXNlOiAnYW8nLFxuICBsZXR0ZXJzOiAvW1xcdUE3MzVdL2dcbn0sIHtcbiAgYmFzZTogJ2F1JyxcbiAgbGV0dGVyczogL1tcXHVBNzM3XS9nXG59LCB7XG4gIGJhc2U6ICdhdicsXG4gIGxldHRlcnM6IC9bXFx1QTczOVxcdUE3M0JdL2dcbn0sIHtcbiAgYmFzZTogJ2F5JyxcbiAgbGV0dGVyczogL1tcXHVBNzNEXS9nXG59LCB7XG4gIGJhc2U6ICdiJyxcbiAgbGV0dGVyczogL1tcXHUwMDYyXFx1MjREMVxcdUZGNDJcXHUxRTAzXFx1MUUwNVxcdTFFMDdcXHUwMTgwXFx1MDE4M1xcdTAyNTNdL2dcbn0sIHtcbiAgYmFzZTogJ2MnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjNcXHUyNEQyXFx1RkY0M1xcdTAxMDdcXHUwMTA5XFx1MDEwQlxcdTAxMERcXHUwMEU3XFx1MUUwOVxcdTAxODhcXHUwMjNDXFx1QTczRlxcdTIxODRdL2dcbn0sIHtcbiAgYmFzZTogJ2QnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjRcXHUyNEQzXFx1RkY0NFxcdTFFMEJcXHUwMTBGXFx1MUUwRFxcdTFFMTFcXHUxRTEzXFx1MUUwRlxcdTAxMTFcXHUwMThDXFx1MDI1NlxcdTAyNTdcXHVBNzdBXS9nXG59LCB7XG4gIGJhc2U6ICdkeicsXG4gIGxldHRlcnM6IC9bXFx1MDFGM1xcdTAxQzZdL2dcbn0sIHtcbiAgYmFzZTogJ2UnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjVcXHUyNEQ0XFx1RkY0NVxcdTAwRThcXHUwMEU5XFx1MDBFQVxcdTFFQzFcXHUxRUJGXFx1MUVDNVxcdTFFQzNcXHUxRUJEXFx1MDExM1xcdTFFMTVcXHUxRTE3XFx1MDExNVxcdTAxMTdcXHUwMEVCXFx1MUVCQlxcdTAxMUJcXHUwMjA1XFx1MDIwN1xcdTFFQjlcXHUxRUM3XFx1MDIyOVxcdTFFMURcXHUwMTE5XFx1MUUxOVxcdTFFMUJcXHUwMjQ3XFx1MDI1QlxcdTAxRERdL2dcbn0sIHtcbiAgYmFzZTogJ2YnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjZcXHUyNEQ1XFx1RkY0NlxcdTFFMUZcXHUwMTkyXFx1QTc3Q10vZ1xufSwge1xuICBiYXNlOiAnZycsXG4gIGxldHRlcnM6IC9bXFx1MDA2N1xcdTI0RDZcXHVGRjQ3XFx1MDFGNVxcdTAxMURcXHUxRTIxXFx1MDExRlxcdTAxMjFcXHUwMUU3XFx1MDEyM1xcdTAxRTVcXHUwMjYwXFx1QTdBMVxcdTFENzlcXHVBNzdGXS9nXG59LCB7XG4gIGJhc2U6ICdoJyxcbiAgbGV0dGVyczogL1tcXHUwMDY4XFx1MjREN1xcdUZGNDhcXHUwMTI1XFx1MUUyM1xcdTFFMjdcXHUwMjFGXFx1MUUyNVxcdTFFMjlcXHUxRTJCXFx1MUU5NlxcdTAxMjdcXHUyQzY4XFx1MkM3NlxcdTAyNjVdL2dcbn0sIHtcbiAgYmFzZTogJ2h2JyxcbiAgbGV0dGVyczogL1tcXHUwMTk1XS9nXG59LCB7XG4gIGJhc2U6ICdpJyxcbiAgbGV0dGVyczogL1tcXHUwMDY5XFx1MjREOFxcdUZGNDlcXHUwMEVDXFx1MDBFRFxcdTAwRUVcXHUwMTI5XFx1MDEyQlxcdTAxMkRcXHUwMEVGXFx1MUUyRlxcdTFFQzlcXHUwMUQwXFx1MDIwOVxcdTAyMEJcXHUxRUNCXFx1MDEyRlxcdTFFMkRcXHUwMjY4XFx1MDEzMV0vZ1xufSwge1xuICBiYXNlOiAnaicsXG4gIGxldHRlcnM6IC9bXFx1MDA2QVxcdTI0RDlcXHVGRjRBXFx1MDEzNVxcdTAxRjBcXHUwMjQ5XS9nXG59LCB7XG4gIGJhc2U6ICdrJyxcbiAgbGV0dGVyczogL1tcXHUwMDZCXFx1MjREQVxcdUZGNEJcXHUxRTMxXFx1MDFFOVxcdTFFMzNcXHUwMTM3XFx1MUUzNVxcdTAxOTlcXHUyQzZBXFx1QTc0MVxcdUE3NDNcXHVBNzQ1XFx1QTdBM10vZ1xufSwge1xuICBiYXNlOiAnbCcsXG4gIGxldHRlcnM6IC9bXFx1MDA2Q1xcdTI0REJcXHVGRjRDXFx1MDE0MFxcdTAxM0FcXHUwMTNFXFx1MUUzN1xcdTFFMzlcXHUwMTNDXFx1MUUzRFxcdTFFM0JcXHUwMTdGXFx1MDE0MlxcdTAxOUFcXHUwMjZCXFx1MkM2MVxcdUE3NDlcXHVBNzgxXFx1QTc0N10vZ1xufSwge1xuICBiYXNlOiAnbGonLFxuICBsZXR0ZXJzOiAvW1xcdTAxQzldL2dcbn0sIHtcbiAgYmFzZTogJ20nLFxuICBsZXR0ZXJzOiAvW1xcdTAwNkRcXHUyNERDXFx1RkY0RFxcdTFFM0ZcXHUxRTQxXFx1MUU0M1xcdTAyNzFcXHUwMjZGXS9nXG59LCB7XG4gIGJhc2U6ICduJyxcbiAgbGV0dGVyczogL1tcXHUwMDZFXFx1MjRERFxcdUZGNEVcXHUwMUY5XFx1MDE0NFxcdTAwRjFcXHUxRTQ1XFx1MDE0OFxcdTFFNDdcXHUwMTQ2XFx1MUU0QlxcdTFFNDlcXHUwMTlFXFx1MDI3MlxcdTAxNDlcXHVBNzkxXFx1QTdBNV0vZ1xufSwge1xuICBiYXNlOiAnbmonLFxuICBsZXR0ZXJzOiAvW1xcdTAxQ0NdL2dcbn0sIHtcbiAgYmFzZTogJ28nLFxuICBsZXR0ZXJzOiAvW1xcdTAwNkZcXHUyNERFXFx1RkY0RlxcdTAwRjJcXHUwMEYzXFx1MDBGNFxcdTFFRDNcXHUxRUQxXFx1MUVEN1xcdTFFRDVcXHUwMEY1XFx1MUU0RFxcdTAyMkRcXHUxRTRGXFx1MDE0RFxcdTFFNTFcXHUxRTUzXFx1MDE0RlxcdTAyMkZcXHUwMjMxXFx1MDBGNlxcdTAyMkJcXHUxRUNGXFx1MDE1MVxcdTAxRDJcXHUwMjBEXFx1MDIwRlxcdTAxQTFcXHUxRUREXFx1MUVEQlxcdTFFRTFcXHUxRURGXFx1MUVFM1xcdTFFQ0RcXHUxRUQ5XFx1MDFFQlxcdTAxRURcXHUwMEY4XFx1MDFGRlxcdTAyNTRcXHVBNzRCXFx1QTc0RFxcdTAyNzVdL2dcbn0sIHtcbiAgYmFzZTogJ29pJyxcbiAgbGV0dGVyczogL1tcXHUwMUEzXS9nXG59LCB7XG4gIGJhc2U6ICdvdScsXG4gIGxldHRlcnM6IC9bXFx1MDIyM10vZ1xufSwge1xuICBiYXNlOiAnb28nLFxuICBsZXR0ZXJzOiAvW1xcdUE3NEZdL2dcbn0sIHtcbiAgYmFzZTogJ3AnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzBcXHUyNERGXFx1RkY1MFxcdTFFNTVcXHUxRTU3XFx1MDFBNVxcdTFEN0RcXHVBNzUxXFx1QTc1M1xcdUE3NTVdL2dcbn0sIHtcbiAgYmFzZTogJ3EnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzFcXHUyNEUwXFx1RkY1MVxcdTAyNEJcXHVBNzU3XFx1QTc1OV0vZ1xufSwge1xuICBiYXNlOiAncicsXG4gIGxldHRlcnM6IC9bXFx1MDA3MlxcdTI0RTFcXHVGRjUyXFx1MDE1NVxcdTFFNTlcXHUwMTU5XFx1MDIxMVxcdTAyMTNcXHUxRTVCXFx1MUU1RFxcdTAxNTdcXHUxRTVGXFx1MDI0RFxcdTAyN0RcXHVBNzVCXFx1QTdBN1xcdUE3ODNdL2dcbn0sIHtcbiAgYmFzZTogJ3MnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzNcXHUyNEUyXFx1RkY1M1xcdTAwREZcXHUwMTVCXFx1MUU2NVxcdTAxNURcXHUxRTYxXFx1MDE2MVxcdTFFNjdcXHUxRTYzXFx1MUU2OVxcdTAyMTlcXHUwMTVGXFx1MDIzRlxcdUE3QTlcXHVBNzg1XFx1MUU5Ql0vZ1xufSwge1xuICBiYXNlOiAndCcsXG4gIGxldHRlcnM6IC9bXFx1MDA3NFxcdTI0RTNcXHVGRjU0XFx1MUU2QlxcdTFFOTdcXHUwMTY1XFx1MUU2RFxcdTAyMUJcXHUwMTYzXFx1MUU3MVxcdTFFNkZcXHUwMTY3XFx1MDFBRFxcdTAyODhcXHUyQzY2XFx1QTc4N10vZ1xufSwge1xuICBiYXNlOiAndHonLFxuICBsZXR0ZXJzOiAvW1xcdUE3MjldL2dcbn0sIHtcbiAgYmFzZTogJ3UnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzVcXHUyNEU0XFx1RkY1NVxcdTAwRjlcXHUwMEZBXFx1MDBGQlxcdTAxNjlcXHUxRTc5XFx1MDE2QlxcdTFFN0JcXHUwMTZEXFx1MDBGQ1xcdTAxRENcXHUwMUQ4XFx1MDFENlxcdTAxREFcXHUxRUU3XFx1MDE2RlxcdTAxNzFcXHUwMUQ0XFx1MDIxNVxcdTAyMTdcXHUwMUIwXFx1MUVFQlxcdTFFRTlcXHUxRUVGXFx1MUVFRFxcdTFFRjFcXHUxRUU1XFx1MUU3M1xcdTAxNzNcXHUxRTc3XFx1MUU3NVxcdTAyODldL2dcbn0sIHtcbiAgYmFzZTogJ3YnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzZcXHUyNEU1XFx1RkY1NlxcdTFFN0RcXHUxRTdGXFx1MDI4QlxcdUE3NUZcXHUwMjhDXS9nXG59LCB7XG4gIGJhc2U6ICd2eScsXG4gIGxldHRlcnM6IC9bXFx1QTc2MV0vZ1xufSwge1xuICBiYXNlOiAndycsXG4gIGxldHRlcnM6IC9bXFx1MDA3N1xcdTI0RTZcXHVGRjU3XFx1MUU4MVxcdTFFODNcXHUwMTc1XFx1MUU4N1xcdTFFODVcXHUxRTk4XFx1MUU4OVxcdTJDNzNdL2dcbn0sIHtcbiAgYmFzZTogJ3gnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzhcXHUyNEU3XFx1RkY1OFxcdTFFOEJcXHUxRThEXS9nXG59LCB7XG4gIGJhc2U6ICd5JyxcbiAgbGV0dGVyczogL1tcXHUwMDc5XFx1MjRFOFxcdUZGNTlcXHUxRUYzXFx1MDBGRFxcdTAxNzdcXHUxRUY5XFx1MDIzM1xcdTFFOEZcXHUwMEZGXFx1MUVGN1xcdTFFOTlcXHUxRUY1XFx1MDFCNFxcdTAyNEZcXHUxRUZGXS9nXG59LCB7XG4gIGJhc2U6ICd6JyxcbiAgbGV0dGVyczogL1tcXHUwMDdBXFx1MjRFOVxcdUZGNUFcXHUwMTdBXFx1MUU5MVxcdTAxN0NcXHUwMTdFXFx1MUU5M1xcdTFFOTVcXHUwMUI2XFx1MDIyNVxcdTAyNDBcXHUyQzZDXFx1QTc2M10vZ1xufV07XG52YXIgc3RyaXBEaWFjcml0aWNzID0gZnVuY3Rpb24gc3RyaXBEaWFjcml0aWNzKHN0cikge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGRpYWNyaXRpY3MubGVuZ3RoOyBpKyspIHtcbiAgICBzdHIgPSBzdHIucmVwbGFjZShkaWFjcml0aWNzW2ldLmxldHRlcnMsIGRpYWNyaXRpY3NbaV0uYmFzZSk7XG4gIH1cblxuICByZXR1cm4gc3RyO1xufTtcblxudmFyIHRyaW1TdHJpbmcgPSBmdW5jdGlvbiB0cmltU3RyaW5nKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL15cXHMrfFxccyskL2csICcnKTtcbn07XG5cbnZhciBkZWZhdWx0U3RyaW5naWZ5ID0gZnVuY3Rpb24gZGVmYXVsdFN0cmluZ2lmeShvcHRpb24pIHtcbiAgcmV0dXJuIFwiXCIuY29uY2F0KG9wdGlvbi5sYWJlbCwgXCIgXCIpLmNvbmNhdChvcHRpb24udmFsdWUpO1xufTtcblxudmFyIGNyZWF0ZUZpbHRlciA9IGZ1bmN0aW9uIGNyZWF0ZUZpbHRlcihjb25maWcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChvcHRpb24sIHJhd0lucHV0KSB7XG4gICAgdmFyIF9pZ25vcmVDYXNlJGlnbm9yZUFjYyA9IF9vYmplY3RTcHJlYWQoe1xuICAgICAgaWdub3JlQ2FzZTogdHJ1ZSxcbiAgICAgIGlnbm9yZUFjY2VudHM6IHRydWUsXG4gICAgICBzdHJpbmdpZnk6IGRlZmF1bHRTdHJpbmdpZnksXG4gICAgICB0cmltOiB0cnVlLFxuICAgICAgbWF0Y2hGcm9tOiAnYW55J1xuICAgIH0sIGNvbmZpZyksXG4gICAgICAgIGlnbm9yZUNhc2UgPSBfaWdub3JlQ2FzZSRpZ25vcmVBY2MuaWdub3JlQ2FzZSxcbiAgICAgICAgaWdub3JlQWNjZW50cyA9IF9pZ25vcmVDYXNlJGlnbm9yZUFjYy5pZ25vcmVBY2NlbnRzLFxuICAgICAgICBzdHJpbmdpZnkgPSBfaWdub3JlQ2FzZSRpZ25vcmVBY2Muc3RyaW5naWZ5LFxuICAgICAgICB0cmltID0gX2lnbm9yZUNhc2UkaWdub3JlQWNjLnRyaW0sXG4gICAgICAgIG1hdGNoRnJvbSA9IF9pZ25vcmVDYXNlJGlnbm9yZUFjYy5tYXRjaEZyb207XG5cbiAgICB2YXIgaW5wdXQgPSB0cmltID8gdHJpbVN0cmluZyhyYXdJbnB1dCkgOiByYXdJbnB1dDtcbiAgICB2YXIgY2FuZGlkYXRlID0gdHJpbSA/IHRyaW1TdHJpbmcoc3RyaW5naWZ5KG9wdGlvbikpIDogc3RyaW5naWZ5KG9wdGlvbik7XG5cbiAgICBpZiAoaWdub3JlQ2FzZSkge1xuICAgICAgaW5wdXQgPSBpbnB1dC50b0xvd2VyQ2FzZSgpO1xuICAgICAgY2FuZGlkYXRlID0gY2FuZGlkYXRlLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuXG4gICAgaWYgKGlnbm9yZUFjY2VudHMpIHtcbiAgICAgIGlucHV0ID0gc3RyaXBEaWFjcml0aWNzKGlucHV0KTtcbiAgICAgIGNhbmRpZGF0ZSA9IHN0cmlwRGlhY3JpdGljcyhjYW5kaWRhdGUpO1xuICAgIH1cblxuICAgIHJldHVybiBtYXRjaEZyb20gPT09ICdzdGFydCcgPyBjYW5kaWRhdGUuc3Vic3RyKDAsIGlucHV0Lmxlbmd0aCkgPT09IGlucHV0IDogY2FuZGlkYXRlLmluZGV4T2YoaW5wdXQpID4gLTE7XG4gIH07XG59O1xuXG52YXIgX3JlZiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IHtcbiAgbmFtZTogXCIxbGFhbzIxLWExMXlUZXh0XCIsXG4gIHN0eWxlczogXCJsYWJlbDphMTF5VGV4dDt6LWluZGV4Ojk5OTk7Ym9yZGVyOjA7Y2xpcDpyZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7aGVpZ2h0OjFweDt3aWR0aDoxcHg7cG9zaXRpb246YWJzb2x1dGU7b3ZlcmZsb3c6aGlkZGVuO3BhZGRpbmc6MDt3aGl0ZS1zcGFjZTpub3dyYXA7XCJcbn0gOiB7XG4gIG5hbWU6IFwiMWxhYW8yMS1hMTF5VGV4dFwiLFxuICBzdHlsZXM6IFwibGFiZWw6YTExeVRleHQ7ei1pbmRleDo5OTk5O2JvcmRlcjowO2NsaXA6cmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO2hlaWdodDoxcHg7d2lkdGg6MXB4O3Bvc2l0aW9uOmFic29sdXRlO292ZXJmbG93OmhpZGRlbjtwYWRkaW5nOjA7d2hpdGUtc3BhY2U6bm93cmFwO1wiLFxuICBtYXA6IFwiLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtFeE1YbFVaWGgwTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFWRk5JaXdpWm1sc1pTSTZJa0V4TVhsVVpYaDBMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5OGdRR1pzYjNkY2JpOHFLaUJBYW5ONElHcHplQ0FxTDF4dWFXMXdiM0owSUhzZ2RIbHdaU0JGYkdWdFpXNTBRMjl1Wm1sbklIMGdabkp2YlNBbmNtVmhZM1FuTzF4dWFXMXdiM0owSUhzZ2FuTjRJSDBnWm5KdmJTQW5RR1Z0YjNScGIyNHZZMjl5WlNjN1hHNWNiaTh2SUVGemMybHpkR2wyWlNCMFpYaDBJSFJ2SUdSbGMyTnlhV0psSUhacGMzVmhiQ0JsYkdWdFpXNTBjeTRnU0dsa1pHVnVJR1p2Y2lCemFXZG9kR1ZrSUhWelpYSnpMbHh1WTI5dWMzUWdRVEV4ZVZSbGVIUWdQU0FvY0hKdmNITTZJRVZzWlcxbGJuUkRiMjVtYVdjOEozTndZVzRuUGlrZ1BUNGdLRnh1SUNBZ0lEeHpjR0Z1WEc0Z0lDQWdJQ0JqYzNNOWUzdGNiaUFnSUNBZ0lDQWdiR0ZpWld3NklDZGhNVEY1VkdWNGRDY3NYRzRnSUNBZ0lDQWdJSHBKYm1SbGVEb2dPVGs1T1N4Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBd0xGeHVJQ0FnSUNBZ0lDQmpiR2x3T2lBbmNtVmpkQ2d4Y0hnc0lERndlQ3dnTVhCNExDQXhjSGdwSnl4Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeExGeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01TeGNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJQ2RoWW5OdmJIVjBaU2NzWEc0Z0lDQWdJQ0FnSUc5MlpYSm1iRzkzT2lBbmFHbGtaR1Z1Snl4Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01DeGNiaUFnSUNBZ0lDQWdkMmhwZEdWVGNHRmpaVG9nSjI1dmQzSmhjQ2NzWEc0Z0lDQWdJQ0I5ZlZ4dUlDQWdJQ0FnZXk0dUxuQnliM0J6ZlZ4dUlDQWdJQzgrWEc0cE8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQkJNVEY1VkdWNGREdGNiaUpkZlE9PSAqL1wiXG59O1xuXG52YXIgQTExeVRleHQgPSBmdW5jdGlvbiBBMTF5VGV4dChwcm9wcykge1xuICByZXR1cm4ganN4KFwic3BhblwiLCBfZXh0ZW5kcyh7XG4gICAgY3NzOiBfcmVmXG4gIH0sIHByb3BzKSk7XG59O1xuXG52YXIgRHVtbXlJbnB1dCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoRHVtbXlJbnB1dCwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gRHVtbXlJbnB1dCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRHVtbXlJbnB1dCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKER1bW15SW5wdXQpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKER1bW15SW5wdXQsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGluUHJvcCA9IF90aGlzJHByb3BzLmluLFxuICAgICAgICAgIG91dCA9IF90aGlzJHByb3BzLm91dCxcbiAgICAgICAgICBvbkV4aXRlZCA9IF90aGlzJHByb3BzLm9uRXhpdGVkLFxuICAgICAgICAgIGFwcGVhciA9IF90aGlzJHByb3BzLmFwcGVhcixcbiAgICAgICAgICBlbnRlciA9IF90aGlzJHByb3BzLmVudGVyLFxuICAgICAgICAgIGV4aXQgPSBfdGhpcyRwcm9wcy5leGl0LFxuICAgICAgICAgIGlubmVyUmVmID0gX3RoaXMkcHJvcHMuaW5uZXJSZWYsXG4gICAgICAgICAgZW1vdGlvbiA9IF90aGlzJHByb3BzLmVtb3Rpb24sXG4gICAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3RoaXMkcHJvcHMsIFtcImluXCIsIFwib3V0XCIsIFwib25FeGl0ZWRcIiwgXCJhcHBlYXJcIiwgXCJlbnRlclwiLCBcImV4aXRcIiwgXCJpbm5lclJlZlwiLCBcImVtb3Rpb25cIl0pO1xuXG4gICAgICByZXR1cm4ganN4KFwiaW5wdXRcIiwgX2V4dGVuZHMoe1xuICAgICAgICByZWY6IGlubmVyUmVmXG4gICAgICB9LCBwcm9wcywge1xuICAgICAgICBjc3M6XG4gICAgICAgIC8qI19fUFVSRV9fKi9cbiAgICAgICAgX2Nzcyh7XG4gICAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgICAvLyBnZXQgcmlkIG9mIGFueSBkZWZhdWx0IHN0eWxlc1xuICAgICAgICAgIGJhY2tncm91bmQ6IDAsXG4gICAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAgIGZvbnRTaXplOiAnaW5oZXJpdCcsXG4gICAgICAgICAgb3V0bGluZTogMCxcbiAgICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAgIC8vIGltcG9ydGFudCEgd2l0aG91dCBgd2lkdGhgIGJyb3dzZXJzIHdvbid0IGFsbG93IGZvY3VzXG4gICAgICAgICAgd2lkdGg6IDEsXG4gICAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBkZXNrdG9wXG4gICAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG4gICAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICAgIGxlZnQ6IC0xMDAsXG4gICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgICB0cmFuc2Zvcm06ICdzY2FsZSgwKSdcbiAgICAgICAgfSwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gXCJcIiA6IFwiLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtSMWJXMTVTVzV3ZFhRdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJXVkVpTENKbWFXeGxJam9pUkhWdGJYbEpibkIxZEM1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaTh2SUVCbWJHOTNYRzR2S2lvZ1FHcHplQ0JxYzNnZ0tpOWNibWx0Y0c5eWRDQjdJRU52YlhCdmJtVnVkQ0I5SUdaeWIyMGdKM0psWVdOMEp6dGNibWx0Y0c5eWRDQjdJR3B6ZUNCOUlHWnliMjBnSjBCbGJXOTBhVzl1TDJOdmNtVW5PMXh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JqYkdGemN5QkVkVzF0ZVVsdWNIVjBJR1Y0ZEdWdVpITWdRMjl0Y0c5dVpXNTBQR0Z1ZVQ0Z2UxeHVJQ0J5Wlc1a1pYSWdLQ2tnZTF4dUlDQWdJR052Ym5OMElIc2dhVzQ2SUdsdVVISnZjQ3dnYjNWMExDQnZia1Y0YVhSbFpDd2dZWEJ3WldGeUxDQmxiblJsY2l3Z1pYaHBkQ3dnYVc1dVpYSlNaV1lzSUdWdGIzUnBiMjRzSUM0dUxuQnliM0J6SUgwZ1BTQjBhR2x6TG5CeWIzQnpPMXh1SUNBZ0lISmxkSFZ5YmloY2JpQWdJQ0FnSUR4cGJuQjFkRnh1SUNBZ0lDQWdJQ0J5WldZOWUybHVibVZ5VW1WbWZWeHVJQ0FnSUNBZ0lDQjdMaTR1Y0hKdmNITjlYRzRnSUNBZ0lDQWdJR056Y3oxN2UxeHVJQ0FnSUNBZ0lDQWdJR3hoWW1Wc09pQW5aSFZ0YlhsSmJuQjFkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0x5OGdaMlYwSUhKcFpDQnZaaUJoYm5rZ1pHVm1ZWFZzZENCemRIbHNaWE5jYmlBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQXdMRnh1SUNBZ0lDQWdJQ0FnSUdKdmNtUmxjam9nTUN4Y2JpQWdJQ0FnSUNBZ0lDQm1iMjUwVTJsNlpUb2dKMmx1YUdWeWFYUW5MRnh1SUNBZ0lDQWdJQ0FnSUc5MWRHeHBibVU2SURBc1hHNGdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNQ3hjYmlBZ0lDQWdJQ0FnSUNBdkx5QnBiWEJ2Y25SaGJuUWhJSGRwZEdodmRYUWdZSGRwWkhSb1lDQmljbTkzYzJWeWN5QjNiMjRuZENCaGJHeHZkeUJtYjJOMWMxeHVJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXhMRnh1WEc0Z0lDQWdJQ0FnSUNBZ0x5OGdjbVZ0YjNabElHTjFjbk52Y2lCdmJpQmtaWE5yZEc5d1hHNGdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklDZDBjbUZ1YzNCaGNtVnVkQ2NzWEc1Y2JpQWdJQ0FnSUNBZ0lDQXZMeUJ5WlcxdmRtVWdZM1Z5YzI5eUlHOXVJRzF2WW1sc1pTQjNhR2xzYzNRZ2JXRnBiblJoYVc1cGJtY2dYQ0p6WTNKdmJHd2dhVzUwYnlCMmFXVjNYQ0lnWW1Wb1lYWnBiM1Z5WEc0Z0lDQWdJQ0FnSUNBZ2JHVm1kRG9nTFRFd01DeGNiaUFnSUNBZ0lDQWdJQ0J2Y0dGamFYUjVPaUF3TEZ4dUlDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQW5jbVZzWVhScGRtVW5MRnh1SUNBZ0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ0ozTmpZV3hsS0RBcEp5eGNiaUFnSUNBZ0lDQWdmWDFjYmlBZ0lDQWdJQzgrWEc0Z0lDQWdLVHRjYmlBZ2ZWeHVmVnh1SWwxOSAqL1wiKVxuICAgICAgfSkpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBEdW1teUlucHV0O1xufShDb21wb25lbnQpO1xuXG52YXIgTm9kZVJlc29sdmVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhOb2RlUmVzb2x2ZXIsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE5vZGVSZXNvbHZlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTm9kZVJlc29sdmVyKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoTm9kZVJlc29sdmVyKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhOb2RlUmVzb2x2ZXIsIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgdGhpcy5wcm9wcy5pbm5lclJlZihmaW5kRE9NTm9kZSh0aGlzKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNvbXBvbmVudFdpbGxVbm1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgdGhpcy5wcm9wcy5pbm5lclJlZihudWxsKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBOb2RlUmVzb2x2ZXI7XG59KENvbXBvbmVudCk7XG5cbnZhciBTVFlMRV9LRVlTID0gWydib3hTaXppbmcnLCAnaGVpZ2h0JywgJ292ZXJmbG93JywgJ3BhZGRpbmdSaWdodCcsICdwb3NpdGlvbiddO1xudmFyIExPQ0tfU1RZTEVTID0ge1xuICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgLy8gYWNjb3VudCBmb3IgcG9zc2libGUgZGVjbGFyYXRpb24gYHdpZHRoOiAxMDAlO2Agb24gYm9keVxuICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICBoZWlnaHQ6ICcxMDAlJ1xufTtcblxuZnVuY3Rpb24gcHJldmVudFRvdWNoTW92ZShlKSB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbn1cbmZ1bmN0aW9uIGFsbG93VG91Y2hNb3ZlKGUpIHtcbiAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbn1cbmZ1bmN0aW9uIHByZXZlbnRJbmVydGlhU2Nyb2xsKCkge1xuICB2YXIgdG9wID0gdGhpcy5zY3JvbGxUb3A7XG4gIHZhciB0b3RhbFNjcm9sbCA9IHRoaXMuc2Nyb2xsSGVpZ2h0O1xuICB2YXIgY3VycmVudFNjcm9sbCA9IHRvcCArIHRoaXMub2Zmc2V0SGVpZ2h0O1xuXG4gIGlmICh0b3AgPT09IDApIHtcbiAgICB0aGlzLnNjcm9sbFRvcCA9IDE7XG4gIH0gZWxzZSBpZiAoY3VycmVudFNjcm9sbCA9PT0gdG90YWxTY3JvbGwpIHtcbiAgICB0aGlzLnNjcm9sbFRvcCA9IHRvcCAtIDE7XG4gIH1cbn0gLy8gYG9udG91Y2hzdGFydGAgY2hlY2sgd29ya3Mgb24gbW9zdCBicm93c2Vyc1xuLy8gYG1heFRvdWNoUG9pbnRzYCB3b3JrcyBvbiBJRTEwLzExIGFuZCBTdXJmYWNlXG5cbmZ1bmN0aW9uIGlzVG91Y2hEZXZpY2UoKSB7XG4gIHJldHVybiAnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cgfHwgbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzO1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEod2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbnZhciBhY3RpdmVTY3JvbGxMb2NrcyA9IDA7XG5cbnZhciBTY3JvbGxMb2NrID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhTY3JvbGxMb2NrLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTY3JvbGxMb2NrKCkge1xuICAgIHZhciBfZ2V0UHJvdG90eXBlT2YyO1xuXG4gICAgdmFyIF90aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNjcm9sbExvY2spO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKF9nZXRQcm90b3R5cGVPZjIgPSBfZ2V0UHJvdG90eXBlT2YoU2Nyb2xsTG9jaykpLmNhbGwuYXBwbHkoX2dldFByb3RvdHlwZU9mMiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcIm9yaWdpbmFsU3R5bGVzXCIsIHt9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJsaXN0ZW5lck9wdGlvbnNcIiwge1xuICAgICAgY2FwdHVyZTogZmFsc2UsXG4gICAgICBwYXNzaXZlOiBmYWxzZVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFNjcm9sbExvY2ssIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmICghY2FuVXNlRE9NKSByZXR1cm47XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGFjY291bnRGb3JTY3JvbGxiYXJzID0gX3RoaXMkcHJvcHMuYWNjb3VudEZvclNjcm9sbGJhcnMsXG4gICAgICAgICAgdG91Y2hTY3JvbGxUYXJnZXQgPSBfdGhpcyRwcm9wcy50b3VjaFNjcm9sbFRhcmdldDtcbiAgICAgIHZhciB0YXJnZXQgPSBkb2N1bWVudC5ib2R5O1xuICAgICAgdmFyIHRhcmdldFN0eWxlID0gdGFyZ2V0ICYmIHRhcmdldC5zdHlsZTtcblxuICAgICAgaWYgKGFjY291bnRGb3JTY3JvbGxiYXJzKSB7XG4gICAgICAgIC8vIHN0b3JlIGFueSBzdHlsZXMgYWxyZWFkeSBhcHBsaWVkIHRvIHRoZSBib2R5XG4gICAgICAgIFNUWUxFX0tFWVMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgdmFyIHZhbCA9IHRhcmdldFN0eWxlICYmIHRhcmdldFN0eWxlW2tleV07XG4gICAgICAgICAgX3RoaXMyLm9yaWdpbmFsU3R5bGVzW2tleV0gPSB2YWw7XG4gICAgICAgIH0pO1xuICAgICAgfSAvLyBhcHBseSB0aGUgbG9jayBzdHlsZXMgYW5kIHBhZGRpbmcgaWYgdGhpcyBpcyB0aGUgZmlyc3Qgc2Nyb2xsIGxvY2tcblxuXG4gICAgICBpZiAoYWNjb3VudEZvclNjcm9sbGJhcnMgJiYgYWN0aXZlU2Nyb2xsTG9ja3MgPCAxKSB7XG4gICAgICAgIHZhciBjdXJyZW50UGFkZGluZyA9IHBhcnNlSW50KHRoaXMub3JpZ2luYWxTdHlsZXMucGFkZGluZ1JpZ2h0LCAxMCkgfHwgMDtcbiAgICAgICAgdmFyIGNsaWVudFdpZHRoID0gZG9jdW1lbnQuYm9keSA/IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggOiAwO1xuICAgICAgICB2YXIgYWRqdXN0ZWRQYWRkaW5nID0gd2luZG93LmlubmVyV2lkdGggLSBjbGllbnRXaWR0aCArIGN1cnJlbnRQYWRkaW5nIHx8IDA7XG4gICAgICAgIE9iamVjdC5rZXlzKExPQ0tfU1RZTEVTKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICB2YXIgdmFsID0gTE9DS19TVFlMRVNba2V5XTtcblxuICAgICAgICAgIGlmICh0YXJnZXRTdHlsZSkge1xuICAgICAgICAgICAgdGFyZ2V0U3R5bGVba2V5XSA9IHZhbDtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICh0YXJnZXRTdHlsZSkge1xuICAgICAgICAgIHRhcmdldFN0eWxlLnBhZGRpbmdSaWdodCA9IFwiXCIuY29uY2F0KGFkanVzdGVkUGFkZGluZywgXCJweFwiKTtcbiAgICAgICAgfVxuICAgICAgfSAvLyBhY2NvdW50IGZvciB0b3VjaCBkZXZpY2VzXG5cblxuICAgICAgaWYgKHRhcmdldCAmJiBpc1RvdWNoRGV2aWNlKCkpIHtcbiAgICAgICAgLy8gTW9iaWxlIFNhZmFyaSBpZ25vcmVzIHsgb3ZlcmZsb3c6IGhpZGRlbiB9IGRlY2xhcmF0aW9uIG9uIHRoZSBib2R5LlxuICAgICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgcHJldmVudFRvdWNoTW92ZSwgdGhpcy5saXN0ZW5lck9wdGlvbnMpOyAvLyBBbGxvdyBzY3JvbGwgb24gcHJvdmlkZWQgdGFyZ2V0XG5cbiAgICAgICAgaWYgKHRvdWNoU2Nyb2xsVGFyZ2V0KSB7XG4gICAgICAgICAgdG91Y2hTY3JvbGxUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHByZXZlbnRJbmVydGlhU2Nyb2xsLCB0aGlzLmxpc3RlbmVyT3B0aW9ucyk7XG4gICAgICAgICAgdG91Y2hTY3JvbGxUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgYWxsb3dUb3VjaE1vdmUsIHRoaXMubGlzdGVuZXJPcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgfSAvLyBpbmNyZW1lbnQgYWN0aXZlIHNjcm9sbCBsb2Nrc1xuXG5cbiAgICAgIGFjdGl2ZVNjcm9sbExvY2tzICs9IDE7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNvbXBvbmVudFdpbGxVbm1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIGlmICghY2FuVXNlRE9NKSByZXR1cm47XG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBhY2NvdW50Rm9yU2Nyb2xsYmFycyA9IF90aGlzJHByb3BzMi5hY2NvdW50Rm9yU2Nyb2xsYmFycyxcbiAgICAgICAgICB0b3VjaFNjcm9sbFRhcmdldCA9IF90aGlzJHByb3BzMi50b3VjaFNjcm9sbFRhcmdldDtcbiAgICAgIHZhciB0YXJnZXQgPSBkb2N1bWVudC5ib2R5O1xuICAgICAgdmFyIHRhcmdldFN0eWxlID0gdGFyZ2V0ICYmIHRhcmdldC5zdHlsZTsgLy8gc2FmZWx5IGRlY3JlbWVudCBhY3RpdmUgc2Nyb2xsIGxvY2tzXG5cbiAgICAgIGFjdGl2ZVNjcm9sbExvY2tzID0gTWF0aC5tYXgoYWN0aXZlU2Nyb2xsTG9ja3MgLSAxLCAwKTsgLy8gcmVhcHBseSBvcmlnaW5hbCBib2R5IHN0eWxlcywgaWYgYW55XG5cbiAgICAgIGlmIChhY2NvdW50Rm9yU2Nyb2xsYmFycyAmJiBhY3RpdmVTY3JvbGxMb2NrcyA8IDEpIHtcbiAgICAgICAgU1RZTEVfS0VZUy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICB2YXIgdmFsID0gX3RoaXMzLm9yaWdpbmFsU3R5bGVzW2tleV07XG5cbiAgICAgICAgICBpZiAodGFyZ2V0U3R5bGUpIHtcbiAgICAgICAgICAgIHRhcmdldFN0eWxlW2tleV0gPSB2YWw7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gLy8gcmVtb3ZlIHRvdWNoIGxpc3RlbmVyc1xuXG5cbiAgICAgIGlmICh0YXJnZXQgJiYgaXNUb3VjaERldmljZSgpKSB7XG4gICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBwcmV2ZW50VG91Y2hNb3ZlLCB0aGlzLmxpc3RlbmVyT3B0aW9ucyk7XG5cbiAgICAgICAgaWYgKHRvdWNoU2Nyb2xsVGFyZ2V0KSB7XG4gICAgICAgICAgdG91Y2hTY3JvbGxUYXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHByZXZlbnRJbmVydGlhU2Nyb2xsLCB0aGlzLmxpc3RlbmVyT3B0aW9ucyk7XG4gICAgICAgICAgdG91Y2hTY3JvbGxUYXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgYWxsb3dUb3VjaE1vdmUsIHRoaXMubGlzdGVuZXJPcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNjcm9sbExvY2s7XG59KENvbXBvbmVudCk7XG5cbl9kZWZpbmVQcm9wZXJ0eShTY3JvbGxMb2NrLCBcImRlZmF1bHRQcm9wc1wiLCB7XG4gIGFjY291bnRGb3JTY3JvbGxiYXJzOiB0cnVlXG59KTtcblxudmFyIF9yZWYkMSA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IHtcbiAgbmFtZTogXCIxZHNicGNwXCIsXG4gIHN0eWxlczogXCJwb3NpdGlvbjpmaXhlZDtsZWZ0OjA7Ym90dG9tOjA7cmlnaHQ6MDt0b3A6MDtcIlxufSA6IHtcbiAgbmFtZTogXCIxZHNicGNwXCIsXG4gIHN0eWxlczogXCJwb3NpdGlvbjpmaXhlZDtsZWZ0OjA7Ym90dG9tOjA7cmlnaHQ6MDt0b3A6MDtcIixcbiAgbWFwOiBcIi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklsTmpjbTlzYkVKc2IyTnJMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVRaRVZTSXNJbVpwYkdVaU9pSlRZM0p2Ykd4Q2JHOWpheTVxY3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpOHZJRUJtYkc5M1hHNHZLaW9nUUdwemVDQnFjM2dnS2k5Y2JtbHRjRzl5ZENCN0lGQjFjbVZEYjIxd2IyNWxiblFzSUhSNWNHVWdSV3hsYldWdWRDQjlJR1p5YjIwZ0ozSmxZV04wSnp0Y2JtbHRjRzl5ZENCN0lHcHplQ0I5SUdaeWIyMGdKMEJsYlc5MGFXOXVMMk52Y21Vbk8xeHVhVzF3YjNKMElFNXZaR1ZTWlhOdmJIWmxjaUJtY205dElDY3VMMDV2WkdWU1pYTnZiSFpsY2ljN1hHNXBiWEJ2Y25RZ1UyTnliMnhzVEc5amF5Qm1jbTl0SUNjdUwxTmpjbTlzYkV4dlkyc3ZhVzVrWlhnbk8xeHVYRzUwZVhCbElGQnliM0J6SUQwZ2UxeHVJQ0JqYUdsc1pISmxiam9nUld4bGJXVnVkRHdxUGl4Y2JpQWdhWE5GYm1GaWJHVmtPaUJpYjI5c1pXRnVMRnh1ZlR0Y2JuUjVjR1VnVTNSaGRHVWdQU0I3WEc0Z0lIUnZkV05vVTJOeWIyeHNWR0Z5WjJWME9pQklWRTFNUld4bGJXVnVkQ0I4SUc1MWJHd3NYRzU5TzF4dVhHNHZMeUJPVDFSRk9seHVMeThnVjJVZ2MyaHZkV3hrYmlkMElHNWxaV1FnZEdocGN5QmhablJsY2lCMWNHUmhkR2x1WnlCMGJ5QlNaV0ZqZENCMk1UWXVNeTR3TENCM2FHbGphQ0JwYm5SeWIyUjFZMlZ6T2x4dUx5OGdMU0JqY21WaGRHVlNaV1lvS1NCb2RIUndjem92TDNKbFlXTjBhbk11YjNKbkwyUnZZM012Y21WaFkzUXRZWEJwTG1oMGJXd2pjbVZoWTNSamNtVmhkR1Z5WldaY2JpOHZJQzBnWm05eWQyRnlaRkpsWmlncElHaDBkSEJ6T2k4dmNtVmhZM1JxY3k1dmNtY3ZaRzlqY3k5eVpXRmpkQzFoY0drdWFIUnRiQ055WldGamRHWnZjbmRoY21SeVpXWmNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdZMnhoYzNNZ1UyTnliMnhzUW14dlkyc2daWGgwWlc1a2N5QlFkWEpsUTI5dGNHOXVaVzUwUEZCeWIzQnpMQ0JUZEdGMFpUNGdlMXh1SUNCemRHRjBaU0E5SUhzZ2RHOTFZMmhUWTNKdmJHeFVZWEpuWlhRNklHNTFiR3dnZlR0Y2JseHVJQ0F2THlCdGRYTjBJR0psSUdsdUlITjBZWFJsSUhSdklIUnlhV2RuWlhJZ1lTQnlaUzF5Wlc1a1pYSXNJRzl1YkhrZ2NuVnVjeUJ2Ym1ObElIQmxjaUJwYm5OMFlXNWpaVnh1SUNCblpYUlRZM0p2Ykd4VVlYSm5aWFFnUFNBb2NtVm1PaUJJVkUxTVJXeGxiV1Z1ZENrZ1BUNGdlMXh1SUNBZ0lHbG1JQ2h5WldZZ1BUMDlJSFJvYVhNdWMzUmhkR1V1ZEc5MVkyaFRZM0p2Ykd4VVlYSm5aWFFwSUhKbGRIVnlianRjYmlBZ0lDQjBhR2x6TG5ObGRGTjBZWFJsS0hzZ2RHOTFZMmhUWTNKdmJHeFVZWEpuWlhRNklISmxaaUI5S1R0Y2JpQWdmVHRjYmx4dUlDQXZMeUIwYUdseklIZHBiR3dnWTJ4dmMyVWdkR2hsSUcxbGJuVWdkMmhsYmlCaElIVnpaWElnWTJ4cFkydHpJRzkxZEhOcFpHVmNiaUFnWW14MWNsTmxiR1ZqZEVsdWNIVjBJRDBnS0NrZ1BUNGdlMXh1SUNBZ0lHbG1JQ2hrYjJOMWJXVnVkQzVoWTNScGRtVkZiR1Z0Wlc1MEtTQjdYRzRnSUNBZ0lDQmtiMk4xYldWdWRDNWhZM1JwZG1WRmJHVnRaVzUwTG1Kc2RYSW9LVHRjYmlBZ0lDQjlYRzRnSUgwN1hHNWNiaUFnY21WdVpHVnlLQ2tnZTF4dUlDQWdJR052Ym5OMElIc2dZMmhwYkdSeVpXNHNJR2x6Ulc1aFlteGxaQ0I5SUQwZ2RHaHBjeTV3Y205d2N6dGNiaUFnSUNCamIyNXpkQ0I3SUhSdmRXTm9VMk55YjJ4c1ZHRnlaMlYwSUgwZ1BTQjBhR2x6TG5OMFlYUmxPMXh1WEc0Z0lDQWdMeThnWW1GcGJDQmxZWEpzZVNCcFppQnViM1FnWlc1aFlteGxaRnh1SUNBZ0lHbG1JQ2doYVhORmJtRmliR1ZrS1NCeVpYUjFjbTRnWTJocGJHUnlaVzQ3WEc1Y2JpQWdJQ0F2S2x4dUlDQWdJQ0FxSUVScGRseHVJQ0FnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNBZ0lDQXFJR0pzYjJOcmN5QnpZM0p2Ykd4cGJtY2diMjRnYm05dUxXSnZaSGtnWld4bGJXVnVkSE1nWW1Wb2FXNWtJSFJvWlNCdFpXNTFYRzVjYmlBZ0lDQWdLaUJPYjJSbFVtVnpiMngyWlhKY2JpQWdJQ0FnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFnSUNBZ0tpQjNaU0J1WldWa0lHRWdjbVZtWlhKbGJtTmxJSFJ2SUhSb1pTQnpZM0p2Ykd4aFlteGxJR1ZzWlcxbGJuUWdkRzhnWENKMWJteHZZMnRjSWlCelkzSnZiR3dnYjI1Y2JpQWdJQ0FnS2lCdGIySnBiR1VnWkdWMmFXTmxjMXh1WEc0Z0lDQWdJQ29nVTJOeWIyeHNURzlqYTF4dUlDQWdJQ0FxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnSUNBcUlHRmpkSFZoYkd4NUlHUnZaWE1nZEdobElITmpjbTlzYkNCc2IyTnJhVzVuWEc0Z0lDQWdJQ292WEc0Z0lDQWdjbVYwZFhKdUlDaGNiaUFnSUNBZ0lEeGthWFkrWEc0Z0lDQWdJQ0FnSUR4a2FYWmNiaUFnSUNBZ0lDQWdJQ0J2YmtOc2FXTnJQWHQwYUdsekxtSnNkWEpUWld4bFkzUkpibkIxZEgxY2JpQWdJQ0FnSUNBZ0lDQmpjM005ZTNzZ2NHOXphWFJwYjI0NklDZG1hWGhsWkNjc0lHeGxablE2SURBc0lHSnZkSFJ2YlRvZ01Dd2djbWxuYUhRNklEQXNJSFJ2Y0RvZ01DQjlmVnh1SUNBZ0lDQWdJQ0F2UGx4dUlDQWdJQ0FnSUNBOFRtOWtaVkpsYzI5c2RtVnlJR2x1Ym1WeVVtVm1QWHQwYUdsekxtZGxkRk5qY205c2JGUmhjbWRsZEgwK2UyTm9hV3hrY21WdWZUd3ZUbTlrWlZKbGMyOXNkbVZ5UGx4dUlDQWdJQ0FnSUNCN2RHOTFZMmhUWTNKdmJHeFVZWEpuWlhRZ1B5QW9YRzRnSUNBZ0lDQWdJQ0FnUEZOamNtOXNiRXh2WTJzZ2RHOTFZMmhUWTNKdmJHeFVZWEpuWlhROWUzUnZkV05vVTJOeWIyeHNWR0Z5WjJWMGZTQXZQbHh1SUNBZ0lDQWdJQ0FwSURvZ2JuVnNiSDFjYmlBZ0lDQWdJRHd2WkdsMlBseHVJQ0FnSUNrN1hHNGdJSDFjYm4xY2JpSmRmUT09ICovXCJcbn07XG5cbi8vIE5PVEU6XG4vLyBXZSBzaG91bGRuJ3QgbmVlZCB0aGlzIGFmdGVyIHVwZGF0aW5nIHRvIFJlYWN0IHYxNi4zLjAsIHdoaWNoIGludHJvZHVjZXM6XG4vLyAtIGNyZWF0ZVJlZigpIGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9yZWFjdC1hcGkuaHRtbCNyZWFjdGNyZWF0ZXJlZlxuLy8gLSBmb3J3YXJkUmVmKCkgaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL3JlYWN0LWFwaS5odG1sI3JlYWN0Zm9yd2FyZHJlZlxudmFyIFNjcm9sbEJsb2NrID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoU2Nyb2xsQmxvY2ssIF9QdXJlQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTY3JvbGxCbG9jaygpIHtcbiAgICB2YXIgX2dldFByb3RvdHlwZU9mMjtcblxuICAgIHZhciBfdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTY3JvbGxCbG9jayk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoX2dldFByb3RvdHlwZU9mMiA9IF9nZXRQcm90b3R5cGVPZihTY3JvbGxCbG9jaykpLmNhbGwuYXBwbHkoX2dldFByb3RvdHlwZU9mMiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcInN0YXRlXCIsIHtcbiAgICAgIHRvdWNoU2Nyb2xsVGFyZ2V0OiBudWxsXG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiZ2V0U2Nyb2xsVGFyZ2V0XCIsIGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgIGlmIChyZWYgPT09IF90aGlzLnN0YXRlLnRvdWNoU2Nyb2xsVGFyZ2V0KSByZXR1cm47XG5cbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgdG91Y2hTY3JvbGxUYXJnZXQ6IHJlZlxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiYmx1clNlbGVjdElucHV0XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50KSB7XG4gICAgICAgIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuYmx1cigpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFNjcm9sbEJsb2NrLCBbe1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGlzRW5hYmxlZCA9IF90aGlzJHByb3BzLmlzRW5hYmxlZDtcbiAgICAgIHZhciB0b3VjaFNjcm9sbFRhcmdldCA9IHRoaXMuc3RhdGUudG91Y2hTY3JvbGxUYXJnZXQ7IC8vIGJhaWwgZWFybHkgaWYgbm90IGVuYWJsZWRcblxuICAgICAgaWYgKCFpc0VuYWJsZWQpIHJldHVybiBjaGlsZHJlbjtcbiAgICAgIC8qXG4gICAgICAgKiBEaXZcbiAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICogYmxvY2tzIHNjcm9sbGluZyBvbiBub24tYm9keSBlbGVtZW50cyBiZWhpbmQgdGhlIG1lbnVcbiAgICAgICAgKiBOb2RlUmVzb2x2ZXJcbiAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICogd2UgbmVlZCBhIHJlZmVyZW5jZSB0byB0aGUgc2Nyb2xsYWJsZSBlbGVtZW50IHRvIFwidW5sb2NrXCIgc2Nyb2xsIG9uXG4gICAgICAgKiBtb2JpbGUgZGV2aWNlc1xuICAgICAgICAqIFNjcm9sbExvY2tcbiAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICogYWN0dWFsbHkgZG9lcyB0aGUgc2Nyb2xsIGxvY2tpbmdcbiAgICAgICAqL1xuXG4gICAgICByZXR1cm4ganN4KFwiZGl2XCIsIG51bGwsIGpzeChcImRpdlwiLCB7XG4gICAgICAgIG9uQ2xpY2s6IHRoaXMuYmx1clNlbGVjdElucHV0LFxuICAgICAgICBjc3M6IF9yZWYkMVxuICAgICAgfSksIGpzeChOb2RlUmVzb2x2ZXIsIHtcbiAgICAgICAgaW5uZXJSZWY6IHRoaXMuZ2V0U2Nyb2xsVGFyZ2V0XG4gICAgICB9LCBjaGlsZHJlbiksIHRvdWNoU2Nyb2xsVGFyZ2V0ID8ganN4KFNjcm9sbExvY2ssIHtcbiAgICAgICAgdG91Y2hTY3JvbGxUYXJnZXQ6IHRvdWNoU2Nyb2xsVGFyZ2V0XG4gICAgICB9KSA6IG51bGwpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTY3JvbGxCbG9jaztcbn0oUHVyZUNvbXBvbmVudCk7XG5cbnZhciBTY3JvbGxDYXB0b3IgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFNjcm9sbENhcHRvciwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU2Nyb2xsQ2FwdG9yKCkge1xuICAgIHZhciBfZ2V0UHJvdG90eXBlT2YyO1xuXG4gICAgdmFyIF90aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNjcm9sbENhcHRvcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoX2dldFByb3RvdHlwZU9mMiA9IF9nZXRQcm90b3R5cGVPZihTY3JvbGxDYXB0b3IpKS5jYWxsLmFwcGx5KF9nZXRQcm90b3R5cGVPZjIsIFt0aGlzXS5jb25jYXQoYXJncykpKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJpc0JvdHRvbVwiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiaXNUb3BcIiwgZmFsc2UpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcInNjcm9sbFRhcmdldFwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcInRvdWNoU3RhcnRcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJjYW5jZWxTY3JvbGxcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiaGFuZGxlRXZlbnREZWx0YVwiLCBmdW5jdGlvbiAoZXZlbnQsIGRlbHRhKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBvbkJvdHRvbUFycml2ZSA9IF90aGlzJHByb3BzLm9uQm90dG9tQXJyaXZlLFxuICAgICAgICAgIG9uQm90dG9tTGVhdmUgPSBfdGhpcyRwcm9wcy5vbkJvdHRvbUxlYXZlLFxuICAgICAgICAgIG9uVG9wQXJyaXZlID0gX3RoaXMkcHJvcHMub25Ub3BBcnJpdmUsXG4gICAgICAgICAgb25Ub3BMZWF2ZSA9IF90aGlzJHByb3BzLm9uVG9wTGVhdmU7XG4gICAgICB2YXIgX3RoaXMkc2Nyb2xsVGFyZ2V0ID0gX3RoaXMuc2Nyb2xsVGFyZ2V0LFxuICAgICAgICAgIHNjcm9sbFRvcCA9IF90aGlzJHNjcm9sbFRhcmdldC5zY3JvbGxUb3AsXG4gICAgICAgICAgc2Nyb2xsSGVpZ2h0ID0gX3RoaXMkc2Nyb2xsVGFyZ2V0LnNjcm9sbEhlaWdodCxcbiAgICAgICAgICBjbGllbnRIZWlnaHQgPSBfdGhpcyRzY3JvbGxUYXJnZXQuY2xpZW50SGVpZ2h0O1xuICAgICAgdmFyIHRhcmdldCA9IF90aGlzLnNjcm9sbFRhcmdldDtcbiAgICAgIHZhciBpc0RlbHRhUG9zaXRpdmUgPSBkZWx0YSA+IDA7XG4gICAgICB2YXIgYXZhaWxhYmxlU2Nyb2xsID0gc2Nyb2xsSGVpZ2h0IC0gY2xpZW50SGVpZ2h0IC0gc2Nyb2xsVG9wO1xuICAgICAgdmFyIHNob3VsZENhbmNlbFNjcm9sbCA9IGZhbHNlOyAvLyByZXNldCBib3R0b20vdG9wIGZsYWdzXG5cbiAgICAgIGlmIChhdmFpbGFibGVTY3JvbGwgPiBkZWx0YSAmJiBfdGhpcy5pc0JvdHRvbSkge1xuICAgICAgICBpZiAob25Cb3R0b21MZWF2ZSkgb25Cb3R0b21MZWF2ZShldmVudCk7XG4gICAgICAgIF90aGlzLmlzQm90dG9tID0gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0RlbHRhUG9zaXRpdmUgJiYgX3RoaXMuaXNUb3ApIHtcbiAgICAgICAgaWYgKG9uVG9wTGVhdmUpIG9uVG9wTGVhdmUoZXZlbnQpO1xuICAgICAgICBfdGhpcy5pc1RvcCA9IGZhbHNlO1xuICAgICAgfSAvLyBib3R0b20gbGltaXRcblxuXG4gICAgICBpZiAoaXNEZWx0YVBvc2l0aXZlICYmIGRlbHRhID4gYXZhaWxhYmxlU2Nyb2xsKSB7XG4gICAgICAgIGlmIChvbkJvdHRvbUFycml2ZSAmJiAhX3RoaXMuaXNCb3R0b20pIHtcbiAgICAgICAgICBvbkJvdHRvbUFycml2ZShldmVudCk7XG4gICAgICAgIH1cblxuICAgICAgICB0YXJnZXQuc2Nyb2xsVG9wID0gc2Nyb2xsSGVpZ2h0O1xuICAgICAgICBzaG91bGRDYW5jZWxTY3JvbGwgPSB0cnVlO1xuICAgICAgICBfdGhpcy5pc0JvdHRvbSA9IHRydWU7IC8vIHRvcCBsaW1pdFxuICAgICAgfSBlbHNlIGlmICghaXNEZWx0YVBvc2l0aXZlICYmIC1kZWx0YSA+IHNjcm9sbFRvcCkge1xuICAgICAgICBpZiAob25Ub3BBcnJpdmUgJiYgIV90aGlzLmlzVG9wKSB7XG4gICAgICAgICAgb25Ub3BBcnJpdmUoZXZlbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGFyZ2V0LnNjcm9sbFRvcCA9IDA7XG4gICAgICAgIHNob3VsZENhbmNlbFNjcm9sbCA9IHRydWU7XG4gICAgICAgIF90aGlzLmlzVG9wID0gdHJ1ZTtcbiAgICAgIH0gLy8gY2FuY2VsIHNjcm9sbFxuXG5cbiAgICAgIGlmIChzaG91bGRDYW5jZWxTY3JvbGwpIHtcbiAgICAgICAgX3RoaXMuY2FuY2VsU2Nyb2xsKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbldoZWVsXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgX3RoaXMuaGFuZGxlRXZlbnREZWx0YShldmVudCwgZXZlbnQuZGVsdGFZKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvblRvdWNoU3RhcnRcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAvLyBzZXQgdG91Y2ggc3RhcnQgc28gd2UgY2FuIGNhbGN1bGF0ZSB0b3VjaG1vdmUgZGVsdGFcbiAgICAgIF90aGlzLnRvdWNoU3RhcnQgPSBldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRZO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcIm9uVG91Y2hNb3ZlXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgdmFyIGRlbHRhWSA9IF90aGlzLnRvdWNoU3RhcnQgLSBldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRZO1xuXG4gICAgICBfdGhpcy5oYW5kbGVFdmVudERlbHRhKGV2ZW50LCBkZWx0YVkpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcImdldFNjcm9sbFRhcmdldFwiLCBmdW5jdGlvbiAocmVmKSB7XG4gICAgICBfdGhpcy5zY3JvbGxUYXJnZXQgPSByZWY7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoU2Nyb2xsQ2FwdG9yLCBbe1xuICAgIGtleTogXCJjb21wb25lbnREaWRNb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIHRoaXMuc3RhcnRMaXN0ZW5pbmcodGhpcy5zY3JvbGxUYXJnZXQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsVW5tb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIHRoaXMuc3RvcExpc3RlbmluZyh0aGlzLnNjcm9sbFRhcmdldCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInN0YXJ0TGlzdGVuaW5nXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0TGlzdGVuaW5nKGVsKSB7XG4gICAgICAvLyBiYWlsIGVhcmx5IGlmIG5vIHNjcm9sbCBhdmFpbGFibGVcbiAgICAgIGlmICghZWwpIHJldHVybjtcbiAgICAgIGlmIChlbC5zY3JvbGxIZWlnaHQgPD0gZWwuY2xpZW50SGVpZ2h0KSByZXR1cm47IC8vIGFsbCB0aGUgaWYgc3RhdGVtZW50cyBhcmUgdG8gYXBwZWFzZSBGbG93IPCfmKJcblxuICAgICAgaWYgKHR5cGVvZiBlbC5hZGRFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ3doZWVsJywgdGhpcy5vbldoZWVsLCBmYWxzZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgZWwuYWRkRXZlbnRMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5vblRvdWNoU3RhcnQsIGZhbHNlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBlbC5hZGRFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMub25Ub3VjaE1vdmUsIGZhbHNlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic3RvcExpc3RlbmluZ1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wTGlzdGVuaW5nKGVsKSB7XG4gICAgICAvLyBiYWlsIGVhcmx5IGlmIG5vIHNjcm9sbCBhdmFpbGFibGVcbiAgICAgIGlmIChlbC5zY3JvbGxIZWlnaHQgPD0gZWwuY2xpZW50SGVpZ2h0KSByZXR1cm47IC8vIGFsbCB0aGUgaWYgc3RhdGVtZW50cyBhcmUgdG8gYXBwZWFzZSBGbG93IPCfmKJcblxuICAgICAgaWYgKHR5cGVvZiBlbC5yZW1vdmVFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3doZWVsJywgdGhpcy5vbldoZWVsLCBmYWxzZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5vblRvdWNoU3RhcnQsIGZhbHNlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBlbC5yZW1vdmVFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMub25Ub3VjaE1vdmUsIGZhbHNlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE5vZGVSZXNvbHZlciwge1xuICAgICAgICBpbm5lclJlZjogdGhpcy5nZXRTY3JvbGxUYXJnZXRcbiAgICAgIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTY3JvbGxDYXB0b3I7XG59KENvbXBvbmVudCk7XG5cbnZhciBTY3JvbGxDYXB0b3JTd2l0Y2ggPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gIF9pbmhlcml0cyhTY3JvbGxDYXB0b3JTd2l0Y2gsIF9Db21wb25lbnQyKTtcblxuICBmdW5jdGlvbiBTY3JvbGxDYXB0b3JTd2l0Y2goKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNjcm9sbENhcHRvclN3aXRjaCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFNjcm9sbENhcHRvclN3aXRjaCkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoU2Nyb2xsQ2FwdG9yU3dpdGNoLCBbe1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgaXNFbmFibGVkID0gX3RoaXMkcHJvcHMyLmlzRW5hYmxlZCxcbiAgICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfdGhpcyRwcm9wczIsIFtcImlzRW5hYmxlZFwiXSk7XG5cbiAgICAgIHJldHVybiBpc0VuYWJsZWQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KFNjcm9sbENhcHRvciwgcHJvcHMpIDogdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU2Nyb2xsQ2FwdG9yU3dpdGNoO1xufShDb21wb25lbnQpO1xuXG5fZGVmaW5lUHJvcGVydHkoU2Nyb2xsQ2FwdG9yU3dpdGNoLCBcImRlZmF1bHRQcm9wc1wiLCB7XG4gIGlzRW5hYmxlZDogdHJ1ZVxufSk7XG5cbnZhciBpbnN0cnVjdGlvbnNBcmlhTWVzc2FnZSA9IGZ1bmN0aW9uIGluc3RydWN0aW9uc0FyaWFNZXNzYWdlKGV2ZW50KSB7XG4gIHZhciBjb250ZXh0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgdmFyIGlzU2VhcmNoYWJsZSA9IGNvbnRleHQuaXNTZWFyY2hhYmxlLFxuICAgICAgaXNNdWx0aSA9IGNvbnRleHQuaXNNdWx0aSxcbiAgICAgIGxhYmVsID0gY29udGV4dC5sYWJlbCxcbiAgICAgIGlzRGlzYWJsZWQgPSBjb250ZXh0LmlzRGlzYWJsZWQ7XG5cbiAgc3dpdGNoIChldmVudCkge1xuICAgIGNhc2UgJ21lbnUnOlxuICAgICAgcmV0dXJuIFwiVXNlIFVwIGFuZCBEb3duIHRvIGNob29zZSBvcHRpb25zXCIuY29uY2F0KGlzRGlzYWJsZWQgPyAnJyA6ICcsIHByZXNzIEVudGVyIHRvIHNlbGVjdCB0aGUgY3VycmVudGx5IGZvY3VzZWQgb3B0aW9uJywgXCIsIHByZXNzIEVzY2FwZSB0byBleGl0IHRoZSBtZW51LCBwcmVzcyBUYWIgdG8gc2VsZWN0IHRoZSBvcHRpb24gYW5kIGV4aXQgdGhlIG1lbnUuXCIpO1xuXG4gICAgY2FzZSAnaW5wdXQnOlxuICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KGxhYmVsID8gbGFiZWwgOiAnU2VsZWN0JywgXCIgaXMgZm9jdXNlZCBcIikuY29uY2F0KGlzU2VhcmNoYWJsZSA/ICcsdHlwZSB0byByZWZpbmUgbGlzdCcgOiAnJywgXCIsIHByZXNzIERvd24gdG8gb3BlbiB0aGUgbWVudSwgXCIpLmNvbmNhdChpc011bHRpID8gJyBwcmVzcyBsZWZ0IHRvIGZvY3VzIHNlbGVjdGVkIHZhbHVlcycgOiAnJyk7XG5cbiAgICBjYXNlICd2YWx1ZSc6XG4gICAgICByZXR1cm4gJ1VzZSBsZWZ0IGFuZCByaWdodCB0byB0b2dnbGUgYmV0d2VlbiBmb2N1c2VkIHZhbHVlcywgcHJlc3MgQmFja3NwYWNlIHRvIHJlbW92ZSB0aGUgY3VycmVudGx5IGZvY3VzZWQgdmFsdWUnO1xuICB9XG59O1xudmFyIHZhbHVlRXZlbnRBcmlhTWVzc2FnZSA9IGZ1bmN0aW9uIHZhbHVlRXZlbnRBcmlhTWVzc2FnZShldmVudCwgY29udGV4dCkge1xuICB2YXIgdmFsdWUgPSBjb250ZXh0LnZhbHVlLFxuICAgICAgaXNEaXNhYmxlZCA9IGNvbnRleHQuaXNEaXNhYmxlZDtcbiAgaWYgKCF2YWx1ZSkgcmV0dXJuO1xuXG4gIHN3aXRjaCAoZXZlbnQpIHtcbiAgICBjYXNlICdkZXNlbGVjdC1vcHRpb24nOlxuICAgIGNhc2UgJ3BvcC12YWx1ZSc6XG4gICAgY2FzZSAncmVtb3ZlLXZhbHVlJzpcbiAgICAgIHJldHVybiBcIm9wdGlvbiBcIi5jb25jYXQodmFsdWUsIFwiLCBkZXNlbGVjdGVkLlwiKTtcblxuICAgIGNhc2UgJ3NlbGVjdC1vcHRpb24nOlxuICAgICAgcmV0dXJuIGlzRGlzYWJsZWQgPyBcIm9wdGlvbiBcIi5jb25jYXQodmFsdWUsIFwiIGlzIGRpc2FibGVkLiBTZWxlY3QgYW5vdGhlciBvcHRpb24uXCIpIDogXCJvcHRpb24gXCIuY29uY2F0KHZhbHVlLCBcIiwgc2VsZWN0ZWQuXCIpO1xuICB9XG59O1xudmFyIHZhbHVlRm9jdXNBcmlhTWVzc2FnZSA9IGZ1bmN0aW9uIHZhbHVlRm9jdXNBcmlhTWVzc2FnZShfcmVmKSB7XG4gIHZhciBmb2N1c2VkVmFsdWUgPSBfcmVmLmZvY3VzZWRWYWx1ZSxcbiAgICAgIGdldE9wdGlvbkxhYmVsID0gX3JlZi5nZXRPcHRpb25MYWJlbCxcbiAgICAgIHNlbGVjdFZhbHVlID0gX3JlZi5zZWxlY3RWYWx1ZTtcbiAgcmV0dXJuIFwidmFsdWUgXCIuY29uY2F0KGdldE9wdGlvbkxhYmVsKGZvY3VzZWRWYWx1ZSksIFwiIGZvY3VzZWQsIFwiKS5jb25jYXQoc2VsZWN0VmFsdWUuaW5kZXhPZihmb2N1c2VkVmFsdWUpICsgMSwgXCIgb2YgXCIpLmNvbmNhdChzZWxlY3RWYWx1ZS5sZW5ndGgsIFwiLlwiKTtcbn07XG52YXIgb3B0aW9uRm9jdXNBcmlhTWVzc2FnZSA9IGZ1bmN0aW9uIG9wdGlvbkZvY3VzQXJpYU1lc3NhZ2UoX3JlZjIpIHtcbiAgdmFyIGZvY3VzZWRPcHRpb24gPSBfcmVmMi5mb2N1c2VkT3B0aW9uLFxuICAgICAgZ2V0T3B0aW9uTGFiZWwgPSBfcmVmMi5nZXRPcHRpb25MYWJlbCxcbiAgICAgIG9wdGlvbnMgPSBfcmVmMi5vcHRpb25zO1xuICByZXR1cm4gXCJvcHRpb24gXCIuY29uY2F0KGdldE9wdGlvbkxhYmVsKGZvY3VzZWRPcHRpb24pLCBcIiBmb2N1c2VkXCIpLmNvbmNhdChmb2N1c2VkT3B0aW9uLmlzRGlzYWJsZWQgPyAnIGRpc2FibGVkJyA6ICcnLCBcIiwgXCIpLmNvbmNhdChvcHRpb25zLmluZGV4T2YoZm9jdXNlZE9wdGlvbikgKyAxLCBcIiBvZiBcIikuY29uY2F0KG9wdGlvbnMubGVuZ3RoLCBcIi5cIik7XG59O1xudmFyIHJlc3VsdHNBcmlhTWVzc2FnZSA9IGZ1bmN0aW9uIHJlc3VsdHNBcmlhTWVzc2FnZShfcmVmMykge1xuICB2YXIgaW5wdXRWYWx1ZSA9IF9yZWYzLmlucHV0VmFsdWUsXG4gICAgICBzY3JlZW5SZWFkZXJNZXNzYWdlID0gX3JlZjMuc2NyZWVuUmVhZGVyTWVzc2FnZTtcbiAgcmV0dXJuIFwiXCIuY29uY2F0KHNjcmVlblJlYWRlck1lc3NhZ2UpLmNvbmNhdChpbnB1dFZhbHVlID8gJyBmb3Igc2VhcmNoIHRlcm0gJyArIGlucHV0VmFsdWUgOiAnJywgXCIuXCIpO1xufTtcblxudmFyIGZvcm1hdEdyb3VwTGFiZWwgPSBmdW5jdGlvbiBmb3JtYXRHcm91cExhYmVsKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5sYWJlbDtcbn07XG52YXIgZ2V0T3B0aW9uTGFiZWwgPSBmdW5jdGlvbiBnZXRPcHRpb25MYWJlbChvcHRpb24pIHtcbiAgcmV0dXJuIG9wdGlvbi5sYWJlbDtcbn07XG52YXIgZ2V0T3B0aW9uVmFsdWUgPSBmdW5jdGlvbiBnZXRPcHRpb25WYWx1ZShvcHRpb24pIHtcbiAgcmV0dXJuIG9wdGlvbi52YWx1ZTtcbn07XG52YXIgaXNPcHRpb25EaXNhYmxlZCA9IGZ1bmN0aW9uIGlzT3B0aW9uRGlzYWJsZWQob3B0aW9uKSB7XG4gIHJldHVybiAhIW9wdGlvbi5pc0Rpc2FibGVkO1xufTtcblxudmFyIGRlZmF1bHRTdHlsZXMgPSB7XG4gIGNsZWFySW5kaWNhdG9yOiBjbGVhckluZGljYXRvckNTUyxcbiAgY29udGFpbmVyOiBjb250YWluZXJDU1MsXG4gIGNvbnRyb2w6IGNzcyxcbiAgZHJvcGRvd25JbmRpY2F0b3I6IGRyb3Bkb3duSW5kaWNhdG9yQ1NTLFxuICBncm91cDogZ3JvdXBDU1MsXG4gIGdyb3VwSGVhZGluZzogZ3JvdXBIZWFkaW5nQ1NTLFxuICBpbmRpY2F0b3JzQ29udGFpbmVyOiBpbmRpY2F0b3JzQ29udGFpbmVyQ1NTLFxuICBpbmRpY2F0b3JTZXBhcmF0b3I6IGluZGljYXRvclNlcGFyYXRvckNTUyxcbiAgaW5wdXQ6IGlucHV0Q1NTLFxuICBsb2FkaW5nSW5kaWNhdG9yOiBsb2FkaW5nSW5kaWNhdG9yQ1NTLFxuICBsb2FkaW5nTWVzc2FnZTogbG9hZGluZ01lc3NhZ2VDU1MsXG4gIG1lbnU6IG1lbnVDU1MsXG4gIG1lbnVMaXN0OiBtZW51TGlzdENTUyxcbiAgbWVudVBvcnRhbDogbWVudVBvcnRhbENTUyxcbiAgbXVsdGlWYWx1ZTogbXVsdGlWYWx1ZUNTUyxcbiAgbXVsdGlWYWx1ZUxhYmVsOiBtdWx0aVZhbHVlTGFiZWxDU1MsXG4gIG11bHRpVmFsdWVSZW1vdmU6IG11bHRpVmFsdWVSZW1vdmVDU1MsXG4gIG5vT3B0aW9uc01lc3NhZ2U6IG5vT3B0aW9uc01lc3NhZ2VDU1MsXG4gIG9wdGlvbjogb3B0aW9uQ1NTLFxuICBwbGFjZWhvbGRlcjogcGxhY2Vob2xkZXJDU1MsXG4gIHNpbmdsZVZhbHVlOiBjc3MkMSxcbiAgdmFsdWVDb250YWluZXI6IHZhbHVlQ29udGFpbmVyQ1NTXG59OyAvLyBNZXJnZSBVdGlsaXR5XG4vLyBBbGxvd3MgY29uc3VtZXJzIHRvIGV4dGVuZCBhIGJhc2UgU2VsZWN0IHdpdGggYWRkaXRpb25hbCBzdHlsZXNcblxuZnVuY3Rpb24gbWVyZ2VTdHlsZXMoc291cmNlKSB7XG4gIHZhciB0YXJnZXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gIC8vIGluaXRpYWxpemUgd2l0aCBzb3VyY2Ugc3R5bGVzXG4gIHZhciBzdHlsZXMgPSBfb2JqZWN0U3ByZWFkKHt9LCBzb3VyY2UpOyAvLyBtYXNzYWdlIGluIHRhcmdldCBzdHlsZXNcblxuXG4gIE9iamVjdC5rZXlzKHRhcmdldCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKHNvdXJjZVtrZXldKSB7XG4gICAgICBzdHlsZXNba2V5XSA9IGZ1bmN0aW9uIChyc0NzcywgcHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldFtrZXldKHNvdXJjZVtrZXldKHJzQ3NzLCBwcm9wcyksIHByb3BzKTtcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc1trZXldID0gdGFyZ2V0W2tleV07XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHN0eWxlcztcbn1cblxudmFyIGNvbG9ycyA9IHtcbiAgcHJpbWFyeTogJyMyNjg0RkYnLFxuICBwcmltYXJ5NzU6ICcjNEM5QUZGJyxcbiAgcHJpbWFyeTUwOiAnI0IyRDRGRicsXG4gIHByaW1hcnkyNTogJyNERUVCRkYnLFxuICBkYW5nZXI6ICcjREUzNTBCJyxcbiAgZGFuZ2VyTGlnaHQ6ICcjRkZCREFEJyxcbiAgbmV1dHJhbDA6ICdoc2woMCwgMCUsIDEwMCUpJyxcbiAgbmV1dHJhbDU6ICdoc2woMCwgMCUsIDk1JSknLFxuICBuZXV0cmFsMTA6ICdoc2woMCwgMCUsIDkwJSknLFxuICBuZXV0cmFsMjA6ICdoc2woMCwgMCUsIDgwJSknLFxuICBuZXV0cmFsMzA6ICdoc2woMCwgMCUsIDcwJSknLFxuICBuZXV0cmFsNDA6ICdoc2woMCwgMCUsIDYwJSknLFxuICBuZXV0cmFsNTA6ICdoc2woMCwgMCUsIDUwJSknLFxuICBuZXV0cmFsNjA6ICdoc2woMCwgMCUsIDQwJSknLFxuICBuZXV0cmFsNzA6ICdoc2woMCwgMCUsIDMwJSknLFxuICBuZXV0cmFsODA6ICdoc2woMCwgMCUsIDIwJSknLFxuICBuZXV0cmFsOTA6ICdoc2woMCwgMCUsIDEwJSknXG59O1xudmFyIGJvcmRlclJhZGl1cyA9IDQ7IC8vIFVzZWQgdG8gY2FsY3VsYXRlIGNvbnNpc3RlbnQgbWFyZ2luL3BhZGRpbmcgb24gZWxlbWVudHNcblxudmFyIGJhc2VVbml0ID0gNDsgLy8gVGhlIG1pbmltdW0gaGVpZ2h0IG9mIHRoZSBjb250cm9sXG5cbnZhciBjb250cm9sSGVpZ2h0ID0gMzg7IC8vIFRoZSBhbW91bnQgb2Ygc3BhY2UgYmV0d2VlbiB0aGUgY29udHJvbCBhbmQgbWVudSAqL1xuXG52YXIgbWVudUd1dHRlciA9IGJhc2VVbml0ICogMjtcbnZhciBzcGFjaW5nID0ge1xuICBiYXNlVW5pdDogYmFzZVVuaXQsXG4gIGNvbnRyb2xIZWlnaHQ6IGNvbnRyb2xIZWlnaHQsXG4gIG1lbnVHdXR0ZXI6IG1lbnVHdXR0ZXJcbn07XG52YXIgZGVmYXVsdFRoZW1lID0ge1xuICBib3JkZXJSYWRpdXM6IGJvcmRlclJhZGl1cyxcbiAgY29sb3JzOiBjb2xvcnMsXG4gIHNwYWNpbmc6IHNwYWNpbmdcbn07XG5cbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIGJhY2tzcGFjZVJlbW92ZXNWYWx1ZTogdHJ1ZSxcbiAgYmx1cklucHV0T25TZWxlY3Q6IGlzVG91Y2hDYXBhYmxlKCksXG4gIGNhcHR1cmVNZW51U2Nyb2xsOiAhaXNUb3VjaENhcGFibGUoKSxcbiAgY2xvc2VNZW51T25TZWxlY3Q6IHRydWUsXG4gIGNsb3NlTWVudU9uU2Nyb2xsOiBmYWxzZSxcbiAgY29tcG9uZW50czoge30sXG4gIGNvbnRyb2xTaG91bGRSZW5kZXJWYWx1ZTogdHJ1ZSxcbiAgZXNjYXBlQ2xlYXJzVmFsdWU6IGZhbHNlLFxuICBmaWx0ZXJPcHRpb246IGNyZWF0ZUZpbHRlcigpLFxuICBmb3JtYXRHcm91cExhYmVsOiBmb3JtYXRHcm91cExhYmVsLFxuICBnZXRPcHRpb25MYWJlbDogZ2V0T3B0aW9uTGFiZWwsXG4gIGdldE9wdGlvblZhbHVlOiBnZXRPcHRpb25WYWx1ZSxcbiAgaXNEaXNhYmxlZDogZmFsc2UsXG4gIGlzTG9hZGluZzogZmFsc2UsXG4gIGlzTXVsdGk6IGZhbHNlLFxuICBpc1J0bDogZmFsc2UsXG4gIGlzU2VhcmNoYWJsZTogdHJ1ZSxcbiAgaXNPcHRpb25EaXNhYmxlZDogaXNPcHRpb25EaXNhYmxlZCxcbiAgbG9hZGluZ01lc3NhZ2U6IGZ1bmN0aW9uIGxvYWRpbmdNZXNzYWdlKCkge1xuICAgIHJldHVybiAnTG9hZGluZy4uLic7XG4gIH0sXG4gIG1heE1lbnVIZWlnaHQ6IDMwMCxcbiAgbWluTWVudUhlaWdodDogMTQwLFxuICBtZW51SXNPcGVuOiBmYWxzZSxcbiAgbWVudVBsYWNlbWVudDogJ2JvdHRvbScsXG4gIG1lbnVQb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgbWVudVNob3VsZEJsb2NrU2Nyb2xsOiBmYWxzZSxcbiAgbWVudVNob3VsZFNjcm9sbEludG9WaWV3OiAhaXNNb2JpbGVEZXZpY2UoKSxcbiAgbm9PcHRpb25zTWVzc2FnZTogZnVuY3Rpb24gbm9PcHRpb25zTWVzc2FnZSgpIHtcbiAgICByZXR1cm4gJ05vIG9wdGlvbnMnO1xuICB9LFxuICBvcGVuTWVudU9uRm9jdXM6IGZhbHNlLFxuICBvcGVuTWVudU9uQ2xpY2s6IHRydWUsXG4gIG9wdGlvbnM6IFtdLFxuICBwYWdlU2l6ZTogNSxcbiAgcGxhY2Vob2xkZXI6ICdTZWxlY3QuLi4nLFxuICBzY3JlZW5SZWFkZXJTdGF0dXM6IGZ1bmN0aW9uIHNjcmVlblJlYWRlclN0YXR1cyhfcmVmKSB7XG4gICAgdmFyIGNvdW50ID0gX3JlZi5jb3VudDtcbiAgICByZXR1cm4gXCJcIi5jb25jYXQoY291bnQsIFwiIHJlc3VsdFwiKS5jb25jYXQoY291bnQgIT09IDEgPyAncycgOiAnJywgXCIgYXZhaWxhYmxlXCIpO1xuICB9LFxuICBzdHlsZXM6IHt9LFxuICB0YWJJbmRleDogJzAnLFxuICB0YWJTZWxlY3RzVmFsdWU6IHRydWVcbn07XG52YXIgaW5zdGFuY2VJZCA9IDE7XG5cbnZhciBTZWxlY3QgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFNlbGVjdCwgX0NvbXBvbmVudCk7XG5cbiAgLy8gTWlzYy4gSW5zdGFuY2UgUHJvcGVydGllc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gVE9ET1xuICAvLyBSZWZzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBMaWZlY3ljbGVcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIGZ1bmN0aW9uIFNlbGVjdChfcHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2VsZWN0KTtcblxuICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFNlbGVjdCkuY2FsbCh0aGlzLCBfcHJvcHMpKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJzdGF0ZVwiLCB7XG4gICAgICBhcmlhTGl2ZVNlbGVjdGlvbjogJycsXG4gICAgICBhcmlhTGl2ZUNvbnRleHQ6ICcnLFxuICAgICAgZm9jdXNlZE9wdGlvbjogbnVsbCxcbiAgICAgIGZvY3VzZWRWYWx1ZTogbnVsbCxcbiAgICAgIGlucHV0SXNIaWRkZW46IGZhbHNlLFxuICAgICAgaXNGb2N1c2VkOiBmYWxzZSxcbiAgICAgIG1lbnVPcHRpb25zOiB7XG4gICAgICAgIHJlbmRlcjogW10sXG4gICAgICAgIGZvY3VzYWJsZTogW11cbiAgICAgIH0sXG4gICAgICBzZWxlY3RWYWx1ZTogW11cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJibG9ja09wdGlvbkhvdmVyXCIsIGZhbHNlKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJpc0NvbXBvc2luZ1wiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiY2xlYXJGb2N1c1ZhbHVlT25VcGRhdGVcIiwgZmFsc2UpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcImNvbW1vblByb3BzXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiY29tcG9uZW50c1wiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcImhhc0dyb3Vwc1wiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiaW5pdGlhbFRvdWNoWFwiLCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJpbml0aWFsVG91Y2hZXCIsIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcImlucHV0SXNIaWRkZW5BZnRlclVwZGF0ZVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcImluc3RhbmNlUHJlZml4XCIsICcnKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvcGVuQWZ0ZXJGb2N1c1wiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwic2Nyb2xsVG9Gb2N1c2VkT3B0aW9uT25VcGRhdGVcIiwgZmFsc2UpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcInVzZXJJc0RyYWdnaW5nXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiY29udHJvbFJlZlwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJnZXRDb250cm9sUmVmXCIsIGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgIF90aGlzLmNvbnRyb2xSZWYgPSByZWY7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiZm9jdXNlZE9wdGlvblJlZlwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJnZXRGb2N1c2VkT3B0aW9uUmVmXCIsIGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgIF90aGlzLmZvY3VzZWRPcHRpb25SZWYgPSByZWY7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwibWVudUxpc3RSZWZcIiwgbnVsbCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiZ2V0TWVudUxpc3RSZWZcIiwgZnVuY3Rpb24gKHJlZikge1xuICAgICAgX3RoaXMubWVudUxpc3RSZWYgPSByZWY7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiaW5wdXRSZWZcIiwgbnVsbCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiZ2V0SW5wdXRSZWZcIiwgZnVuY3Rpb24gKHJlZikge1xuICAgICAgX3RoaXMuaW5wdXRSZWYgPSByZWY7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiY2FjaGVDb21wb25lbnRzXCIsIGZ1bmN0aW9uIChjb21wb25lbnRzKSB7XG4gICAgICBfdGhpcy5jb21wb25lbnRzID0gZGVmYXVsdENvbXBvbmVudHMoe1xuICAgICAgICBjb21wb25lbnRzOiBjb21wb25lbnRzXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJmb2N1c1wiLCBfdGhpcy5mb2N1c0lucHV0KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJibHVyXCIsIF90aGlzLmJsdXJJbnB1dCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwib25DaGFuZ2VcIiwgZnVuY3Rpb24gKG5ld1ZhbHVlLCBhY3Rpb25NZXRhKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBvbkNoYW5nZSA9IF90aGlzJHByb3BzLm9uQ2hhbmdlLFxuICAgICAgICAgIG5hbWUgPSBfdGhpcyRwcm9wcy5uYW1lO1xuICAgICAgb25DaGFuZ2UobmV3VmFsdWUsIF9vYmplY3RTcHJlYWQoe30sIGFjdGlvbk1ldGEsIHtcbiAgICAgICAgbmFtZTogbmFtZVxuICAgICAgfSkpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcInNldFZhbHVlXCIsIGZ1bmN0aW9uIChuZXdWYWx1ZSkge1xuICAgICAgdmFyIGFjdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJ3NldC12YWx1ZSc7XG4gICAgICB2YXIgb3B0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQ7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgY2xvc2VNZW51T25TZWxlY3QgPSBfdGhpcyRwcm9wczIuY2xvc2VNZW51T25TZWxlY3QsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzMi5pc011bHRpO1xuXG4gICAgICBfdGhpcy5vbklucHV0Q2hhbmdlKCcnLCB7XG4gICAgICAgIGFjdGlvbjogJ3NldC12YWx1ZSdcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoY2xvc2VNZW51T25TZWxlY3QpIHtcbiAgICAgICAgX3RoaXMuaW5wdXRJc0hpZGRlbkFmdGVyVXBkYXRlID0gIWlzTXVsdGk7XG5cbiAgICAgICAgX3RoaXMub25NZW51Q2xvc2UoKTtcbiAgICAgIH0gLy8gd2hlbiB0aGUgc2VsZWN0IHZhbHVlIHNob3VsZCBjaGFuZ2UsIHdlIHNob3VsZCByZXNldCBmb2N1c2VkVmFsdWVcblxuXG4gICAgICBfdGhpcy5jbGVhckZvY3VzVmFsdWVPblVwZGF0ZSA9IHRydWU7XG5cbiAgICAgIF90aGlzLm9uQ2hhbmdlKG5ld1ZhbHVlLCB7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBvcHRpb246IG9wdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwic2VsZWN0T3B0aW9uXCIsIGZ1bmN0aW9uIChuZXdWYWx1ZSkge1xuICAgICAgdmFyIF90aGlzJHByb3BzMyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGJsdXJJbnB1dE9uU2VsZWN0ID0gX3RoaXMkcHJvcHMzLmJsdXJJbnB1dE9uU2VsZWN0LFxuICAgICAgICAgIGlzTXVsdGkgPSBfdGhpcyRwcm9wczMuaXNNdWx0aTtcbiAgICAgIHZhciBzZWxlY3RWYWx1ZSA9IF90aGlzLnN0YXRlLnNlbGVjdFZhbHVlO1xuXG4gICAgICBpZiAoaXNNdWx0aSkge1xuICAgICAgICBpZiAoX3RoaXMuaXNPcHRpb25TZWxlY3RlZChuZXdWYWx1ZSwgc2VsZWN0VmFsdWUpKSB7XG4gICAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IF90aGlzLmdldE9wdGlvblZhbHVlKG5ld1ZhbHVlKTtcblxuICAgICAgICAgIF90aGlzLnNldFZhbHVlKHNlbGVjdFZhbHVlLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLmdldE9wdGlvblZhbHVlKGkpICE9PSBjYW5kaWRhdGU7XG4gICAgICAgICAgfSksICdkZXNlbGVjdC1vcHRpb24nLCBuZXdWYWx1ZSk7XG5cbiAgICAgICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgICAgIGV2ZW50OiAnZGVzZWxlY3Qtb3B0aW9uJyxcbiAgICAgICAgICAgIGNvbnRleHQ6IHtcbiAgICAgICAgICAgICAgdmFsdWU6IF90aGlzLmdldE9wdGlvbkxhYmVsKG5ld1ZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICghX3RoaXMuaXNPcHRpb25EaXNhYmxlZChuZXdWYWx1ZSwgc2VsZWN0VmFsdWUpKSB7XG4gICAgICAgICAgICBfdGhpcy5zZXRWYWx1ZShbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHNlbGVjdFZhbHVlKSwgW25ld1ZhbHVlXSksICdzZWxlY3Qtb3B0aW9uJywgbmV3VmFsdWUpO1xuXG4gICAgICAgICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgICAgICAgZXZlbnQ6ICdzZWxlY3Qtb3B0aW9uJyxcbiAgICAgICAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBfdGhpcy5nZXRPcHRpb25MYWJlbChuZXdWYWx1ZSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGFubm91bmNlIHRoYXQgb3B0aW9uIGlzIGRpc2FibGVkXG4gICAgICAgICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgICAgICAgZXZlbnQ6ICdzZWxlY3Qtb3B0aW9uJyxcbiAgICAgICAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBfdGhpcy5nZXRPcHRpb25MYWJlbChuZXdWYWx1ZSksXG4gICAgICAgICAgICAgICAgaXNEaXNhYmxlZDogdHJ1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghX3RoaXMuaXNPcHRpb25EaXNhYmxlZChuZXdWYWx1ZSwgc2VsZWN0VmFsdWUpKSB7XG4gICAgICAgICAgX3RoaXMuc2V0VmFsdWUobmV3VmFsdWUsICdzZWxlY3Qtb3B0aW9uJyk7XG5cbiAgICAgICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgICAgIGV2ZW50OiAnc2VsZWN0LW9wdGlvbicsXG4gICAgICAgICAgICBjb250ZXh0OiB7XG4gICAgICAgICAgICAgIHZhbHVlOiBfdGhpcy5nZXRPcHRpb25MYWJlbChuZXdWYWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBhbm5vdW5jZSB0aGF0IG9wdGlvbiBpcyBkaXNhYmxlZFxuICAgICAgICAgIF90aGlzLmFubm91bmNlQXJpYUxpdmVTZWxlY3Rpb24oe1xuICAgICAgICAgICAgZXZlbnQ6ICdzZWxlY3Qtb3B0aW9uJyxcbiAgICAgICAgICAgIGNvbnRleHQ6IHtcbiAgICAgICAgICAgICAgdmFsdWU6IF90aGlzLmdldE9wdGlvbkxhYmVsKG5ld1ZhbHVlKSxcbiAgICAgICAgICAgICAgaXNEaXNhYmxlZDogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChibHVySW5wdXRPblNlbGVjdCkge1xuICAgICAgICBfdGhpcy5ibHVySW5wdXQoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJyZW1vdmVWYWx1ZVwiLCBmdW5jdGlvbiAocmVtb3ZlZFZhbHVlKSB7XG4gICAgICB2YXIgc2VsZWN0VmFsdWUgPSBfdGhpcy5zdGF0ZS5zZWxlY3RWYWx1ZTtcblxuICAgICAgdmFyIGNhbmRpZGF0ZSA9IF90aGlzLmdldE9wdGlvblZhbHVlKHJlbW92ZWRWYWx1ZSk7XG5cbiAgICAgIHZhciBuZXdWYWx1ZSA9IHNlbGVjdFZhbHVlLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gX3RoaXMuZ2V0T3B0aW9uVmFsdWUoaSkgIT09IGNhbmRpZGF0ZTtcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy5vbkNoYW5nZShuZXdWYWx1ZS5sZW5ndGggPyBuZXdWYWx1ZSA6IG51bGwsIHtcbiAgICAgICAgYWN0aW9uOiAncmVtb3ZlLXZhbHVlJyxcbiAgICAgICAgcmVtb3ZlZFZhbHVlOiByZW1vdmVkVmFsdWVcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgZXZlbnQ6ICdyZW1vdmUtdmFsdWUnLFxuICAgICAgICBjb250ZXh0OiB7XG4gICAgICAgICAgdmFsdWU6IHJlbW92ZWRWYWx1ZSA/IF90aGlzLmdldE9wdGlvbkxhYmVsKHJlbW92ZWRWYWx1ZSkgOiAnJ1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgX3RoaXMuZm9jdXNJbnB1dCgpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcImNsZWFyVmFsdWVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGlzTXVsdGkgPSBfdGhpcy5wcm9wcy5pc011bHRpO1xuXG4gICAgICBfdGhpcy5vbkNoYW5nZShpc011bHRpID8gW10gOiBudWxsLCB7XG4gICAgICAgIGFjdGlvbjogJ2NsZWFyJ1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwicG9wVmFsdWVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHNlbGVjdFZhbHVlID0gX3RoaXMuc3RhdGUuc2VsZWN0VmFsdWU7XG4gICAgICB2YXIgbGFzdFNlbGVjdGVkVmFsdWUgPSBzZWxlY3RWYWx1ZVtzZWxlY3RWYWx1ZS5sZW5ndGggLSAxXTtcbiAgICAgIHZhciBuZXdWYWx1ZSA9IHNlbGVjdFZhbHVlLnNsaWNlKDAsIHNlbGVjdFZhbHVlLmxlbmd0aCAtIDEpO1xuXG4gICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgZXZlbnQ6ICdwb3AtdmFsdWUnLFxuICAgICAgICBjb250ZXh0OiB7XG4gICAgICAgICAgdmFsdWU6IGxhc3RTZWxlY3RlZFZhbHVlID8gX3RoaXMuZ2V0T3B0aW9uTGFiZWwobGFzdFNlbGVjdGVkVmFsdWUpIDogJydcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIF90aGlzLm9uQ2hhbmdlKG5ld1ZhbHVlLmxlbmd0aCA/IG5ld1ZhbHVlIDogbnVsbCwge1xuICAgICAgICBhY3Rpb246ICdwb3AtdmFsdWUnLFxuICAgICAgICByZW1vdmVkVmFsdWU6IGxhc3RTZWxlY3RlZFZhbHVlXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJnZXRPcHRpb25MYWJlbFwiLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgcmV0dXJuIF90aGlzLnByb3BzLmdldE9wdGlvbkxhYmVsKGRhdGEpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcImdldE9wdGlvblZhbHVlXCIsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4gX3RoaXMucHJvcHMuZ2V0T3B0aW9uVmFsdWUoZGF0YSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiZ2V0U3R5bGVzXCIsIGZ1bmN0aW9uIChrZXksIHByb3BzKSB7XG4gICAgICB2YXIgYmFzZSA9IGRlZmF1bHRTdHlsZXNba2V5XShwcm9wcyk7XG4gICAgICBiYXNlLmJveFNpemluZyA9ICdib3JkZXItYm94JztcbiAgICAgIHZhciBjdXN0b20gPSBfdGhpcy5wcm9wcy5zdHlsZXNba2V5XTtcbiAgICAgIHJldHVybiBjdXN0b20gPyBjdXN0b20oYmFzZSwgcHJvcHMpIDogYmFzZTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJnZXRFbGVtZW50SWRcIiwgZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBcIlwiLmNvbmNhdChfdGhpcy5pbnN0YW5jZVByZWZpeCwgXCItXCIpLmNvbmNhdChlbGVtZW50KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJnZXRBY3RpdmVEZXNjZW5kZW50SWRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIG1lbnVJc09wZW4gPSBfdGhpcy5wcm9wcy5tZW51SXNPcGVuO1xuICAgICAgdmFyIF90aGlzJHN0YXRlID0gX3RoaXMuc3RhdGUsXG4gICAgICAgICAgbWVudU9wdGlvbnMgPSBfdGhpcyRzdGF0ZS5tZW51T3B0aW9ucyxcbiAgICAgICAgICBmb2N1c2VkT3B0aW9uID0gX3RoaXMkc3RhdGUuZm9jdXNlZE9wdGlvbjtcbiAgICAgIGlmICghZm9jdXNlZE9wdGlvbiB8fCAhbWVudUlzT3BlbikgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIHZhciBpbmRleCA9IG1lbnVPcHRpb25zLmZvY3VzYWJsZS5pbmRleE9mKGZvY3VzZWRPcHRpb24pO1xuICAgICAgdmFyIG9wdGlvbiA9IG1lbnVPcHRpb25zLnJlbmRlcltpbmRleF07XG4gICAgICByZXR1cm4gb3B0aW9uICYmIG9wdGlvbi5rZXk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiYW5ub3VuY2VBcmlhTGl2ZVNlbGVjdGlvblwiLCBmdW5jdGlvbiAoX3JlZjIpIHtcbiAgICAgIHZhciBldmVudCA9IF9yZWYyLmV2ZW50LFxuICAgICAgICAgIGNvbnRleHQgPSBfcmVmMi5jb250ZXh0O1xuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGFyaWFMaXZlU2VsZWN0aW9uOiB2YWx1ZUV2ZW50QXJpYU1lc3NhZ2UoZXZlbnQsIGNvbnRleHQpXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJhbm5vdW5jZUFyaWFMaXZlQ29udGV4dFwiLCBmdW5jdGlvbiAoX3JlZjMpIHtcbiAgICAgIHZhciBldmVudCA9IF9yZWYzLmV2ZW50LFxuICAgICAgICAgIGNvbnRleHQgPSBfcmVmMy5jb250ZXh0O1xuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGFyaWFMaXZlQ29udGV4dDogaW5zdHJ1Y3Rpb25zQXJpYU1lc3NhZ2UoZXZlbnQsIF9vYmplY3RTcHJlYWQoe30sIGNvbnRleHQsIHtcbiAgICAgICAgICBsYWJlbDogX3RoaXMucHJvcHNbJ2FyaWEtbGFiZWwnXVxuICAgICAgICB9KSlcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcIm9uTWVudU1vdXNlRG93blwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC5idXR0b24gIT09IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIF90aGlzLmZvY3VzSW5wdXQoKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbk1lbnVNb3VzZU1vdmVcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBfdGhpcy5ibG9ja09wdGlvbkhvdmVyID0gZmFsc2U7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwib25Db250cm9sTW91c2VEb3duXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgdmFyIG9wZW5NZW51T25DbGljayA9IF90aGlzLnByb3BzLm9wZW5NZW51T25DbGljaztcblxuICAgICAgaWYgKCFfdGhpcy5zdGF0ZS5pc0ZvY3VzZWQpIHtcbiAgICAgICAgaWYgKG9wZW5NZW51T25DbGljaykge1xuICAgICAgICAgIF90aGlzLm9wZW5BZnRlckZvY3VzID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzLmZvY3VzSW5wdXQoKTtcbiAgICAgIH0gZWxzZSBpZiAoIV90aGlzLnByb3BzLm1lbnVJc09wZW4pIHtcbiAgICAgICAgaWYgKG9wZW5NZW51T25DbGljaykge1xuICAgICAgICAgIF90aGlzLm9wZW5NZW51KCdmaXJzdCcpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyRGbG93Rml4TWVcbiAgICAgICAgaWYgKGV2ZW50LnRhcmdldC50YWdOYW1lICE9PSAnSU5QVVQnKSB7XG4gICAgICAgICAgX3RoaXMub25NZW51Q2xvc2UoKTtcbiAgICAgICAgfVxuICAgICAgfSAvLyRGbG93Rml4TWVcblxuXG4gICAgICBpZiAoZXZlbnQudGFyZ2V0LnRhZ05hbWUgIT09ICdJTlBVVCcpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbkRyb3Bkb3duSW5kaWNhdG9yTW91c2VEb3duXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgLy8gaWdub3JlIG1vdXNlIGV2ZW50cyB0aGF0IHdlcmVuJ3QgdHJpZ2dlcmVkIGJ5IHRoZSBwcmltYXJ5IGJ1dHRvblxuICAgICAgaWYgKGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICdtb3VzZWRvd24nICYmIGV2ZW50LmJ1dHRvbiAhPT0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChfdGhpcy5wcm9wcy5pc0Rpc2FibGVkKSByZXR1cm47XG4gICAgICB2YXIgX3RoaXMkcHJvcHM0ID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzNC5pc011bHRpLFxuICAgICAgICAgIG1lbnVJc09wZW4gPSBfdGhpcyRwcm9wczQubWVudUlzT3BlbjtcblxuICAgICAgX3RoaXMuZm9jdXNJbnB1dCgpO1xuXG4gICAgICBpZiAobWVudUlzT3Blbikge1xuICAgICAgICBfdGhpcy5pbnB1dElzSGlkZGVuQWZ0ZXJVcGRhdGUgPSAhaXNNdWx0aTtcblxuICAgICAgICBfdGhpcy5vbk1lbnVDbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMub3Blbk1lbnUoJ2ZpcnN0Jyk7XG4gICAgICB9XG5cbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbkNsZWFySW5kaWNhdG9yTW91c2VEb3duXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgLy8gaWdub3JlIG1vdXNlIGV2ZW50cyB0aGF0IHdlcmVuJ3QgdHJpZ2dlcmVkIGJ5IHRoZSBwcmltYXJ5IGJ1dHRvblxuICAgICAgaWYgKGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICdtb3VzZWRvd24nICYmIGV2ZW50LmJ1dHRvbiAhPT0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIF90aGlzLmNsZWFyVmFsdWUoKTtcblxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICBfdGhpcy5vcGVuQWZ0ZXJGb2N1cyA9IGZhbHNlO1xuXG4gICAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ3RvdWNoZW5kJykge1xuICAgICAgICBfdGhpcy5mb2N1c0lucHV0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMuZm9jdXNJbnB1dCgpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvblNjcm9sbFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmICh0eXBlb2YgX3RoaXMucHJvcHMuY2xvc2VNZW51T25TY3JvbGwgPT09ICdib29sZWFuJykge1xuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgJiYgaXNEb2N1bWVudEVsZW1lbnQoZXZlbnQudGFyZ2V0KSkge1xuICAgICAgICAgIF90aGlzLnByb3BzLm9uTWVudUNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIF90aGlzLnByb3BzLmNsb3NlTWVudU9uU2Nyb2xsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGlmIChfdGhpcy5wcm9wcy5jbG9zZU1lbnVPblNjcm9sbChldmVudCkpIHtcbiAgICAgICAgICBfdGhpcy5wcm9wcy5vbk1lbnVDbG9zZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwib25Db21wb3NpdGlvblN0YXJ0XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLmlzQ29tcG9zaW5nID0gdHJ1ZTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbkNvbXBvc2l0aW9uRW5kXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLmlzQ29tcG9zaW5nID0gZmFsc2U7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwib25Ub3VjaFN0YXJ0XCIsIGZ1bmN0aW9uIChfcmVmNCkge1xuICAgICAgdmFyIHRvdWNoZXMgPSBfcmVmNC50b3VjaGVzO1xuICAgICAgdmFyIHRvdWNoID0gdG91Y2hlcy5pdGVtKDApO1xuXG4gICAgICBpZiAoIXRvdWNoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuaW5pdGlhbFRvdWNoWCA9IHRvdWNoLmNsaWVudFg7XG4gICAgICBfdGhpcy5pbml0aWFsVG91Y2hZID0gdG91Y2guY2xpZW50WTtcbiAgICAgIF90aGlzLnVzZXJJc0RyYWdnaW5nID0gZmFsc2U7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwib25Ub3VjaE1vdmVcIiwgZnVuY3Rpb24gKF9yZWY1KSB7XG4gICAgICB2YXIgdG91Y2hlcyA9IF9yZWY1LnRvdWNoZXM7XG4gICAgICB2YXIgdG91Y2ggPSB0b3VjaGVzLml0ZW0oMCk7XG5cbiAgICAgIGlmICghdG91Y2gpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgZGVsdGFYID0gTWF0aC5hYnModG91Y2guY2xpZW50WCAtIF90aGlzLmluaXRpYWxUb3VjaFgpO1xuICAgICAgdmFyIGRlbHRhWSA9IE1hdGguYWJzKHRvdWNoLmNsaWVudFkgLSBfdGhpcy5pbml0aWFsVG91Y2hZKTtcbiAgICAgIHZhciBtb3ZlVGhyZXNob2xkID0gNTtcbiAgICAgIF90aGlzLnVzZXJJc0RyYWdnaW5nID0gZGVsdGFYID4gbW92ZVRocmVzaG9sZCB8fCBkZWx0YVkgPiBtb3ZlVGhyZXNob2xkO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcIm9uVG91Y2hFbmRcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoX3RoaXMudXNlcklzRHJhZ2dpbmcpIHJldHVybjsgLy8gY2xvc2UgdGhlIG1lbnUgaWYgdGhlIHVzZXIgdGFwcyBvdXRzaWRlXG4gICAgICAvLyB3ZSdyZSBjaGVja2luZyBvbiBldmVudC50YXJnZXQgaGVyZSBpbnN0ZWFkIG9mIGV2ZW50LmN1cnJlbnRUYXJnZXQsIGJlY2F1c2Ugd2Ugd2FudCB0byBhc3NlcnQgaW5mb3JtYXRpb25cbiAgICAgIC8vIG9uIGV2ZW50cyBvbiBjaGlsZCBlbGVtZW50cywgbm90IHRoZSBkb2N1bWVudCAod2hpY2ggd2UndmUgYXR0YWNoZWQgdGhpcyBoYW5kbGVyIHRvKS5cblxuICAgICAgaWYgKF90aGlzLmNvbnRyb2xSZWYgJiYgIV90aGlzLmNvbnRyb2xSZWYuY29udGFpbnMoZXZlbnQudGFyZ2V0KSAmJiBfdGhpcy5tZW51TGlzdFJlZiAmJiAhX3RoaXMubWVudUxpc3RSZWYuY29udGFpbnMoZXZlbnQudGFyZ2V0KSkge1xuICAgICAgICBfdGhpcy5ibHVySW5wdXQoKTtcbiAgICAgIH0gLy8gcmVzZXQgbW92ZSB2YXJzXG5cblxuICAgICAgX3RoaXMuaW5pdGlhbFRvdWNoWCA9IDA7XG4gICAgICBfdGhpcy5pbml0aWFsVG91Y2hZID0gMDtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbkNvbnRyb2xUb3VjaEVuZFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChfdGhpcy51c2VySXNEcmFnZ2luZykgcmV0dXJuO1xuXG4gICAgICBfdGhpcy5vbkNvbnRyb2xNb3VzZURvd24oZXZlbnQpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcIm9uQ2xlYXJJbmRpY2F0b3JUb3VjaEVuZFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChfdGhpcy51c2VySXNEcmFnZ2luZykgcmV0dXJuO1xuXG4gICAgICBfdGhpcy5vbkNsZWFySW5kaWNhdG9yTW91c2VEb3duKGV2ZW50KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbkRyb3Bkb3duSW5kaWNhdG9yVG91Y2hFbmRcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoX3RoaXMudXNlcklzRHJhZ2dpbmcpIHJldHVybjtcblxuICAgICAgX3RoaXMub25Ecm9wZG93bkluZGljYXRvck1vdXNlRG93bihldmVudCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwiaGFuZGxlSW5wdXRDaGFuZ2VcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICB2YXIgaW5wdXRWYWx1ZSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWU7XG4gICAgICBfdGhpcy5pbnB1dElzSGlkZGVuQWZ0ZXJVcGRhdGUgPSBmYWxzZTtcblxuICAgICAgX3RoaXMub25JbnB1dENoYW5nZShpbnB1dFZhbHVlLCB7XG4gICAgICAgIGFjdGlvbjogJ2lucHV0LWNoYW5nZSdcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy5vbk1lbnVPcGVuKCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwib25JbnB1dEZvY3VzXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgdmFyIF90aGlzJHByb3BzNSA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGlzU2VhcmNoYWJsZSA9IF90aGlzJHByb3BzNS5pc1NlYXJjaGFibGUsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzNS5pc011bHRpO1xuXG4gICAgICBpZiAoX3RoaXMucHJvcHMub25Gb2N1cykge1xuICAgICAgICBfdGhpcy5wcm9wcy5vbkZvY3VzKGV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuaW5wdXRJc0hpZGRlbkFmdGVyVXBkYXRlID0gZmFsc2U7XG5cbiAgICAgIF90aGlzLmFubm91bmNlQXJpYUxpdmVDb250ZXh0KHtcbiAgICAgICAgZXZlbnQ6ICdpbnB1dCcsXG4gICAgICAgIGNvbnRleHQ6IHtcbiAgICAgICAgICBpc1NlYXJjaGFibGU6IGlzU2VhcmNoYWJsZSxcbiAgICAgICAgICBpc011bHRpOiBpc011bHRpXG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzRm9jdXNlZDogdHJ1ZVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChfdGhpcy5vcGVuQWZ0ZXJGb2N1cyB8fCBfdGhpcy5wcm9wcy5vcGVuTWVudU9uRm9jdXMpIHtcbiAgICAgICAgX3RoaXMub3Blbk1lbnUoJ2ZpcnN0Jyk7XG4gICAgICB9XG5cbiAgICAgIF90aGlzLm9wZW5BZnRlckZvY3VzID0gZmFsc2U7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwib25JbnB1dEJsdXJcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoX3RoaXMubWVudUxpc3RSZWYgJiYgX3RoaXMubWVudUxpc3RSZWYuY29udGFpbnMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkpIHtcbiAgICAgICAgX3RoaXMuaW5wdXRSZWYuZm9jdXMoKTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkJsdXIpIHtcbiAgICAgICAgX3RoaXMucHJvcHMub25CbHVyKGV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMub25JbnB1dENoYW5nZSgnJywge1xuICAgICAgICBhY3Rpb246ICdpbnB1dC1ibHVyJ1xuICAgICAgfSk7XG5cbiAgICAgIF90aGlzLm9uTWVudUNsb3NlKCk7XG5cbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZm9jdXNlZFZhbHVlOiBudWxsLFxuICAgICAgICBpc0ZvY3VzZWQ6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbk9wdGlvbkhvdmVyXCIsIGZ1bmN0aW9uIChmb2N1c2VkT3B0aW9uKSB7XG4gICAgICBpZiAoX3RoaXMuYmxvY2tPcHRpb25Ib3ZlciB8fCBfdGhpcy5zdGF0ZS5mb2N1c2VkT3B0aW9uID09PSBmb2N1c2VkT3B0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBmb2N1c2VkT3B0aW9uOiBmb2N1c2VkT3B0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJzaG91bGRIaWRlU2VsZWN0ZWRPcHRpb25zXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczYgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBoaWRlU2VsZWN0ZWRPcHRpb25zID0gX3RoaXMkcHJvcHM2LmhpZGVTZWxlY3RlZE9wdGlvbnMsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzNi5pc011bHRpO1xuICAgICAgaWYgKGhpZGVTZWxlY3RlZE9wdGlvbnMgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGlzTXVsdGk7XG4gICAgICByZXR1cm4gaGlkZVNlbGVjdGVkT3B0aW9ucztcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbktleURvd25cIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHM3ID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzNy5pc011bHRpLFxuICAgICAgICAgIGJhY2tzcGFjZVJlbW92ZXNWYWx1ZSA9IF90aGlzJHByb3BzNy5iYWNrc3BhY2VSZW1vdmVzVmFsdWUsXG4gICAgICAgICAgZXNjYXBlQ2xlYXJzVmFsdWUgPSBfdGhpcyRwcm9wczcuZXNjYXBlQ2xlYXJzVmFsdWUsXG4gICAgICAgICAgaW5wdXRWYWx1ZSA9IF90aGlzJHByb3BzNy5pbnB1dFZhbHVlLFxuICAgICAgICAgIGlzQ2xlYXJhYmxlID0gX3RoaXMkcHJvcHM3LmlzQ2xlYXJhYmxlLFxuICAgICAgICAgIGlzRGlzYWJsZWQgPSBfdGhpcyRwcm9wczcuaXNEaXNhYmxlZCxcbiAgICAgICAgICBtZW51SXNPcGVuID0gX3RoaXMkcHJvcHM3Lm1lbnVJc09wZW4sXG4gICAgICAgICAgb25LZXlEb3duID0gX3RoaXMkcHJvcHM3Lm9uS2V5RG93bixcbiAgICAgICAgICB0YWJTZWxlY3RzVmFsdWUgPSBfdGhpcyRwcm9wczcudGFiU2VsZWN0c1ZhbHVlLFxuICAgICAgICAgIG9wZW5NZW51T25Gb2N1cyA9IF90aGlzJHByb3BzNy5vcGVuTWVudU9uRm9jdXM7XG4gICAgICB2YXIgX3RoaXMkc3RhdGUyID0gX3RoaXMuc3RhdGUsXG4gICAgICAgICAgZm9jdXNlZE9wdGlvbiA9IF90aGlzJHN0YXRlMi5mb2N1c2VkT3B0aW9uLFxuICAgICAgICAgIGZvY3VzZWRWYWx1ZSA9IF90aGlzJHN0YXRlMi5mb2N1c2VkVmFsdWUsXG4gICAgICAgICAgc2VsZWN0VmFsdWUgPSBfdGhpcyRzdGF0ZTIuc2VsZWN0VmFsdWU7XG4gICAgICBpZiAoaXNEaXNhYmxlZCkgcmV0dXJuO1xuXG4gICAgICBpZiAodHlwZW9mIG9uS2V5RG93biA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBvbktleURvd24oZXZlbnQpO1xuXG4gICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9IC8vIEJsb2NrIG9wdGlvbiBob3ZlciBldmVudHMgd2hlbiB0aGUgdXNlciBoYXMganVzdCBwcmVzc2VkIGEga2V5XG5cblxuICAgICAgX3RoaXMuYmxvY2tPcHRpb25Ib3ZlciA9IHRydWU7XG5cbiAgICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7XG4gICAgICAgIGNhc2UgJ0Fycm93TGVmdCc6XG4gICAgICAgICAgaWYgKCFpc011bHRpIHx8IGlucHV0VmFsdWUpIHJldHVybjtcblxuICAgICAgICAgIF90aGlzLmZvY3VzVmFsdWUoJ3ByZXZpb3VzJyk7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdBcnJvd1JpZ2h0JzpcbiAgICAgICAgICBpZiAoIWlzTXVsdGkgfHwgaW5wdXRWYWx1ZSkgcmV0dXJuO1xuXG4gICAgICAgICAgX3RoaXMuZm9jdXNWYWx1ZSgnbmV4dCcpO1xuXG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnRGVsZXRlJzpcbiAgICAgICAgY2FzZSAnQmFja3NwYWNlJzpcbiAgICAgICAgICBpZiAoaW5wdXRWYWx1ZSkgcmV0dXJuO1xuXG4gICAgICAgICAgaWYgKGZvY3VzZWRWYWx1ZSkge1xuICAgICAgICAgICAgX3RoaXMucmVtb3ZlVmFsdWUoZm9jdXNlZFZhbHVlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFiYWNrc3BhY2VSZW1vdmVzVmFsdWUpIHJldHVybjtcblxuICAgICAgICAgICAgaWYgKGlzTXVsdGkpIHtcbiAgICAgICAgICAgICAgX3RoaXMucG9wVmFsdWUoKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNDbGVhcmFibGUpIHtcbiAgICAgICAgICAgICAgX3RoaXMuY2xlYXJWYWx1ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ1RhYic6XG4gICAgICAgICAgaWYgKF90aGlzLmlzQ29tcG9zaW5nKSByZXR1cm47XG5cbiAgICAgICAgICBpZiAoZXZlbnQuc2hpZnRLZXkgfHwgIW1lbnVJc09wZW4gfHwgIXRhYlNlbGVjdHNWYWx1ZSB8fCAhZm9jdXNlZE9wdGlvbiB8fCAvLyBkb24ndCBjYXB0dXJlIHRoZSBldmVudCBpZiB0aGUgbWVudSBvcGVucyBvbiBmb2N1cyBhbmQgdGhlIGZvY3VzZWRcbiAgICAgICAgICAvLyBvcHRpb24gaXMgYWxyZWFkeSBzZWxlY3RlZDsgaXQgYnJlYWtzIHRoZSBmbG93IG9mIG5hdmlnYXRpb25cbiAgICAgICAgICBvcGVuTWVudU9uRm9jdXMgJiYgX3RoaXMuaXNPcHRpb25TZWxlY3RlZChmb2N1c2VkT3B0aW9uLCBzZWxlY3RWYWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpcy5zZWxlY3RPcHRpb24oZm9jdXNlZE9wdGlvbik7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdFbnRlcic6XG4gICAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDIyOSkge1xuICAgICAgICAgICAgLy8gaWdub3JlIHRoZSBrZXlkb3duIGV2ZW50IGZyb20gYW4gSW5wdXQgTWV0aG9kIEVkaXRvcihJTUUpXG4gICAgICAgICAgICAvLyByZWYuIGh0dHBzOi8vd3d3LnczLm9yZy9UUi91aWV2ZW50cy8jZGV0ZXJtaW5lLWtleWRvd24ta2V5dXAta2V5Q29kZVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKG1lbnVJc09wZW4pIHtcbiAgICAgICAgICAgIGlmICghZm9jdXNlZE9wdGlvbikgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKF90aGlzLmlzQ29tcG9zaW5nKSByZXR1cm47XG5cbiAgICAgICAgICAgIF90aGlzLnNlbGVjdE9wdGlvbihmb2N1c2VkT3B0aW9uKTtcblxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIGNhc2UgJ0VzY2FwZSc6XG4gICAgICAgICAgaWYgKG1lbnVJc09wZW4pIHtcbiAgICAgICAgICAgIF90aGlzLmlucHV0SXNIaWRkZW5BZnRlclVwZGF0ZSA9IGZhbHNlO1xuXG4gICAgICAgICAgICBfdGhpcy5vbklucHV0Q2hhbmdlKCcnLCB7XG4gICAgICAgICAgICAgIGFjdGlvbjogJ21lbnUtY2xvc2UnXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgX3RoaXMub25NZW51Q2xvc2UoKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzQ2xlYXJhYmxlICYmIGVzY2FwZUNsZWFyc1ZhbHVlKSB7XG4gICAgICAgICAgICBfdGhpcy5jbGVhclZhbHVlKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnICc6XG4gICAgICAgICAgLy8gc3BhY2VcbiAgICAgICAgICBpZiAoaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghbWVudUlzT3Blbikge1xuICAgICAgICAgICAgX3RoaXMub3Blbk1lbnUoJ2ZpcnN0Jyk7XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghZm9jdXNlZE9wdGlvbikgcmV0dXJuO1xuXG4gICAgICAgICAgX3RoaXMuc2VsZWN0T3B0aW9uKGZvY3VzZWRPcHRpb24pO1xuXG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnQXJyb3dVcCc6XG4gICAgICAgICAgaWYgKG1lbnVJc09wZW4pIHtcbiAgICAgICAgICAgIF90aGlzLmZvY3VzT3B0aW9uKCd1cCcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfdGhpcy5vcGVuTWVudSgnbGFzdCcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ0Fycm93RG93bic6XG4gICAgICAgICAgaWYgKG1lbnVJc09wZW4pIHtcbiAgICAgICAgICAgIF90aGlzLmZvY3VzT3B0aW9uKCdkb3duJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF90aGlzLm9wZW5NZW51KCdmaXJzdCcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ1BhZ2VVcCc6XG4gICAgICAgICAgaWYgKCFtZW51SXNPcGVuKSByZXR1cm47XG5cbiAgICAgICAgICBfdGhpcy5mb2N1c09wdGlvbigncGFnZXVwJyk7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdQYWdlRG93bic6XG4gICAgICAgICAgaWYgKCFtZW51SXNPcGVuKSByZXR1cm47XG5cbiAgICAgICAgICBfdGhpcy5mb2N1c09wdGlvbigncGFnZWRvd24nKTtcblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ0hvbWUnOlxuICAgICAgICAgIGlmICghbWVudUlzT3BlbikgcmV0dXJuO1xuXG4gICAgICAgICAgX3RoaXMuZm9jdXNPcHRpb24oJ2ZpcnN0Jyk7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdFbmQnOlxuICAgICAgICAgIGlmICghbWVudUlzT3BlbikgcmV0dXJuO1xuXG4gICAgICAgICAgX3RoaXMuZm9jdXNPcHRpb24oJ2xhc3QnKTtcblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuXG4gICAgdmFyIHZhbHVlID0gX3Byb3BzLnZhbHVlO1xuICAgIF90aGlzLmNhY2hlQ29tcG9uZW50cyA9IG1lbW9pemVPbmUoX3RoaXMuY2FjaGVDb21wb25lbnRzLCBleHBvcnRlZEVxdWFsKS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpKTtcblxuICAgIF90aGlzLmNhY2hlQ29tcG9uZW50cyhfcHJvcHMuY29tcG9uZW50cyk7XG5cbiAgICBfdGhpcy5pbnN0YW5jZVByZWZpeCA9ICdyZWFjdC1zZWxlY3QtJyArIChfdGhpcy5wcm9wcy5pbnN0YW5jZUlkIHx8ICsraW5zdGFuY2VJZCk7XG5cbiAgICB2YXIgX3NlbGVjdFZhbHVlID0gY2xlYW5WYWx1ZSh2YWx1ZSk7XG5cbiAgICB2YXIgX21lbnVPcHRpb25zID0gX3Byb3BzLm1lbnVJc09wZW4gPyBfdGhpcy5idWlsZE1lbnVPcHRpb25zKF9wcm9wcywgX3NlbGVjdFZhbHVlKSA6IHtcbiAgICAgIHJlbmRlcjogW10sXG4gICAgICBmb2N1c2FibGU6IFtdXG4gICAgfTtcblxuICAgIF90aGlzLnN0YXRlLm1lbnVPcHRpb25zID0gX21lbnVPcHRpb25zO1xuICAgIF90aGlzLnN0YXRlLnNlbGVjdFZhbHVlID0gX3NlbGVjdFZhbHVlO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTZWxlY3QsIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgdGhpcy5zdGFydExpc3RlbmluZ0NvbXBvc2l0aW9uKCk7XG4gICAgICB0aGlzLnN0YXJ0TGlzdGVuaW5nVG9Ub3VjaCgpO1xuXG4gICAgICBpZiAodGhpcy5wcm9wcy5jbG9zZU1lbnVPblNjcm9sbCAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIC8vIExpc3RlbiB0byBhbGwgc2Nyb2xsIGV2ZW50cywgYW5kIGZpbHRlciB0aGVtIG91dCBpbnNpZGUgb2YgJ29uU2Nyb2xsJ1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLm9uU2Nyb2xsLCB0cnVlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMucHJvcHMuYXV0b0ZvY3VzKSB7XG4gICAgICAgIHRoaXMuZm9jdXNJbnB1dCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHM4ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBvcHRpb25zID0gX3RoaXMkcHJvcHM4Lm9wdGlvbnMsXG4gICAgICAgICAgdmFsdWUgPSBfdGhpcyRwcm9wczgudmFsdWUsXG4gICAgICAgICAgbWVudUlzT3BlbiA9IF90aGlzJHByb3BzOC5tZW51SXNPcGVuLFxuICAgICAgICAgIGlucHV0VmFsdWUgPSBfdGhpcyRwcm9wczguaW5wdXRWYWx1ZTsgLy8gcmUtY2FjaGUgY3VzdG9tIGNvbXBvbmVudHNcblxuICAgICAgdGhpcy5jYWNoZUNvbXBvbmVudHMobmV4dFByb3BzLmNvbXBvbmVudHMpOyAvLyByZWJ1aWxkIHRoZSBtZW51IG9wdGlvbnNcblxuICAgICAgaWYgKG5leHRQcm9wcy52YWx1ZSAhPT0gdmFsdWUgfHwgbmV4dFByb3BzLm9wdGlvbnMgIT09IG9wdGlvbnMgfHwgbmV4dFByb3BzLm1lbnVJc09wZW4gIT09IG1lbnVJc09wZW4gfHwgbmV4dFByb3BzLmlucHV0VmFsdWUgIT09IGlucHV0VmFsdWUpIHtcbiAgICAgICAgdmFyIHNlbGVjdFZhbHVlID0gY2xlYW5WYWx1ZShuZXh0UHJvcHMudmFsdWUpO1xuICAgICAgICB2YXIgbWVudU9wdGlvbnMgPSBuZXh0UHJvcHMubWVudUlzT3BlbiA/IHRoaXMuYnVpbGRNZW51T3B0aW9ucyhuZXh0UHJvcHMsIHNlbGVjdFZhbHVlKSA6IHtcbiAgICAgICAgICByZW5kZXI6IFtdLFxuICAgICAgICAgIGZvY3VzYWJsZTogW11cbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGZvY3VzZWRWYWx1ZSA9IHRoaXMuZ2V0TmV4dEZvY3VzZWRWYWx1ZShzZWxlY3RWYWx1ZSk7XG4gICAgICAgIHZhciBmb2N1c2VkT3B0aW9uID0gdGhpcy5nZXROZXh0Rm9jdXNlZE9wdGlvbihtZW51T3B0aW9ucy5mb2N1c2FibGUpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBtZW51T3B0aW9uczogbWVudU9wdGlvbnMsXG4gICAgICAgICAgc2VsZWN0VmFsdWU6IHNlbGVjdFZhbHVlLFxuICAgICAgICAgIGZvY3VzZWRPcHRpb246IGZvY3VzZWRPcHRpb24sXG4gICAgICAgICAgZm9jdXNlZFZhbHVlOiBmb2N1c2VkVmFsdWVcbiAgICAgICAgfSk7XG4gICAgICB9IC8vIHNvbWUgdXBkYXRlcyBzaG91bGQgdG9nZ2xlIHRoZSBzdGF0ZSBvZiB0aGUgaW5wdXQgdmlzaWJpbGl0eVxuXG5cbiAgICAgIGlmICh0aGlzLmlucHV0SXNIaWRkZW5BZnRlclVwZGF0ZSAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIGlucHV0SXNIaWRkZW46IHRoaXMuaW5wdXRJc0hpZGRlbkFmdGVyVXBkYXRlXG4gICAgICAgIH0pO1xuICAgICAgICBkZWxldGUgdGhpcy5pbnB1dElzSGlkZGVuQWZ0ZXJVcGRhdGU7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNvbXBvbmVudERpZFVwZGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHM5ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBpc0Rpc2FibGVkID0gX3RoaXMkcHJvcHM5LmlzRGlzYWJsZWQsXG4gICAgICAgICAgbWVudUlzT3BlbiA9IF90aGlzJHByb3BzOS5tZW51SXNPcGVuO1xuICAgICAgdmFyIGlzRm9jdXNlZCA9IHRoaXMuc3RhdGUuaXNGb2N1c2VkO1xuXG4gICAgICBpZiAoIC8vIGVuc3VyZSBmb2N1cyBpcyByZXN0b3JlZCBjb3JyZWN0bHkgd2hlbiB0aGUgY29udHJvbCBiZWNvbWVzIGVuYWJsZWRcbiAgICAgIGlzRm9jdXNlZCAmJiAhaXNEaXNhYmxlZCAmJiBwcmV2UHJvcHMuaXNEaXNhYmxlZCB8fCAvLyBlbnN1cmUgZm9jdXMgaXMgb24gdGhlIElucHV0IHdoZW4gdGhlIG1lbnUgb3BlbnNcbiAgICAgIGlzRm9jdXNlZCAmJiBtZW51SXNPcGVuICYmICFwcmV2UHJvcHMubWVudUlzT3Blbikge1xuICAgICAgICB0aGlzLmZvY3VzSW5wdXQoKTtcbiAgICAgIH0gLy8gc2Nyb2xsIHRoZSBmb2N1c2VkIG9wdGlvbiBpbnRvIHZpZXcgaWYgbmVjZXNzYXJ5XG5cblxuICAgICAgaWYgKHRoaXMubWVudUxpc3RSZWYgJiYgdGhpcy5mb2N1c2VkT3B0aW9uUmVmICYmIHRoaXMuc2Nyb2xsVG9Gb2N1c2VkT3B0aW9uT25VcGRhdGUpIHtcbiAgICAgICAgc2Nyb2xsSW50b1ZpZXcodGhpcy5tZW51TGlzdFJlZiwgdGhpcy5mb2N1c2VkT3B0aW9uUmVmKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zY3JvbGxUb0ZvY3VzZWRPcHRpb25PblVwZGF0ZSA9IGZhbHNlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsVW5tb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIHRoaXMuc3RvcExpc3RlbmluZ0NvbXBvc2l0aW9uKCk7XG4gICAgICB0aGlzLnN0b3BMaXN0ZW5pbmdUb1RvdWNoKCk7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLm9uU2Nyb2xsLCB0cnVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwib25NZW51T3BlblwiLFxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIC8vIENvbnN1bWVyIEhhbmRsZXJzXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uTWVudU9wZW4oKSB7XG4gICAgICB0aGlzLnByb3BzLm9uTWVudU9wZW4oKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwib25NZW51Q2xvc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25NZW51Q2xvc2UoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMxMCA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgaXNTZWFyY2hhYmxlID0gX3RoaXMkcHJvcHMxMC5pc1NlYXJjaGFibGUsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzMTAuaXNNdWx0aTtcbiAgICAgIHRoaXMuYW5ub3VuY2VBcmlhTGl2ZUNvbnRleHQoe1xuICAgICAgICBldmVudDogJ2lucHV0JyxcbiAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgIGlzU2VhcmNoYWJsZTogaXNTZWFyY2hhYmxlLFxuICAgICAgICAgIGlzTXVsdGk6IGlzTXVsdGlcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0aGlzLm9uSW5wdXRDaGFuZ2UoJycsIHtcbiAgICAgICAgYWN0aW9uOiAnbWVudS1jbG9zZSdcbiAgICAgIH0pO1xuICAgICAgdGhpcy5wcm9wcy5vbk1lbnVDbG9zZSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJvbklucHV0Q2hhbmdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uSW5wdXRDaGFuZ2UobmV3VmFsdWUsIGFjdGlvbk1ldGEpIHtcbiAgICAgIHRoaXMucHJvcHMub25JbnB1dENoYW5nZShuZXdWYWx1ZSwgYWN0aW9uTWV0YSk7XG4gICAgfSAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBNZXRob2RzXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgfSwge1xuICAgIGtleTogXCJmb2N1c0lucHV0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvY3VzSW5wdXQoKSB7XG4gICAgICBpZiAoIXRoaXMuaW5wdXRSZWYpIHJldHVybjtcbiAgICAgIHRoaXMuaW5wdXRSZWYuZm9jdXMoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYmx1cklucHV0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGJsdXJJbnB1dCgpIHtcbiAgICAgIGlmICghdGhpcy5pbnB1dFJlZikgcmV0dXJuO1xuICAgICAgdGhpcy5pbnB1dFJlZi5ibHVyKCk7XG4gICAgfSAvLyBhbGlhc2VkIGZvciBjb25zdW1lcnNcblxuICB9LCB7XG4gICAga2V5OiBcIm9wZW5NZW51XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9wZW5NZW51KGZvY3VzT3B0aW9uKSB7XG4gICAgICB2YXIgX3RoaXMkc3RhdGUzID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgICBtZW51T3B0aW9ucyA9IF90aGlzJHN0YXRlMy5tZW51T3B0aW9ucyxcbiAgICAgICAgICBzZWxlY3RWYWx1ZSA9IF90aGlzJHN0YXRlMy5zZWxlY3RWYWx1ZSxcbiAgICAgICAgICBpc0ZvY3VzZWQgPSBfdGhpcyRzdGF0ZTMuaXNGb2N1c2VkO1xuICAgICAgdmFyIGlzTXVsdGkgPSB0aGlzLnByb3BzLmlzTXVsdGk7XG4gICAgICB2YXIgb3BlbkF0SW5kZXggPSBmb2N1c09wdGlvbiA9PT0gJ2ZpcnN0JyA/IDAgOiBtZW51T3B0aW9ucy5mb2N1c2FibGUubGVuZ3RoIC0gMTtcblxuICAgICAgaWYgKCFpc011bHRpKSB7XG4gICAgICAgIHZhciBzZWxlY3RlZEluZGV4ID0gbWVudU9wdGlvbnMuZm9jdXNhYmxlLmluZGV4T2Yoc2VsZWN0VmFsdWVbMF0pO1xuXG4gICAgICAgIGlmIChzZWxlY3RlZEluZGV4ID4gLTEpIHtcbiAgICAgICAgICBvcGVuQXRJbmRleCA9IHNlbGVjdGVkSW5kZXg7XG4gICAgICAgIH1cbiAgICAgIH0gLy8gb25seSBzY3JvbGwgaWYgdGhlIG1lbnUgaXNuJ3QgYWxyZWFkeSBvcGVuXG5cblxuICAgICAgdGhpcy5zY3JvbGxUb0ZvY3VzZWRPcHRpb25PblVwZGF0ZSA9ICEoaXNGb2N1c2VkICYmIHRoaXMubWVudUxpc3RSZWYpO1xuICAgICAgdGhpcy5pbnB1dElzSGlkZGVuQWZ0ZXJVcGRhdGUgPSBmYWxzZTtcbiAgICAgIHRoaXMub25NZW51T3BlbigpO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGZvY3VzZWRWYWx1ZTogbnVsbCxcbiAgICAgICAgZm9jdXNlZE9wdGlvbjogbWVudU9wdGlvbnMuZm9jdXNhYmxlW29wZW5BdEluZGV4XVxuICAgICAgfSk7XG4gICAgICB0aGlzLmFubm91bmNlQXJpYUxpdmVDb250ZXh0KHtcbiAgICAgICAgZXZlbnQ6ICdtZW51J1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvY3VzVmFsdWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9jdXNWYWx1ZShkaXJlY3Rpb24pIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczExID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBpc011bHRpID0gX3RoaXMkcHJvcHMxMS5pc011bHRpLFxuICAgICAgICAgIGlzU2VhcmNoYWJsZSA9IF90aGlzJHByb3BzMTEuaXNTZWFyY2hhYmxlO1xuICAgICAgdmFyIF90aGlzJHN0YXRlNCA9IHRoaXMuc3RhdGUsXG4gICAgICAgICAgc2VsZWN0VmFsdWUgPSBfdGhpcyRzdGF0ZTQuc2VsZWN0VmFsdWUsXG4gICAgICAgICAgZm9jdXNlZFZhbHVlID0gX3RoaXMkc3RhdGU0LmZvY3VzZWRWYWx1ZTsgLy8gT25seSBtdWx0aXNlbGVjdHMgc3VwcG9ydCB2YWx1ZSBmb2N1c2luZ1xuXG4gICAgICBpZiAoIWlzTXVsdGkpIHJldHVybjtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBmb2N1c2VkT3B0aW9uOiBudWxsXG4gICAgICB9KTtcbiAgICAgIHZhciBmb2N1c2VkSW5kZXggPSBzZWxlY3RWYWx1ZS5pbmRleE9mKGZvY3VzZWRWYWx1ZSk7XG5cbiAgICAgIGlmICghZm9jdXNlZFZhbHVlKSB7XG4gICAgICAgIGZvY3VzZWRJbmRleCA9IC0xO1xuICAgICAgICB0aGlzLmFubm91bmNlQXJpYUxpdmVDb250ZXh0KHtcbiAgICAgICAgICBldmVudDogJ3ZhbHVlJ1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdmFyIGxhc3RJbmRleCA9IHNlbGVjdFZhbHVlLmxlbmd0aCAtIDE7XG4gICAgICB2YXIgbmV4dEZvY3VzID0gLTE7XG4gICAgICBpZiAoIXNlbGVjdFZhbHVlLmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgICBzd2l0Y2ggKGRpcmVjdGlvbikge1xuICAgICAgICBjYXNlICdwcmV2aW91cyc6XG4gICAgICAgICAgaWYgKGZvY3VzZWRJbmRleCA9PT0gMCkge1xuICAgICAgICAgICAgLy8gZG9uJ3QgY3ljbGUgZnJvbSB0aGUgc3RhcnQgdG8gdGhlIGVuZFxuICAgICAgICAgICAgbmV4dEZvY3VzID0gMDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGZvY3VzZWRJbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgIC8vIGlmIG5vdGhpbmcgaXMgZm9jdXNlZCwgZm9jdXMgdGhlIGxhc3QgdmFsdWUgZmlyc3RcbiAgICAgICAgICAgIG5leHRGb2N1cyA9IGxhc3RJbmRleDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmV4dEZvY3VzID0gZm9jdXNlZEluZGV4IC0gMTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICduZXh0JzpcbiAgICAgICAgICBpZiAoZm9jdXNlZEluZGV4ID4gLTEgJiYgZm9jdXNlZEluZGV4IDwgbGFzdEluZGV4KSB7XG4gICAgICAgICAgICBuZXh0Rm9jdXMgPSBmb2N1c2VkSW5kZXggKyAxO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpZiAobmV4dEZvY3VzID09PSAtMSkge1xuICAgICAgICB0aGlzLmFubm91bmNlQXJpYUxpdmVDb250ZXh0KHtcbiAgICAgICAgICBldmVudDogJ2lucHV0JyxcbiAgICAgICAgICBjb250ZXh0OiB7XG4gICAgICAgICAgICBpc1NlYXJjaGFibGU6IGlzU2VhcmNoYWJsZSxcbiAgICAgICAgICAgIGlzTXVsdGk6IGlzTXVsdGlcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaW5wdXRJc0hpZGRlbjogbmV4dEZvY3VzICE9PSAtMSxcbiAgICAgICAgZm9jdXNlZFZhbHVlOiBzZWxlY3RWYWx1ZVtuZXh0Rm9jdXNdXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9jdXNPcHRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9jdXNPcHRpb24oKSB7XG4gICAgICB2YXIgZGlyZWN0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAnZmlyc3QnO1xuICAgICAgdmFyIHBhZ2VTaXplID0gdGhpcy5wcm9wcy5wYWdlU2l6ZTtcbiAgICAgIHZhciBfdGhpcyRzdGF0ZTUgPSB0aGlzLnN0YXRlLFxuICAgICAgICAgIGZvY3VzZWRPcHRpb24gPSBfdGhpcyRzdGF0ZTUuZm9jdXNlZE9wdGlvbixcbiAgICAgICAgICBtZW51T3B0aW9ucyA9IF90aGlzJHN0YXRlNS5tZW51T3B0aW9ucztcbiAgICAgIHZhciBvcHRpb25zID0gbWVudU9wdGlvbnMuZm9jdXNhYmxlO1xuICAgICAgaWYgKCFvcHRpb25zLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgdmFyIG5leHRGb2N1cyA9IDA7IC8vIGhhbmRsZXMgJ2ZpcnN0J1xuXG4gICAgICB2YXIgZm9jdXNlZEluZGV4ID0gb3B0aW9ucy5pbmRleE9mKGZvY3VzZWRPcHRpb24pO1xuXG4gICAgICBpZiAoIWZvY3VzZWRPcHRpb24pIHtcbiAgICAgICAgZm9jdXNlZEluZGV4ID0gLTE7XG4gICAgICAgIHRoaXMuYW5ub3VuY2VBcmlhTGl2ZUNvbnRleHQoe1xuICAgICAgICAgIGV2ZW50OiAnbWVudSdcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChkaXJlY3Rpb24gPT09ICd1cCcpIHtcbiAgICAgICAgbmV4dEZvY3VzID0gZm9jdXNlZEluZGV4ID4gMCA/IGZvY3VzZWRJbmRleCAtIDEgOiBvcHRpb25zLmxlbmd0aCAtIDE7XG4gICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ2Rvd24nKSB7XG4gICAgICAgIG5leHRGb2N1cyA9IChmb2N1c2VkSW5kZXggKyAxKSAlIG9wdGlvbnMubGVuZ3RoO1xuICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICdwYWdldXAnKSB7XG4gICAgICAgIG5leHRGb2N1cyA9IGZvY3VzZWRJbmRleCAtIHBhZ2VTaXplO1xuICAgICAgICBpZiAobmV4dEZvY3VzIDwgMCkgbmV4dEZvY3VzID0gMDtcbiAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAncGFnZWRvd24nKSB7XG4gICAgICAgIG5leHRGb2N1cyA9IGZvY3VzZWRJbmRleCArIHBhZ2VTaXplO1xuICAgICAgICBpZiAobmV4dEZvY3VzID4gb3B0aW9ucy5sZW5ndGggLSAxKSBuZXh0Rm9jdXMgPSBvcHRpb25zLmxlbmd0aCAtIDE7XG4gICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ2xhc3QnKSB7XG4gICAgICAgIG5leHRGb2N1cyA9IG9wdGlvbnMubGVuZ3RoIC0gMTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zY3JvbGxUb0ZvY3VzZWRPcHRpb25PblVwZGF0ZSA9IHRydWU7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZm9jdXNlZE9wdGlvbjogb3B0aW9uc1tuZXh0Rm9jdXNdLFxuICAgICAgICBmb2N1c2VkVmFsdWU6IG51bGxcbiAgICAgIH0pO1xuICAgICAgdGhpcy5hbm5vdW5jZUFyaWFMaXZlQ29udGV4dCh7XG4gICAgICAgIGV2ZW50OiAnbWVudScsXG4gICAgICAgIGNvbnRleHQ6IHtcbiAgICAgICAgICBpc0Rpc2FibGVkOiBpc09wdGlvbkRpc2FibGVkKG9wdGlvbnNbbmV4dEZvY3VzXSlcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFRoZW1lXCIsXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLy8gR2V0dGVyc1xuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRUaGVtZSgpIHtcbiAgICAgIC8vIFVzZSB0aGUgZGVmYXVsdCB0aGVtZSBpZiB0aGVyZSBhcmUgbm8gY3VzdG9taXphdGlvbnMuXG4gICAgICBpZiAoIXRoaXMucHJvcHMudGhlbWUpIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRUaGVtZTtcbiAgICAgIH0gLy8gSWYgdGhlIHRoZW1lIHByb3AgaXMgYSBmdW5jdGlvbiwgYXNzdW1lIHRoZSBmdW5jdGlvblxuICAgICAgLy8ga25vd3MgaG93IHRvIG1lcmdlIHRoZSBwYXNzZWQtaW4gZGVmYXVsdCB0aGVtZSB3aXRoXG4gICAgICAvLyBpdHMgb3duIG1vZGlmaWNhdGlvbnMuXG5cblxuICAgICAgaWYgKHR5cGVvZiB0aGlzLnByb3BzLnRoZW1lID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3BzLnRoZW1lKGRlZmF1bHRUaGVtZSk7XG4gICAgICB9IC8vIE90aGVyd2lzZSwgaWYgYSBwbGFpbiB0aGVtZSBvYmplY3Qgd2FzIHBhc3NlZCBpbixcbiAgICAgIC8vIG92ZXJsYXkgaXQgd2l0aCB0aGUgZGVmYXVsdCB0aGVtZS5cblxuXG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdFRoZW1lLCB0aGlzLnByb3BzLnRoZW1lKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0Q29tbW9uUHJvcHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q29tbW9uUHJvcHMoKSB7XG4gICAgICB2YXIgY2xlYXJWYWx1ZSA9IHRoaXMuY2xlYXJWYWx1ZSxcbiAgICAgICAgICBnZXRTdHlsZXMgPSB0aGlzLmdldFN0eWxlcyxcbiAgICAgICAgICBzZXRWYWx1ZSA9IHRoaXMuc2V0VmFsdWUsXG4gICAgICAgICAgc2VsZWN0T3B0aW9uID0gdGhpcy5zZWxlY3RPcHRpb24sXG4gICAgICAgICAgcHJvcHMgPSB0aGlzLnByb3BzO1xuICAgICAgdmFyIGNsYXNzTmFtZVByZWZpeCA9IHByb3BzLmNsYXNzTmFtZVByZWZpeCxcbiAgICAgICAgICBpc011bHRpID0gcHJvcHMuaXNNdWx0aSxcbiAgICAgICAgICBpc1J0bCA9IHByb3BzLmlzUnRsLFxuICAgICAgICAgIG9wdGlvbnMgPSBwcm9wcy5vcHRpb25zO1xuICAgICAgdmFyIHNlbGVjdFZhbHVlID0gdGhpcy5zdGF0ZS5zZWxlY3RWYWx1ZTtcbiAgICAgIHZhciBoYXNWYWx1ZSA9IHRoaXMuaGFzVmFsdWUoKTtcblxuICAgICAgdmFyIGdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICAgIHJldHVybiBzZWxlY3RWYWx1ZTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBjeCA9IGNsYXNzTmFtZXMuYmluZChudWxsLCBjbGFzc05hbWVQcmVmaXgpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY3g6IGN4LFxuICAgICAgICBjbGVhclZhbHVlOiBjbGVhclZhbHVlLFxuICAgICAgICBnZXRTdHlsZXM6IGdldFN0eWxlcyxcbiAgICAgICAgZ2V0VmFsdWU6IGdldFZhbHVlLFxuICAgICAgICBoYXNWYWx1ZTogaGFzVmFsdWUsXG4gICAgICAgIGlzTXVsdGk6IGlzTXVsdGksXG4gICAgICAgIGlzUnRsOiBpc1J0bCxcbiAgICAgICAgb3B0aW9uczogb3B0aW9ucyxcbiAgICAgICAgc2VsZWN0T3B0aW9uOiBzZWxlY3RPcHRpb24sXG4gICAgICAgIHNldFZhbHVlOiBzZXRWYWx1ZSxcbiAgICAgICAgc2VsZWN0UHJvcHM6IHByb3BzLFxuICAgICAgICB0aGVtZTogdGhpcy5nZXRUaGVtZSgpXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXROZXh0Rm9jdXNlZFZhbHVlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldE5leHRGb2N1c2VkVmFsdWUobmV4dFNlbGVjdFZhbHVlKSB7XG4gICAgICBpZiAodGhpcy5jbGVhckZvY3VzVmFsdWVPblVwZGF0ZSkge1xuICAgICAgICB0aGlzLmNsZWFyRm9jdXNWYWx1ZU9uVXBkYXRlID0gZmFsc2U7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgX3RoaXMkc3RhdGU2ID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgICBmb2N1c2VkVmFsdWUgPSBfdGhpcyRzdGF0ZTYuZm9jdXNlZFZhbHVlLFxuICAgICAgICAgIGxhc3RTZWxlY3RWYWx1ZSA9IF90aGlzJHN0YXRlNi5zZWxlY3RWYWx1ZTtcbiAgICAgIHZhciBsYXN0Rm9jdXNlZEluZGV4ID0gbGFzdFNlbGVjdFZhbHVlLmluZGV4T2YoZm9jdXNlZFZhbHVlKTtcblxuICAgICAgaWYgKGxhc3RGb2N1c2VkSW5kZXggPiAtMSkge1xuICAgICAgICB2YXIgbmV4dEZvY3VzZWRJbmRleCA9IG5leHRTZWxlY3RWYWx1ZS5pbmRleE9mKGZvY3VzZWRWYWx1ZSk7XG5cbiAgICAgICAgaWYgKG5leHRGb2N1c2VkSW5kZXggPiAtMSkge1xuICAgICAgICAgIC8vIHRoZSBmb2N1c2VkIHZhbHVlIGlzIHN0aWxsIGluIHRoZSBzZWxlY3RWYWx1ZSwgcmV0dXJuIGl0XG4gICAgICAgICAgcmV0dXJuIGZvY3VzZWRWYWx1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChsYXN0Rm9jdXNlZEluZGV4IDwgbmV4dFNlbGVjdFZhbHVlLmxlbmd0aCkge1xuICAgICAgICAgIC8vIHRoZSBmb2N1c2VkVmFsdWUgaXMgbm90IHByZXNlbnQgaW4gdGhlIG5leHQgc2VsZWN0VmFsdWUgYXJyYXkgYnlcbiAgICAgICAgICAvLyByZWZlcmVuY2UsIHNvIHJldHVybiB0aGUgbmV3IHZhbHVlIGF0IHRoZSBzYW1lIGluZGV4XG4gICAgICAgICAgcmV0dXJuIG5leHRTZWxlY3RWYWx1ZVtsYXN0Rm9jdXNlZEluZGV4XTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0TmV4dEZvY3VzZWRPcHRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TmV4dEZvY3VzZWRPcHRpb24ob3B0aW9ucykge1xuICAgICAgdmFyIGxhc3RGb2N1c2VkT3B0aW9uID0gdGhpcy5zdGF0ZS5mb2N1c2VkT3B0aW9uO1xuICAgICAgcmV0dXJuIGxhc3RGb2N1c2VkT3B0aW9uICYmIG9wdGlvbnMuaW5kZXhPZihsYXN0Rm9jdXNlZE9wdGlvbikgPiAtMSA/IGxhc3RGb2N1c2VkT3B0aW9uIDogb3B0aW9uc1swXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGFzVmFsdWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzVmFsdWUoKSB7XG4gICAgICB2YXIgc2VsZWN0VmFsdWUgPSB0aGlzLnN0YXRlLnNlbGVjdFZhbHVlO1xuICAgICAgcmV0dXJuIHNlbGVjdFZhbHVlLmxlbmd0aCA+IDA7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhc09wdGlvbnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzT3B0aW9ucygpIHtcbiAgICAgIHJldHVybiAhIXRoaXMuc3RhdGUubWVudU9wdGlvbnMucmVuZGVyLmxlbmd0aDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY291bnRPcHRpb25zXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvdW50T3B0aW9ucygpIHtcbiAgICAgIHJldHVybiB0aGlzLnN0YXRlLm1lbnVPcHRpb25zLmZvY3VzYWJsZS5sZW5ndGg7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImlzQ2xlYXJhYmxlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzQ2xlYXJhYmxlKCkge1xuICAgICAgdmFyIF90aGlzJHByb3BzMTIgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGlzQ2xlYXJhYmxlID0gX3RoaXMkcHJvcHMxMi5pc0NsZWFyYWJsZSxcbiAgICAgICAgICBpc011bHRpID0gX3RoaXMkcHJvcHMxMi5pc011bHRpOyAvLyBzaW5nbGUgc2VsZWN0LCBieSBkZWZhdWx0LCBJUyBOT1QgY2xlYXJhYmxlXG4gICAgICAvLyBtdWx0aSBzZWxlY3QsIGJ5IGRlZmF1bHQsIElTIGNsZWFyYWJsZVxuXG4gICAgICBpZiAoaXNDbGVhcmFibGUgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGlzTXVsdGk7XG4gICAgICByZXR1cm4gaXNDbGVhcmFibGU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImlzT3B0aW9uRGlzYWJsZWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNPcHRpb25EaXNhYmxlZChvcHRpb24sIHNlbGVjdFZhbHVlKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIHRoaXMucHJvcHMuaXNPcHRpb25EaXNhYmxlZCA9PT0gJ2Z1bmN0aW9uJyA/IHRoaXMucHJvcHMuaXNPcHRpb25EaXNhYmxlZChvcHRpb24sIHNlbGVjdFZhbHVlKSA6IGZhbHNlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpc09wdGlvblNlbGVjdGVkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzT3B0aW9uU2VsZWN0ZWQob3B0aW9uLCBzZWxlY3RWYWx1ZSkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmIChzZWxlY3RWYWx1ZS5pbmRleE9mKG9wdGlvbikgPiAtMSkgcmV0dXJuIHRydWU7XG5cbiAgICAgIGlmICh0eXBlb2YgdGhpcy5wcm9wcy5pc09wdGlvblNlbGVjdGVkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3BzLmlzT3B0aW9uU2VsZWN0ZWQob3B0aW9uLCBzZWxlY3RWYWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBjYW5kaWRhdGUgPSB0aGlzLmdldE9wdGlvblZhbHVlKG9wdGlvbik7XG4gICAgICByZXR1cm4gc2VsZWN0VmFsdWUuc29tZShmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gX3RoaXMyLmdldE9wdGlvblZhbHVlKGkpID09PSBjYW5kaWRhdGU7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZmlsdGVyT3B0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZpbHRlck9wdGlvbihvcHRpb24sIGlucHV0VmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmZpbHRlck9wdGlvbiA/IHRoaXMucHJvcHMuZmlsdGVyT3B0aW9uKG9wdGlvbiwgaW5wdXRWYWx1ZSkgOiB0cnVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRPcHRpb25MYWJlbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRPcHRpb25MYWJlbChkYXRhLCBjb250ZXh0KSB7XG4gICAgICBpZiAodHlwZW9mIHRoaXMucHJvcHMuZm9ybWF0T3B0aW9uTGFiZWwgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdmFyIGlucHV0VmFsdWUgPSB0aGlzLnByb3BzLmlucHV0VmFsdWU7XG4gICAgICAgIHZhciBzZWxlY3RWYWx1ZSA9IHRoaXMuc3RhdGUuc2VsZWN0VmFsdWU7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3BzLmZvcm1hdE9wdGlvbkxhYmVsKGRhdGEsIHtcbiAgICAgICAgICBjb250ZXh0OiBjb250ZXh0LFxuICAgICAgICAgIGlucHV0VmFsdWU6IGlucHV0VmFsdWUsXG4gICAgICAgICAgc2VsZWN0VmFsdWU6IHNlbGVjdFZhbHVlXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0T3B0aW9uTGFiZWwoZGF0YSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvcm1hdEdyb3VwTGFiZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0R3JvdXBMYWJlbChkYXRhKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5mb3JtYXRHcm91cExhYmVsKGRhdGEpO1xuICAgIH0gLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLy8gTW91c2UgSGFuZGxlcnNcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB9LCB7XG4gICAga2V5OiBcInN0YXJ0TGlzdGVuaW5nQ29tcG9zaXRpb25cIixcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBDb21wb3NpdGlvbiBIYW5kbGVyc1xuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdGFydExpc3RlbmluZ0NvbXBvc2l0aW9uKCkge1xuICAgICAgaWYgKGRvY3VtZW50ICYmIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY29tcG9zaXRpb25zdGFydCcsIHRoaXMub25Db21wb3NpdGlvblN0YXJ0LCBmYWxzZSk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbXBvc2l0aW9uZW5kJywgdGhpcy5vbkNvbXBvc2l0aW9uRW5kLCBmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInN0b3BMaXN0ZW5pbmdDb21wb3NpdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wTGlzdGVuaW5nQ29tcG9zaXRpb24oKSB7XG4gICAgICBpZiAoZG9jdW1lbnQgJiYgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjb21wb3NpdGlvbnN0YXJ0JywgdGhpcy5vbkNvbXBvc2l0aW9uU3RhcnQpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjb21wb3NpdGlvbmVuZCcsIHRoaXMub25Db21wb3NpdGlvbkVuZCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInN0YXJ0TGlzdGVuaW5nVG9Ub3VjaFwiLFxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIC8vIFRvdWNoIEhhbmRsZXJzXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0TGlzdGVuaW5nVG9Ub3VjaCgpIHtcbiAgICAgIGlmIChkb2N1bWVudCAmJiBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLm9uVG91Y2hTdGFydCwgZmFsc2UpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLm9uVG91Y2hNb3ZlLCBmYWxzZSk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5vblRvdWNoRW5kLCBmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInN0b3BMaXN0ZW5pbmdUb1RvdWNoXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0b3BMaXN0ZW5pbmdUb1RvdWNoKCkge1xuICAgICAgaWYgKGRvY3VtZW50ICYmIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaFN0YXJ0KTtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5vblRvdWNoTW92ZSk7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5vblRvdWNoRW5kKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYnVpbGRNZW51T3B0aW9uc1wiLFxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIC8vIE1lbnUgT3B0aW9uc1xuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIHZhbHVlOiBmdW5jdGlvbiBidWlsZE1lbnVPcHRpb25zKHByb3BzLCBzZWxlY3RWYWx1ZSkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciBfcHJvcHMkaW5wdXRWYWx1ZSA9IHByb3BzLmlucHV0VmFsdWUsXG4gICAgICAgICAgaW5wdXRWYWx1ZSA9IF9wcm9wcyRpbnB1dFZhbHVlID09PSB2b2lkIDAgPyAnJyA6IF9wcm9wcyRpbnB1dFZhbHVlLFxuICAgICAgICAgIG9wdGlvbnMgPSBwcm9wcy5vcHRpb25zO1xuXG4gICAgICB2YXIgdG9PcHRpb24gPSBmdW5jdGlvbiB0b09wdGlvbihvcHRpb24sIGlkKSB7XG4gICAgICAgIHZhciBpc0Rpc2FibGVkID0gX3RoaXMzLmlzT3B0aW9uRGlzYWJsZWQob3B0aW9uLCBzZWxlY3RWYWx1ZSk7XG5cbiAgICAgICAgdmFyIGlzU2VsZWN0ZWQgPSBfdGhpczMuaXNPcHRpb25TZWxlY3RlZChvcHRpb24sIHNlbGVjdFZhbHVlKTtcblxuICAgICAgICB2YXIgbGFiZWwgPSBfdGhpczMuZ2V0T3B0aW9uTGFiZWwob3B0aW9uKTtcblxuICAgICAgICB2YXIgdmFsdWUgPSBfdGhpczMuZ2V0T3B0aW9uVmFsdWUob3B0aW9uKTtcblxuICAgICAgICBpZiAoX3RoaXMzLnNob3VsZEhpZGVTZWxlY3RlZE9wdGlvbnMoKSAmJiBpc1NlbGVjdGVkIHx8ICFfdGhpczMuZmlsdGVyT3B0aW9uKHtcbiAgICAgICAgICBsYWJlbDogbGFiZWwsXG4gICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgIGRhdGE6IG9wdGlvblxuICAgICAgICB9LCBpbnB1dFZhbHVlKSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBvbkhvdmVyID0gaXNEaXNhYmxlZCA/IHVuZGVmaW5lZCA6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMzLm9uT3B0aW9uSG92ZXIob3B0aW9uKTtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIG9uU2VsZWN0ID0gaXNEaXNhYmxlZCA/IHVuZGVmaW5lZCA6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMzLnNlbGVjdE9wdGlvbihvcHRpb24pO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgb3B0aW9uSWQgPSBcIlwiLmNvbmNhdChfdGhpczMuZ2V0RWxlbWVudElkKCdvcHRpb24nKSwgXCItXCIpLmNvbmNhdChpZCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaW5uZXJQcm9wczoge1xuICAgICAgICAgICAgaWQ6IG9wdGlvbklkLFxuICAgICAgICAgICAgb25DbGljazogb25TZWxlY3QsXG4gICAgICAgICAgICBvbk1vdXNlTW92ZTogb25Ib3ZlcixcbiAgICAgICAgICAgIG9uTW91c2VPdmVyOiBvbkhvdmVyLFxuICAgICAgICAgICAgdGFiSW5kZXg6IC0xXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiBvcHRpb24sXG4gICAgICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCxcbiAgICAgICAgICBpc1NlbGVjdGVkOiBpc1NlbGVjdGVkLFxuICAgICAgICAgIGtleTogb3B0aW9uSWQsXG4gICAgICAgICAgbGFiZWw6IGxhYmVsLFxuICAgICAgICAgIHR5cGU6ICdvcHRpb24nLFxuICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9O1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIG9wdGlvbnMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGl0ZW0sIGl0ZW1JbmRleCkge1xuICAgICAgICBpZiAoaXRlbS5vcHRpb25zKSB7XG4gICAgICAgICAgLy8gVE9ETyBuZWVkcyBhIHRpZGllciBpbXBsZW1lbnRhdGlvblxuICAgICAgICAgIGlmICghX3RoaXMzLmhhc0dyb3VwcykgX3RoaXMzLmhhc0dyb3VwcyA9IHRydWU7XG4gICAgICAgICAgdmFyIGl0ZW1zID0gaXRlbS5vcHRpb25zO1xuICAgICAgICAgIHZhciBjaGlsZHJlbiA9IGl0ZW1zLm1hcChmdW5jdGlvbiAoY2hpbGQsIGkpIHtcbiAgICAgICAgICAgIHZhciBvcHRpb24gPSB0b09wdGlvbihjaGlsZCwgXCJcIi5jb25jYXQoaXRlbUluZGV4LCBcIi1cIikuY29uY2F0KGkpKTtcbiAgICAgICAgICAgIGlmIChvcHRpb24pIGFjYy5mb2N1c2FibGUucHVzaChjaGlsZCk7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9uO1xuICAgICAgICAgIH0pLmZpbHRlcihCb29sZWFuKTtcblxuICAgICAgICAgIGlmIChjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciBncm91cElkID0gXCJcIi5jb25jYXQoX3RoaXMzLmdldEVsZW1lbnRJZCgnZ3JvdXAnKSwgXCItXCIpLmNvbmNhdChpdGVtSW5kZXgpO1xuICAgICAgICAgICAgYWNjLnJlbmRlci5wdXNoKHtcbiAgICAgICAgICAgICAgdHlwZTogJ2dyb3VwJyxcbiAgICAgICAgICAgICAga2V5OiBncm91cElkLFxuICAgICAgICAgICAgICBkYXRhOiBpdGVtLFxuICAgICAgICAgICAgICBvcHRpb25zOiBjaGlsZHJlblxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBvcHRpb24gPSB0b09wdGlvbihpdGVtLCBcIlwiLmNvbmNhdChpdGVtSW5kZXgpKTtcblxuICAgICAgICAgIGlmIChvcHRpb24pIHtcbiAgICAgICAgICAgIGFjYy5yZW5kZXIucHVzaChvcHRpb24pO1xuICAgICAgICAgICAgYWNjLmZvY3VzYWJsZS5wdXNoKGl0ZW0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgICB9LCB7XG4gICAgICAgIHJlbmRlcjogW10sXG4gICAgICAgIGZvY3VzYWJsZTogW11cbiAgICAgIH0pO1xuICAgIH0gLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLy8gUmVuZGVyZXJzXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgfSwge1xuICAgIGtleTogXCJjb25zdHJ1Y3RBcmlhTGl2ZU1lc3NhZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29uc3RydWN0QXJpYUxpdmVNZXNzYWdlKCkge1xuICAgICAgdmFyIF90aGlzJHN0YXRlNyA9IHRoaXMuc3RhdGUsXG4gICAgICAgICAgYXJpYUxpdmVDb250ZXh0ID0gX3RoaXMkc3RhdGU3LmFyaWFMaXZlQ29udGV4dCxcbiAgICAgICAgICBzZWxlY3RWYWx1ZSA9IF90aGlzJHN0YXRlNy5zZWxlY3RWYWx1ZSxcbiAgICAgICAgICBmb2N1c2VkVmFsdWUgPSBfdGhpcyRzdGF0ZTcuZm9jdXNlZFZhbHVlLFxuICAgICAgICAgIGZvY3VzZWRPcHRpb24gPSBfdGhpcyRzdGF0ZTcuZm9jdXNlZE9wdGlvbjtcbiAgICAgIHZhciBfdGhpcyRwcm9wczEzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBvcHRpb25zID0gX3RoaXMkcHJvcHMxMy5vcHRpb25zLFxuICAgICAgICAgIG1lbnVJc09wZW4gPSBfdGhpcyRwcm9wczEzLm1lbnVJc09wZW4sXG4gICAgICAgICAgaW5wdXRWYWx1ZSA9IF90aGlzJHByb3BzMTMuaW5wdXRWYWx1ZSxcbiAgICAgICAgICBzY3JlZW5SZWFkZXJTdGF0dXMgPSBfdGhpcyRwcm9wczEzLnNjcmVlblJlYWRlclN0YXR1czsgLy8gQW4gYXJpYSBsaXZlIG1lc3NhZ2UgcmVwcmVzZW50aW5nIHRoZSBjdXJyZW50bHkgZm9jdXNlZCB2YWx1ZSBpbiB0aGUgc2VsZWN0LlxuXG4gICAgICB2YXIgZm9jdXNlZFZhbHVlTXNnID0gZm9jdXNlZFZhbHVlID8gdmFsdWVGb2N1c0FyaWFNZXNzYWdlKHtcbiAgICAgICAgZm9jdXNlZFZhbHVlOiBmb2N1c2VkVmFsdWUsXG4gICAgICAgIGdldE9wdGlvbkxhYmVsOiB0aGlzLmdldE9wdGlvbkxhYmVsLFxuICAgICAgICBzZWxlY3RWYWx1ZTogc2VsZWN0VmFsdWVcbiAgICAgIH0pIDogJyc7IC8vIEFuIGFyaWEgbGl2ZSBtZXNzYWdlIHJlcHJlc2VudGluZyB0aGUgY3VycmVudGx5IGZvY3VzZWQgb3B0aW9uIGluIHRoZSBzZWxlY3QuXG5cbiAgICAgIHZhciBmb2N1c2VkT3B0aW9uTXNnID0gZm9jdXNlZE9wdGlvbiAmJiBtZW51SXNPcGVuID8gb3B0aW9uRm9jdXNBcmlhTWVzc2FnZSh7XG4gICAgICAgIGZvY3VzZWRPcHRpb246IGZvY3VzZWRPcHRpb24sXG4gICAgICAgIGdldE9wdGlvbkxhYmVsOiB0aGlzLmdldE9wdGlvbkxhYmVsLFxuICAgICAgICBvcHRpb25zOiBvcHRpb25zXG4gICAgICB9KSA6ICcnOyAvLyBBbiBhcmlhIGxpdmUgbWVzc2FnZSByZXByZXNlbnRpbmcgdGhlIHNldCBvZiBmb2N1c2FibGUgcmVzdWx0cyBhbmQgY3VycmVudCBzZWFyY2h0ZXJtL2lucHV0dmFsdWUuXG5cbiAgICAgIHZhciByZXN1bHRzTXNnID0gcmVzdWx0c0FyaWFNZXNzYWdlKHtcbiAgICAgICAgaW5wdXRWYWx1ZTogaW5wdXRWYWx1ZSxcbiAgICAgICAgc2NyZWVuUmVhZGVyTWVzc2FnZTogc2NyZWVuUmVhZGVyU3RhdHVzKHtcbiAgICAgICAgICBjb3VudDogdGhpcy5jb3VudE9wdGlvbnMoKVxuICAgICAgICB9KVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gXCJcIi5jb25jYXQoZm9jdXNlZFZhbHVlTXNnLCBcIiBcIikuY29uY2F0KGZvY3VzZWRPcHRpb25Nc2csIFwiIFwiKS5jb25jYXQocmVzdWx0c01zZywgXCIgXCIpLmNvbmNhdChhcmlhTGl2ZUNvbnRleHQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJJbnB1dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJJbnB1dCgpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczE0ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBpc0Rpc2FibGVkID0gX3RoaXMkcHJvcHMxNC5pc0Rpc2FibGVkLFxuICAgICAgICAgIGlzU2VhcmNoYWJsZSA9IF90aGlzJHByb3BzMTQuaXNTZWFyY2hhYmxlLFxuICAgICAgICAgIGlucHV0SWQgPSBfdGhpcyRwcm9wczE0LmlucHV0SWQsXG4gICAgICAgICAgaW5wdXRWYWx1ZSA9IF90aGlzJHByb3BzMTQuaW5wdXRWYWx1ZSxcbiAgICAgICAgICB0YWJJbmRleCA9IF90aGlzJHByb3BzMTQudGFiSW5kZXg7XG4gICAgICB2YXIgSW5wdXQgPSB0aGlzLmNvbXBvbmVudHMuSW5wdXQ7XG4gICAgICB2YXIgaW5wdXRJc0hpZGRlbiA9IHRoaXMuc3RhdGUuaW5wdXRJc0hpZGRlbjtcbiAgICAgIHZhciBpZCA9IGlucHV0SWQgfHwgdGhpcy5nZXRFbGVtZW50SWQoJ2lucHV0Jyk7XG5cbiAgICAgIGlmICghaXNTZWFyY2hhYmxlKSB7XG4gICAgICAgIC8vIHVzZSBhIGR1bW15IGlucHV0IHRvIG1haW50YWluIGZvY3VzL2JsdXIgZnVuY3Rpb25hbGl0eVxuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEdW1teUlucHV0LCB7XG4gICAgICAgICAgaWQ6IGlkLFxuICAgICAgICAgIGlubmVyUmVmOiB0aGlzLmdldElucHV0UmVmLFxuICAgICAgICAgIG9uQmx1cjogdGhpcy5vbklucHV0Qmx1cixcbiAgICAgICAgICBvbkNoYW5nZTogbm9vcCxcbiAgICAgICAgICBvbkZvY3VzOiB0aGlzLm9uSW5wdXRGb2N1cyxcbiAgICAgICAgICByZWFkT25seTogdHJ1ZSxcbiAgICAgICAgICBkaXNhYmxlZDogaXNEaXNhYmxlZCxcbiAgICAgICAgICB0YWJJbmRleDogdGFiSW5kZXgsXG4gICAgICAgICAgdmFsdWU6IFwiXCJcbiAgICAgICAgfSk7XG4gICAgICB9IC8vIGFyaWEgYXR0cmlidXRlcyBtYWtlcyB0aGUgSlNYIFwibm9pc3lcIiwgc2VwYXJhdGVkIGZvciBjbGFyaXR5XG5cblxuICAgICAgdmFyIGFyaWFBdHRyaWJ1dGVzID0ge1xuICAgICAgICAnYXJpYS1hdXRvY29tcGxldGUnOiAnbGlzdCcsXG4gICAgICAgICdhcmlhLWxhYmVsJzogdGhpcy5wcm9wc1snYXJpYS1sYWJlbCddLFxuICAgICAgICAnYXJpYS1sYWJlbGxlZGJ5JzogdGhpcy5wcm9wc1snYXJpYS1sYWJlbGxlZGJ5J11cbiAgICAgIH07XG4gICAgICB2YXIgX3RoaXMkY29tbW9uUHJvcHMgPSB0aGlzLmNvbW1vblByb3BzLFxuICAgICAgICAgIGN4ID0gX3RoaXMkY29tbW9uUHJvcHMuY3gsXG4gICAgICAgICAgdGhlbWUgPSBfdGhpcyRjb21tb25Qcm9wcy50aGVtZSxcbiAgICAgICAgICBzZWxlY3RQcm9wcyA9IF90aGlzJGNvbW1vblByb3BzLnNlbGVjdFByb3BzO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5wdXQsIF9leHRlbmRzKHtcbiAgICAgICAgYXV0b0NhcGl0YWxpemU6IFwibm9uZVwiLFxuICAgICAgICBhdXRvQ29tcGxldGU6IFwib2ZmXCIsXG4gICAgICAgIGF1dG9Db3JyZWN0OiBcIm9mZlwiLFxuICAgICAgICBjeDogY3gsXG4gICAgICAgIGdldFN0eWxlczogdGhpcy5nZXRTdHlsZXMsXG4gICAgICAgIGlkOiBpZCxcbiAgICAgICAgaW5uZXJSZWY6IHRoaXMuZ2V0SW5wdXRSZWYsXG4gICAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICAgIGlzSGlkZGVuOiBpbnB1dElzSGlkZGVuLFxuICAgICAgICBvbkJsdXI6IHRoaXMub25JbnB1dEJsdXIsXG4gICAgICAgIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgICBvbkZvY3VzOiB0aGlzLm9uSW5wdXRGb2N1cyxcbiAgICAgICAgc2VsZWN0UHJvcHM6IHNlbGVjdFByb3BzLFxuICAgICAgICBzcGVsbENoZWNrOiBcImZhbHNlXCIsXG4gICAgICAgIHRhYkluZGV4OiB0YWJJbmRleCxcbiAgICAgICAgdGhlbWU6IHRoZW1lLFxuICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgdmFsdWU6IGlucHV0VmFsdWVcbiAgICAgIH0sIGFyaWFBdHRyaWJ1dGVzKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclBsYWNlaG9sZGVyT3JWYWx1ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJQbGFjZWhvbGRlck9yVmFsdWUoKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdmFyIF90aGlzJGNvbXBvbmVudHMgPSB0aGlzLmNvbXBvbmVudHMsXG4gICAgICAgICAgTXVsdGlWYWx1ZSA9IF90aGlzJGNvbXBvbmVudHMuTXVsdGlWYWx1ZSxcbiAgICAgICAgICBNdWx0aVZhbHVlQ29udGFpbmVyID0gX3RoaXMkY29tcG9uZW50cy5NdWx0aVZhbHVlQ29udGFpbmVyLFxuICAgICAgICAgIE11bHRpVmFsdWVMYWJlbCA9IF90aGlzJGNvbXBvbmVudHMuTXVsdGlWYWx1ZUxhYmVsLFxuICAgICAgICAgIE11bHRpVmFsdWVSZW1vdmUgPSBfdGhpcyRjb21wb25lbnRzLk11bHRpVmFsdWVSZW1vdmUsXG4gICAgICAgICAgU2luZ2xlVmFsdWUgPSBfdGhpcyRjb21wb25lbnRzLlNpbmdsZVZhbHVlLFxuICAgICAgICAgIFBsYWNlaG9sZGVyID0gX3RoaXMkY29tcG9uZW50cy5QbGFjZWhvbGRlcjtcbiAgICAgIHZhciBjb21tb25Qcm9wcyA9IHRoaXMuY29tbW9uUHJvcHM7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMxNSA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgY29udHJvbFNob3VsZFJlbmRlclZhbHVlID0gX3RoaXMkcHJvcHMxNS5jb250cm9sU2hvdWxkUmVuZGVyVmFsdWUsXG4gICAgICAgICAgaXNEaXNhYmxlZCA9IF90aGlzJHByb3BzMTUuaXNEaXNhYmxlZCxcbiAgICAgICAgICBpc011bHRpID0gX3RoaXMkcHJvcHMxNS5pc011bHRpLFxuICAgICAgICAgIGlucHV0VmFsdWUgPSBfdGhpcyRwcm9wczE1LmlucHV0VmFsdWUsXG4gICAgICAgICAgcGxhY2Vob2xkZXIgPSBfdGhpcyRwcm9wczE1LnBsYWNlaG9sZGVyO1xuICAgICAgdmFyIF90aGlzJHN0YXRlOCA9IHRoaXMuc3RhdGUsXG4gICAgICAgICAgc2VsZWN0VmFsdWUgPSBfdGhpcyRzdGF0ZTguc2VsZWN0VmFsdWUsXG4gICAgICAgICAgZm9jdXNlZFZhbHVlID0gX3RoaXMkc3RhdGU4LmZvY3VzZWRWYWx1ZSxcbiAgICAgICAgICBpc0ZvY3VzZWQgPSBfdGhpcyRzdGF0ZTguaXNGb2N1c2VkO1xuXG4gICAgICBpZiAoIXRoaXMuaGFzVmFsdWUoKSB8fCAhY29udHJvbFNob3VsZFJlbmRlclZhbHVlKSB7XG4gICAgICAgIHJldHVybiBpbnB1dFZhbHVlID8gbnVsbCA6IFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGxhY2Vob2xkZXIsIF9leHRlbmRzKHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgICAgIGtleTogXCJwbGFjZWhvbGRlclwiLFxuICAgICAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICAgICAgaXNGb2N1c2VkOiBpc0ZvY3VzZWRcbiAgICAgICAgfSksIHBsYWNlaG9sZGVyKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzTXVsdGkpIHtcbiAgICAgICAgdmFyIHNlbGVjdFZhbHVlcyA9IHNlbGVjdFZhbHVlLm1hcChmdW5jdGlvbiAob3B0KSB7XG4gICAgICAgICAgdmFyIGlzT3B0aW9uRm9jdXNlZCA9IG9wdCA9PT0gZm9jdXNlZFZhbHVlO1xuICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE11bHRpVmFsdWUsIF9leHRlbmRzKHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgICAgICAgY29tcG9uZW50czoge1xuICAgICAgICAgICAgICBDb250YWluZXI6IE11bHRpVmFsdWVDb250YWluZXIsXG4gICAgICAgICAgICAgIExhYmVsOiBNdWx0aVZhbHVlTGFiZWwsXG4gICAgICAgICAgICAgIFJlbW92ZTogTXVsdGlWYWx1ZVJlbW92ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlzRm9jdXNlZDogaXNPcHRpb25Gb2N1c2VkLFxuICAgICAgICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCxcbiAgICAgICAgICAgIGtleTogX3RoaXM0LmdldE9wdGlvblZhbHVlKG9wdCksXG4gICAgICAgICAgICByZW1vdmVQcm9wczoge1xuICAgICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczQucmVtb3ZlVmFsdWUob3B0KTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgb25Ub3VjaEVuZDogZnVuY3Rpb24gb25Ub3VjaEVuZCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM0LnJlbW92ZVZhbHVlKG9wdCk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIG9uTW91c2VEb3duOiBmdW5jdGlvbiBvbk1vdXNlRG93bihlKSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkYXRhOiBvcHRcbiAgICAgICAgICB9KSwgX3RoaXM0LmZvcm1hdE9wdGlvbkxhYmVsKG9wdCwgJ3ZhbHVlJykpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHNlbGVjdFZhbHVlcztcbiAgICAgIH1cblxuICAgICAgaWYgKGlucHV0VmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciBzaW5nbGVWYWx1ZSA9IHNlbGVjdFZhbHVlWzBdO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2luZ2xlVmFsdWUsIF9leHRlbmRzKHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgICBkYXRhOiBzaW5nbGVWYWx1ZSxcbiAgICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZFxuICAgICAgfSksIHRoaXMuZm9ybWF0T3B0aW9uTGFiZWwoc2luZ2xlVmFsdWUsICd2YWx1ZScpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyQ2xlYXJJbmRpY2F0b3JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyQ2xlYXJJbmRpY2F0b3IoKSB7XG4gICAgICB2YXIgQ2xlYXJJbmRpY2F0b3IgPSB0aGlzLmNvbXBvbmVudHMuQ2xlYXJJbmRpY2F0b3I7XG4gICAgICB2YXIgY29tbW9uUHJvcHMgPSB0aGlzLmNvbW1vblByb3BzO1xuICAgICAgdmFyIF90aGlzJHByb3BzMTYgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGlzRGlzYWJsZWQgPSBfdGhpcyRwcm9wczE2LmlzRGlzYWJsZWQsXG4gICAgICAgICAgaXNMb2FkaW5nID0gX3RoaXMkcHJvcHMxNi5pc0xvYWRpbmc7XG4gICAgICB2YXIgaXNGb2N1c2VkID0gdGhpcy5zdGF0ZS5pc0ZvY3VzZWQ7XG5cbiAgICAgIGlmICghdGhpcy5pc0NsZWFyYWJsZSgpIHx8ICFDbGVhckluZGljYXRvciB8fCBpc0Rpc2FibGVkIHx8ICF0aGlzLmhhc1ZhbHVlKCkgfHwgaXNMb2FkaW5nKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgaW5uZXJQcm9wcyA9IHtcbiAgICAgICAgb25Nb3VzZURvd246IHRoaXMub25DbGVhckluZGljYXRvck1vdXNlRG93bixcbiAgICAgICAgb25Ub3VjaEVuZDogdGhpcy5vbkNsZWFySW5kaWNhdG9yVG91Y2hFbmQsXG4gICAgICAgICdhcmlhLWhpZGRlbic6ICd0cnVlJ1xuICAgICAgfTtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENsZWFySW5kaWNhdG9yLCBfZXh0ZW5kcyh7fSwgY29tbW9uUHJvcHMsIHtcbiAgICAgICAgaW5uZXJQcm9wczogaW5uZXJQcm9wcyxcbiAgICAgICAgaXNGb2N1c2VkOiBpc0ZvY3VzZWRcbiAgICAgIH0pKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyTG9hZGluZ0luZGljYXRvclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJMb2FkaW5nSW5kaWNhdG9yKCkge1xuICAgICAgdmFyIExvYWRpbmdJbmRpY2F0b3IgPSB0aGlzLmNvbXBvbmVudHMuTG9hZGluZ0luZGljYXRvcjtcbiAgICAgIHZhciBjb21tb25Qcm9wcyA9IHRoaXMuY29tbW9uUHJvcHM7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMxNyA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgaXNEaXNhYmxlZCA9IF90aGlzJHByb3BzMTcuaXNEaXNhYmxlZCxcbiAgICAgICAgICBpc0xvYWRpbmcgPSBfdGhpcyRwcm9wczE3LmlzTG9hZGluZztcbiAgICAgIHZhciBpc0ZvY3VzZWQgPSB0aGlzLnN0YXRlLmlzRm9jdXNlZDtcbiAgICAgIGlmICghTG9hZGluZ0luZGljYXRvciB8fCAhaXNMb2FkaW5nKSByZXR1cm4gbnVsbDtcbiAgICAgIHZhciBpbm5lclByb3BzID0ge1xuICAgICAgICAnYXJpYS1oaWRkZW4nOiAndHJ1ZSdcbiAgICAgIH07XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMb2FkaW5nSW5kaWNhdG9yLCBfZXh0ZW5kcyh7fSwgY29tbW9uUHJvcHMsIHtcbiAgICAgICAgaW5uZXJQcm9wczogaW5uZXJQcm9wcyxcbiAgICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCxcbiAgICAgICAgaXNGb2N1c2VkOiBpc0ZvY3VzZWRcbiAgICAgIH0pKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVySW5kaWNhdG9yU2VwYXJhdG9yXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckluZGljYXRvclNlcGFyYXRvcigpIHtcbiAgICAgIHZhciBfdGhpcyRjb21wb25lbnRzMiA9IHRoaXMuY29tcG9uZW50cyxcbiAgICAgICAgICBEcm9wZG93bkluZGljYXRvciA9IF90aGlzJGNvbXBvbmVudHMyLkRyb3Bkb3duSW5kaWNhdG9yLFxuICAgICAgICAgIEluZGljYXRvclNlcGFyYXRvciA9IF90aGlzJGNvbXBvbmVudHMyLkluZGljYXRvclNlcGFyYXRvcjsgLy8gc2VwYXJhdG9yIGRvZXNuJ3QgbWFrZSBzZW5zZSB3aXRob3V0IHRoZSBkcm9wZG93biBpbmRpY2F0b3JcblxuICAgICAgaWYgKCFEcm9wZG93bkluZGljYXRvciB8fCAhSW5kaWNhdG9yU2VwYXJhdG9yKSByZXR1cm4gbnVsbDtcbiAgICAgIHZhciBjb21tb25Qcm9wcyA9IHRoaXMuY29tbW9uUHJvcHM7XG4gICAgICB2YXIgaXNEaXNhYmxlZCA9IHRoaXMucHJvcHMuaXNEaXNhYmxlZDtcbiAgICAgIHZhciBpc0ZvY3VzZWQgPSB0aGlzLnN0YXRlLmlzRm9jdXNlZDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEluZGljYXRvclNlcGFyYXRvciwgX2V4dGVuZHMoe30sIGNvbW1vblByb3BzLCB7XG4gICAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICAgIGlzRm9jdXNlZDogaXNGb2N1c2VkXG4gICAgICB9KSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlckRyb3Bkb3duSW5kaWNhdG9yXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckRyb3Bkb3duSW5kaWNhdG9yKCkge1xuICAgICAgdmFyIERyb3Bkb3duSW5kaWNhdG9yID0gdGhpcy5jb21wb25lbnRzLkRyb3Bkb3duSW5kaWNhdG9yO1xuICAgICAgaWYgKCFEcm9wZG93bkluZGljYXRvcikgcmV0dXJuIG51bGw7XG4gICAgICB2YXIgY29tbW9uUHJvcHMgPSB0aGlzLmNvbW1vblByb3BzO1xuICAgICAgdmFyIGlzRGlzYWJsZWQgPSB0aGlzLnByb3BzLmlzRGlzYWJsZWQ7XG4gICAgICB2YXIgaXNGb2N1c2VkID0gdGhpcy5zdGF0ZS5pc0ZvY3VzZWQ7XG4gICAgICB2YXIgaW5uZXJQcm9wcyA9IHtcbiAgICAgICAgb25Nb3VzZURvd246IHRoaXMub25Ecm9wZG93bkluZGljYXRvck1vdXNlRG93bixcbiAgICAgICAgb25Ub3VjaEVuZDogdGhpcy5vbkRyb3Bkb3duSW5kaWNhdG9yVG91Y2hFbmQsXG4gICAgICAgICdhcmlhLWhpZGRlbic6ICd0cnVlJ1xuICAgICAgfTtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSW5kaWNhdG9yLCBfZXh0ZW5kcyh7fSwgY29tbW9uUHJvcHMsIHtcbiAgICAgICAgaW5uZXJQcm9wczogaW5uZXJQcm9wcyxcbiAgICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCxcbiAgICAgICAgaXNGb2N1c2VkOiBpc0ZvY3VzZWRcbiAgICAgIH0pKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyTWVudVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJNZW51KCkge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgIHZhciBfdGhpcyRjb21wb25lbnRzMyA9IHRoaXMuY29tcG9uZW50cyxcbiAgICAgICAgICBHcm91cCA9IF90aGlzJGNvbXBvbmVudHMzLkdyb3VwLFxuICAgICAgICAgIEdyb3VwSGVhZGluZyA9IF90aGlzJGNvbXBvbmVudHMzLkdyb3VwSGVhZGluZyxcbiAgICAgICAgICBNZW51ID0gX3RoaXMkY29tcG9uZW50czMuTWVudSxcbiAgICAgICAgICBNZW51TGlzdCA9IF90aGlzJGNvbXBvbmVudHMzLk1lbnVMaXN0LFxuICAgICAgICAgIE1lbnVQb3J0YWwgPSBfdGhpcyRjb21wb25lbnRzMy5NZW51UG9ydGFsLFxuICAgICAgICAgIExvYWRpbmdNZXNzYWdlID0gX3RoaXMkY29tcG9uZW50czMuTG9hZGluZ01lc3NhZ2UsXG4gICAgICAgICAgTm9PcHRpb25zTWVzc2FnZSA9IF90aGlzJGNvbXBvbmVudHMzLk5vT3B0aW9uc01lc3NhZ2UsXG4gICAgICAgICAgT3B0aW9uID0gX3RoaXMkY29tcG9uZW50czMuT3B0aW9uO1xuICAgICAgdmFyIGNvbW1vblByb3BzID0gdGhpcy5jb21tb25Qcm9wcztcbiAgICAgIHZhciBfdGhpcyRzdGF0ZTkgPSB0aGlzLnN0YXRlLFxuICAgICAgICAgIGZvY3VzZWRPcHRpb24gPSBfdGhpcyRzdGF0ZTkuZm9jdXNlZE9wdGlvbixcbiAgICAgICAgICBtZW51T3B0aW9ucyA9IF90aGlzJHN0YXRlOS5tZW51T3B0aW9ucztcbiAgICAgIHZhciBfdGhpcyRwcm9wczE4ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBjYXB0dXJlTWVudVNjcm9sbCA9IF90aGlzJHByb3BzMTguY2FwdHVyZU1lbnVTY3JvbGwsXG4gICAgICAgICAgaW5wdXRWYWx1ZSA9IF90aGlzJHByb3BzMTguaW5wdXRWYWx1ZSxcbiAgICAgICAgICBpc0xvYWRpbmcgPSBfdGhpcyRwcm9wczE4LmlzTG9hZGluZyxcbiAgICAgICAgICBsb2FkaW5nTWVzc2FnZSA9IF90aGlzJHByb3BzMTgubG9hZGluZ01lc3NhZ2UsXG4gICAgICAgICAgbWluTWVudUhlaWdodCA9IF90aGlzJHByb3BzMTgubWluTWVudUhlaWdodCxcbiAgICAgICAgICBtYXhNZW51SGVpZ2h0ID0gX3RoaXMkcHJvcHMxOC5tYXhNZW51SGVpZ2h0LFxuICAgICAgICAgIG1lbnVJc09wZW4gPSBfdGhpcyRwcm9wczE4Lm1lbnVJc09wZW4sXG4gICAgICAgICAgbWVudVBsYWNlbWVudCA9IF90aGlzJHByb3BzMTgubWVudVBsYWNlbWVudCxcbiAgICAgICAgICBtZW51UG9zaXRpb24gPSBfdGhpcyRwcm9wczE4Lm1lbnVQb3NpdGlvbixcbiAgICAgICAgICBtZW51UG9ydGFsVGFyZ2V0ID0gX3RoaXMkcHJvcHMxOC5tZW51UG9ydGFsVGFyZ2V0LFxuICAgICAgICAgIG1lbnVTaG91bGRCbG9ja1Njcm9sbCA9IF90aGlzJHByb3BzMTgubWVudVNob3VsZEJsb2NrU2Nyb2xsLFxuICAgICAgICAgIG1lbnVTaG91bGRTY3JvbGxJbnRvVmlldyA9IF90aGlzJHByb3BzMTgubWVudVNob3VsZFNjcm9sbEludG9WaWV3LFxuICAgICAgICAgIG5vT3B0aW9uc01lc3NhZ2UgPSBfdGhpcyRwcm9wczE4Lm5vT3B0aW9uc01lc3NhZ2UsXG4gICAgICAgICAgb25NZW51U2Nyb2xsVG9Ub3AgPSBfdGhpcyRwcm9wczE4Lm9uTWVudVNjcm9sbFRvVG9wLFxuICAgICAgICAgIG9uTWVudVNjcm9sbFRvQm90dG9tID0gX3RoaXMkcHJvcHMxOC5vbk1lbnVTY3JvbGxUb0JvdHRvbTtcbiAgICAgIGlmICghbWVudUlzT3BlbikgcmV0dXJuIG51bGw7IC8vIFRPRE86IEludGVybmFsIE9wdGlvbiBUeXBlIGhlcmVcblxuICAgICAgdmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcihwcm9wcykge1xuICAgICAgICAvLyBmb3IgcGVyZm9ybWFuY2UsIHRoZSBtZW51IG9wdGlvbnMgaW4gc3RhdGUgYXJlbid0IGNoYW5nZWQgd2hlbiB0aGVcbiAgICAgICAgLy8gZm9jdXNlZCBvcHRpb24gY2hhbmdlcyBzbyB3ZSBjYWxjdWxhdGUgYWRkaXRpb25hbCBwcm9wcyBiYXNlZCBvbiB0aGF0XG4gICAgICAgIHZhciBpc0ZvY3VzZWQgPSBmb2N1c2VkT3B0aW9uID09PSBwcm9wcy5kYXRhO1xuICAgICAgICBwcm9wcy5pbm5lclJlZiA9IGlzRm9jdXNlZCA/IF90aGlzNS5nZXRGb2N1c2VkT3B0aW9uUmVmIDogdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChPcHRpb24sIF9leHRlbmRzKHt9LCBjb21tb25Qcm9wcywgcHJvcHMsIHtcbiAgICAgICAgICBpc0ZvY3VzZWQ6IGlzRm9jdXNlZFxuICAgICAgICB9KSwgX3RoaXM1LmZvcm1hdE9wdGlvbkxhYmVsKHByb3BzLmRhdGEsICdtZW51JykpO1xuICAgICAgfTtcblxuICAgICAgdmFyIG1lbnVVSTtcblxuICAgICAgaWYgKHRoaXMuaGFzT3B0aW9ucygpKSB7XG4gICAgICAgIG1lbnVVSSA9IG1lbnVPcHRpb25zLnJlbmRlci5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICBpZiAoaXRlbS50eXBlID09PSAnZ3JvdXAnKSB7XG4gICAgICAgICAgICB2YXIgdHlwZSA9IGl0ZW0udHlwZSxcbiAgICAgICAgICAgICAgICBncm91cCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhpdGVtLCBbXCJ0eXBlXCJdKTtcblxuICAgICAgICAgICAgdmFyIGhlYWRpbmdJZCA9IFwiXCIuY29uY2F0KGl0ZW0ua2V5LCBcIi1oZWFkaW5nXCIpO1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoR3JvdXAsIF9leHRlbmRzKHt9LCBjb21tb25Qcm9wcywgZ3JvdXAsIHtcbiAgICAgICAgICAgICAgSGVhZGluZzogR3JvdXBIZWFkaW5nLFxuICAgICAgICAgICAgICBoZWFkaW5nUHJvcHM6IHtcbiAgICAgICAgICAgICAgICBpZDogaGVhZGluZ0lkXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGxhYmVsOiBfdGhpczUuZm9ybWF0R3JvdXBMYWJlbChpdGVtLmRhdGEpXG4gICAgICAgICAgICB9KSwgaXRlbS5vcHRpb25zLm1hcChmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICAgICAgICAgIHJldHVybiByZW5kZXIob3B0aW9uKTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW0udHlwZSA9PT0gJ29wdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybiByZW5kZXIoaXRlbSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAoaXNMb2FkaW5nKSB7XG4gICAgICAgIHZhciBtZXNzYWdlID0gbG9hZGluZ01lc3NhZ2Uoe1xuICAgICAgICAgIGlucHV0VmFsdWU6IGlucHV0VmFsdWVcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChtZXNzYWdlID09PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICAgICAgbWVudVVJID0gUmVhY3QuY3JlYXRlRWxlbWVudChMb2FkaW5nTWVzc2FnZSwgY29tbW9uUHJvcHMsIG1lc3NhZ2UpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIF9tZXNzYWdlID0gbm9PcHRpb25zTWVzc2FnZSh7XG4gICAgICAgICAgaW5wdXRWYWx1ZTogaW5wdXRWYWx1ZVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoX21lc3NhZ2UgPT09IG51bGwpIHJldHVybiBudWxsO1xuICAgICAgICBtZW51VUkgPSBSZWFjdC5jcmVhdGVFbGVtZW50KE5vT3B0aW9uc01lc3NhZ2UsIGNvbW1vblByb3BzLCBfbWVzc2FnZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBtZW51UGxhY2VtZW50UHJvcHMgPSB7XG4gICAgICAgIG1pbk1lbnVIZWlnaHQ6IG1pbk1lbnVIZWlnaHQsXG4gICAgICAgIG1heE1lbnVIZWlnaHQ6IG1heE1lbnVIZWlnaHQsXG4gICAgICAgIG1lbnVQbGFjZW1lbnQ6IG1lbnVQbGFjZW1lbnQsXG4gICAgICAgIG1lbnVQb3NpdGlvbjogbWVudVBvc2l0aW9uLFxuICAgICAgICBtZW51U2hvdWxkU2Nyb2xsSW50b1ZpZXc6IG1lbnVTaG91bGRTY3JvbGxJbnRvVmlld1xuICAgICAgfTtcbiAgICAgIHZhciBtZW51RWxlbWVudCA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudVBsYWNlciwgX2V4dGVuZHMoe30sIGNvbW1vblByb3BzLCBtZW51UGxhY2VtZW50UHJvcHMpLCBmdW5jdGlvbiAoX3JlZjYpIHtcbiAgICAgICAgdmFyIHJlZiA9IF9yZWY2LnJlZixcbiAgICAgICAgICAgIF9yZWY2JHBsYWNlclByb3BzID0gX3JlZjYucGxhY2VyUHJvcHMsXG4gICAgICAgICAgICBwbGFjZW1lbnQgPSBfcmVmNiRwbGFjZXJQcm9wcy5wbGFjZW1lbnQsXG4gICAgICAgICAgICBtYXhIZWlnaHQgPSBfcmVmNiRwbGFjZXJQcm9wcy5tYXhIZWlnaHQ7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE1lbnUsIF9leHRlbmRzKHt9LCBjb21tb25Qcm9wcywgbWVudVBsYWNlbWVudFByb3BzLCB7XG4gICAgICAgICAgaW5uZXJSZWY6IHJlZixcbiAgICAgICAgICBpbm5lclByb3BzOiB7XG4gICAgICAgICAgICBvbk1vdXNlRG93bjogX3RoaXM1Lm9uTWVudU1vdXNlRG93bixcbiAgICAgICAgICAgIG9uTW91c2VNb3ZlOiBfdGhpczUub25NZW51TW91c2VNb3ZlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBpc0xvYWRpbmc6IGlzTG9hZGluZyxcbiAgICAgICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudFxuICAgICAgICB9KSwgUmVhY3QuY3JlYXRlRWxlbWVudChTY3JvbGxDYXB0b3JTd2l0Y2gsIHtcbiAgICAgICAgICBpc0VuYWJsZWQ6IGNhcHR1cmVNZW51U2Nyb2xsLFxuICAgICAgICAgIG9uVG9wQXJyaXZlOiBvbk1lbnVTY3JvbGxUb1RvcCxcbiAgICAgICAgICBvbkJvdHRvbUFycml2ZTogb25NZW51U2Nyb2xsVG9Cb3R0b21cbiAgICAgICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChTY3JvbGxCbG9jaywge1xuICAgICAgICAgIGlzRW5hYmxlZDogbWVudVNob3VsZEJsb2NrU2Nyb2xsXG4gICAgICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudUxpc3QsIF9leHRlbmRzKHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgICAgIGlubmVyUmVmOiBfdGhpczUuZ2V0TWVudUxpc3RSZWYsXG4gICAgICAgICAgaXNMb2FkaW5nOiBpc0xvYWRpbmcsXG4gICAgICAgICAgbWF4SGVpZ2h0OiBtYXhIZWlnaHRcbiAgICAgICAgfSksIG1lbnVVSSkpKSk7XG4gICAgICB9KTsgLy8gcG9zaXRpb25pbmcgYmVoYXZpb3VyIGlzIGFsbW9zdCBpZGVudGljYWwgZm9yIHBvcnRhbGxlZCBhbmQgZml4ZWQsXG4gICAgICAvLyBzbyB3ZSB1c2UgdGhlIHNhbWUgY29tcG9uZW50LiB0aGUgYWN0dWFsIHBvcnRhbGxpbmcgbG9naWMgaXMgZm9ya2VkXG4gICAgICAvLyB3aXRoaW4gdGhlIGNvbXBvbmVudCBiYXNlZCBvbiBgbWVudVBvc2l0aW9uYFxuXG4gICAgICByZXR1cm4gbWVudVBvcnRhbFRhcmdldCB8fCBtZW51UG9zaXRpb24gPT09ICdmaXhlZCcgPyBSZWFjdC5jcmVhdGVFbGVtZW50KE1lbnVQb3J0YWwsIF9leHRlbmRzKHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgICBhcHBlbmRUbzogbWVudVBvcnRhbFRhcmdldCxcbiAgICAgICAgY29udHJvbEVsZW1lbnQ6IHRoaXMuY29udHJvbFJlZixcbiAgICAgICAgbWVudVBsYWNlbWVudDogbWVudVBsYWNlbWVudCxcbiAgICAgICAgbWVudVBvc2l0aW9uOiBtZW51UG9zaXRpb25cbiAgICAgIH0pLCBtZW51RWxlbWVudCkgOiBtZW51RWxlbWVudDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyRm9ybUZpZWxkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckZvcm1GaWVsZCgpIHtcbiAgICAgIHZhciBfdGhpczYgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMxOSA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgZGVsaW1pdGVyID0gX3RoaXMkcHJvcHMxOS5kZWxpbWl0ZXIsXG4gICAgICAgICAgaXNEaXNhYmxlZCA9IF90aGlzJHByb3BzMTkuaXNEaXNhYmxlZCxcbiAgICAgICAgICBpc011bHRpID0gX3RoaXMkcHJvcHMxOS5pc011bHRpLFxuICAgICAgICAgIG5hbWUgPSBfdGhpcyRwcm9wczE5Lm5hbWU7XG4gICAgICB2YXIgc2VsZWN0VmFsdWUgPSB0aGlzLnN0YXRlLnNlbGVjdFZhbHVlO1xuICAgICAgaWYgKCFuYW1lIHx8IGlzRGlzYWJsZWQpIHJldHVybjtcblxuICAgICAgaWYgKGlzTXVsdGkpIHtcbiAgICAgICAgaWYgKGRlbGltaXRlcikge1xuICAgICAgICAgIHZhciB2YWx1ZSA9IHNlbGVjdFZhbHVlLm1hcChmdW5jdGlvbiAob3B0KSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXM2LmdldE9wdGlvblZhbHVlKG9wdCk7XG4gICAgICAgICAgfSkuam9pbihkZWxpbWl0ZXIpO1xuICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgIHR5cGU6IFwiaGlkZGVuXCIsXG4gICAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgaW5wdXQgPSBzZWxlY3RWYWx1ZS5sZW5ndGggPiAwID8gc2VsZWN0VmFsdWUubWFwKGZ1bmN0aW9uIChvcHQsIGkpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICBrZXk6IFwiaS1cIi5jb25jYXQoaSksXG4gICAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgIHR5cGU6IFwiaGlkZGVuXCIsXG4gICAgICAgICAgICAgIHZhbHVlOiBfdGhpczYuZ2V0T3B0aW9uVmFsdWUob3B0KVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSkgOiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgIHR5cGU6IFwiaGlkZGVuXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBpbnB1dCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBfdmFsdWUgPSBzZWxlY3RWYWx1ZVswXSA/IHRoaXMuZ2V0T3B0aW9uVmFsdWUoc2VsZWN0VmFsdWVbMF0pIDogJyc7XG5cbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICB0eXBlOiBcImhpZGRlblwiLFxuICAgICAgICAgIHZhbHVlOiBfdmFsdWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlckxpdmVSZWdpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyTGl2ZVJlZ2lvbigpIHtcbiAgICAgIGlmICghdGhpcy5zdGF0ZS5pc0ZvY3VzZWQpIHJldHVybiBudWxsO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQTExeVRleHQsIHtcbiAgICAgICAgXCJhcmlhLWxpdmVcIjogXCJwb2xpdGVcIlxuICAgICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge1xuICAgICAgICBpZDogXCJhcmlhLXNlbGVjdGlvbi1ldmVudFwiXG4gICAgICB9LCBcIlxceEEwXCIsIHRoaXMuc3RhdGUuYXJpYUxpdmVTZWxlY3Rpb24pLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7XG4gICAgICAgIGlkOiBcImFyaWEtY29udGV4dFwiXG4gICAgICB9LCBcIlxceEEwXCIsIHRoaXMuY29uc3RydWN0QXJpYUxpdmVNZXNzYWdlKCkpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpcyRjb21wb25lbnRzNCA9IHRoaXMuY29tcG9uZW50cyxcbiAgICAgICAgICBDb250cm9sID0gX3RoaXMkY29tcG9uZW50czQuQ29udHJvbCxcbiAgICAgICAgICBJbmRpY2F0b3JzQ29udGFpbmVyID0gX3RoaXMkY29tcG9uZW50czQuSW5kaWNhdG9yc0NvbnRhaW5lcixcbiAgICAgICAgICBTZWxlY3RDb250YWluZXIgPSBfdGhpcyRjb21wb25lbnRzNC5TZWxlY3RDb250YWluZXIsXG4gICAgICAgICAgVmFsdWVDb250YWluZXIgPSBfdGhpcyRjb21wb25lbnRzNC5WYWx1ZUNvbnRhaW5lcjtcbiAgICAgIHZhciBfdGhpcyRwcm9wczIwID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBjbGFzc05hbWUgPSBfdGhpcyRwcm9wczIwLmNsYXNzTmFtZSxcbiAgICAgICAgICBpZCA9IF90aGlzJHByb3BzMjAuaWQsXG4gICAgICAgICAgaXNEaXNhYmxlZCA9IF90aGlzJHByb3BzMjAuaXNEaXNhYmxlZCxcbiAgICAgICAgICBtZW51SXNPcGVuID0gX3RoaXMkcHJvcHMyMC5tZW51SXNPcGVuO1xuICAgICAgdmFyIGlzRm9jdXNlZCA9IHRoaXMuc3RhdGUuaXNGb2N1c2VkO1xuICAgICAgdmFyIGNvbW1vblByb3BzID0gdGhpcy5jb21tb25Qcm9wcyA9IHRoaXMuZ2V0Q29tbW9uUHJvcHMoKTtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFNlbGVjdENvbnRhaW5lciwgX2V4dGVuZHMoe30sIGNvbW1vblByb3BzLCB7XG4gICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgICBpbm5lclByb3BzOiB7XG4gICAgICAgICAgaWQ6IGlkLFxuICAgICAgICAgIG9uS2V5RG93bjogdGhpcy5vbktleURvd25cbiAgICAgICAgfSxcbiAgICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCxcbiAgICAgICAgaXNGb2N1c2VkOiBpc0ZvY3VzZWRcbiAgICAgIH0pLCB0aGlzLnJlbmRlckxpdmVSZWdpb24oKSwgUmVhY3QuY3JlYXRlRWxlbWVudChDb250cm9sLCBfZXh0ZW5kcyh7fSwgY29tbW9uUHJvcHMsIHtcbiAgICAgICAgaW5uZXJSZWY6IHRoaXMuZ2V0Q29udHJvbFJlZixcbiAgICAgICAgaW5uZXJQcm9wczoge1xuICAgICAgICAgIG9uTW91c2VEb3duOiB0aGlzLm9uQ29udHJvbE1vdXNlRG93bixcbiAgICAgICAgICBvblRvdWNoRW5kOiB0aGlzLm9uQ29udHJvbFRvdWNoRW5kXG4gICAgICAgIH0sXG4gICAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICAgIGlzRm9jdXNlZDogaXNGb2N1c2VkLFxuICAgICAgICBtZW51SXNPcGVuOiBtZW51SXNPcGVuXG4gICAgICB9KSwgUmVhY3QuY3JlYXRlRWxlbWVudChWYWx1ZUNvbnRhaW5lciwgX2V4dGVuZHMoe30sIGNvbW1vblByb3BzLCB7XG4gICAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWRcbiAgICAgIH0pLCB0aGlzLnJlbmRlclBsYWNlaG9sZGVyT3JWYWx1ZSgpLCB0aGlzLnJlbmRlcklucHV0KCkpLCBSZWFjdC5jcmVhdGVFbGVtZW50KEluZGljYXRvcnNDb250YWluZXIsIF9leHRlbmRzKHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgICBpc0Rpc2FibGVkOiBpc0Rpc2FibGVkXG4gICAgICB9KSwgdGhpcy5yZW5kZXJDbGVhckluZGljYXRvcigpLCB0aGlzLnJlbmRlckxvYWRpbmdJbmRpY2F0b3IoKSwgdGhpcy5yZW5kZXJJbmRpY2F0b3JTZXBhcmF0b3IoKSwgdGhpcy5yZW5kZXJEcm9wZG93bkluZGljYXRvcigpKSksIHRoaXMucmVuZGVyTWVudSgpLCB0aGlzLnJlbmRlckZvcm1GaWVsZCgpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU2VsZWN0O1xufShDb21wb25lbnQpO1xuXG5fZGVmaW5lUHJvcGVydHkoU2VsZWN0LCBcImRlZmF1bHRQcm9wc1wiLCBkZWZhdWx0UHJvcHMpO1xuXG5leHBvcnQgeyBTZWxlY3QgYXMgUywgZGVmYXVsdFRoZW1lIGFzIGEsIGNyZWF0ZUZpbHRlciBhcyBjLCBkZWZhdWx0UHJvcHMgYXMgZCwgbWVyZ2VTdHlsZXMgYXMgbSB9O1xuIiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllcyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrJztcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MnO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4nO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZic7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzJztcbmltcG9ydCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZCc7XG5pbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5JztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIGRlZmF1bHRJbnB1dFZhbHVlOiAnJyxcbiAgZGVmYXVsdE1lbnVJc09wZW46IGZhbHNlLFxuICBkZWZhdWx0VmFsdWU6IG51bGxcbn07XG5cbnZhciBtYW5hZ2VTdGF0ZSA9IGZ1bmN0aW9uIG1hbmFnZVN0YXRlKFNlbGVjdENvbXBvbmVudCkge1xuICB2YXIgX2NsYXNzLCBfdGVtcDtcblxuICByZXR1cm4gX3RlbXAgPSBfY2xhc3MgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKFN0YXRlTWFuYWdlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBTdGF0ZU1hbmFnZXIoKSB7XG4gICAgICB2YXIgX2dldFByb3RvdHlwZU9mMjtcblxuICAgICAgdmFyIF90aGlzO1xuXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3RhdGVNYW5hZ2VyKTtcblxuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKF9nZXRQcm90b3R5cGVPZjIgPSBfZ2V0UHJvdG90eXBlT2YoU3RhdGVNYW5hZ2VyKSkuY2FsbC5hcHBseShfZ2V0UHJvdG90eXBlT2YyLCBbdGhpc10uY29uY2F0KGFyZ3MpKSk7XG5cbiAgICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJzZWxlY3RcIiwgdm9pZCAwKTtcblxuICAgICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcInN0YXRlXCIsIHtcbiAgICAgICAgaW5wdXRWYWx1ZTogX3RoaXMucHJvcHMuaW5wdXRWYWx1ZSAhPT0gdW5kZWZpbmVkID8gX3RoaXMucHJvcHMuaW5wdXRWYWx1ZSA6IF90aGlzLnByb3BzLmRlZmF1bHRJbnB1dFZhbHVlLFxuICAgICAgICBtZW51SXNPcGVuOiBfdGhpcy5wcm9wcy5tZW51SXNPcGVuICE9PSB1bmRlZmluZWQgPyBfdGhpcy5wcm9wcy5tZW51SXNPcGVuIDogX3RoaXMucHJvcHMuZGVmYXVsdE1lbnVJc09wZW4sXG4gICAgICAgIHZhbHVlOiBfdGhpcy5wcm9wcy52YWx1ZSAhPT0gdW5kZWZpbmVkID8gX3RoaXMucHJvcHMudmFsdWUgOiBfdGhpcy5wcm9wcy5kZWZhdWx0VmFsdWVcbiAgICAgIH0pO1xuXG4gICAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwib25DaGFuZ2VcIiwgZnVuY3Rpb24gKHZhbHVlLCBhY3Rpb25NZXRhKSB7XG4gICAgICAgIF90aGlzLmNhbGxQcm9wKCdvbkNoYW5nZScsIHZhbHVlLCBhY3Rpb25NZXRhKTtcblxuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJvbklucHV0Q2hhbmdlXCIsIGZ1bmN0aW9uICh2YWx1ZSwgYWN0aW9uTWV0YSkge1xuICAgICAgICAvLyBUT0RPOiBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHksIHdlIGFsbG93IHRoZSBwcm9wIHRvIHJldHVybiBhIG5ld1xuICAgICAgICAvLyB2YWx1ZSwgYnV0IG5vdyBpbnB1dFZhbHVlIGlzIGEgY29udHJvbGxhYmxlIHByb3Agd2UgcHJvYmFibHkgc2hvdWxkbid0XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IF90aGlzLmNhbGxQcm9wKCdvbklucHV0Q2hhbmdlJywgdmFsdWUsIGFjdGlvbk1ldGEpO1xuXG4gICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBpbnB1dFZhbHVlOiBuZXdWYWx1ZSAhPT0gdW5kZWZpbmVkID8gbmV3VmFsdWUgOiB2YWx1ZVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSksIFwib25NZW51T3BlblwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLmNhbGxQcm9wKCdvbk1lbnVPcGVuJyk7XG5cbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIG1lbnVJc09wZW46IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9KTtcblxuICAgICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcIm9uTWVudUNsb3NlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMuY2FsbFByb3AoJ29uTWVudUNsb3NlJyk7XG5cbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIG1lbnVJc09wZW46IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoU3RhdGVNYW5hZ2VyLCBbe1xuICAgICAga2V5OiBcImZvY3VzXCIsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gZm9jdXMoKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0LmZvY3VzKCk7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcImJsdXJcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBibHVyKCkge1xuICAgICAgICB0aGlzLnNlbGVjdC5ibHVyKCk7XG4gICAgICB9IC8vIEZJWE1FOiB1bnR5cGVkIGZsb3cgY29kZSwgcmV0dXJuIGFueVxuXG4gICAgfSwge1xuICAgICAga2V5OiBcImdldFByb3BcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQcm9wKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9wc1trZXldICE9PSB1bmRlZmluZWQgPyB0aGlzLnByb3BzW2tleV0gOiB0aGlzLnN0YXRlW2tleV07XG4gICAgICB9IC8vIEZJWE1FOiB1bnR5cGVkIGZsb3cgY29kZSwgcmV0dXJuIGFueVxuXG4gICAgfSwge1xuICAgICAga2V5OiBcImNhbGxQcm9wXCIsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gY2FsbFByb3AobmFtZSkge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMucHJvcHNbbmFtZV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB2YXIgX3RoaXMkcHJvcHM7XG5cbiAgICAgICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIgPiAxID8gX2xlbjIgLSAxIDogMCksIF9rZXkyID0gMTsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICAgICAgYXJnc1tfa2V5MiAtIDFdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gKF90aGlzJHByb3BzID0gdGhpcy5wcm9wcylbbmFtZV0uYXBwbHkoX3RoaXMkcHJvcHMsIGFyZ3MpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiBcInJlbmRlclwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgICBkZWZhdWx0SW5wdXRWYWx1ZSA9IF90aGlzJHByb3BzMi5kZWZhdWx0SW5wdXRWYWx1ZSxcbiAgICAgICAgICAgIGRlZmF1bHRNZW51SXNPcGVuID0gX3RoaXMkcHJvcHMyLmRlZmF1bHRNZW51SXNPcGVuLFxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlID0gX3RoaXMkcHJvcHMyLmRlZmF1bHRWYWx1ZSxcbiAgICAgICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF90aGlzJHByb3BzMiwgW1wiZGVmYXVsdElucHV0VmFsdWVcIiwgXCJkZWZhdWx0TWVudUlzT3BlblwiLCBcImRlZmF1bHRWYWx1ZVwiXSk7XG5cbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2VsZWN0Q29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgICByZWY6IGZ1bmN0aW9uIHJlZihfcmVmKSB7XG4gICAgICAgICAgICBfdGhpczIuc2VsZWN0ID0gX3JlZjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGlucHV0VmFsdWU6IHRoaXMuZ2V0UHJvcCgnaW5wdXRWYWx1ZScpLFxuICAgICAgICAgIG1lbnVJc09wZW46IHRoaXMuZ2V0UHJvcCgnbWVudUlzT3BlbicpLFxuICAgICAgICAgIG9uQ2hhbmdlOiB0aGlzLm9uQ2hhbmdlLFxuICAgICAgICAgIG9uSW5wdXRDaGFuZ2U6IHRoaXMub25JbnB1dENoYW5nZSxcbiAgICAgICAgICBvbk1lbnVDbG9zZTogdGhpcy5vbk1lbnVDbG9zZSxcbiAgICAgICAgICBvbk1lbnVPcGVuOiB0aGlzLm9uTWVudU9wZW4sXG4gICAgICAgICAgdmFsdWU6IHRoaXMuZ2V0UHJvcCgndmFsdWUnKVxuICAgICAgICB9KSk7XG4gICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIFN0YXRlTWFuYWdlcjtcbiAgfShDb21wb25lbnQpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzLCBcImRlZmF1bHRQcm9wc1wiLCBkZWZhdWx0UHJvcHMpLCBfdGVtcDtcbn07XG5cbmV4cG9ydCB7IG1hbmFnZVN0YXRlIGFzIG0gfTtcbiIsImltcG9ydCAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMnO1xuaW1wb3J0ICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXknO1xuaW1wb3J0ICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQnO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayc7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzJztcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJztcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YnO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyc7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQnO1xuaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IG1lbW9pemVPbmUgZnJvbSAnbWVtb2l6ZS1vbmUnO1xuaW1wb3J0IHsgQ2FjaGVQcm92aWRlciB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0ICdyZWFjdC1kb20nO1xuaW1wb3J0ICdwcm9wLXR5cGVzJztcbmltcG9ydCAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mJztcbmltcG9ydCAncmFmJztcbmltcG9ydCAnLi9jaHVuay1lOGFlNGIwZi5icm93c2VyLmVzbS5qcyc7XG5leHBvcnQgeyB5IGFzIGNvbXBvbmVudHMgfSBmcm9tICcuL2NodW5rLTVkMjAwYTQxLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IFMgYXMgU2VsZWN0IH0gZnJvbSAnLi9iYXNlL2Rpc3QvcmVhY3Qtc2VsZWN0LWEzNGU5ZDEyLmJyb3dzZXIuZXNtLmpzJztcbmV4cG9ydCB7IGMgYXMgY3JlYXRlRmlsdGVyLCBhIGFzIGRlZmF1bHRUaGVtZSwgbSBhcyBtZXJnZVN0eWxlcyB9IGZyb20gJy4vYmFzZS9kaXN0L3JlYWN0LXNlbGVjdC1hMzRlOWQxMi5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCc7XG5pbXBvcnQgJ3JlYWN0LWlucHV0LWF1dG9zaXplJztcbmltcG9ydCB7IG0gYXMgbWFuYWdlU3RhdGUgfSBmcm9tICcuL2NodW5rLWIzNmJhZjFhLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCBjcmVhdGVDYWNoZSBmcm9tICdAZW1vdGlvbi9jYWNoZSc7XG5cbnZhciBOb25jZVByb3ZpZGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhOb25jZVByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBOb25jZVByb3ZpZGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5vbmNlUHJvdmlkZXIpO1xuXG4gICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoTm9uY2VQcm92aWRlcikuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcImNyZWF0ZUVtb3Rpb25DYWNoZVwiLCBmdW5jdGlvbiAobm9uY2UpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDYWNoZSh7XG4gICAgICAgIG5vbmNlOiBub25jZVxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfdGhpcy5jcmVhdGVFbW90aW9uQ2FjaGUgPSBtZW1vaXplT25lKF90aGlzLmNyZWF0ZUVtb3Rpb25DYWNoZSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKE5vbmNlUHJvdmlkZXIsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgZW1vdGlvbkNhY2hlID0gdGhpcy5jcmVhdGVFbW90aW9uQ2FjaGUodGhpcy5wcm9wcy5ub25jZSk7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDYWNoZVByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBlbW90aW9uQ2FjaGVcbiAgICAgIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBOb25jZVByb3ZpZGVyO1xufShDb21wb25lbnQpO1xuXG52YXIgaW5kZXggPSBtYW5hZ2VTdGF0ZShTZWxlY3QpO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbmV4cG9ydCB7IE5vbmNlUHJvdmlkZXIgfTtcbiIsImV4cG9ydCBjb25zdCBzdGF0dXNPcHRpb25zID0gW1xyXG4gICAgeyB2YWx1ZTogJzEnLCBsYWJlbDogJ1Jlc2VhcmNoaW5nJyB9LFxyXG4gICAgeyB2YWx1ZTogJzInLCBsYWJlbDogJ1BlbmRpbmcgYXBwcm92YWwnIH0sXHJcbiAgICB7IHZhbHVlOiAnMycsIGxhYmVsOiAnQXBwcm92ZWQnIH0sXHJcbiAgICB7IHZhbHVlOiAnNCcsIGxhYmVsOiAnRGVjbGluZWQnIH1cclxuICBdOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ3JlYWN0LWJvb3RzdHJhcCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgU2VsZWN0IGZyb20gJ3JlYWN0LXNlbGVjdCc7XHJcbmltcG9ydCB7c3RhdHVzT3B0aW9uc30gZnJvbSAnLi4vLi4vLi4vdXRpbHMnO1xyXG4gXHJcbmNsYXNzIFR5cGVBaGVhZERyb3Bkb3duIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgICAgICBzdXBlcihwcm9wcyk7XHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgICAgICAgc2VsZWN0ZWRPcHRpb246IHByb3BzLnZhbHVlIHx8IDEsXHJcbiAgICAgICAgfTsgICBcclxuICAgICAgICB0aGlzLmhhbmRsZUNoYW5nZSA9IHRoaXMuaGFuZGxlQ2hhbmdlLmJpbmQodGhpcyk7ICAgICBcclxuICAgIH1cclxuICBcclxuICBoYW5kbGVDaGFuZ2UgKGUpe1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IHNlbGVjdGVkT3B0aW9uOiBlLnZhbHVlIH0pO1xyXG4gIH07XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBzZWxlY3RlZE9wdGlvbiB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIGxldCB7XHJcbiAgICAgICAgbGFiZWxcclxuICAgIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8U3R5bGVkRm9ybUdyb3VwPlxyXG4gICAgICAgICAgICA8bGFiZWw+e2xhYmVsfTwvbGFiZWw+XHJcbiAgICAgICAgICAgIDxTZWxlY3RcclxuICAgICAgICAgICAgICAgIHZhbHVlPXtzZWxlY3RlZE9wdGlvbn1cclxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cclxuICAgICAgICAgICAgICAgIG9wdGlvbnM9e3N0YXR1c09wdGlvbnN9ICAgICAgICAgICAgICAgIFxyXG5cdFx0XHRcdHBsYWNlaG9sZGVyPXtzdGF0dXNPcHRpb25zW3NlbGVjdGVkT3B0aW9uIC0gMV0ubGFiZWx9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgPC9TdHlsZWRGb3JtR3JvdXA+ICAgICAgXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVHlwZUFoZWFkRHJvcGRvd247XHJcblxyXG5jb25zdCBTdHlsZWRGb3JtR3JvdXAgPSBzdHlsZWQoRm9ybUdyb3VwKWBcclxuICAgICYmJiB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMjAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAxNXB4IGF1dG87XHJcbiAgICAgICAgbGFiZWwge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICB9ICBcclxuICAgIH0gXHJcbmA7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcbmltcG9ydCBxdWVyeVN0cmluZyBmcm9tICdxdWVyeS1zdHJpbmcnO1xyXG5pbXBvcnQgVGV4dElucHV0IGZyb20gJy4uL2NvbW1vbi90ZXh0SW5wdXQvVGV4dElucHV0JztcclxuaW1wb3J0IEhlYWRlciBmcm9tICcuLi9oZWFkZXIvSGVhZGVyJztcclxuaW1wb3J0IENvbW1vbkJ1dHRvbiBmcm9tICcuLi9jb21tb24vYnV0dG9uL0NvbW1vbkJ1dHRvbic7XHJcbmltcG9ydCBUeXBlQWhlYWREcm9wZG93biBmcm9tICcuLi9jb21tb24vdHlwZWFoZWFkZHJvcGRvd24vVHlwZUFoZWFkRHJvcGRvd24nO1xyXG5pbXBvcnQgeyB3aXRoUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG5jbGFzcyBBZGQgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IgKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgICAgICAgIGNvbXBhbnlJRDogcHJvcHMubWF0Y2ggJiYgcHJvcHMubWF0Y2gucGFyYW1zICYmIHByb3BzLm1hdGNoLnBhcmFtcy5pZCA/IHByb3BzLm1hdGNoLnBhcmFtcy5pZCA6IDAsXHJcbiAgICAgICAgICAgIGNvbXBhbnlJbmZvOiBwcm9wcy5sb2NhdGlvbiAmJiBwcm9wcy5sb2NhdGlvbi5zdGF0ZSA/IHByb3BzLmxvY2F0aW9uLnN0YXRlLmRhdGEgOiB7fSxcclxuICAgICAgICAgICAgdXNlck5hbWU6IHF1ZXJ5U3RyaW5nLnBhcnNlKHByb3BzLmxvY2F0aW9uLnNlYXJjaCkudXNlcm5hbWVcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuaGFuZGxlQ2FuY2VsID0gdGhpcy5oYW5kbGVDYW5jZWwuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBoYW5kbGVDYW5jZWwgKCkge1xyXG4gICAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKHtcclxuICAgICAgICAgICAgcGF0aG5hbWU6IGAvYFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlciAoKSB7XHJcbiAgICAgICAgY29uc3QgeyBjb21wYW55SUQsIGNvbXBhbnlJbmZvLCB1c2VyTmFtZSB9ID0gdGhpcy5zdGF0ZTtcclxuICAgICAgICBsZXQgdGl0bGUgPSBjb21wYW55SUQgPiAwID8gJ0VkaXQgY29tcGFueScgOiAnQWRkIG5ld2x5IGFjcXVpcmVkIGNvbXBhbnknO1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxXcmFwcGVyIGNsYXNzTmFtZT1cIm1haW5fY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICA8SGVhZGVyIHBhZ2VUaXRsZT17dGl0bGV9IHVzZXJOYW1lPXt1c2VyTmFtZX0gLz5cclxuICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImZvcm1fZmllbGRzX3dyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8VGV4dElucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJuYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciBjb21wYW55IG5hbWVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y29tcGFueUluZm8ubmFtZSB8fCAnJ31cclxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9XCJDb21wYW55IG5hbWVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhMZW5ndGg9ezUwMH1cclxuICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUZXh0SW5wdXRcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImRlc2NyaXB0aW9uXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciBjb21wYW55IGRlc2NyaXB0aW9uXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2NvbXBhbnlJbmZvLmRlc2NyaXB0aW9uIHx8ICcnfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD1cIkNvbXBhbnkgZGVzY3JpcHRpb25cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhMZW5ndGg9ezUwMH1cclxuICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUZXh0SW5wdXRcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImtleWNvbnRhY3RzXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciBrZXkgY29udGFjdHNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y29tcGFueUluZm8ua2V5Y29udGFjdHMgfHwgJyd9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPVwiS2V5IGNvbnRhY3RzXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4TGVuZ3RoPXs1MDB9XHJcbiAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICA8VGV4dElucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJuYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciBmaW5hbmNpYWwgcGVyZm9ybWFuY2VcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y29tcGFueUluZm8uZmluYW5jaWFscGVyZm9ybWFuY2UgfHwgJyd9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPVwiRmluYW5jaWFsIHBlcmZvcm1hbmNlIChpbiAlKVwiXHJcbiAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICA8VGV4dElucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJzdGF0dXNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIHN0YXR1c1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtjb21wYW55SW5mby5zdGF0dXMgfHwgMH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9XCJTdGF0dXNcIlxyXG4gICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFR5cGVBaGVhZERyb3Bkb3duIGxhYmVsPVwiU3RhdHVzXCIgdmFsdWU9e2NvbXBhbnlJbmZvLnN0YXR1c30gLz5cclxuICAgICAgICAgICAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgICAgICAgICAgIDxGb290ZXIgY2xhc3NOYW1lPVwiZm9vdGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPENvbW1vbkJ1dHRvbiBsYWJlbD1cIlNhdmVcIiBoYW5kbGVDbGljaz17dGhpcy5oYW5kbGVDYW5jZWx9IHN0eWxlTmFtZT1cInByaW1hcnlcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxDb21tb25CdXR0b24gbGFiZWw9XCJDYW5jZWxcIiBoYW5kbGVDbGljaz17dGhpcy5oYW5kbGVDYW5jZWx9IHN0eWxlTmFtZT1cInNlY29uZGFyeVwiIC8+XHJcbiAgICAgICAgICAgICAgICA8L0Zvb3Rlcj5cclxuICAgICAgICAgICAgPC9XcmFwcGVyPlxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoQWRkKTtcclxuXHJcbmNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuc2VjdGlvbmBcclxuICAgIC5mb3JtX2ZpZWxkc193cmFwcGVye1xyXG4gICAgICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgICAgIGZsZXg6MTtcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IEZvb3RlciA9IHN0eWxlZC5zZWN0aW9uYFxyXG5cdGlucHV0IHtcclxuXHRcdG1hcmdpbi1yaWdodDogMTVweDtcclxuXHR9XHJcbmA7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuaW1wb3J0IENvbW1vbkJ1dHRvbiBmcm9tICcuLi9jb21tb24vYnV0dG9uL0NvbW1vbkJ1dHRvbic7XHJcbmltcG9ydCB7c3RhdHVzT3B0aW9uc30gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5cclxuY2xhc3MgTGlzdEl0ZW0gZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IgKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlRGVsZXRlID0gdGhpcy5oYW5kbGVEZWxldGUuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBoYW5kbGVEZWxldGUgKGUpIHtcclxuICAgICAgICB0aGlzLnByb3BzLmRlbGV0ZUl0ZWFtKGUudGFyZ2V0LnZhbHVlKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZW5kZXIgKCkge1xyXG4gICAgICAgIGNvbnN0IHsgZGF0YSwgdXNlck5hbWUgfSA9IHRoaXMucHJvcHM7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPFdyYXBwZXIgY2xhc3NOYW1lPVwibGlzdC1yb3dcIj5cclxuICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInVzZXItbmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHtkYXRhLm5hbWV9XHJcbiAgICAgICAgICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJ1c2VyLW5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICB7ZGF0YS5maW5hbmNpYWxwZXJmb3JtYW5jZX1cclxuICAgICAgICAgICAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInVzZXItbmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHtzdGF0dXNPcHRpb25zW2RhdGEuc3RhdHVzIC0gMV0ubGFiZWx9XHJcbiAgICAgICAgICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJlZGl0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPExpbmtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG89e3sgcGF0aG5hbWU6ICcvZWRpdC8nICsgZGF0YS5pZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaDogJz91c2VybmFtZT0nICsgdXNlck5hbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZTogeyBkYXRhOiBkYXRhIH0gfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJFZGl0XCJcclxuICAgICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgRWRpdFxyXG4gICAgICAgICAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8Q29tbW9uQnV0dG9uIGxhYmVsPVwiRGVsZXRlXCIgaGFuZGxlQ2xpY2s9e3RoaXMuaGFuZGxlRGVsZXRlfSB2YWx1ZT17ZGF0YS5pZH0gc3R5bGVOYW1lPVwicHJpbWFyeVwiIC8+XHJcbiAgICAgICAgICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgICAgICAgIDwvV3JhcHBlcj5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMaXN0SXRlbTtcclxuXHJcbmNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuc2VjdGlvbmBcclxuICAgIFxyXG5gO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcclxuaW1wb3J0IEhlYWRlciBmcm9tICcuLi9oZWFkZXIvSGVhZGVyJztcclxuaW1wb3J0IExpc3RJdGVtIGZyb20gJy4vTGlzdEl0ZW0nO1xyXG5cclxuY2xhc3MgTGlzdCBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3RvciAocHJvcHMpIHtcclxuICAgICAgICBzdXBlcihwcm9wcyk7XHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgICAgICAgY29tcGFuaWVzSW5mbzoge30sXHJcbiAgICAgICAgICAgIGxpc3Q6IFtdLFxyXG4gICAgICAgICAgICBpc0xvYWRpbmc6IHRydWUsXHJcbiAgICAgICAgICAgIGVycm9yczogbnVsbFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5kZWxldGVJdGVhbSA9IHRoaXMuZGVsZXRlSXRlYW0uYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBjb21wb25lbnREaWRNb3VudCAoKSB7XHJcbiAgICAgICAgdGhpcy5nZXRDb21wYW5pZXMoKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDb21wYW5pZXMgKCkge1xyXG4gICAgICAgIGF4aW9zLmdldChcIi4vYWNxdWlzaXRpb25zLmpzb25cIilcclxuICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tcGFuaWVzSW5mbzogcmVzcG9uc2UuZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICBsaXN0OiByZXNwb25zZS5kYXRhLmNvbXBhbmllcyxcclxuICAgICAgICAgICAgICAgICAgICBpc0xvYWRpbmc6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHRoaXMuc2V0U3RhdGUoeyBlcnJvciwgaXNMb2FkaW5nOiBmYWxzZSB9KSk7XHJcbiAgICB9XHJcblxyXG4gICAgZGVsZXRlSXRlYW0gKGlkKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coaWQpO1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRMaXRzdCA9IHRoaXMuc3RhdGUubGlzdDtcclxuICAgICAgICBjb25zdCBuZXdMaXN0ID0gY3VycmVudExpdHN0LmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgIT09IE51bWJlcihpZCkpO1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBsaXN0OiBuZXdMaXN0IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlciAoKSB7XHJcbiAgICAgICAgY29uc3QgY29tcGFuaWVzTGlzdCA9IHRoaXMuc3RhdGUubGlzdDtcclxuICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHRoaXMuc3RhdGUuY29tcGFuaWVzSW5mby51c2VybmFtZTtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8V3JhcHBlciBjbGFzc05hbWU9XCJtYWluX2NvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICAgICAgPEhlYWRlciBzaG93QnV0dG9uIHBhZ2VUaXRsZT1cIkFjcXVpcmVkIGNvbXBhbmllcyBsaXN0XCIgdXNlck5hbWU9e3VzZXJOYW1lfSAvPlxyXG4gICAgICAgICAgICAgICAge2NvbXBhbmllc0xpc3QgJiYgY29tcGFuaWVzTGlzdC5sZW5ndGggPiAwID9cclxuICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJsaXN0LXRhYmxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImxpc3QtaGVhZGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJ1c2VyLW5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb21wYW55IE5hbWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInVzZXItbmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZpbmFuY2lhbCBQZXJmb3JtYW5jZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwidXNlci1uYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RhdHVzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJlZGl0XCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wYW5pZXNMaXN0Lm1hcCgoY29tcGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8TGlzdEl0ZW0gZGF0YT17Y29tcGFueX0gZGVsZXRlSXRlYW09e3RoaXMuZGVsZXRlSXRlYW19IHVzZXJOYW1lPXt1c2VyTmFtZX0gLz47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9zZWN0aW9uPiA6XHJcbiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzc05hbWU9XCJub1JlY29yZHNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgTm8gcmVjb3JkcyB0byBzaG93LlxyXG4gICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICA8L1dyYXBwZXI+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTGlzdDtcclxuXHJcbmNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuc2VjdGlvbmBcclxuICAgIC5saXN0LXRhYmxlIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYm9yZGVyOiAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwYWRkaW5nOiAuNXJlbSAxcmVtO1xyXG4gICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAgICAgZmxleC1mbG93OiBjb2x1bW47XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBcclxuICAgICAgICAubGlzdC1oZWFkZXIge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDVweDtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIC5saXN0LXJvdyB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA1cHggMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmVkaXQge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgICAgICAgYXtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDoxNXB4O1xyXG4gICAgICAgICAgICB9ICAgICAgICAgICAgXHJcbiAgICAgICAgfSAgICAgICAgXHJcbiAgICB9XHJcbiAgICAudXNlci1uYW1lIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcGFkZGluZzogNXB4IDE1cHg7XHJcbiAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgICBtaW4td2lkdGg6IDMwJTtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIH1cclxuYDtcclxuIiwiXHJcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFN3aXRjaCwgUm91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuaW1wb3J0IEFkZCBmcm9tICcuL2NvbXBvbmVudHMvYWRkaXRlbS9BZGQnO1xyXG5pbXBvcnQgTGlzdCBmcm9tICcuL2NvbXBvbmVudHMvbGlzdC9MaXN0JztcclxuXHJcbmNsYXNzIFJvdXRlcyBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICByZW5kZXIgKCkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxTd2l0Y2g+XHJcbiAgICAgICAgICAgICAgICA8Um91dGUgZXhhY3QgcGF0aD1cIi9hZGRcIiBjb21wb25lbnQ9e0FkZH0gLz5cclxuICAgICAgICAgICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL2VkaXQvOmlkXCIgY29tcG9uZW50PXtBZGR9IC8+XHJcbiAgICAgICAgICAgICAgICA8Um91dGUgY29tcG9uZW50PXtMaXN0fSAvPlxyXG4gICAgICAgICAgICA8L1N3aXRjaD5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXM7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xyXG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcbmltcG9ydCBSb3V0ZXMgZnJvbSAnLi9Sb3V0ZXMnO1xyXG5pbXBvcnQgXCIuL3N0eWxlL21haW4ubGVzc1wiO1xyXG5cclxuY2xhc3MgUm9vdENvbXBvbmVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICByZW5kZXIgKCkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxCcm93c2VyUm91dGVyPlxyXG4gICAgICAgICAgICAgICAgPFJvdXRlcyAvPlxyXG4gICAgICAgICAgICA8L0Jyb3dzZXJSb3V0ZXI+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG5cclxuUmVhY3RET00ucmVuZGVyKDxSb290Q29tcG9uZW50IC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==